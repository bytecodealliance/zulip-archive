[
    {
        "content": "<blockquote>\n<p>Compiling verifier v0.1.0 (/home/ubunutu/workspace/verifier)<br>\n    Finished <code>dev</code> profile [unoptimized + debuginfo] target(s) in 0.80s<br>\n    Creating component target/wasm32-wasip1/debug/verifier.wasm<br>\nerror: failed to decode world from module</p>\n<p>Caused by:<br>\n    0: module was not valid<br>\n    1: failed to resolve import <code>env::getpid</code><br>\n    2: module requires an import interface named <code>env</code></p>\n</blockquote>\n<p>Hi, I'm encountering this error when using <code>cargo component build</code> to build my project to a wasm component. Even though this error happened, the wasm file <code>target/wasm32-wasip1/debug/verifier.wasm</code> is generated, but instead of component it is a wasm module. Also, I don't find any reference of <code>env::getpid</code> in my project(maybe some Rust lib uses it). Why is this kind of dependency error happening at build time?<br>\nHere is my world.wit:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"p\">:</span><span class=\"nc\">verifier</span><span class=\"o\">@</span><span class=\"mf\">0.1.0</span><span class=\"p\">;</span>\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">verifier</span><span class=\"o\">-</span><span class=\"n\">itf</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">variant</span><span class=\"w\"> </span><span class=\"n\">optional</span><span class=\"o\">-</span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">value</span><span class=\"p\">(</span><span class=\"n\">list</span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"p\">),</span>\n<span class=\"w\">        </span><span class=\"n\">not</span><span class=\"o\">-</span><span class=\"n\">provided</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"nc\">report</span><span class=\"o\">-</span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">optional</span><span class=\"o\">-</span><span class=\"n\">data</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"nc\">init</span><span class=\"o\">-</span><span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">hash</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">optional</span><span class=\"o\">-</span><span class=\"n\">data</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"n\">verifier</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">evaluate</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span>\n<span class=\"w\">            </span><span class=\"n\">evidence</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">list</span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"n\">expected</span><span class=\"o\">-</span><span class=\"n\">report</span><span class=\"o\">-</span><span class=\"n\">data</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">report</span><span class=\"o\">-</span><span class=\"n\">data</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"n\">expected</span><span class=\"o\">-</span><span class=\"n\">init</span><span class=\"o\">-</span><span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">hash</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">init</span><span class=\"o\">-</span><span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">hash</span>\n<span class=\"w\">        </span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">verifier</span><span class=\"o\">-</span><span class=\"n\">wrd</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">verifier</span><span class=\"o\">-</span><span class=\"n\">itf</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 509681257,
        "sender_full_name": "Wynter",
        "timestamp": 1743596411
    }
]