[
    {
        "content": "<p>Hello, I may not be using this correctly but I wanted to see what the preferred way to do this is</p>\n<p>I'm using <code>wit-bindgen</code> to define a world with imports and exports, that I would like my component to support as I am importing it into a program that will provide those imports and exports.</p>\n<p>When compiling with <code>cargo component build --release</code>, and then inspecting with <code>wasm-tools component wit ./path/to/module.wasm</code> I'm noticing that in addition to my defined world, it has several other imports defined, namely to do with <code>wasi:cli</code>, <code>wasi:io</code>, <code>wasi:clocks</code>, <code>wasi:filesystem</code></p>\n<p>I dont need these for my component, and so Im wondering if theres a way to not include them in the build.</p>\n<p>Thank you</p>",
        "id": 500295769,
        "sender_full_name": "Karl Smit",
        "timestamp": 1739839107
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"702186\">@Karl Smit</span> to do that, compile with <code>wasm32-unknown-unknown</code> as a target -- that will remove the WASI dependencies.</p>\n<p>See also:</p>\n<p><a href=\"#narrow/channel/407292-cargo-component/topic/.E2.9C.94.20component.20imports.20instance.20.60wasi.3Acli.2Fenvironment.400.2E2.2E0.60\">#cargo-component &gt; âœ” component imports instance &#96;wasi:cli/environment@0.2.0&#96;</a> </p>\n<p><a class=\"stream-topic\" data-stream-id=\"206238\" href=\"/#narrow/channel/206238-general/topic/wit-bindgen.20rust.20host.20.2B.20guest.3A.20get-environment.20has.20the.20wrong/with/452431448\">#general &gt; wit-bindgen rust host + guest: get-environment has the wrong</a></p>",
        "id": 500322765,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1739857310
    }
]