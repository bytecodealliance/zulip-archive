[
    {
        "content": "<p>Hey so I'm sure people have noticed at this point, but the Windows tests are failing in CI -- both on <code>windows-latest</code> and <code>windows-2022</code> at this point.</p>\n<p>It's not clear what is causing this so I'm probably going to do some investigation in a PR-that-should-not-be-merged or something to try to get <em>some</em> logs. Right now all we see is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Run</span><span class=\"w\"> </span><span class=\"n\">npm</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"p\">:</span><span class=\"nc\">release</span>\n\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"n\">bytecodealliance</span><span class=\"o\">/</span><span class=\"n\">componentize</span><span class=\"o\">-</span><span class=\"n\">js</span><span class=\"o\">@</span><span class=\"mf\">0.19.1</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"p\">:</span><span class=\"nc\">release</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">vitest</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"o\">/</span><span class=\"n\">vitest</span><span class=\"p\">.</span><span class=\"n\">ts</span>\n\n\n<span class=\"w\"> </span><span class=\"n\">RUN</span><span class=\"w\">  </span><span class=\"n\">v3</span><span class=\"p\">.</span><span class=\"mf\">2.4</span><span class=\"w\"> </span><span class=\"n\">D</span><span class=\"p\">:</span><span class=\"o\">/</span><span class=\"n\">a</span><span class=\"o\">/</span><span class=\"n\">ComponentizeJS</span><span class=\"o\">/</span><span class=\"n\">ComponentizeJS</span>\n\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">The</span><span class=\"w\"> </span><span class=\"n\">operation</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">canceled</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>(With the test taking hours)</p>",
        "id": 544757574,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1760450423
    },
    {
        "content": "<p>Good news! I've gotten the tests running again on Windows again -- I'm now whittling down the PR to get to a decent minimal set of improvements, and check for the 70234th time that the cause I saw is indeed right. </p>\n<p>The problem seems to be that on windows the following code causes a hang when <code>vitest</code> tries to run it:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">someFilePath</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"some\"</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"s\">\"/calculation\"</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"s\">\"/to-file.js\"</span><span class=\"p\">;</span>\n<span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">await</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"p\">(</span><span class=\"n\">someFilePath</span><span class=\"p\">);</span>\n<span class=\"k\">return</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">someFilePath</span><span class=\"w\"> </span><span class=\"p\">};</span>\n</code></pre></div>\n<p>Weirdly enough, as long as <code>await</code> and <code>import</code> aren't right next to each other, the hang doesn't happen. </p>\n<p>So returning the promise directly:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"p\">(</span><span class=\"n\">someFilePath</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>Also just splitting up the import and await:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">modulePromise</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"p\">(</span><span class=\"o\">..</span><span class=\"p\">.);</span>\n<span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">await</span><span class=\"w\"> </span><span class=\"n\">modulePromise</span><span class=\"p\">;</span>\n</code></pre></div>\n<p>And doing something silly like slightly processing the input:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">await</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"p\">(</span><span class=\"n\">someFilePath</span><span class=\"p\">.</span><span class=\"n\">toLowerCase</span><span class=\"p\">());</span>\n</code></pre></div>\n<p>Absolutely wild. Have confirmed this behavior many times, going to confirm it once more before I push the final (probably chunked -- one minimal then follow up general improvements) up.</p>\n<p>Another issue is the incredibly slowness of the windows runners on GitHub CI, but that's well known at this point.</p>",
        "id": 545229278,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1760605512
    },
    {
        "content": "<p>I haven't rootcaused the failure <em>inside</em> <code>vitest</code> or tested whether this happens outside vitest (whether <code>await import(...)</code> fails in just a regular script... But I'll save that for later</p>",
        "id": 545229668,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1760605599
    },
    {
        "content": "<p>huh</p>",
        "id": 545340328,
        "sender_full_name": "Ralph",
        "timestamp": 1760624073
    },
    {
        "content": "<p>Well a bit late but it looks to be a vitest problem (a regular node script doesn't have this problem)... Looks like I should probably file a repro upstream at some point.</p>",
        "id": 545459749,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1760658205
    },
    {
        "content": "<p>And yup, verified once more for my own sanity -- <a href=\"https://github.com/vados-cosmonic/componentize-js/pull/4/commits/614087a1ef10f32dc5be5e2ea92837076fef10f7\">this commit</a> triggers the stall, somehow.</p>\n<p>Guess I need to wait an hour for the test to actually time out to be 100% sure but it's been 15 minutes and the working runs <em>pass</em> in 10.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/vados-cosmonic/componentize-js/pull/4/commits/614087a1ef10f32dc5be5e2ea92837076fef10f7\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/bd0632c933ac849587b2546693ee76559eb5217c/68747470733a2f2f617661746172732e67697468756275736572636f6e74656e742e636f6d2f752f3132333936383132373f733d34303026763d34&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/vados-cosmonic/componentize-js/pull/4/commits/614087a1ef10f32dc5be5e2ea92837076fef10f7\" title=\"debug(ci): enable verbose logging, only test windows by vados-cosmonic · Pull Request #4 · vados-cosmonic/componentize-js\">debug(ci): enable verbose logging, only test windows by vados-cosmonic · Pull Request #4 · vados-cosmonic/componentize-js</a></div><div class=\"message_embed_description\">Contribute to vados-cosmonic/componentize-js development by creating an account on GitHub.</div></div></div>",
        "id": 545459987,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1760658370
    },
    {
        "content": "<p>Here's the PR:</p>\n<p><a href=\"https://github.com/bytecodealliance/ComponentizeJS/pull/308\">https://github.com/bytecodealliance/ComponentizeJS/pull/308</a></p>\n<p><span class=\"user-mention\" data-user-id=\"234973\">@Till Schneidereit</span> <span aria-label=\"bow\" class=\"emoji emoji-1f647\" role=\"img\" title=\"bow\">:bow:</span></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/ComponentizeJS/pull/308\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/9cdea46069eaa8c03d5dea6b29733cd155492c15/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663064393532626332636530303162333139376130306233613337623564656563323364373931633731353031356662626265653365633162633133643537362f62797465636f6465616c6c69616e63652f436f6d706f6e656e74697a654a532f70756c6c2f333038&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/ComponentizeJS/pull/308\" title=\"fix(ci): test runs on windows runner by vados-cosmonic · Pull Request #308 · bytecodealliance/ComponentizeJS\">fix(ci): test runs on windows runner by vados-cosmonic · Pull Request #308 · bytecodealliance/ComponentizeJS</a></div><div class=\"message_embed_description\">This commit fixes an somewhat odd problem with vitest on windows runners in that it cannot process properly await import(...) statements.\nThe changes in this commit represent the minimal changes to...</div></div></div>",
        "id": 545469075,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1760664611
    }
]