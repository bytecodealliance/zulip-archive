[
    {
        "content": "<p>Hey! I'm trying to enable debugging for StarlingMonkey components that don't target WASI/HTTP. Based on my understanding this should be possible by:</p>\n<ol>\n<li>Removing debugger session initialization from the StarlingMonkey fetch-event handler wrapper at <a href=\"https://github.com/bytecodealliance/StarlingMonkey/blob/main/builtins/web/fetch/fetch_event.cpp#L547\">https://github.com/bytecodealliance/StarlingMonkey/blob/main/builtins/web/fetch/fetch_event.cpp#L547</a></li>\n<li>Calling the debugger initialization function from the componentize-js builtin on the first call to an exported function at <a href=\"https://github.com/bytecodealliance/ComponentizeJS/blob/main/embedding/embedding.cpp#L150\">https://github.com/bytecodealliance/ComponentizeJS/blob/main/embedding/embedding.cpp#L150</a></li>\n</ol>\n<p>The problem is that after calling <code>content_debugger::maybe_init_debugger</code> from step 2, the function cannot access the environment variables needed for debugger configuration (such as <code>DEBUGGER_PORT</code>) that I pass to the <code>wasmtime run</code> command. </p>\n<p>I see that the environment is deinitialized after wizening, which makes sense to avoid polluting variables from the wizening pass. I tried to call <code>__wasilibc_initialize_environ</code> again within the debugger initialization function, but the environment list remains empty.</p>\n<p>Does anyone know why the environment variables aren't being set? Why would this work when we have http handler installed but not  for an arbitrary entrypoint?</p>\n<p>With those changes I would also hope to fix the implicit dependency on <code>wasi/environement</code> by moving <a href=\"https://github.com/bytecodealliance/StarlingMonkey/blob/main/host-apis/wasi-0.2.0/host_api.cpp#L1037\">this call</a> to debugger initialization so that it is gated behind debugger opt-in. </p>\n<h1>my config</h1>\n<ul>\n<li>wit:</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">greeter</span><span class=\"p\">;</span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">greeter</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">hello</span><span class=\"o\">-</span><span class=\"n\">user</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">example</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">cli</span><span class=\"o\">/</span><span class=\"n\">environment</span><span class=\"o\">@</span><span class=\"mf\">0.2.3</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">sockets</span><span class=\"o\">/</span><span class=\"n\">network</span><span class=\"o\">@</span><span class=\"mf\">0.2.3</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">sockets</span><span class=\"o\">/</span><span class=\"n\">instance</span><span class=\"o\">-</span><span class=\"n\">network</span><span class=\"o\">@</span><span class=\"mf\">0.2.3</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">sockets</span><span class=\"o\">/</span><span class=\"n\">tcp</span><span class=\"o\">@</span><span class=\"mf\">0.2.3</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">sockets</span><span class=\"o\">/</span><span class=\"n\">tcp</span><span class=\"o\">-</span><span class=\"n\">create</span><span class=\"o\">-</span><span class=\"n\">socket</span><span class=\"o\">@</span><span class=\"mf\">0.2.3</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">greeter</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<ul>\n<li>index.js</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"JavaScript\"><pre><span></span><code><span class=\"k\">export</span><span class=\"w\"> </span><span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"nx\">greeter</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"nx\">helloUser</span><span class=\"p\">(</span><span class=\"nx\">user</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">\"Hello\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">user</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<ul>\n<li>componentize command:</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">componentize</span><span class=\"o\">-</span><span class=\"n\">js</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">aot</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wit</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">world</span><span class=\"o\">-</span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"n\">example</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">runtime</span><span class=\"o\">-</span><span class=\"n\">args</span><span class=\"w\"> </span><span class=\"s\">\"--enable-script-debugging\"</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">js</span>\n</code></pre></div>\n<ul>\n<li>run command:</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">S</span><span class=\"w\"> </span><span class=\"n\">cli</span><span class=\"p\">,</span><span class=\"n\">tcp</span><span class=\"p\">,</span><span class=\"n\">http</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">tandr</span><span class=\"o\">/</span><span class=\"n\">workspace</span><span class=\"o\">/</span><span class=\"n\">sm</span><span class=\"o\">-</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"p\">::</span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">hello</span><span class=\"o\">-</span><span class=\"n\">user</span><span class=\"p\">(</span><span class=\"s\">\"Gordon Shumway\"</span><span class=\"p\">)</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">env</span><span class=\"w\"> </span><span class=\"n\">STARLINGMONKEY_CONFIG</span><span class=\"o\">=</span><span class=\"s\">\"--verbose -d\"</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">env</span><span class=\"w\"> </span><span class=\"n\">DEBUGGER_PORT</span><span class=\"o\">=</span><span class=\"mi\">64373</span>\n</code></pre></div>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/StarlingMonkey/blob/main/host-apis/wasi-0.2.0/host_api.cpp#L1037\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/714e6ed3f8523cf1d1d216e0298f9a651bd4a40a/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323933313635316232366236626465613034386661613133373164316630376239636430323130316366616132666161633433383836373662396438396466382f62797465636f6465616c6c69616e63652f537461726c696e674d6f6e6b6579&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/StarlingMonkey/blob/main/host-apis/wasi-0.2.0/host_api.cpp#L1037\" title=\"StarlingMonkey/host-apis/wasi-0.2.0/host_api.cpp at main · bytecodealliance/StarlingMonkey\">StarlingMonkey/host-apis/wasi-0.2.0/host_api.cpp at main · bytecodealliance/StarlingMonkey</a></div><div class=\"message_embed_description\">The StarlingMonkey JS runtime. Contribute to bytecodealliance/StarlingMonkey development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/StarlingMonkey/blob/main/builtins/web/fetch/fetch_event.cpp#L547\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/714e6ed3f8523cf1d1d216e0298f9a651bd4a40a/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323933313635316232366236626465613034386661613133373164316630376239636430323130316366616132666161633433383836373662396438396466382f62797465636f6465616c6c69616e63652f537461726c696e674d6f6e6b6579&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/StarlingMonkey/blob/main/builtins/web/fetch/fetch_event.cpp#L547\" title=\"StarlingMonkey/builtins/web/fetch/fetch_event.cpp at main · bytecodealliance/StarlingMonkey\">StarlingMonkey/builtins/web/fetch/fetch_event.cpp at main · bytecodealliance/StarlingMonkey</a></div><div class=\"message_embed_description\">The StarlingMonkey JS runtime. Contribute to bytecodealliance/StarlingMonkey development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/ComponentizeJS/blob/main/embedding/embedding.cpp#L150\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/db1780597f52fabaa55b4c2a943bd57313f4607a/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633533326534363937656438316361313362353832623739343337663039333939363936316237623038303762353639336438396563633735623334636461612f62797465636f6465616c6c69616e63652f436f6d706f6e656e74697a654a53&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/ComponentizeJS/blob/main/embedding/embedding.cpp#L150\" title=\"ComponentizeJS/embedding/embedding.cpp at main · bytecodealliance/ComponentizeJS\">ComponentizeJS/embedding/embedding.cpp at main · bytecodealliance/ComponentizeJS</a></div><div class=\"message_embed_description\">JS -&gt; WebAssembly Component. Contribute to bytecodealliance/ComponentizeJS development by creating an account on GitHub.</div></div></div>",
        "id": 526626123,
        "sender_full_name": "Tomasz Andrzejak",
        "timestamp": 1751381368
    },
    {
        "content": "<p>The ComponentizeJS diff looks like this:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/embedding/embedding.cpp b/embedding/embedding.cpp</span>\n<span class=\"gh\">index 585f3ed..60ba219 100644</span>\n<span class=\"gd\">--- a/embedding/embedding.cpp</span>\n<span class=\"gi\">+++ b/embedding/embedding.cpp</span>\n<span class=\"gu\">@@ -1,4 +1,5 @@</span>\n<span class=\"w\"> </span>#include \"embedding.h\"\n<span class=\"gi\">+#include \"debugger.h\"</span>\n<span class=\"w\"> </span>#include \"builtins/web/performance.h\"\n\n<span class=\"w\"> </span>namespace builtins::web::console {\n<span class=\"gu\">@@ -147,6 +148,7 @@ cabi_realloc(void *ptr, size_t orig_size, size_t org_align, size_t new_size) {</span>\n<span class=\"w\"> </span>__attribute__((export_name(\"call\"))) uint32_t call(uint32_t fn_idx,\n<span class=\"w\"> </span>                                                   void *argptr) {\n<span class=\"w\"> </span>  if (Runtime.first_call) {\n<span class=\"gi\">+    content_debugger::maybe_init_debugger(Runtime.engine, true);</span>\n<span class=\"w\"> </span>    js::ResetMathRandomSeed(Runtime.cx);\n<span class=\"w\"> </span>    Runtime.first_call = false;\n<span class=\"w\"> </span>    if (Runtime.clocks) {\n</code></pre></div>\n<p>The StarlingMonkey diff:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/host-apis/wasi-0.2.0/host_api.cpp b/host-apis/wasi-0.2.0/host_api.cpp</span>\n<span class=\"gh\">index e87bd9e..e33ec36 100644</span>\n<span class=\"gd\">--- a/host-apis/wasi-0.2.0/host_api.cpp</span>\n<span class=\"gi\">+++ b/host-apis/wasi-0.2.0/host_api.cpp</span>\n<span class=\"gu\">@@ -2,8 +2,6 @@</span>\n<span class=\"w\"> </span>#include \"bindings/bindings.h\"\n<span class=\"w\"> </span>#include \"handles.h\"\n\n<span class=\"gd\">-#include &lt;wasi/libc-environ.h&gt;</span>\n<span class=\"gd\">-</span>\n<span class=\"w\"> </span>static std::optional&lt;wasi_clocks_monotonic_clock_own_pollable_t&gt; immediately_ready;\n\n<span class=\"w\"> </span>size_t poll_handles(vector&lt;WASIHandle&lt;host_api::Pollable&gt;::Borrowed&gt; handles) {\n<span class=\"gu\">@@ -1032,9 +1030,6 @@ void exports_wasi_http_incoming_handler(exports_wasi_http_incoming_request reque</span>\n<span class=\"w\"> </span>  // that it properly initializes the runtime and installs a request handler.\n<span class=\"w\"> </span>  if (!REQUEST_HANDLER) {\n<span class=\"w\"> </span>    init_from_environment();\n<span class=\"gd\">-  } else {</span>\n<span class=\"gd\">-    // Resuming a wizer snapshot, so we have to ensure that the environment is reset.</span>\n<span class=\"gd\">-    __wasilibc_initialize_environ();</span>\n<span class=\"w\"> </span>  }\n<span class=\"w\"> </span>  MOZ_ASSERT(REQUEST_HANDLER);\n\n<span class=\"gh\">diff --git a/runtime/debugger.cpp b/runtime/debugger.cpp</span>\n<span class=\"gh\">index e81dcaa..dececee 100644</span>\n<span class=\"gd\">--- a/runtime/debugger.cpp</span>\n<span class=\"gi\">+++ b/runtime/debugger.cpp</span>\n<span class=\"gu\">@@ -4,6 +4,8 @@</span>\n<span class=\"w\"> </span>#include &lt;encode.h&gt;\n<span class=\"w\"> </span>#include &lt;js/CompilationAndEvaluation.h&gt;\n<span class=\"w\"> </span>#include &lt;js/SourceText.h&gt;\n<span class=\"gi\">+#include &lt;wasi/libc-environ.h&gt;</span>\n<span class=\"gi\">+</span>\n<span class=\"w\"> </span>#include &lt;string_view&gt;\n\n<span class=\"w\"> </span>mozilla::Maybe&lt;std::string&gt; main_path;\n<span class=\"gu\">@@ -278,6 +280,10 @@ void content_debugger::maybe_init_debugger(api::Engine * engine, bool content_al</span>\n<span class=\"w\"> </span>    return;\n<span class=\"w\"> </span>  }\n<span class=\"w\"> </span>  debugger_initialized = true;\n<span class=\"gi\">+</span>\n<span class=\"gi\">+  // Resuming a wizer snapshot, so we have to ensure that the environment is reset.</span>\n<span class=\"gi\">+  __wasilibc_initialize_environ();</span>\n<span class=\"gi\">+</span>\n<span class=\"w\"> </span>  auto port_str = std::getenv(\"DEBUGGER_PORT\");\n<span class=\"w\"> </span>  if (port_str) {\n<span class=\"w\"> </span>    uint32_t port = std::stoi(port_str);\n</code></pre></div>",
        "id": 526629000,
        "sender_full_name": "Tomasz Andrzejak",
        "timestamp": 1751382085
    },
    {
        "content": "<p>I think I've found what was the issue:</p>\n<p><code>wasmtime run</code> command is interpreting everything after positional argument as an input to WASM module, or when using <code>invoke</code> option, an input to specified function as per <code>trailing_var_arg = true</code> setting:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/src/commands/run.rs#L80\">https://github.com/bytecodealliance/wasmtime/blob/main/src/commands/run.rs#L80</a></p>\n<p>The debugger plugin is appending the <code>--env</code> options to <code>componentRuntime</code> ,  so when I switch the debugger command from <code>serve</code> to <code>run</code> all appended env variables are being parsed as an module input not actual <code>wasmtime</code> options.  </p>\n<p>As a side note, I think requiring <code>--</code> to separate <code>wasmtime</code> options from WASM arguments could be beneficial.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/src/commands/run.rs#L80\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/f300b055b4f7db74376cf4bab50157af578a0f8d/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393738316332646664306438663130303736613639643165376265363838343361653132323265353935373730363630366265363231386331653461663766362f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/src/commands/run.rs#L80\" title=\"wasmtime/src/commands/run.rs at main · bytecodealliance/wasmtime\">wasmtime/src/commands/run.rs at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 526789549,
        "sender_full_name": "Tomasz Andrzejak",
        "timestamp": 1751459102
    }
]