[
    {
        "content": "<p>Hi, I'm trying to follow the instructions here: <a href=\"https://github.com/bytecodealliance/componentize-dotnet\">https://github.com/bytecodealliance/componentize-dotnet</a></p>\n<p>My understanding is that I need a Windows machine, but not sure what other pre-reqs need to be on that machine for it to work. I've followed the instructions on the page, with only dotnet installed, but am getting build errors:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>EXEC<span class=\"w\"> </span>:<span class=\"w\"> </span>error<span class=\"w\"> </span>:<span class=\"w\"> </span>Unable<span class=\"w\"> </span>to<span class=\"w\"> </span>load<span class=\"w\"> </span>DLL<span class=\"w\"> </span><span class=\"s1\">'libLLVM'</span><span class=\"w\"> </span>or<span class=\"w\"> </span>one<span class=\"w\"> </span>of<span class=\"w\"> </span>its<span class=\"w\"> </span>dependencies:<span class=\"w\"> </span>The<span class=\"w\"> </span>specified<span class=\"w\"> </span>module<span class=\"w\"> </span>could<span class=\"w\"> </span>not<span class=\"w\"> </span>be<span class=\"w\"> </span>found.<span class=\"w\"> </span><span class=\"o\">[</span>C:<span class=\"se\">\\U</span>s\ners<span class=\"se\">\\m</span>ikkelhegn<span class=\"se\">\\d</span>otnetstring<span class=\"se\">\\d</span>otnetstring.csproj<span class=\"o\">]</span>\n</code></pre></div>\n<p>I've tried adding: <code>runtime.win-x64.Microsoft.DotNet.ILCompiler</code> - based on a hint in this issue: <a href=\"https://github.com/bytecodealliance/componentize-dotnet/issues/13\">https://github.com/bytecodealliance/componentize-dotnet/issues/13</a>, but also without success.</p>\n<p>Next up installing Visual Studio with WebAssembly build tools. Am I on the right path?</p>\n<p>:-)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-dotnet\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b8d1ad1293430564c4321a1bbc46ca8d0183543e/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f386335633537663535323030643932323537366633613438363461373233366566353861613134316131326438386239343562383039386438633931316166312f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d646f746e6574&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-dotnet\" title=\"GitHub - bytecodealliance/componentize-dotnet: Tooling for creating WebAssembly components from C#\">GitHub - bytecodealliance/componentize-dotnet: Tooling for creating WebAssembly components from C#</a></div><div class=\"message_embed_description\">Tooling for creating WebAssembly components from C# - bytecodealliance/componentize-dotnet</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-dotnet/issues/13\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/bacbbb95b4a2a09cd4e205cf24cdbc60dc860206/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343965323633366132653135316666306533373730383837313330356466616130326132346230363833666366376339373938616561636632363863656334652f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d646f746e65742f6973737565732f3133&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-dotnet/issues/13\" title=\"Support installing correct package reference of ilcompiler for other OS's and arch's · Issue #13 · bytecodealliance/componentize-dotnet\">Support installing correct package reference of ilcompiler for other OS's and arch's · Issue #13 · bytecodealliance/componentize-dotnet</a></div><div class=\"message_embed_description\">right now the project supports installing windows version of il compiler through out the project, for example: componentize-dotnet/src/WasmComponent.Sdk/ImportInDev.proj Line 10 in a66f726 &lt;Package...</div></div></div>",
        "id": 444204032,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1718189818
    },
    {
        "content": "<p>Now I'm at <code>Python was not found</code> - I'll think I may need to try and build the SDK myself.</p>",
        "id": 444205231,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1718190280
    },
    {
        "content": "<p>Oh - there is one in the latest release run: <a href=\"https://github.com/bytecodealliance/componentize-dotnet/actions/runs/9409845824\">https://github.com/bytecodealliance/componentize-dotnet/actions/runs/9409845824</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-dotnet/actions/runs/9409845824\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b8d1ad1293430564c4321a1bbc46ca8d0183543e/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f386335633537663535323030643932323537366633613438363461373233366566353861613134316131326438386239343562383039386438633931316166312f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d646f746e6574&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-dotnet/actions/runs/9409845824\" title=\"Start release · bytecodealliance/componentize-dotnet@8423ac7\">Start release · bytecodealliance/componentize-dotnet@8423ac7</a></div><div class=\"message_embed_description\">Tooling for creating WebAssembly components from C# - Start release · bytecodealliance/componentize-dotnet@8423ac7</div></div></div>",
        "id": 444205616,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1718190380
    },
    {
        "content": "<p>Build locally from main solved this.</p>",
        "id": 444210302,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1718191860
    },
    {
        "content": "<p>We just got the code moved over and updated, so we don't have a release yet.  Using the pacakges from the latest build should work on Windows.  If it doesn't feel free to open an issue or let me know here</p>",
        "id": 444260949,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1718205270
    },
    {
        "content": "<p>In trying to build this, I'm having a hard time figuring out what the C# namespace, interface, etc, ends up being called based on a WIT looking like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">wasmio</span><span class=\"p\">:</span><span class=\"nc\">samples</span><span class=\"p\">;</span>\n\n<span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">plugin</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">transform</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">input</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Can I find the bindings being generated somewhere to help me?</p>",
        "id": 444267193,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1718206594
    },
    {
        "content": "<p>they should be in the <code>obj\\Debug\\net8.0\\wasi-wasm\\wit_bindgen</code> folder or something similiar</p>",
        "id": 444268270,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1718206890
    },
    {
        "content": "<p>The namespace in that should start with <code>PluginWorld</code></p>",
        "id": 444268458,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1718206930
    },
    {
        "content": "<p>Is it true that functions directly in worlds is not supported by the bindings generator? I seem to not get bindings I can use with that. (Or there is some C# stuff I don't know about :-)).</p>",
        "id": 444279532,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1718209642
    },
    {
        "content": "<p>That should work I believe, there would be an interface that needs to implemented.</p>",
        "id": 444281609,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1718210199
    },
    {
        "content": "<p>Put this in and get the following: </p>\n<div class=\"codehilite\" data-code-language=\"C#\"><pre><span></span><code><span class=\"k\">namespace</span><span class=\"w\"> </span><span class=\"nn\">PluginWorld</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">interface</span><span class=\"w\"> </span><span class=\"n\">IPluginWorld</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"k\">abstract</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"nf\">Transform</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">....</span>\n</code></pre></div>",
        "id": 444282948,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1718210559
    },
    {
        "content": "<p>an implementation would be like:</p>\n<div class=\"codehilite\" data-code-language=\"C#\"><pre><span></span><code><span class=\"k\">namespace</span><span class=\"w\"> </span><span class=\"nn\">PluginWorld</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">PluginWorldImpl</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">IPluginWorld</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"nf\">Transform</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">ToUpperInvariant</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>\n</code></pre></div>",
        "id": 444283424,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1718210688
    },
    {
        "content": "<p>I'll give that a try</p>",
        "id": 444284507,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1718210992
    },
    {
        "content": "<p>got a release out <a href=\"https://github.com/bytecodealliance/componentize-dotnet/releases\">https://github.com/bytecodealliance/componentize-dotnet/releases</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-dotnet/releases\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/31017c38b81f4b29c5b3773421345b4fb9af9ff9/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643537623334653433633162666634323538366432643139616266626339626661393532643839373332343762313863653866636239333539663131346537632f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d646f746e6574&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-dotnet/releases\" title=\"Releases · bytecodealliance/componentize-dotnet\">Releases · bytecodealliance/componentize-dotnet</a></div><div class=\"message_embed_description\">Tooling for creating WebAssembly components from C# - bytecodealliance/componentize-dotnet</div></div></div>",
        "id": 444929823,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1718503959
    },
    {
        "content": "<p>also built a sample app using that wit file: <a href=\"https://github.com/jsturtevant/PluginApp\">https://github.com/jsturtevant/PluginApp</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/jsturtevant/PluginApp\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/7649471112aaa8d79298c2cb4eacaea8e22961fa/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643366653031643134376631393134313535363535343361373435326138356162643438303732393737633636653234346131613264326530623262613737362f6a73747572746576616e742f506c7567696e417070&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/jsturtevant/PluginApp\" title=\"GitHub - jsturtevant/PluginApp: sample app using componentize-dotnet\">GitHub - jsturtevant/PluginApp: sample app using componentize-dotnet</a></div><div class=\"message_embed_description\">sample app using componentize-dotnet. Contribute to jsturtevant/PluginApp development by creating an account on GitHub.</div></div></div>",
        "id": 444929848,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1718503985
    },
    {
        "content": "<p>Awesome! just followed the Readme.md to create a console app on a Windows x64 machine. Had two build warning, but the .wasm file runs on my MacOS aarch64</p>",
        "id": 445172128,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1718641055
    },
    {
        "content": "<p>If you create an issue on the repo with the log warnings, can trake them for fixes if appropriate.  I know I get warnings about switching from <code>wasm-tools</code> to <code>wac</code> which is tracked already</p>",
        "id": 445172905,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1718641269
    },
    {
        "content": "<p>Created an issue here: <a href=\"https://github.com/bytecodealliance/componentize-dotnet/issues/23\">https://github.com/bytecodealliance/componentize-dotnet/issues/23</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-dotnet/issues/23\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/d4e407d95b37a0be9b171d8e3223a3484a0f4d1f/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f383635666462333965336365633937343135303939653762373666343366343962643965626432316464346534323261336537666132303933383665653962362f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d646f746e65742f6973737565732f3233&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-dotnet/issues/23\" title=\"Build warning - CSC : warning CS8784 · Issue #23 · bytecodealliance/componentize-dotnet\">Build warning - CSC : warning CS8784 · Issue #23 · bytecodealliance/componentize-dotnet</a></div><div class=\"message_embed_description\">On biulding a project created following the instaructions in the README, I recevie the following warning. The build does succeed, and produces a runable Wasm. CSC : warning CS8784: Generator 'Vtabl...</div></div></div>",
        "id": 445214704,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1718654607
    },
    {
        "content": "<p>I'm still struggling with building a library exporting a function - a component. This repo builds and produces a working component. However, how did I get around not providing the wit namespace in the implementation? And what should it be? It seems the binding generators are not happy with whatever way I'm trying to do it, with a namespace.</p>\n<p><a href=\"https://github.com/mikkelhegn/dotnet-component\">https://github.com/mikkelhegn/dotnet-component</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/mikkelhegn/dotnet-component\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/0fe5b7c831427d4fe36c0dcc75fabbd12080c7f5/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f616238306264303666316638383430313032393364393261613965336331623861626539643562323931653063623036313165393961393133613334306237362f6d696b6b656c6865676e2f646f746e65742d636f6d706f6e656e74&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/mikkelhegn/dotnet-component\" title=\"GitHub - mikkelhegn/dotnet-component: Temp repo for a WASI 0.2 component using dotnet\">GitHub - mikkelhegn/dotnet-component: Temp repo for a WASI 0.2 component using dotnet</a></div><div class=\"message_embed_description\">Temp repo for a WASI 0.2 component using dotnet. Contribute to mikkelhegn/dotnet-component development by creating an account on GitHub.</div></div></div>",
        "id": 445219638,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1718656373
    },
    {
        "content": "<p>are you getting a specific error?</p>",
        "id": 445416149,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1718730809
    },
    {
        "content": "<p>I just realized you pushed the exact same code to a repo above - sorry for not seeing that. My code works (as it's the same as yours).</p>\n<p>The confusion on my end was that the implementation in <a href=\"https://github.com/jsturtevant/PluginApp/blob/main/plugin.cs\">https://github.com/jsturtevant/PluginApp/blob/main/plugin.cs</a> did not use the wit exports in the namespace (e.g., <code>namespace PluginWorld.wit.exports.wasmio.samples;</code>). I assume this is because the wit file does not define an interface, but an inlined export. I'm not sure how intuitive that is, but it got me confused.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/jsturtevant/PluginApp/blob/main/plugin.cs\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/7649471112aaa8d79298c2cb4eacaea8e22961fa/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643366653031643134376631393134313535363535343361373435326138356162643438303732393737633636653234346131613264326530623262613737362f6a73747572746576616e742f506c7567696e417070&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/jsturtevant/PluginApp/blob/main/plugin.cs\" title=\"PluginApp/plugin.cs at main · jsturtevant/PluginApp\">PluginApp/plugin.cs at main · jsturtevant/PluginApp</a></div><div class=\"message_embed_description\">sample app using componentize-dotnet. Contribute to jsturtevant/PluginApp development by creating an account on GitHub.</div></div></div>",
        "id": 445518720,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1718780023
    },
    {
        "content": "<p>ah ok, Yes I guess that is a bit strange.  We might event run into an issue where you have two plugin worlds in different wit name spaces and so we could have a conflict in the .net code?  </p>\n<p>I haven't spent much time with other generators, how is this handled in go or rust?</p>",
        "id": 445674673,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1718821629
    },
    {
        "content": "<p>Maybe <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> or <span class=\"user-mention\" data-user-id=\"487764\">@Mossaka (Joe)</span> can help comment on that?</p>",
        "id": 445697200,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1718829200
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"625613\">James Sturtevant</span> <a href=\"#narrow/stream/407028-C.23.2F.2Enet-collaboration/topic/Trying.20to.20build.20a.20dotnet.20component.20using.20componentize-dotnet/near/445674673\">said</a>:</p>\n<blockquote>\n<p>I haven't spent much time with other generators, how is this handled in go or rust?</p>\n</blockquote>\n<p>I don't know about Go, but in Rust, the module(s) generated by <code>wit-bindgen</code> can easily be nested in other modules by the application programmer to avoid any possible name collisions, so it's not a problem in practice.</p>",
        "id": 445879195,
        "sender_full_name": "Joel Dice",
        "timestamp": 1718896947
    },
    {
        "content": "<p>One thing missing in componentize-dotnet is to be able to generate the bindings without building the component. That way the tooling can help guide you. I actually con't know if that's possible today?</p>",
        "id": 445882042,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1718897690
    },
    {
        "content": "<p>You can do it pretty easily using the <code>wit-bindgen</code> CLI directly, but I agree that it would be nice if <code>componentize-dotnet</code> exposed that somehow too.  Not sure what the IDE-friendly, non-CLI way to do that might be, though.</p>",
        "id": 445886133,
        "sender_full_name": "Joel Dice",
        "timestamp": 1718898842
    },
    {
        "content": "<p>The bindings are generated into a intermediate folder, Would it help to have it in the project its self so you can find them?</p>",
        "id": 445921197,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1718907166
    },
    {
        "content": "<p>would you want to check those in?</p>",
        "id": 445921217,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1718907172
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"567523\">@Mikkel Mørk Hegnhøj</span>   This is mostly about discoverbility?  the files should be generated when a file is touched in an idea (using incremental builds).  Right now they are hidden, which I found odd as well.  I think I generally like to have generated code checked into source so can see and review the changes, Maybe we can put them in a folder in the source directory that gets checked in.  Thoguhts?</p>",
        "id": 446118903,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1718987167
    },
    {
        "content": "<p>Yes, I think that makes a lot of sense. That workflow matches what's happening in both Rust, and to some degree what you can do with componentize-py as well.</p>",
        "id": 447453733,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1719487950
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/componentize-dotnet/issues/29\">https://github.com/bytecodealliance/componentize-dotnet/issues/29</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-dotnet/issues/29\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/2f21fedbe97d51fa1b03ba97f46483a752ee9cc9/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306131326439616230653037373437313833656530643664623636616534323535666562663164353633336336393439666232633165356238356338623138382f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d646f746e65742f6973737565732f3239&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-dotnet/issues/29\" title=\"Make WIT files more discoverable  · Issue #29 · bytecodealliance/componentize-dotnet\">Make WIT files more discoverable  · Issue #29 · bytecodealliance/componentize-dotnet</a></div><div class=\"message_embed_description\">Currently the wit files get put into the intermediate folder obj\\Debug\\net8.0\\wasi-wasm\\wit_bindgen. This makes it hard to discover the Wit files and the interfaces/code that needs to be implemente...</div></div></div>",
        "id": 447598746,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1719525735
    },
    {
        "content": "<p>Reviving as I got back to this exercise today. In the new release (0.2.0.preview0004) the namespace seems to have simplified in my interface implementation.</p>\n<p>My implementation used to be:</p>\n<div class=\"codehilite\" data-code-language=\"C#\"><pre><span></span><code><span class=\"k\">namespace</span><span class=\"w\"> </span><span class=\"nn\">PluginWorld.wit.exports.wasmio.samples</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">PluginWorldImpl</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">IPluginWorld</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"nf\">Transform</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">ToUpperInvariant</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Causing this error:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>C:<span class=\"se\">\\U</span>sers<span class=\"se\">\\m</span>ikkelhegn<span class=\"se\">\\d</span>otnet-component<span class=\"se\">\\o</span>bj<span class=\"se\">\\D</span>ebug<span class=\"se\">\\n</span>et8.0<span class=\"se\">\\w</span>asi-wasm<span class=\"se\">\\w</span>it_bindgen<span class=\"se\">\\P</span>lugin.cs<span class=\"o\">(</span><span class=\"m\">111</span>,23<span class=\"o\">)</span>:<span class=\"w\"> </span>error<span class=\"w\"> </span>CS0103:<span class=\"w\"> </span>The<span class=\"w\"> </span>name<span class=\"w\"> </span><span class=\"s1\">'PluginWorldImpl'</span><span class=\"w\"> </span>does<span class=\"w\"> </span>not<span class=\"w\"> </span>exist<span class=\"w\"> </span><span class=\"k\">in</span>\n<span class=\"w\"> </span>the<span class=\"w\"> </span>current<span class=\"w\"> </span>context<span class=\"w\"> </span><span class=\"o\">[</span>C:<span class=\"se\">\\U</span>sers<span class=\"se\">\\m</span>ikkelhegn<span class=\"se\">\\d</span>otnet-component<span class=\"se\">\\d</span>otnet-component.csproj<span class=\"o\">]</span>\n</code></pre></div>\n<p>Changing to this resolved it:</p>\n<div class=\"codehilite\" data-code-language=\"C#\"><pre><span></span><code><span class=\"k\">namespace</span><span class=\"w\"> </span><span class=\"nn\">PluginWorld</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">PluginWorldImpl</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">IPluginWorld</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"nf\">Transform</span><span class=\"p\">(</span><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">ToUpperInvariant</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>For reference the WIT:</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package wasmio:samples;\n\nworld plugin {\n    export transform: func(input: string) -&gt; string;\n}\n</code></pre></div>\n<p>If I'm not doing anything \"wrong\", the README needs an update, but wanted to check here first. <span class=\"user-mention\" data-user-id=\"625613\">@James Sturtevant</span></p>",
        "id": 464389855,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1724336008
    },
    {
        "content": "<p>yes, wit-bindgen has had a few changes over the last few months to the generated code. Its likely just a readme update, which I thoough I had covered in <a href=\"https://github.com/bytecodealliance/componentize-dotnet/pull/37/files\">https://github.com/bytecodealliance/componentize-dotnet/pull/37/files</a> but maybe got them wrong (I copied the examples out of our samples)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-dotnet/pull/37/files\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/465ec30a08d052828f12f5a36d44a3014816bd35/68747470733a2f2f617661746172732e67697468756275736572636f6e74656e742e636f6d2f752f3634383337323f733d34303026763d34&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-dotnet/pull/37/files\" title=\"clean up readme for latest info by jsturtevant · Pull Request #37 · bytecodealliance/componentize-dotnet\">clean up readme for latest info by jsturtevant · Pull Request #37 · bytecodealliance/componentize-dotnet</a></div><div class=\"message_embed_description\">Some of the details were a little stale after the last updates.\nFixes: #27</div></div></div>",
        "id": 464425214,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1724343928
    },
    {
        "content": "<p>but your example is working now?</p>",
        "id": 464425347,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1724343950
    },
    {
        "content": "<p>Hi James, yes it is, however only builds on net8.0 on Windows. Neither net9 or macOS (8 or 9) are working, but I think that's known.</p>\n<p>I created a small update to the readme as I went through it: <a href=\"https://github.com/bytecodealliance/componentize-dotnet/pull/39\">https://github.com/bytecodealliance/componentize-dotnet/pull/39</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-dotnet/pull/39\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/04f3ce11c2230d476f18ce50659d5e7987f45e3f/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313533353138393138353834373833643233633738333735626166336266636133656463383232313865646630656338366538613536633631643135333865662f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d646f746e65742f70756c6c2f3339&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-dotnet/pull/39\" title=\"Readme updates by mikkelhegn · Pull Request #39 · bytecodealliance/componentize-dotnet\">Readme updates by mikkelhegn · Pull Request #39 · bytecodealliance/componentize-dotnet</a></div><div class=\"message_embed_description\">A few small updated to readme.</div></div></div>",
        "id": 464597243,
        "sender_full_name": "Mikkel Mørk Hegnhøj",
        "timestamp": 1724405689
    },
    {
        "content": "<p>Yes only Windows works, we have some work in progress to support Linux.  .net 9 with llvm compilier should work on Windows (CI passes) but .net 9's regular suppport has some challenges <a href=\"https://github.com/bytecodealliance/componentize-dotnet/pull/38\">https://github.com/bytecodealliance/componentize-dotnet/pull/38</a> and along with a few missing configuration setting.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-dotnet/pull/38\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/ab9c86261346de8fe4d5f4747c6eb9f4711feba5/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f303934633533333537313434356430623865363836353131346535633061386665386636613937306230616662653962353539383231626235616631363331302f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d646f746e65742f70756c6c2f3338&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-dotnet/pull/38\" title=\"start to add mono support by jsturtevant · Pull Request #38 · bytecodealliance/componentize-dotnet\">start to add mono support by jsturtevant · Pull Request #38 · bytecodealliance/componentize-dotnet</a></div><div class=\"message_embed_description\">fix #33\nright now just some hacks to try to get it to build but ran into dotnet/runtime#106845</div></div></div>",
        "id": 465489097,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1724773916
    },
    {
        "content": "<p>Do you think adding a table of what is/isn't supported would help?</p>",
        "id": 465496423,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1724775544
    }
]