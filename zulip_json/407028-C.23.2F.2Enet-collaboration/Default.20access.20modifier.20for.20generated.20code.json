[
    {
        "content": "<p>I'm working on adding <code>wasi:http</code> support to <code>System.Net.Http</code>, and part of that requires generating bindings for <code>wasi:http</code> and adding them to <code>src/libraries/System.Net.Http/src</code> in the .NET runtime source tree.  That results in hundreds of compiler errors (including warnings treated as errors), so I'm working on cleaning those up.</p>\n<p>Some of the errors are about <code>CLS</code> conformance, i.e. the compiler (or linter) complaining that the public API of the generated code is not language-agnostic.  But in this case (and probably in most cases), we don't even want the generated code to be part of the public API.  So three options come to mind:</p>\n<ul>\n<li>Use <code>internal</code> instead of <code>public</code> by default in the C# <code>wit-bindgen</code> generator</li>\n<li>Add an option to do that (but leave the default <code>public</code>)</li>\n<li>Change the default to <code>internal</code>, but add an option to use <code>public</code> instead</li>\n</ul>\n<p>Thoughts?</p>",
        "id": 444023806,
        "sender_full_name": "Joel Dice",
        "timestamp": 1718118037
    },
    {
        "content": "<p>First one seem good to me.</p>",
        "id": 444063363,
        "sender_full_name": "Scott Waye",
        "timestamp": 1718127826
    },
    {
        "content": "<p>I went ahead and implemented the third option since it's a superset of the first one and easy enough.</p>",
        "id": 444069866,
        "sender_full_name": "Joel Dice",
        "timestamp": 1718129993
    }
]