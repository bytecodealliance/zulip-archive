[
    {
        "content": "<p>Now that your fixes have landed <span class=\"user-mention\" data-user-id=\"509936\">@Joel Dice</span>, we should be able to update the example to no longer require the emsdk right?</p>",
        "id": 439846725,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716306238
    },
    {
        "content": "<p>In theory, yes, although I believe we'll also need to change both <code>wit-bindgen</code> and the dotnet preview build to not try to use EMSDK for wasi builds.</p>",
        "id": 439847201,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716306377
    },
    {
        "content": "<p>I'm still getting familiar with the dotnet source code, so I'm not sure where those changes need to happen.</p>",
        "id": 439847377,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716306439
    },
    {
        "content": "<p>we're in the sg for C# right now. I'll aim to get this tracked</p>",
        "id": 439847752,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716306551
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"509936\">@Joel Dice</span> I'm getting an error while running your wasi-http example: <a href=\"https://github.com/dicej/dotnet9-wasi-http-example/tree/main\">https://github.com/dicej/dotnet9-wasi-http-example/tree/main</a></p>\n<p>It's claiming that the component didn't call <code>response-outparam::set</code> but I definitely see it in the app source. Do I need to do an additional step for setting the runtime beyond installing the latest preview (<code>winget install Microsoft.DotNet.SDK.Preview</code>)?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">21</span><span class=\"n\">T18</span>:<span class=\"mi\">56</span>:<span class=\"mf\">04.624831</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">wasmtime_cli</span>::<span class=\"n\">commands</span>::<span class=\"n\">serve</span>: <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span>:: <span class=\"nc\">Error</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">context</span>: <span class=\"s\">\"error while executing at wasm backtrace:</span><span class=\"se\">\\n</span><span class=\"s\">    0: 0x2051f0 - csharp-wasm.wasm!abort</span><span class=\"se\">\\n</span><span class=\"s\">    1: 0x3b8d8 - csharp-wasm.wasm!RaiseFailFastException</span><span class=\"se\">\\n</span><span class=\"s\">    2: 0xa59f - csharp-wasm.wasm!Thread::ReversePInvokeAttachOrTrapThread(ReversePInvokeFrame*)</span><span class=\"se\">\\n</span><span class=\"s\">    3: 0xa6cb - csharp-wasm.wasm!RhpReversePInvokeAttachOrTrapThread2</span><span class=\"se\">\\n</span><span class=\"s\">    4: 0x3d239 - csharp-wasm.wasm!RhpReversePInvoke</span><span class=\"se\">\\n</span><span class=\"s\">    5: 0xcd3c7 - csharp-wasm.wasm!csharp_wasm_ProxyWorld_wit_exports_wasi_http_v0_2_0_IncomingHandlerInterop__wasmExportHandle</span><span class=\"se\">\\n</span><span class=\"s\">note: using the `WASMTIME_BACKTRACE_DETAILS=1` environment variable may show more debugging information\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">source</span>: <span class=\"nc\">UnreachableCodeReached</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"n\">error</span>: <span class=\"nc\">hyper</span>::<span class=\"n\">Error</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">(</span><span class=\"n\">Service</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">guest</span><span class=\"w\"> </span><span class=\"n\">never</span><span class=\"w\"> </span><span class=\"n\">invoked</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">response</span><span class=\"o\">-</span><span class=\"n\">outparam</span>::<span class=\"n\">set</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">method</span>: <span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n    <span class=\"mi\">0</span>: <span class=\"mh\">0x2051f0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">abort</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"mh\">0x3b8d8</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">RaiseFailFastException</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"mh\">0xa59f</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">Thread</span>::<span class=\"n\">ReversePInvokeAttachOrTrapThread</span><span class=\"p\">(</span><span class=\"n\">ReversePInvokeFrame</span><span class=\"o\">*</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"mi\">3</span>: <span class=\"mh\">0xa6cb</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">RhpReversePInvokeAttachOrTrapThread2</span>\n<span class=\"w\">    </span><span class=\"mi\">4</span>: <span class=\"mh\">0x3d239</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">RhpReversePInvoke</span>\n<span class=\"w\">    </span><span class=\"mi\">5</span>: <span class=\"mh\">0xcd3c7</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">csharp_wasm_ProxyWorld_wit_exports_wasi_http_v0_2_0_IncomingHandlerInterop__wasmExportHandle</span>\n<span class=\"n\">note</span>: <span class=\"nc\">using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">WASMTIME_BACKTRACE_DETAILS</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">show</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">debugging</span><span class=\"w\"> </span><span class=\"n\">information</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span>: <span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">unreachable</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">executed</span><span class=\"p\">)</span>\n</code></pre></div>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/dicej/dotnet9-wasi-http-example/tree/main\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/00ac77754994408c57de0886528263cba3531dc3/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313134326666613832623439643362616664383162313332326533373665636434383231306139633831373939393130656232633035326135623261393135312f646963656a2f646f746e6574392d776173692d687474702d6578616d706c65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/dicej/dotnet9-wasi-http-example/tree/main\" title=\"GitHub - dicej/dotnet9-wasi-http-example\">GitHub - dicej/dotnet9-wasi-http-example</a></div><div class=\"message_embed_description\">Contribute to dicej/dotnet9-wasi-http-example development by creating an account on GitHub.</div></div></div>",
        "id": 439881465,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716317583
    },
    {
        "content": "<p>Hmm, that error looks familiar; trying to remember what the solution was.</p>",
        "id": 439884168,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716318411
    },
    {
        "content": "<p>Thats the first/only message ?  The runtime maintains a flag that indicates if it is in cooperative or interruptible state, unmanaged/managed.  This error can appear if that flag is out of step, perhaps by an earlier problem</p>",
        "id": 439884885,
        "sender_full_name": "Scott Waye",
        "timestamp": 1716318659
    },
    {
        "content": "<p>Yeah, I think the \"guest never invoked\" bit is only a symptom of the real problem</p>",
        "id": 439884977,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716318698
    },
    {
        "content": "<p>I tried with latest release of wit-bindgen (that should have your fix) and ran directly off our PR as well. Here's the output from wit-bindgen PR that worked for the sample 2 weeks ago. It does have slightly different output but same top-level error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">behay</span><span class=\"o\">@</span><span class=\"n\">DESKTOP</span><span class=\"o\">-</span><span class=\"n\">MK2J2EE</span><span class=\"w\"> </span><span class=\"err\"></span><span class=\"w\"> </span><span class=\"o\">~</span><span class=\"err\">\\</span><span class=\"o\">..</span><span class=\"err\">\\</span><span class=\"n\">dotnet9</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">http</span><span class=\"o\">-</span><span class=\"n\">example</span><span class=\"w\"> </span><span class=\"err\"></span><span class=\"w\"> </span><span class=\"err\"></span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"err\">≣</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">~</span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"err\"></span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">serve</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"o\">-</span><span class=\"n\">table</span><span class=\"o\">-</span><span class=\"n\">elements</span><span class=\"o\">=</span><span class=\"mi\">20000</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"n\">target</span><span class=\"err\">\\</span><span class=\"n\">component</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">addr</span><span class=\"w\"> </span><span class=\"mf\">0.0.0.0</span>:<span class=\"mi\">8082</span>\n<span class=\"n\">Serving</span><span class=\"w\"> </span><span class=\"n\">HTTP</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">http</span>:<span class=\"c1\">//0.0.0.0:8082/</span>\n<span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">21</span><span class=\"n\">T19</span>:<span class=\"mi\">09</span>:<span class=\"mf\">39.631877</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">wasmtime_cli</span>::<span class=\"n\">commands</span>::<span class=\"n\">serve</span>: <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span>:: <span class=\"nc\">Error</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">context</span>: <span class=\"s\">\"error while executing at wasm backtrace:</span><span class=\"se\">\\n</span><span class=\"s\">    0: 0x2051f0 - csharp-wasm.wasm!abort</span><span class=\"se\">\\n</span><span class=\"s\">    1: 0x3b8d8 - csharp-wasm.wasm!RaiseFailFastException</span><span class=\"se\">\\n</span><span class=\"s\">    2: 0xa59f - csharp-wasm.wasm!Thread::ReversePInvokeAttachOrTrapThread(ReversePInvokeFrame*)</span><span class=\"se\">\\n</span><span class=\"s\">    3: 0xa6cb - csharp-wasm.wasm!RhpReversePInvokeAttachOrTrapThread2</span><span class=\"se\">\\n</span><span class=\"s\">    4: 0x3d239 - csharp-wasm.wasm!RhpReversePInvoke</span><span class=\"se\">\\n</span><span class=\"s\">    5: 0xcd3c7 - csharp_wasm_ProxyWorld_wit_exports_wasi_http_v0_2_0_IncomingHandlerInterop__wasmExportHandle</span><span class=\"se\">\\n</span><span class=\"s\">                    at C:</span><span class=\"se\">\\\\</span><span class=\"s\">Users</span><span class=\"se\">\\\\</span><span class=\"s\">behay</span><span class=\"se\">\\\\</span><span class=\"s\">repos</span><span class=\"se\">\\\\</span><span class=\"s\">dotnet9-wasi-http-example</span><span class=\"se\">\\\\</span><span class=\"s\">ProxyWorld.wit.exports.wasi.http.v0_2_0.IncomingHandlerInterop.cs:18\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">source</span>: <span class=\"nc\">UnreachableCodeReached</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"n\">error</span>: <span class=\"nc\">hyper</span>::<span class=\"n\">Error</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">(</span><span class=\"n\">Service</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">guest</span><span class=\"w\"> </span><span class=\"n\">never</span><span class=\"w\"> </span><span class=\"n\">invoked</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">response</span><span class=\"o\">-</span><span class=\"n\">outparam</span>::<span class=\"n\">set</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">method</span>: <span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n    <span class=\"mi\">0</span>: <span class=\"mh\">0x2051f0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">abort</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"mh\">0x3b8d8</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">RaiseFailFastException</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"mh\">0xa59f</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">Thread</span>::<span class=\"n\">ReversePInvokeAttachOrTrapThread</span><span class=\"p\">(</span><span class=\"n\">ReversePInvokeFrame</span><span class=\"o\">*</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"mi\">3</span>: <span class=\"mh\">0xa6cb</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">RhpReversePInvokeAttachOrTrapThread2</span>\n<span class=\"w\">    </span><span class=\"mi\">4</span>: <span class=\"mh\">0x3d239</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">RhpReversePInvoke</span>\n<span class=\"w\">    </span><span class=\"mi\">5</span>: <span class=\"mh\">0xcd3c7</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp_wasm_ProxyWorld_wit_exports_wasi_http_v0_2_0_IncomingHandlerInterop__wasmExportHandle</span>\n<span class=\"w\">                    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">behay</span><span class=\"err\">\\</span><span class=\"n\">repos</span><span class=\"err\">\\</span><span class=\"n\">dotnet9</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">http</span><span class=\"o\">-</span><span class=\"n\">example</span><span class=\"err\">\\</span><span class=\"n\">ProxyWorld</span><span class=\"p\">.</span><span class=\"n\">wit</span><span class=\"p\">.</span><span class=\"n\">exports</span><span class=\"p\">.</span><span class=\"n\">wasi</span><span class=\"p\">.</span><span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">v0_2_0</span><span class=\"p\">.</span><span class=\"n\">IncomingHandlerInterop</span><span class=\"p\">.</span><span class=\"n\">cs</span>:<span class=\"mi\">18</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span>: <span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">unreachable</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">executed</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 439885015,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716318716
    },
    {
        "content": "<p>can you take a look at <code>ProxyWorld.wit.exports.wasi.http.v0_2_0.IncomingHandlerInterop.cs</code> line 18?  Is it right at the beginning of an exported function?</p>",
        "id": 439885594,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716318919
    },
    {
        "content": "<p>Yes, looking at the generated binding <code>5:</code> is the invocation of the handler.  Above output is with <code>WASMTIME_BACKTRACE_DETAILS=1</code></p>",
        "id": 439885730,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716318970
    },
    {
        "content": "<p>I agree it sounds like a panic after the invocation and prior to the set</p>",
        "id": 439885768,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716318986
    },
    {
        "content": "<p>Now I'm questioning the wisdom of giving my only Windows-capable x86_64 machine to my wife a couple of weeks ago.  Gonna have to ask for it back for a bit :)</p>",
        "id": 439885966,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716319044
    },
    {
        "content": "<p>For reference,  this is the generated binding that kicks things off. Looks ok to me:</p>\n<div class=\"codehilite\" data-code-language=\"C#\"><pre><span></span><code><span class=\"k\">namespace</span><span class=\"w\"> </span><span class=\"nn\">ProxyWorld.wit.exports.wasi.http.v0_2_0</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">IncomingHandlerInterop</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">        </span><span class=\"na\">[UnmanagedCallersOnly(EntryPoint = \"wasi:http/incoming-handler@0.2.0#handle\")]</span>\n<span class=\"w\">        </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"nf\">wasmExportHandle</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">p0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">p1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">            </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"k\">global</span><span class=\"p\">::</span><span class=\"n\">ProxyWorld</span><span class=\"p\">.</span><span class=\"n\">wit</span><span class=\"p\">.</span><span class=\"n\">imports</span><span class=\"p\">.</span><span class=\"n\">wasi</span><span class=\"p\">.</span><span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">v0_2_0</span><span class=\"p\">.</span><span class=\"n\">ITypes</span><span class=\"p\">.</span><span class=\"n\">IncomingRequest</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"k\">global</span><span class=\"p\">::</span><span class=\"n\">ProxyWorld</span><span class=\"p\">.</span><span class=\"n\">wit</span><span class=\"p\">.</span><span class=\"n\">imports</span><span class=\"p\">.</span><span class=\"n\">wasi</span><span class=\"p\">.</span><span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">v0_2_0</span><span class=\"p\">.</span><span class=\"n\">ITypes</span><span class=\"p\">.</span><span class=\"n\">IncomingRequest</span><span class=\"p\">.</span><span class=\"n\">THandle</span><span class=\"p\">(</span><span class=\"n\">p0</span><span class=\"p\">));</span>\n<span class=\"w\">            </span><span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">resource0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"k\">global</span><span class=\"p\">::</span><span class=\"n\">ProxyWorld</span><span class=\"p\">.</span><span class=\"n\">wit</span><span class=\"p\">.</span><span class=\"n\">imports</span><span class=\"p\">.</span><span class=\"n\">wasi</span><span class=\"p\">.</span><span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">v0_2_0</span><span class=\"p\">.</span><span class=\"n\">ITypes</span><span class=\"p\">.</span><span class=\"n\">ResponseOutparam</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"k\">global</span><span class=\"p\">::</span><span class=\"n\">ProxyWorld</span><span class=\"p\">.</span><span class=\"n\">wit</span><span class=\"p\">.</span><span class=\"n\">imports</span><span class=\"p\">.</span><span class=\"n\">wasi</span><span class=\"p\">.</span><span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">v0_2_0</span><span class=\"p\">.</span><span class=\"n\">ITypes</span><span class=\"p\">.</span><span class=\"n\">ResponseOutparam</span><span class=\"p\">.</span><span class=\"n\">THandle</span><span class=\"p\">(</span><span class=\"n\">p1</span><span class=\"p\">));</span>\n<span class=\"w\">            </span><span class=\"n\">IncomingHandlerImpl</span><span class=\"p\">.</span><span class=\"n\">Handle</span><span class=\"p\">((</span><span class=\"n\">resource</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">resource0</span><span class=\"p\">));</span>\n\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 439886139,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716319090
    },
    {
        "content": "<p>Which one is line 18?  Is that the whole file?</p>",
        "id": 439886201,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716319117
    },
    {
        "content": "<p>18 is the first <code>var resource =</code>. So it's trapping before calling Handle?</p>",
        "id": 439886254,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716319139
    },
    {
        "content": "<p>I think the issue is that some runtime init function in the guest isn't being called.  I know I ran into this, but I can't remember how I got past it.</p>",
        "id": 439886314,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716319167
    },
    {
        "content": "<p>I'm running with this in the csproj:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"o\">&lt;</span><span class=\"n\">ItemGroup</span><span class=\"o\">&gt;</span>\n<span class=\"w\">    </span><span class=\"o\">&lt;</span><span class=\"n\">PackageReference</span><span class=\"w\"> </span><span class=\"n\">Include</span><span class=\"o\">=</span><span class=\"s\">\"Microsoft.DotNet.ILCompiler.LLVM\"</span><span class=\"w\"> </span><span class=\"n\">Version</span><span class=\"o\">=</span><span class=\"s\">\"9.0.0-*\"</span><span class=\"w\"> </span><span class=\"o\">/&gt;</span>\n<span class=\"w\">    </span><span class=\"o\">&lt;</span><span class=\"n\">PackageReference</span><span class=\"w\"> </span><span class=\"n\">Include</span><span class=\"o\">=</span><span class=\"s\">\"runtime.win-x64.Microsoft.DotNet.ILCompiler.LLVM\"</span><span class=\"w\"> </span><span class=\"n\">Version</span><span class=\"o\">=</span><span class=\"s\">\"9.0.0-*\"</span><span class=\"w\"> </span><span class=\"o\">/&gt;</span>\n<span class=\"w\">  </span><span class=\"o\">&lt;/</span><span class=\"n\">ItemGroup</span><span class=\"o\">&gt;</span>\n</code></pre></div>",
        "id": 439886528,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716319234
    },
    {
        "content": "<p>Which is what is checked in the repo. I could try swapping over to bindgen for mono and the mono runtime, but it sounded like that's not the best path to demo</p>",
        "id": 439886918,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716319377
    },
    {
        "content": "<p>I got the Windows laptop back; I've got to install dev tools on it, but will try to repro and debug once it's ready.</p>",
        "id": 439887256,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716319489
    },
    {
        "content": "<p>I'll drop the installs I did since I have them handy</p>",
        "id": 439887332,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716319514
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"PowerShell\"><pre><span></span><code><span class=\"n\">winget</span> <span class=\"n\">install</span> <span class=\"n\">Microsoft</span><span class=\"p\">.</span><span class=\"n\">DotNet</span><span class=\"p\">.</span><span class=\"n\">SDK</span><span class=\"p\">.</span><span class=\"n\">Preview</span>\n\n<span class=\"c\"># install emsdk</span>\n<span class=\"nb\">Expand-Archive</span> <span class=\"p\">.\\</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">zip</span>\n<span class=\"nb\">cd </span><span class=\"p\">.\\</span><span class=\"n\">emsdk-main</span><span class=\"p\">\\</span><span class=\"n\">main</span><span class=\"p\">\\</span><span class=\"n\">emsdk-main</span>\n<span class=\"p\">.\\</span><span class=\"n\">emsdk_env</span><span class=\"p\">.</span><span class=\"n\">ps1</span> <span class=\"n\">3</span><span class=\"p\">.</span><span class=\"n\">1</span><span class=\"p\">.</span><span class=\"n\">60</span>\n<span class=\"p\">.\\</span><span class=\"n\">emsdk_env</span><span class=\"p\">.</span><span class=\"n\">ps1</span> <span class=\"n\">activate</span> <span class=\"n\">3</span><span class=\"p\">.</span><span class=\"n\">1</span><span class=\"p\">.</span><span class=\"n\">60</span> <span class=\"p\">-</span><span class=\"n\">-permanent</span>\n\n<span class=\"c\">#install wasi-sdk</span>\n<span class=\"c\">#Download and unzip the 22 spot release:</span>\n<span class=\"c\"># that path looked odd to me with the +m so I renamed</span>\n<span class=\"c\"># I often have a couple wasi-sdk's installed so have a top-level dir for them</span>\n<span class=\"n\">https</span><span class=\"p\">://</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">/</span><span class=\"n\">WebAssembly</span><span class=\"p\">/</span><span class=\"n\">wasi-sdk</span><span class=\"p\">/</span><span class=\"n\">releases</span><span class=\"p\">/</span><span class=\"n\">download</span><span class=\"p\">/</span><span class=\"n\">wasi-sdk</span><span class=\"p\">-</span><span class=\"n\">22</span><span class=\"p\">/</span><span class=\"n\">wasi-sdk</span><span class=\"p\">-</span><span class=\"n\">22</span><span class=\"p\">.</span><span class=\"n\">0</span><span class=\"p\">.</span><span class=\"n\">m-mingw64</span><span class=\"p\">.</span><span class=\"n\">tar</span><span class=\"p\">.</span><span class=\"n\">gz</span>\n<span class=\"nv\">$env:WASI_SDK_PATH</span><span class=\"p\">=</span><span class=\"s2\">\"C:\\Users\\behay\\wasi-sdk\\wasi-sdk-22.0\"</span>\n\n<span class=\"n\">cargo</span> <span class=\"n\">install</span> <span class=\"n\">wasmtime-cli</span>\n<span class=\"n\">cargo</span> <span class=\"n\">install</span> <span class=\"n\">wasm-tools</span>\n<span class=\"n\">cargo</span> <span class=\"n\">install</span> <span class=\"n\">wit-bindgen-cli</span>\n</code></pre></div>",
        "id": 439888106,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716319744
    },
    {
        "content": "<p>wasi sdk 22, not sure that one has been tested before.  I ran it with 21.  Do you need 22 ?</p>",
        "id": 439895266,
        "sender_full_name": "Scott Waye",
        "timestamp": 1716322168
    },
    {
        "content": "<p>Honestly, I don't remember which version of wasi-sdk I used when I made that demo, but yeah, worth trying 21 instead.</p>",
        "id": 439895507,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716322251
    },
    {
        "content": "<p>Meanwhile, I'm still waiting for VS to install on my slow internet connection.</p>",
        "id": 439895586,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716322275
    },
    {
        "content": "<p>If wasi-sdk 21 works, I'll update the README.md to specify that</p>",
        "id": 439896556,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716322600
    },
    {
        "content": "<p>And then work on getting wasi-sdk 22 working also.</p>",
        "id": 439896622,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716322624
    },
    {
        "content": "<p>Ok yeah, I'll swap back. I was interested in 22 since it had the fix that would ultimately let us remove the emscripten requirement</p>",
        "id": 439896709,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716322661
    },
    {
        "content": "<p>We could hypothetically backport that fix to 21 if it's helpful.  I'll want to understand why 22 doesn't work in any case.</p>",
        "id": 439896852,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716322695
    },
    {
        "content": "<p>I'm seeing the same error but going to double check by starting fresh</p>",
        "id": 439898026,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716323088
    },
    {
        "content": "<p><a href=\"https://wa2.dev\">https://wa2.dev</a>  And get the $_initialize function maybe ?</p>",
        "id": 439898587,
        "sender_full_name": "Scott Waye",
        "timestamp": 1716323280
    },
    {
        "content": "<p>heh if someone has a working wasm, I will definitely diff with it</p>",
        "id": 439899239,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716323480
    },
    {
        "content": "<p>I got VS and git-bash installed; working on the other deps now</p>",
        "id": 439899370,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716323520
    },
    {
        "content": "<p><a href=\"/user_uploads/15107/8mPT7Jp4bd6YOkQSobYLqaay/component.7z\">component.7z</a></p>",
        "id": 439903263,
        "sender_full_name": "Scott Waye",
        "timestamp": 1716324879
    },
    {
        "content": "<p>Thats the unstripped wasm that I have</p>",
        "id": 439903318,
        "sender_full_name": "Scott Waye",
        "timestamp": 1716324905
    },
    {
        "content": "<p>oh hey I get an exception from that component as well. Rolling back wasmtime versions</p>",
        "id": 439903630,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716325012
    },
    {
        "content": "<p>If you hit a table index error, that's been addressed: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8504\">https://github.com/bytecodealliance/wasmtime/issues/8504</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/8504\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/8aee2ea5c97032fc9175dbfd7a423f881ea441b8/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f303833623963326331633163313366303335326338643965643035393361316462346166363266386234613838353133626535373265613137633130623133372f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f38353034&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/8504\" title=\"`-W max-table-elements` has no effect for `wasmtime serve` · Issue #8504 · bytecodealliance/wasmtime\">`-W max-table-elements` has no effect for `wasmtime serve` · Issue #8504 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">While working on resource support for the C# wit-bindgen generator, I created an example app targeting wasi:http/incoming-handler@0.2.0. However, wasmtime serve couldn't run it due to one of the ta...</div></div></div>",
        "id": 439905237,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716325562
    },
    {
        "content": "<p>Mine:<br>\n$ wasmtime --version<br>\nwasmtime-cli 14.0.4</p>",
        "id": 439905322,
        "sender_full_name": "Scott Waye",
        "timestamp": 1716325582
    },
    {
        "content": "<p>FWIW, it was definitely working (at least in release mode) on Wasmtime 20.</p>",
        "id": 439905527,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716325682
    },
    {
        "content": "<p>ah yeah I did bump into the table index error with 20.0.2</p>",
        "id": 439906532,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716326053
    },
    {
        "content": "<p>Right now I'm building wasmtime from source with the PR that adds max-table-elements support to serve</p>",
        "id": 439907725,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716326518
    },
    {
        "content": "<p>That _shouldn't_ be necessary for the release build (since the release build doesn't need as big of a table), but I could be misremembering.</p>",
        "id": 439907960,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716326607
    },
    {
        "content": "<p>I don't see any options for increasing the table in the spin <code>build.sh</code></p>",
        "id": 439908520,
        "sender_full_name": "Scott Waye",
        "timestamp": 1716326799
    },
    {
        "content": "<p>Maybe because my wasmtime is old</p>",
        "id": 439908577,
        "sender_full_name": "Scott Waye",
        "timestamp": 1716326821
    },
    {
        "content": "<p>I don't need them</p>",
        "id": 439908606,
        "sender_full_name": "Scott Waye",
        "timestamp": 1716326830
    },
    {
        "content": "<p>right; once I changed <code>-c Debug</code> to <code>-c Release</code> it worked with all versions of Wasmtime, new and old</p>",
        "id": 439908647,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716326848
    },
    {
        "content": "<p>still installing deps on my (wife's) Windows machine; almost there</p>",
        "id": 439908699,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716326867
    },
    {
        "content": "<p>yeah the component Scott linked is too chonky. Since I'm getting the same error, I'll go ahead and rebuild my own</p>",
        "id": 439908865,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716326913
    },
    {
        "content": "<p><code>wasmtime-cli 22.0.0 (8848bac21 2024-05-21)</code> works for me also</p>",
        "id": 439909151,
        "sender_full_name": "Scott Waye",
        "timestamp": 1716327009
    },
    {
        "content": "<p>dotnet 9.0.100-preview.4.24267.66 doesn't like the project, it seems.  It asked me to do <code>dotnet workload update</code> but then barfed with a <code>NullReferenceException</code> when I did that.</p>",
        "id": 439910337,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716327440
    },
    {
        "content": "<p>Do you mind trying out the component I built? <br>\n<a href=\"/user_uploads/15107/SpNz7mQpDwHYcSVd95ZNM-zO/component.wasm\">component.wasm</a></p>",
        "id": 439910473,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716327484
    },
    {
        "content": "<p>Other thing I'm testing is if the adapter was potentially mismatched.</p>",
        "id": 439910613,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716327530
    },
    {
        "content": "<p>I am running with VS Code rather than Visual Code. <span class=\"user-mention\" data-user-id=\"509936\">@Joel Dice</span> which one are you building with?</p>",
        "id": 439910717,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716327576
    },
    {
        "content": "<p>I installed Visual Studio Community 2022 and the aforementioned dotnet preview and am building using the <a href=\"http://build.sh\">build.sh</a> in the dotnet9-wasi-http-example repo in git-bash</p>",
        "id": 439910960,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716327655
    },
    {
        "content": "<p>With your component.wasm:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">serve</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">Serving</span><span class=\"w\"> </span><span class=\"n\">HTTP</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">http</span>:<span class=\"c1\">//0.0.0.0:8080/</span>\n<span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">05</span><span class=\"o\">-</span><span class=\"mi\">21</span><span class=\"n\">T21</span>:<span class=\"mi\">41</span>:<span class=\"mf\">41.655703</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">wasmtime_cli</span>::<span class=\"n\">commands</span>::<span class=\"n\">serve</span>: <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span>:: <span class=\"nc\">Error</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">context</span>: <span class=\"s\">\"error while executing at wasm backtrace:</span><span class=\"se\">\\n</span><span class=\"s\">    0: 0x204aaa - csharp-wasm.wasm!abort</span><span class=\"se\">\\n</span><span class=\"s\">    1: 0x3b8de - csharp-wasm.wasm!RaiseFailFastException</span><span class=\"se\">\\n</span><span class=\"s\">    2: 0xa5a5 - csharp-wasm.wasm!Thread::ReversePInvokeAttachOrTrapThread(ReversePInvokeFrame*)</span><span class=\"se\">\\n</span><span class=\"s\">    3: 0xa6d1 - csharp-wasm.wasm!RhpReversePInvokeAttachOrTrapThread2</span><span class=\"se\">\\n</span><span class=\"s\">    4: 0x3d23f - csharp-wasm.wasm!RhpReversePInvoke</span><span class=\"se\">\\n</span><span class=\"s\">    5: 0xccf89 - csharp-wasm.wasm!csharp_wasm_ProxyWorld_wit_exports_wasi_http_v0_2_0_IncomingHandlerInterop__wasmExportHandle</span><span class=\"se\">\\n</span><span class=\"s\">note: using the `WASMTIME_BACKTRACE_DETAILS=1` environment variable may show more debugging information\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">source</span>: <span class=\"nc\">UnreachableCodeReached</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"n\">error</span>: <span class=\"nc\">hyper</span>::<span class=\"n\">Error</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">(</span><span class=\"n\">Service</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">guest</span><span class=\"w\"> </span><span class=\"n\">never</span><span class=\"w\"> </span><span class=\"n\">invoked</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">response</span><span class=\"o\">-</span><span class=\"n\">outparam</span>::<span class=\"n\">set</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">method</span>: <span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n    <span class=\"mi\">0</span>: <span class=\"mh\">0x204aaa</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">abort</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"mh\">0x3b8de</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">RaiseFailFastException</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"mh\">0xa5a5</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">Thread</span>::<span class=\"n\">ReversePInvokeAttachOrTrapThread</span><span class=\"p\">(</span><span class=\"n\">ReversePInvokeFrame</span><span class=\"o\">*</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"mi\">3</span>: <span class=\"mh\">0xa6d1</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">RhpReversePInvokeAttachOrTrapThread2</span>\n<span class=\"w\">    </span><span class=\"mi\">4</span>: <span class=\"mh\">0x3d23f</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">RhpReversePInvoke</span>\n<span class=\"w\">    </span><span class=\"mi\">5</span>: <span class=\"mh\">0xccf89</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">csharp</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">csharp_wasm_ProxyWorld_wit_exports_wasi_http_v0_2_0_IncomingHandlerInterop__wasmExportHandle</span>\n<span class=\"n\">note</span>: <span class=\"nc\">using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">WASMTIME_BACKTRACE_DETAILS</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">show</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">debugging</span><span class=\"w\"> </span><span class=\"n\">information</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span>: <span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">unreachable</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">executed</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 439911269,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716327758
    },
    {
        "content": "<p>nice, at least its reproducible. Now are you able to build a component that works?</p>",
        "id": 439911602,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716327887
    },
    {
        "content": "<p>Anyone know what this means?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Program</span><span class=\"w\"> </span><span class=\"n\">Files</span><span class=\"err\">\\</span><span class=\"n\">dotnet</span><span class=\"err\">\\</span><span class=\"n\">sdk</span><span class=\"err\">\\</span><span class=\"mf\">9.0.100</span><span class=\"o\">-</span><span class=\"n\">preview</span><span class=\"p\">.</span><span class=\"mf\">4.24267.66</span><span class=\"err\">\\</span><span class=\"n\">NuGet</span><span class=\"p\">.</span><span class=\"n\">targets</span><span class=\"p\">(</span><span class=\"mi\">741</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">)</span>: <span class=\"nc\">error</span><span class=\"w\"> </span>: <span class=\"nc\">Value</span><span class=\"w\"> </span><span class=\"n\">cannot</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Parameter</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">path1</span><span class=\"o\">'</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">joeld</span><span class=\"err\">\\</span><span class=\"n\">p</span><span class=\"err\">\\</span><span class=\"n\">dotnet9</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">http</span><span class=\"o\">-</span><span class=\"n\">example</span><span class=\"err\">\\</span><span class=\"n\">App</span><span class=\"p\">.</span><span class=\"n\">csproj</span><span class=\"p\">]</span>\n</code></pre></div>",
        "id": 439911663,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716327907
    },
    {
        "content": "<p>I can't build nothin' at the moment</p>",
        "id": 439911688,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716327918
    },
    {
        "content": "<p>fwiw I verified that I'm using the proxy adapter for wasmtime 21 while running wasmtime 21</p>",
        "id": 439912070,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716328073
    },
    {
        "content": "<p>Hmm, your wasm seems ok here.  Assuming Im using <code>spin</code> correctly .  I renamed yours to <code>stripped.wasm</code>, in <code>target</code> then <code>spin up</code></p>",
        "id": 439912132,
        "sender_full_name": "Scott Waye",
        "timestamp": 1716328086
    },
    {
        "content": "<p>I'm calling the commands in <a href=\"http://build.sh\">build.sh</a> directly. spin in this case is shelling out to <a href=\"http://build.sh\">build.sh</a></p>",
        "id": 439912210,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716328135
    },
    {
        "content": "<p>I'm also passing wasmtime the non-stripped version to get the better error message. Stripped has the same error just without the debug info</p>",
        "id": 439912304,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716328178
    },
    {
        "content": "<p><code>wasmtime serve</code> fails for me while <code>spin up</code> works.  I am completely misunderstanding what <code>spin up</code> does ?</p>",
        "id": 439912930,
        "sender_full_name": "Scott Waye",
        "timestamp": 1716328408
    },
    {
        "content": "<p>Interesting; Spin uses wasmtime behind the scenes, but configures it differently.  Shouldn't make a difference here, but <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 439913127,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716328475
    },
    {
        "content": "<p>I'll try with Spin in a minute; currently downgrading to dotnet 9 preview 3 in case that likes me better</p>",
        "id": 439913281,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716328539
    },
    {
        "content": "<p>Spin is both a dev/build tool and a runtime (e.g. <code>spin build</code> vs. <code>spin up</code>) which can cause confusion.</p>",
        "id": 439913619,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716328661
    },
    {
        "content": "<p>Sounds like one is calling  <code>_initialize</code> and the other  isn't</p>",
        "id": 439913843,
        "sender_full_name": "Scott Waye",
        "timestamp": 1716328740
    },
    {
        "content": "<p>yeah, wow; I can confirm that <code>spin up</code> runs it just fine</p>",
        "id": 439914349,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716328913
    },
    {
        "content": "<p>or something,  I'm rambling now, its late</p>",
        "id": 439914441,
        "sender_full_name": "Scott Waye",
        "timestamp": 1716328930
    },
    {
        "content": "<p>I _know_ Wasmtime 20 was working at one point; going to try that next</p>",
        "id": 439914507,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716328961
    },
    {
        "content": "<p>There was a new linker in wasmtime 22 I think I saw</p>",
        "id": 439914605,
        "sender_full_name": "Scott Waye",
        "timestamp": 1716329005
    },
    {
        "content": "<p>21 won't run it either</p>",
        "id": 439914753,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716329054
    },
    {
        "content": "<p>interesting, that's we use in CI I think</p>",
        "id": 439914822,
        "sender_full_name": "Scott Waye",
        "timestamp": 1716329086
    },
    {
        "content": "<p>oh crap, now I finally remember the issue.  It wasn't just a table limitation -- the default memory limit for the pooling allocator (which became the default for the <code>serve</code> subcommand in Wasmtime 20) is only 10MB, and the error we've been looking at boils down to an allocation failure.</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/8504#issuecomment-2084255287\">https://github.com/bytecodealliance/wasmtime/issues/8504#issuecomment-2084255287</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/8504#issuecomment-2084255287\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/8aee2ea5c97032fc9175dbfd7a423f881ea441b8/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f303833623963326331633163313366303335326338643965643035393361316462346166363266386234613838353133626535373265613137633130623133372f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f38353034&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/8504#issuecomment-2084255287\" title=\"`-W max-table-elements` has no effect for `wasmtime serve` · Issue #8504 · bytecodealliance/wasmtime\">`-W max-table-elements` has no effect for `wasmtime serve` · Issue #8504 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">While working on resource support for the C# wit-bindgen generator, I created an example app targeting wasi:http/incoming-handler@0.2.0. However, wasmtime serve couldn't run it due to one of the ta...</div></div></div>",
        "id": 439915692,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716329427
    },
    {
        "content": "<p>The only way I got it working was by rebuilding Wasmtime 20 with a 100MB limit instead of a 10MB one</p>",
        "id": 439915760,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716329460
    },
    {
        "content": "<p>That's the key, <span class=\"user-mention\" data-user-id=\"421591\">@Bailey Hayes</span>.  Kind of embarrassing that it took me longer to debug it this time than it did the first time I debugged it <span aria-label=\"man facepalming\" class=\"emoji emoji-1f926-200d-2642\" role=\"img\" title=\"man facepalming\">:man_facepalming:</span></p>",
        "id": 439915986,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716329537
    },
    {
        "content": "<p>and 22 does not have the fix?</p>",
        "id": 439916463,
        "sender_full_name": "Scott Waye",
        "timestamp": 1716329706
    },
    {
        "content": "<p>22 hasn't been released.  21 doesn't change the default, I think, but we should be able to override the default via a CLI flag; looking for that now.</p>",
        "id": 439916638,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716329756
    },
    {
        "content": "<p>Honestly same day delivery (debugging and getting an answer) is a pretty fantastic experience. Thank you for jumping on this</p>",
        "id": 439916794,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716329813
    },
    {
        "content": "<p><code>wasmtime serve -O pooling-allocator=n component.wasm</code> works</p>",
        "id": 439917463,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716330073
    },
    {
        "content": "<p>not sure yet how to leave the pooling allocator enabled but give it a higher limit</p>",
        "id": 439917507,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716330091
    },
    {
        "content": "<p>doesn't look like there's a CLI option yet for <a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.PoolingAllocationConfig.html#method.memory_pages\">https://docs.rs/wasmtime/latest/wasmtime/struct.PoolingAllocationConfig.html#method.memory_pages</a>, unfortunately, so disabling the pooling allocator entirely is the only option for now</p>",
        "id": 439918272,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716330397
    },
    {
        "content": "<p>should be fine for demo purposes</p>",
        "id": 439918311,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716330413
    },
    {
        "content": "<p>IT WORKS!!!</p>",
        "id": 439918891,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1716330613
    },
    {
        "content": "<p>I just managed to build and run everything on Ubuntu 24.04 (arm64), so we're no longer tied to Windows.  I'll work with <span class=\"user-mention\" data-user-id=\"395878\">@Scott Waye</span> to get stuff upstreamed.</p>",
        "id": 440172740,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716408229
    },
    {
        "content": "<p>Note that only the Release build works on Linux at the moment.  The Debug build triggers an assertion failure in <code>free</code> which Scott is working to address.</p>",
        "id": 440172911,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716408289
    },
    {
        "content": "<p>I also removed the EMSDK dependency, BTW.</p>",
        "id": 440175400,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716409142
    },
    {
        "content": "<p>Code is available at <a href=\"https://github.com/dicej/dotnet9-wasi-http-example/tree/linux\">https://github.com/dicej/dotnet9-wasi-http-example/tree/linux</a> and <a href=\"https://github.com/dicej/runtimelab/tree/linux-nativeaot-llvm\">https://github.com/dicej/runtimelab/tree/linux-nativeaot-llvm</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/dicej/dotnet9-wasi-http-example/tree/linux\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/00ac77754994408c57de0886528263cba3531dc3/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313134326666613832623439643362616664383162313332326533373665636434383231306139633831373939393130656232633035326135623261393135312f646963656a2f646f746e6574392d776173692d687474702d6578616d706c65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/dicej/dotnet9-wasi-http-example/tree/linux\" title=\"GitHub - dicej/dotnet9-wasi-http-example at linux\">GitHub - dicej/dotnet9-wasi-http-example at linux</a></div><div class=\"message_embed_description\">Contribute to dicej/dotnet9-wasi-http-example development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/dicej/runtimelab/tree/linux-nativeaot-llvm\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/08c25c0a255a5058553b5bd91abfb51e08b87d79/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f363964656230363864373661346135343466623334333864623264646262356232303130303232663765616462373036666663333535646166396335326338382f646963656a2f72756e74696d656c6162&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/dicej/runtimelab/tree/linux-nativeaot-llvm\" title=\"GitHub - dicej/runtimelab at linux-nativeaot-llvm\">GitHub - dicej/runtimelab at linux-nativeaot-llvm</a></div><div class=\"message_embed_description\">This repo is for experimentation and exploring new ideas that may or may not make it into the main dotnet/runtime repo. - GitHub - dicej/runtimelab at linux-nativeaot-llvm</div></div></div>",
        "id": 440177225,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716409777
    },
    {
        "content": "<p>Would it make sense to start publishing WASI-SDK as a NuGet package so users can just add a package reference to their project instead of installing it separately?</p>",
        "id": 440383291,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716491839
    },
    {
        "content": "<p>Ditto for <code>wit-bindgen</code> and <code>wasm-tools</code>?  I'm thinking of how to minimize friction for targeting WASI using .NET.</p>",
        "id": 440383555,
        "sender_full_name": "Joel Dice",
        "timestamp": 1716491943
    },
    {
        "content": "<p>that would help, and is the intent of the repo we've got staged at <a href=\"https://github.com/bytecodealliance/componentize-dotnet\">https://github.com/bytecodealliance/componentize-dotnet</a>.  We are planning on taking the prototype in <a href=\"https://github.com/SteveSandersonMS/wasm-component-sdk\">https://github.com/SteveSandersonMS/wasm-component-sdk</a> which wraps all that up and makes  it as simple as adding the reference.  I'm currently waiting on Steve to add a license so we can move it and fix it up</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-dotnet\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/d57c1951099b33c147e269040c907a3f69c053d4/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663738656461363538383264656164313064346263323462346235636536383232373062373866363361303534646561346530313732646230366437633735652f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d646f746e6574&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-dotnet\" title=\"bytecodealliance/componentize-dotnet\">bytecodealliance/componentize-dotnet</a></div><div class=\"message_embed_description\">Contribute to bytecodealliance/componentize-dotnet development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/SteveSandersonMS/wasm-component-sdk\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/dc2c7f2863c2d65f6c416adf1ce322073e21c446/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393035633932363838366166653239623434653239613937353936653233383638383637303962343862393036346362323664333433326632626666346366632f537465766553616e646572736f6e4d532f7761736d2d636f6d706f6e656e742d73646b&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/SteveSandersonMS/wasm-component-sdk\" title=\"GitHub - SteveSandersonMS/wasm-component-sdk: Tooling for creating WebAssembly components from C#\">GitHub - SteveSandersonMS/wasm-component-sdk: Tooling for creating WebAssembly components from C#</a></div><div class=\"message_embed_description\">Tooling for creating WebAssembly components from C# - SteveSandersonMS/wasm-component-sdk</div></div></div>",
        "id": 440388259,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1716493865
    },
    {
        "content": "<p>I worked with steve and got a license added, I've moved the code over and started to fill out the BCA requirements: <a href=\"https://github.com/bytecodealliance/componentize-dotnet/pull/1\">https://github.com/bytecodealliance/componentize-dotnet/pull/1</a>,  Next week I will start to fix the project up so that it builds</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-dotnet/pull/1\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/475560dcf15922c0bc6852190c7a5540d8be1b41/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633831646138636234303161623535343235326138333966613561376566383730306366373164303066363764393861306362636165623336316565343536392f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d646f746e65742f70756c6c2f31&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-dotnet/pull/1\" title=\"Add the BCA requirements by jsturtevant · Pull Request #1 · bytecodealliance/componentize-dotnet\">Add the BCA requirements by jsturtevant · Pull Request #1 · bytecodealliance/componentize-dotnet</a></div><div class=\"message_embed_description\">As defined in https://github.com/bytecodealliance/governance/pull/52/files#diff-12a7928875c9aa9397d6ee49345005fc778d716312c874882877f3bd04f9a799</div></div></div>",
        "id": 441828771,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1717199605
    },
    {
        "content": "<p>the Linux and WASI-SDK 22 and no-more-EMSDK PR has been merged: <a href=\"https://github.com/dotnet/runtimelab/pull/2592\">https://github.com/dotnet/runtimelab/pull/2592</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/dotnet/runtimelab/pull/2592\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/1850b28cca20b6845550a8ed1253ea8ac06513a0/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643638643765363261386133656663363636653538303263313434616130626635336161316463643463303835626664306165383836376639653466666336302f646f746e65742f72756e74696d656c61622f70756c6c2f32353932&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/dotnet/runtimelab/pull/2592\" title=\"tweaks to enable NativeAOT-LLVM on Linux with WASI-SDK 22 by dicej · Pull Request #2592 · dotnet/runtimelab\">tweaks to enable NativeAOT-LLVM on Linux with WASI-SDK 22 by dicej · Pull Request #2592 · dotnet/runtimelab</a></div><div class=\"message_embed_description\">Some of these changes are borrowed from #2569.\nNote that I had to manually copy pthread.h from the wasi-sdk-22/share/wasi-sysroot/include/wasm32-wasi-threads directory to the wasi-sdk-22/share/wasi...</div></div></div>",
        "id": 442606313,
        "sender_full_name": "Joel Dice",
        "timestamp": 1717528563
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"625613\">@James Sturtevant</span> let me know if I can help update <code>componentize-dotnet</code> and anything else needed to get us to where we can publish NuGet packages.</p>",
        "id": 442606670,
        "sender_full_name": "Joel Dice",
        "timestamp": 1717528661
    },
    {
        "content": "<p>Some of the folks here are already part of the GH team <a href=\"https://github.com/orgs/bytecodealliance/teams/dotnet-core\">dotnet-core</a> and part of the bytecodealliance nuget org.</p>\n<p>I have not set the repo secret for the publish token. Dotnet-core maintainers should be able to do this too. Let me know if I can help</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/orgs/bytecodealliance/teams/dotnet-core\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/33bfd30bde61bfd938502e4c1fdeaa24486f1e2b/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f6173736574732f6769746875622d6f63746f6361742d3133633836623862333336642e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/orgs/bytecodealliance/teams/dotnet-core\" title=\"Build software better, together\">Build software better, together</a></div><div class=\"message_embed_description\">GitHub is where people build software. More than 100 million people use GitHub to discover, fork, and contribute to over 420 million projects.</div></div></div>",
        "id": 442609784,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1717529539
    },
    {
        "content": "<p>quick update, I've got things updated and working on a final e2e test where the packages aren't updating properly.  </p>\n<p>Do you know when those compiler changes will get released? Will pick them up and remove emsdk as a seperate change once ready.   We will also probably want to remove these lines from wit-bingen: <a href=\"https://github.com/bytecodealliance/wit-bindgen/blob/2645c4f7ddefa0844a91b214267b1674e45d4884/crates/csharp/src/csproj.rs#L114-L119\">https://github.com/bytecodealliance/wit-bindgen/blob/2645c4f7ddefa0844a91b214267b1674e45d4884/crates/csharp/src/csproj.rs#L114-L119</a>. We will still need to compile that file, What should be used?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/blob/2645c4f7ddefa0844a91b214267b1674e45d4884/crates/csharp/src/csproj.rs#L114-L119\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/c490d7697a622a020f1accd47402de8daf1f152d/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393630343263616238306231313736383334653766313364393633326462363732633032646466633534333335393432376165363961303466343532306430642f62797465636f6465616c6c69616e63652f7769742d62696e6467656e&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/blob/2645c4f7ddefa0844a91b214267b1674e45d4884/crates/csharp/src/csproj.rs#L114-L119\" title=\"wit-bindgen/crates/csharp/src/csproj.rs at 2645c4f7ddefa0844a91b214267b1674e45d4884 · bytecodealliance/wit-bindgen\">wit-bindgen/crates/csharp/src/csproj.rs at 2645c4f7ddefa0844a91b214267b1674e45d4884 · bytecodealliance/wit-bindgen</a></div><div class=\"message_embed_description\">A language binding generator for WebAssembly interface types - bytecodealliance/wit-bindgen</div></div></div>",
        "id": 442819092,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1717601428
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"625613\">James Sturtevant</span> <a href=\"#narrow/stream/407028-C.23.2F.2Enet-collaboration/topic/replacing.20emsdk.20with.20wasi-sdk/near/442819092\">said</a>:</p>\n<blockquote>\n<p>Do you know when those compiler changes will get released?</p>\n</blockquote>\n<p>Good question.  I don't know who or what (e.g. CI) publishes NuGet package releases for NativeAOT-LLVM.  Maybe <span class=\"user-mention\" data-user-id=\"395878\">@Scott Waye</span> knows?</p>\n<blockquote>\n<p>We will also probably want to remove these lines from wit-bingen: <a href=\"https://github.com/bytecodealliance/wit-bindgen/blob/2645c4f7ddefa0844a91b214267b1674e45d4884/crates/csharp/src/csproj.rs#L114-L119\">https://github.com/bytecodealliance/wit-bindgen/blob/2645c4f7ddefa0844a91b214267b1674e45d4884/crates/csharp/src/csproj.rs#L114-L119</a>. We will still need to compile that file, What should be used?</p>\n</blockquote>\n<p><code>$WASI_SDK_PATH/bin/clang</code> should work, e.g. <a href=\"https://github.com/WebAssembly/wasi-sdk?tab=readme-ov-file#use\">https://github.com/WebAssembly/wasi-sdk?tab=readme-ov-file#use</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-sdk?tab=readme-ov-file#use\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/2f959756c68995194732b629bc5aee5d42e86b18/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f373162396664343337356437373135313332633561626663626434666435633165646163623963666230303663356432383565663035663739636136643931342f576562417373656d626c792f776173692d73646b&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-sdk?tab=readme-ov-file#use\" title=\"GitHub - WebAssembly/wasi-sdk: WASI-enabled WebAssembly C/C++ toolchain\">GitHub - WebAssembly/wasi-sdk: WASI-enabled WebAssembly C/C++ toolchain</a></div><div class=\"message_embed_description\">WASI-enabled WebAssembly C/C++ toolchain. Contribute to WebAssembly/wasi-sdk development by creating an account on GitHub.</div></div></div>",
        "id": 442852788,
        "sender_full_name": "Joel Dice",
        "timestamp": 1717609242
    },
    {
        "content": "<p>I think they are already publsihed.  When the PR is merged a CI publish job is triggerred</p>",
        "id": 443126891,
        "sender_full_name": "Scott Waye",
        "timestamp": 1717697463
    },
    {
        "content": "<p>The date can be checked from <a href=\"https://dev.azure.com/dnceng/public/_artifacts/feed/dotnet-experimental\">https://dev.azure.com/dnceng/public/_artifacts/feed/dotnet-experimental</a></p>",
        "id": 443126976,
        "sender_full_name": "Scott Waye",
        "timestamp": 1717697497
    },
    {
        "content": "<p>Perfect; I'm about to test that out as part of my upcoming <code>wit-bindgen</code> PR, which I'm developing and testing on Linux.</p>",
        "id": 443127048,
        "sender_full_name": "Joel Dice",
        "timestamp": 1717697521
    },
    {
        "content": "<p><a href=\"/user_uploads/15107/TIQUxvHBTE3EiJYlHIlHAzXw/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/15107/TIQUxvHBTE3EiJYlHIlHAzXw/image.png\" title=\"image.png\"><img src=\"/user_uploads/15107/TIQUxvHBTE3EiJYlHIlHAzXw/image.png\"></a></div>",
        "id": 443127108,
        "sender_full_name": "Scott Waye",
        "timestamp": 1717697531
    },
    {
        "content": "<p>UK date format but is the 4th June</p>",
        "id": 443127259,
        "sender_full_name": "Scott Waye",
        "timestamp": 1717697586
    },
    {
        "content": "<p>Oh, but CI is probably not publishing Linux packages yet, right?</p>",
        "id": 443127291,
        "sender_full_name": "Joel Dice",
        "timestamp": 1717697596
    },
    {
        "content": "<p>Hmm, good question</p>",
        "id": 443127321,
        "sender_full_name": "Scott Waye",
        "timestamp": 1717697609
    },
    {
        "content": "<p>And I'm on Linux/ARM64 to make it doubly obscure :)</p>",
        "id": 443127395,
        "sender_full_name": "Joel Dice",
        "timestamp": 1717697634
    },
    {
        "content": "<p>I guess we first need to get Linux/ARM64 in the pipeline for the PRs, we might be able to get away without running the tests in the short term</p>",
        "id": 443128438,
        "sender_full_name": "Scott Waye",
        "timestamp": 1717697948
    },
    {
        "content": "<p>The other hurdle is that WASI-SDK doesn't publish Linux/ARM64 artifacts yet; I can make a PR to address that, though.</p>",
        "id": 443128639,
        "sender_full_name": "Joel Dice",
        "timestamp": 1717698005
    },
    {
        "content": "<p>Right, that will obviously be needed first.</p>",
        "id": 443128914,
        "sender_full_name": "Scott Waye",
        "timestamp": 1717698094
    },
    {
        "content": "<p>it would be musl libc I suppose ?</p>",
        "id": 443129340,
        "sender_full_name": "Scott Waye",
        "timestamp": 1717698226
    },
    {
        "content": "<p>Good question; I'm on Ubuntu-Asahi, so I was assuming glibc, but musl might be more portable.</p>",
        "id": 443129658,
        "sender_full_name": "Joel Dice",
        "timestamp": 1717698331
    },
    {
        "content": "<p>I think the runtime repo has configs for both so we can try glibc</p>",
        "id": 443130133,
        "sender_full_name": "Scott Waye",
        "timestamp": 1717698477
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"395878\">@Scott Waye</span>  is there linux amd64? I should be able to test this win the componentize-dotnet repo I think</p>",
        "id": 443133342,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1717699130
    },
    {
        "content": "<p>Yeah, we should definitely start with that and move on to ARM once WASI-SDK artifacts are available.</p>",
        "id": 443134505,
        "sender_full_name": "Joel Dice",
        "timestamp": 1717699345
    },
    {
        "content": "<p>We will have to get x64 set up, I will create a PR to see what happens</p>",
        "id": 443135639,
        "sender_full_name": "Scott Waye",
        "timestamp": 1717699684
    },
    {
        "content": "<p>sounds good let me know and can give it a try</p>",
        "id": 443138423,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1717700627
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"509936\">@Joel Dice</span> I don't have it published to nuget but I merged changes that should work. You can download the latest package from <a href=\"https://github.com/bytecodealliance/componentize-dotnet/actions/runs/9406419877\">https://github.com/bytecodealliance/componentize-dotnet/actions/runs/9406419877</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-dotnet/actions/runs/9406419877\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/e8f68f36b0620d2cd09febaa8ece452754035291/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f666532643833663132633134363831663638373162636230323639336635653536373937313135616263356561386431626239343239383430323138643435632f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d646f746e6574&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-dotnet/actions/runs/9406419877\" title=\"Merge pull request #11 from jsturtevant/use-wask-sdk · bytecodealliance/componentize-dotnet@a66f726\">Merge pull request #11 from jsturtevant/use-wask-sdk · bytecodealliance/componentize-dotnet@a66f726</a></div><div class=\"message_embed_description\">Tooling for creating WebAssembly components from C# - Merge pull request #11 from jsturtevant/use-wask-sdk · bytecodealliance/componentize-dotnet@a66f726</div></div></div>",
        "id": 443141338,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1717701465
    },
    {
        "content": "<p>So just looked and I do have access to GH team <a href=\"https://github.com/orgs/bytecodealliance/teams/dotnet-core\">dotnet-core</a> but not nuget.  could some one with access to that help set the repo secret for the publish token?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/orgs/bytecodealliance/teams/dotnet-core\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/33bfd30bde61bfd938502e4c1fdeaa24486f1e2b/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f6173736574732f6769746875622d6f63746f6361742d3133633836623862333336642e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/orgs/bytecodealliance/teams/dotnet-core\" title=\"Build software better, together\">Build software better, together</a></div><div class=\"message_embed_description\">GitHub is where people build software. More than 100 million people use GitHub to discover, fork, and contribute to over 420 million projects.</div></div></div>",
        "id": 443142678,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1717701918
    },
    {
        "content": "<p>Not sure what to look for , \"Deploy Keys\" ?</p>",
        "id": 443143073,
        "sender_full_name": "Scott Waye",
        "timestamp": 1717702046
    },
    {
        "content": "<p>sorry, didn't mean to tag you specifically, there are no secrets in the repo and I can't get any since I don't have access to BCA nuget</p>",
        "id": 443144140,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1717702381
    },
    {
        "content": "<p>What's the plan for referencing the <code>*ILCompiler.LLVM</code> package in a project in a platform-agnostic way?  For example, I currently have a reference to <code>runtime.linux-arm64.Microsoft.DotNet.ILCompiler.LLVM</code> in my project, but that obviously only makes sense on Linux/ARM64.  Or will that just be taken care of behind the scenes when we start using the <code>componentize-dotnet</code> package?</p>",
        "id": 443148718,
        "sender_full_name": "Joel Dice",
        "timestamp": 1717703810
    },
    {
        "content": "<p>I believe componentize-dotnet should handle this but looks like we have it hard coded right now. Opened <a href=\"https://github.com/bytecodealliance/componentize-dotnet/issues/13\">https://github.com/bytecodealliance/componentize-dotnet/issues/13</a> to track</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-dotnet/issues/13\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/bacbbb95b4a2a09cd4e205cf24cdbc60dc860206/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343965323633366132653135316666306533373730383837313330356466616130326132346230363833666366376339373938616561636632363863656334652f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d646f746e65742f6973737565732f3133&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-dotnet/issues/13\" title=\"Support installing correct package reference of ilcompiler for other OS's and arch's · Issue #13 · bytecodealliance/componentize-dotnet\">Support installing correct package reference of ilcompiler for other OS's and arch's · Issue #13 · bytecodealliance/componentize-dotnet</a></div><div class=\"message_embed_description\">right now the project supports installing windows version of il compiler through out the project, for example: componentize-dotnet/src/WasmComponent.Sdk/ImportInDev.proj Line 10 in a66f726 &lt;Package...</div></div></div>",
        "id": 443167394,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1717710601
    },
    {
        "content": "<p>both wit-bindgen and componentize-dotnet no longer use the emsdk! <a href=\"https://github.com/bytecodealliance/wit-bindgen/pull/969\">https://github.com/bytecodealliance/wit-bindgen/pull/969</a> and <a href=\"https://github.com/bytecodealliance/componentize-dotnet/pull/14\">https://github.com/bytecodealliance/componentize-dotnet/pull/14</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/pull/969\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/6774c0f0a8b1a2a5a3472a9667b55beb8cf161e0/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f363638346537393862313535643934376165633739663033613231303566373363376166306361323332346239336665363465396338373362343736643132642f62797465636f6465616c6c69616e63652f7769742d62696e6467656e2f70756c6c2f393639&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/pull/969\" title=\"C#: Remove the emscripten compiler and rely on wasi-sdk by jsturtevant · Pull Request #969 · bytecodealliance/wit-bindgen\">C#: Remove the emscripten compiler and rely on wasi-sdk by jsturtevant · Pull Request #969 · bytecodealliance/wit-bindgen</a></div><div class=\"message_embed_description\">Now that dotnet/runtimelab#2592 has merged and released we no longer need emscripten which reduces requirements for installing.\nAlso update to use correct wasi-sdk url for windows: #967 (comment)\nU...</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-dotnet/pull/14\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/d61ce6c117f001b429026f24414120d1088cba37/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f646562313364323132333533616534313736376131303338616137646561306137653933383865616136353236633138363964396536386630663532376131352f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d646f746e65742f70756c6c2f3134&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-dotnet/pull/14\" title=\"Remove emscripten dependency by jsturtevant · Pull Request #14 · bytecodealliance/componentize-dotnet\">Remove emscripten dependency by jsturtevant · Pull Request #14 · bytecodealliance/componentize-dotnet</a></div><div class=\"message_embed_description\">fixes #6 by using latest naot compiler package which no longer needs emscripten.\nIt also uses correct wasi-sdk url for windows: WebAssembly/wasi-sdk#326</div></div></div>",
        "id": 443184416,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1717719363
    }
]