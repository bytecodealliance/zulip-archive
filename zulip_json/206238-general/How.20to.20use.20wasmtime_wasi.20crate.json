[
    {
        "content": "<p>Hi</p>\n<p>I wanted to make small changes in wasmtime_wasi crate and use in my project<br>\nIn that case I have copy pasted wasmtime_wasi folder from wasmtime repo into my project and use this crate instead of actualwasmtime_wasi crate. But I feel like it's not possible because the cargo.toml has many dependencies which reply on other crates inside wasmtime repo , which are not present as public crates in registry. So my approach is not feasible right?<br>\nI wanted to confirm it</p>",
        "id": 502038853,
        "sender_full_name": "celine santosh",
        "timestamp": 1740574166
    },
    {
        "content": "<p>You might be able to use <a href=\"https://doc.rust-lang.org/cargo/reference/overriding-dependencies.html#the-patch-section\"><code>[patch]</code></a></p>",
        "id": 502049997,
        "sender_full_name": "Lann Martin",
        "timestamp": 1740577422
    },
    {
        "content": "<p>In the cargo.toml file of wasmtime_wasi crate </p>\n<p>[dependencies]<br>\nwasmtime = { workspace = true, features = [\"component-model\", \"async\", \"runtime\", \"std\"] }<br>\nanyhow = { workspace = true }<br>\nwiggle = { workspace = true, optional = true, features = [\"wasmtime\"] }<br>\ntokio = { workspace = true,  features = [\"time\", \"sync\", \"io-std\", \"io-util\", \"rt\", \"rt-multi-thread\", \"net\"] }<br>\nbytes = { workspace = true }<br>\nthiserror = { workspace = true }<br>\ntracing = { workspace = true }<br>\ncap-std = { workspace = true }<br>\ncap-rand = { workspace = true }<br>\ncap-fs-ext = { workspace = true }<br>\ncap-net-ext = { workspace = true }<br>\ncap-time-ext = { workspace = true }<br>\nio-lifetimes = { workspace = true }<br>\nfs-set-times = { workspace = true }<br>\nbitflags = { workspace = true }<br>\nasync-trait = { workspace = true }<br>\nsystem-interface = { workspace = true}<br>\nfutures = { workspace = true }<br>\nurl = { workspace = true }<br>\nonce_cell = { workspace = true }</p>\n<p>[dev-dependencies]<br>\ntokio = { workspace = true, features = [\"time\", \"sync\", \"io-std\", \"io-util\", \"rt\", \"rt-multi-thread\", \"net\", \"macros\", \"fs\"] }<br>\ntest-log = { workspace = true }<br>\ntracing-subscriber = { workspace = true }<br>\ntest-programs-artifacts = { workspace = true }<br>\ntempfile = { workspace = true }<br>\nwasmtime = { workspace = true, features = ['cranelift', 'incremental-cache'] }</p>\n<p>[target.'cfg(unix)'.dependencies]<br>\nrustix = { workspace = true, features = [\"event\", \"fs\", \"net\"] }</p>\n<p>We have many dependencies on other crates as well which I will have to maintain a local copy in my project right. So this maintainenc ofe folders will go on which is not the right approach I guess.<br>\nI think better will be to fork the branch then.<br>\nSO I wanted to confirm this is not the right approach</p>",
        "id": 502057650,
        "sender_full_name": "celine santosh",
        "timestamp": 1740579412
    },
    {
        "content": "<p>Hey celine, the easiest way to probably do this is <em>probably</em> to clone <code>wasmtime</code> locally and point at it with a <code>git</code> dependency.</p>\n<p>If you update all the dependencies in your app that come from that repo <em>also</em> as <code>git</code> dependencies, then you'll be able to work that way/make changes across the various crates</p>\n<p>If you have a <code>wasmtime</code> fork you can make your own branch (or not) and then go from there</p>",
        "id": 502060865,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1740580240
    },
    {
        "content": "<p>Given that <code>wasmtime-wasi</code> is published to <code>crates.io</code>, and that <code>crates.io</code> only accepts crates whose dependencies are <em>also</em> published to <code>crates.io</code>, all its dependencies should be available there.  You'll want to make sure your fork is based on a published <code>release-*</code> tag from the <code>wasmtime</code> repo rather than <code>main</code> since the latter may contain changes which have not yet been published.</p>\n<p>Concretely, you'll want to change all those <code>{ workspace = true }</code> versions to the version numbers in the <code>Cargo.toml</code> at the root of the <code>wasmtime</code> repo you forked from (or else create your own workspace).</p>",
        "id": 502061418,
        "sender_full_name": "Joel Dice",
        "timestamp": 1740580373
    },
    {
        "content": "<p>And yes, the approach Victor suggested is likely the easiest approach.</p>",
        "id": 502061595,
        "sender_full_name": "Joel Dice",
        "timestamp": 1740580421
    },
    {
        "content": "<p>Oh also a small tweak -- you can of course use a regular old <code>path</code> dependencies if you're only doing local development</p>",
        "id": 502063753,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1740580953
    },
    {
        "content": "<p>okay got it <br>\nBut some crates not published in <a href=\"http://crates.io\">crates.io</a> <br>\nFor example test-programs-artifacts, <br>\nI get error <br>\n<strong>error</strong><strong>:</strong> no matching package named <code>test-programs-artifacts</code> found</p>\n<p>location searched: registry <code>crates-io</code></p>",
        "id": 502241927,
        "sender_full_name": "celine santosh",
        "timestamp": 1740650524
    },
    {
        "content": "<p>So <code>test-programs-artifacts</code> are intentionally not published -- it contains programs that are for local testing, so it shouldn't be published to <a href=\"http://crates.io\">crates.io</a> , and no lib in the ecosystem for using wasmtime depends on them</p>",
        "id": 502294205,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1740665580
    }
]