[
    {
        "content": "<p>Hi all,</p>\n<p>I'm trying to experiment with async streams in WASI preview2, specifically using <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/examples/wasip2/main.rs\">this Wasmtime host example</a> as a reference.</p>\n<p>Unfortunately, I’ve run into a few roadblocks:</p>\n<ul>\n<li>\n<p>I can't get the example to compile because <code>wasmtime-wasi</code> on <a href=\"http://crates.io\">crates.io</a> doesn't have the <code>preview2</code> feature anymore.</p>\n</li>\n<li>\n<p>Using the GitHub repo versions results in version conflicts or missing features related to <code>preview2</code>.</p>\n</li>\n<li>\n<p>I also haven’t found any minimal async guest examples in Rust that work with this setup.</p>\n</li>\n</ul>\n<p><strong>Context:</strong><br>\nHere’s the core error I keep encountering during <code>cargo fetch</code>:</p>\n<p><code>error: failed to select a version for `wasmtime-wasi`.   ... required by package `wasip2-demo` versions that meet the requirements `^8.0.0` are: 8.0.1, 8.0.0  the package depends on `wasmtime-wasi` with features: `preview2` but those features do not exist in those versions.</code></p>\n<p>Attempts to use the GitHub repo as a git dependency lead to:</p>\n<p><code>error: failed to select a version for `wasmtime-wasi`.   ... required by package `wasip2-demo` versions that meet the requirements `*` are: 35.0.0  the package depends on `wasmtime-wasi` with features: `preview2` but those features do not exist.</code></p>\n<p>I’m feeling stuck and would appreciate any pointers or links to minimal working examples of:</p>\n<ul>\n<li>\n<p>Async host embedding WASI preview2 (Rust)</p>\n</li>\n<li>\n<p>Async guest WASI preview2 examples (Rust)</p>\n</li>\n<li>\n<p>Guidance on correct <code>Cargo.toml</code> dependency setup to avoid these version/feature conflicts</p>\n</li>\n</ul>\n<p>Thanks very much in advance for any help, and apologies if I’ve missed something obvious!</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/examples/wasip2/main.rs\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/19c3b3bf289cd0313645358150a179f293e4e011/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f613531353161376566333565386431613134303662343561613239663938663263326664336563313266306366623764316434623534396138386566303865392f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/examples/wasip2/main.rs\" title=\"wasmtime/examples/wasip2/main.rs at main · bytecodealliance/wasmtime\">wasmtime/examples/wasip2/main.rs at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 525545824,
        "sender_full_name": "Louis Thibault",
        "timestamp": 1750779335
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"344849\">@Yosh Wuyts</span> do your async examples address this?</p>",
        "id": 525546209,
        "sender_full_name": "Ralph",
        "timestamp": 1750779424
    },
    {
        "content": "<p>I think it should cover the Rust guest side, at least: <a href=\"https://github.com/bytecodealliance/sample-wasi-http-rust\">https://github.com/bytecodealliance/sample-wasi-http-rust</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/sample-wasi-http-rust\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/0f14bb4237ae9cf4a5d38b47f122b7233c041b5f/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f656238613461633339336566643063323465366338343064393937343461653139366462653931626161623561383032313562326561376336333762363733642f62797465636f6465616c6c69616e63652f73616d706c652d776173692d687474702d72757374&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/sample-wasi-http-rust\" title=\"GitHub - bytecodealliance/sample-wasi-http-rust: An example `wasi:http` server component written in Rust\">GitHub - bytecodealliance/sample-wasi-http-rust: An example `wasi:http` server component written in Rust</a></div><div class=\"message_embed_description\">An example `wasi:http` server component written in Rust - bytecodealliance/sample-wasi-http-rust</div></div></div>",
        "id": 525552668,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1750781456
    },
    {
        "content": "<p>Thank you both so much!</p>",
        "id": 525553898,
        "sender_full_name": "Louis Thibault",
        "timestamp": 1750781881
    },
    {
        "content": "<p>async is only implemented for rust currently, is that correct?</p>",
        "id": 526072709,
        "sender_full_name": "Matt Parker",
        "timestamp": 1751027035
    },
    {
        "content": "<p>JS and C are definitely supported as well right now</p>",
        "id": 526073356,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1751027248
    },
    {
        "content": "<p>For WASIp2 that is</p>",
        "id": 526073541,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1751027323
    },
    {
        "content": "<p>For WASIp3 it is only Rust and C right now</p>",
        "id": 526073797,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1751027417
    },
    {
        "content": "<p>I forget what the state of support is for other languages on p2. I believe tiny Go, C#, and Python may all have support too - but I'm not actually sure. Someone else might know</p>",
        "id": 526074322,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1751027629
    },
    {
        "content": "<p>Here is an async JS sample: <a href=\"https://github.com/bytecodealliance/sample-wasi-http-js\">https://github.com/bytecodealliance/sample-wasi-http-js</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/sample-wasi-http-js\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/39d20e1ccf7d31efa99bc3543f58009cbc800dbc/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f356633666362373966393765646661363433353465306138656466623365333931396339386438343362373863303234656236616430643065323539383239322f62797465636f6465616c6c69616e63652f73616d706c652d776173692d687474702d6a73&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/sample-wasi-http-js\" title=\"GitHub - bytecodealliance/sample-wasi-http-js: An example `wasi:http` server component written in JavaScript\">GitHub - bytecodealliance/sample-wasi-http-js: An example `wasi:http` server component written in JavaScript</a></div><div class=\"message_embed_description\">An example `wasi:http` server component written in JavaScript - bytecodealliance/sample-wasi-http-js</div></div></div>",
        "id": 526074794,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1751027836
    },
    {
        "content": "<p>Note also that there are many examples in the Jco repository: </p>\n<p><a href=\"https://github.com/bytecodealliance/jco/tree/main/examples/components\">https://github.com/bytecodealliance/jco/tree/main/examples/components</a></p>\n<p>\"async\" is supported on the <em>host</em> side (via JSPI), thanks to hard work of contributors like Calvin -- but right now work on P3 support for Jco is underway</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/tree/main/examples/components\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/6604e0cfe7f51c6e44d711588ecb4f22e83ad25d/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f363933626334643931326631353966306465386262363736326639353535646632333030326139363234663332323330313637366639343335333766383733662f62797465636f6465616c6c69616e63652f6a636f&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/tree/main/examples/components\" title=\"jco/examples/components at main · bytecodealliance/jco\">jco/examples/components at main · bytecodealliance/jco</a></div><div class=\"message_embed_description\">JavaScript toolchain for working with WebAssembly Components - bytecodealliance/jco</div></div></div>",
        "id": 526078979,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1751029370
    },
    {
        "content": "<p>So right now, all examples target preview2 and it's envisioning of I/O (<code>wasi:io</code>, etc) -- not the new world (<code>stream&lt;t&gt;</code>s, etc)</p>",
        "id": 526079078,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1751029398
    },
    {
        "content": "<p>is it that wit-bindgen doesn't support anything other than rust yet then? I tried using async in C# and it blew up with PlatformNotSupportedException. Perhaps thats a dotnet runtime issue? I'll be honest, wasm, wasi, WIT, WAT, WASI 0.2, 0.3 etc is a lot to keep track of, so apologies if I've got it completely wrong haha</p>",
        "id": 526080534,
        "sender_full_name": "Matt Parker",
        "timestamp": 1751029881
    },
    {
        "content": "<p>Yup, that's the case -- right now async on the <em>guest</em> side has the best support in Rust -- it's evolved hand-in-hand with the p3-prototyping repo</p>",
        "id": 526080770,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1751029964
    },
    {
        "content": "<p>But if you're new to Wasm + WASI + WIT, WAT, I'd suggest tarting with preview2 and getting some stuff going! :)</p>",
        "id": 526080837,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1751029987
    },
    {
        "content": "<p>Have you seen <a href=\"https://component-model.bytecodealliance.org/\">https://component-model.bytecodealliance.org/</a> ? Hopefully it's a helpful resource for you -- but you can build stuff on P2 right now, and it is possible to do asynchronous operations (<code>wasi:io</code> et all), it's just a bit more tedious than P3 -- P3 is going to be a huge improvement on many axes</p>",
        "id": 526080967,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1751030042
    },
    {
        "content": "<p>Some talks on this that are a great listen and cover a lot of P2, P3 and motivations:</p>\n<p><a href=\"https://www.youtube.com/watch?v=mkkYNw8gTQg&amp;list=PLP3xGl7Eb-4OtFH1tcQm6u7_LRED7-3rg&amp;index=31\">YouTube -  - YouTube</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"mkkYNw8gTQg\" href=\"https://www.youtube.com/watch?v=mkkYNw8gTQg&amp;list=PLP3xGl7Eb-4OtFH1tcQm6u7_LRED7-3rg&amp;index=31\"><img src=\"https://uploads.zulipusercontent.net/e6ee4d1479624476f18736ee964b85b43e01a14a/68747470733a2f2f692e7974696d672e636f6d2f76692f6d6b6b594e7738675451672f6d7164656661756c742e6a7067\"></a></div><p><a href=\"https://www.youtube.com/watch?v=tAACYA1Mwv4&amp;t=9s&amp;pp=ygUPbHVrZSBjb21wb25lbnRz\">YouTube -  - YouTube</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"tAACYA1Mwv4\" href=\"https://www.youtube.com/watch?v=tAACYA1Mwv4&amp;t=9s&amp;pp=ygUPbHVrZSBjb21wb25lbnRz\"><img src=\"https://uploads.zulipusercontent.net/7e6c3cbc0a45a514ca05219ff8c2d633848b046c/68747470733a2f2f692e7974696d672e636f6d2f76692f744141435941314d7776342f6d7164656661756c742e6a7067\"></a></div><p><a href=\"https://www.youtube.com/watch?v=phodPLY8zNE\">YouTube -  - YouTube</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"phodPLY8zNE\" href=\"https://www.youtube.com/watch?v=phodPLY8zNE\"><img src=\"https://uploads.zulipusercontent.net/956c23b996931107795641d59426938b7a72a77b/68747470733a2f2f692e7974696d672e636f6d2f76692f70686f64504c59387a4e452f6d7164656661756c742e6a7067\"></a></div>",
        "id": 526081200,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1751030121
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598440\">Victor Adossi</span> <a href=\"#narrow/channel/206238-general/topic/minimal.20async.20streams.20example.20w.2F.20WASI.20preview2.20.2B.20Rust.20guest.3F/near/526080837\">said</a>:</p>\n<blockquote>\n<p>But if you're new to Wasm + WASI + WIT, WAT, I'd suggest tarting with preview2 and getting some stuff going! :)</p>\n</blockquote>\n<p>Yeah I've got a guest component and host working, and wac'ing them together (another three letter acronym <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>) and running! Its pretty cool<br>\n<a href=\"/user_uploads/15107/fNcAXSDPXDVt3haBM6qMO_hR/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/15107/fNcAXSDPXDVt3haBM6qMO_hR/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"336x329\" src=\"/user_uploads/thumbnail/15107/fNcAXSDPXDVt3haBM6qMO_hR/image.png/840x560.webp\"></a></div>",
        "id": 526081380,
        "sender_full_name": "Matt Parker",
        "timestamp": 1751030181
    },
    {
        "content": "<p>All the work is in the open and there is a ton of work going on right now being lead by Alex, Joel and others.</p>",
        "id": 526081479,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1751030215
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598440\">Victor Adossi</span> <a href=\"#narrow/channel/206238-general/topic/minimal.20async.20streams.20example.20w.2F.20WASI.20preview2.20.2B.20Rust.20guest.3F/near/526080967\">said</a>:</p>\n<blockquote>\n<p>Have you seen <a href=\"https://component-model.bytecodealliance.org/\">https://component-model.bytecodealliance.org/</a> ? Hopefully it's a helpful resource for you -- but you can build stuff on P2 right now, and it is possible to do asynchronous operations (<code>wasi:io</code> et all), it's just a bit more tedious than P3 -- P3 is going to be a huge improvement on many axes</p>\n</blockquote>\n<p>I think I've ended up there, yeah :)</p>",
        "id": 526081591,
        "sender_full_name": "Matt Parker",
        "timestamp": 1751030255
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598440\">Victor Adossi</span> <a href=\"#narrow/channel/206238-general/topic/minimal.20async.20streams.20example.20w.2F.20WASI.20preview2.20.2B.20Rust.20guest.3F/near/526081200\">said</a>:</p>\n<blockquote>\n<p>Some talks on this that are a great listen and cover a lot of P2, P3 and motivations:</p>\n<p><a href=\"https://www.youtube.com/watch?v=mkkYNw8gTQg&amp;list=PLP3xGl7Eb-4OtFH1tcQm6u7_LRED7-3rg&amp;index=31\">https://www.youtube.com/watch?v=mkkYNw8gTQg&amp;list=PLP3xGl7Eb-4OtFH1tcQm6u7_LRED7-3rg&amp;index=31</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=tAACYA1Mwv4&amp;t=9s&amp;pp=ygUPbHVrZSBjb21wb25lbnRz\">https://www.youtube.com/watch?v=tAACYA1Mwv4&amp;t=9s&amp;pp=ygUPbHVrZSBjb21wb25lbnRz</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=phodPLY8zNE\">https://www.youtube.com/watch?v=phodPLY8zNE</a></p>\n</blockquote>\n<p>Thanks for these!</p>",
        "id": 526081627,
        "sender_full_name": "Matt Parker",
        "timestamp": 1751030265
    },
    {
        "content": "<p>Awesome! Looks like you're already making great progress -- wac is a somewhat more \"advanced\" feature than it <em>should</em> be, but it's another hugely underrated bit of the component model -- composability being a huge feature</p>",
        "id": 526081639,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1751030270
    },
    {
        "content": "<p>The last few days I was curious about what the future of browsers could look like - imagine the browser wasm runtime exported a world with an interface for the DOM Apis, and components could use that to update the dom</p>",
        "id": 526081977,
        "sender_full_name": "Matt Parker",
        "timestamp": 1751030375
    },
    {
        "content": "<p>How cool would that be - no JS! <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 526082001,
        "sender_full_name": "Matt Parker",
        "timestamp": 1751030384
    },
    {
        "content": "<p>I then spent a longgggg time trying to find if any browser exposes a c api for the DOM, with very little results haha</p>",
        "id": 526082270,
        "sender_full_name": "Matt Parker",
        "timestamp": 1751030482
    },
    {
        "content": "<p>Oh you might like the excellent work of Mendy and co: </p>\n<p><a href=\"https://github.com/wasi-gfx/webidl2wit\">https://github.com/wasi-gfx/webidl2wit</a></p>\n<p>Example in Jco:</p>\n<p><a href=\"https://github.com/bytecodealliance/jco/tree/main/examples/components/webidl-book-library\">https://github.com/bytecodealliance/jco/tree/main/examples/components/webidl-book-library</a><br>\n<a href=\"https://github.com/bytecodealliance/jco/tree/229a8408538cee77aefdfcf834cb8e32bd2d2ebc/packages/jco/test/fixtures/idl\">https://github.com/bytecodealliance/jco/tree/229a8408538cee77aefdfcf834cb8e32bd2d2ebc/packages/jco/test/fixtures/idl</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/wasi-gfx/webidl2wit\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/a0090ba8b715bbb27660505218591a028cd07f00/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343732343166313763376433653261626361326665356661313734353665653239326137313832633031656234383632393563346237303631326336616366322f776173692d6766782f77656269646c32776974&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/wasi-gfx/webidl2wit\" title=\"GitHub - wasi-gfx/webidl2wit\">GitHub - wasi-gfx/webidl2wit</a></div><div class=\"message_embed_description\">Contribute to wasi-gfx/webidl2wit development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/tree/main/examples/components/webidl-book-library\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/6604e0cfe7f51c6e44d711588ecb4f22e83ad25d/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f363933626334643931326631353966306465386262363736326639353535646632333030326139363234663332323330313637366639343335333766383733662f62797465636f6465616c6c69616e63652f6a636f&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/tree/main/examples/components/webidl-book-library\" title=\"jco/examples/components/webidl-book-library at main · bytecodealliance/jco\">jco/examples/components/webidl-book-library at main · bytecodealliance/jco</a></div><div class=\"message_embed_description\">JavaScript toolchain for working with WebAssembly Components - bytecodealliance/jco</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/tree/229a8408538cee77aefdfcf834cb8e32bd2d2ebc/packages/jco/test/fixtures/idl\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/6604e0cfe7f51c6e44d711588ecb4f22e83ad25d/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f363933626334643931326631353966306465386262363736326639353535646632333030326139363234663332323330313637366639343335333766383733662f62797465636f6465616c6c69616e63652f6a636f&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/tree/229a8408538cee77aefdfcf834cb8e32bd2d2ebc/packages/jco/test/fixtures/idl\" title=\"jco/packages/jco/test/fixtures/idl at 229a8408538cee77aefdfcf834cb8e32bd2d2ebc · bytecodealliance/jco\">jco/packages/jco/test/fixtures/idl at 229a8408538cee77aefdfcf834cb8e32bd2d2ebc · bytecodealliance/jco</a></div><div class=\"message_embed_description\">JavaScript toolchain for working with WebAssembly Components - bytecodealliance/jco</div></div></div>",
        "id": 526086570,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1751031750
    },
    {
        "content": "<p>Oh very cool! :)</p>",
        "id": 526089324,
        "sender_full_name": "Matt Parker",
        "timestamp": 1751032534
    }
]