[
    {
        "content": "<p>Hi! What's the best way to share types between guest and host that have additional impls? Like for example I want to share enum and implement Display on the enum, I can do that on the guest side by generating bindings with wit-bindgen and adding impls on that, but I can't add the bindings to <code>with:</code> for wasmtine <code>bindgen!</code> macro since it doesn't generate host bindings, which makes sense but it's just enums. The best way I can think of is proc macros to generate new impls for generated types in both host and guest but it doesn't seem very nice.</p>",
        "id": 500999831,
        "sender_full_name": "Marek Vavrusa",
        "timestamp": 1740099554
    },
    {
        "content": "<p>you might be able to hack this up with a shared file that's <code>include!</code>'d on one half and used as a normal module on the other, but beyond that I'm not coming up with anything myself</p>",
        "id": 501000243,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1740099819
    },
    {
        "content": "<p>ah yes that would work as well, I guess might be more readable than proc macros, thanks!</p>",
        "id": 501000659,
        "sender_full_name": "Marek Vavrusa",
        "timestamp": 1740100063
    }
]