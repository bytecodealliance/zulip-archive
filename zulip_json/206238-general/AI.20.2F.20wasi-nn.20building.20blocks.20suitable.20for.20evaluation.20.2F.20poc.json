[
    {
        "content": "<p>HI. I'm looking for information about wasi-nn compliant building blocks and \"working\" configurations to implement some proof of concepts on ios wasmtime runtime ( wasmex )</p>",
        "id": 506874274,
        "sender_full_name": "Adrian Ibanez",
        "timestamp": 1742442733
    },
    {
        "content": "<p>For anyone interested I started working on an \"experimental\" integration of edge impulse models <a href=\"https://forum.edgeimpulse.com/t/wasm-standalone-inference-targeting-wasmtime-runtime/13574/4\">https://forum.edgeimpulse.com/t/wasm-standalone-inference-targeting-wasmtime-runtime/13574/4</a></p>\n<p>Far from something useful but a starting point. To be honest I'm still trying to understand what the options are to interface with wasm modules. Haven't understood yet what the best options are to exchange data. Is sharing stdin / stdout between host and wasm still a thing? Or are there better options. eg. wasmex supports components but I'm still figuring out how the apis are supposed to be used.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://forum.edgeimpulse.com/t/wasm-standalone-inference-targeting-wasmtime-runtime/13574/4\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/acfb85dd3e5e573c66554235850a0afc0fe71b46/68747470733a2f2f666f72756d2e65646765696d70756c73652e636f6d2f75706c6f6164732f64656661756c742f6f726967696e616c2f31582f613838366433663031376239646264643139633064666333386236663061663032643133616339622e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://forum.edgeimpulse.com/t/wasm-standalone-inference-targeting-wasmtime-runtime/13574/4\" title=\"Wasm standalone inference targeting wasmtime runtime\">Wasm standalone inference targeting wasmtime runtime</a></div><div class=\"message_embed_description\">Have you considered providing a rust version of the model deployments? The ecosystem regarding wasm support seems quite good as far as I understand.  And I’m specifically asking because I already use rust resp. rustler to interface with elixir and provide multiplatform support for things like BLE sensors.  Having rust code would be quite interesting in all those applications. eg. as wasm and integrated in elixir or as native library on different platforms</div></div></div>",
        "id": 506874732,
        "sender_full_name": "Adrian Ibanez",
        "timestamp": 1742443070
    },
    {
        "content": "<p>Also is there something like a repository with information about prebuilt wasi components suitable for tests? Not particularly related to my question of wasi-nn</p>",
        "id": 506964474,
        "sender_full_name": "Adrian Ibanez",
        "timestamp": 1742475070
    },
    {
        "content": "<p>With wasi components I meant any wasi compliant projects that could be tested / shown as part of a poc. Not pariticularly wasi \"components\" api ... but I'm definitely interested in that api as wasmex exposes it in elixir</p>",
        "id": 507010363,
        "sender_full_name": "Adrian Ibanez",
        "timestamp": 1742485605
    },
    {
        "content": "<p>I'm not really clear if this is something you'd wanna look at, but <a href=\"https://github.com/microsoft/aici\">https://github.com/microsoft/aici</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/microsoft/aici\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/25baa0ca6f453c4a83768496df89b179ec9f9fe2/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643333363362376630323038396164343934613565376532383736353565326164656430333332663730623735313665653438643631623436396433376431332f6d6963726f736f66742f61696369&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/microsoft/aici\" title=\"GitHub - microsoft/aici: AICI: Prompts as (Wasm) Programs\">GitHub - microsoft/aici: AICI: Prompts as (Wasm) Programs</a></div><div class=\"message_embed_description\">AICI: Prompts as (Wasm) Programs. Contribute to microsoft/aici development by creating an account on GitHub.</div></div></div>",
        "id": 507045458,
        "sender_full_name": "Ralph",
        "timestamp": 1742494501
    },
    {
        "content": "<p>it might NOT be what you're after, but it works nicely for p1 execution; there's a PR for components, but it's not yet merged.</p>",
        "id": 507045532,
        "sender_full_name": "Ralph",
        "timestamp": 1742494528
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"268586\">@Ralph</span> sounds mighty ... but complex. Is this something that has been running on wasmtime before? I'm basically looking for the MVP regarding wasi-nn integration or wasmtime compatible wasm packages in general. Something to validate that it can run successfully on the iOS / android platforms I'm targeting. There are quite a few moving pieces so I wouldn't mind keeping the complexity in check when it comes to wasmtime / wasm; specially as I'm quite a greenhorn when it comes to wasm</p>",
        "id": 507050514,
        "sender_full_name": "Adrian Ibanez",
        "timestamp": 1742496152
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"268586\">@Ralph</span> p1 execution = wasi preview1?</p>",
        "id": 507050892,
        "sender_full_name": "Adrian Ibanez",
        "timestamp": 1742496284
    },
    {
        "content": "<p>I posted this example elsewhere but I'll drop it here as well for future readers who may be interested: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/2b9da02f/crates/wasi-nn/examples/classification-example/README.md\">https://github.com/bytecodealliance/wasmtime/blob/2b9da02f/crates/wasi-nn/examples/classification-example/README.md</a>. That quite minimal example should give you an idea of the pieces required for running wasi-nn on Wasmtime. There's much more to learn after that, but I'm afraid the documentation is not great for someone completely new to the project (but I would love help improving that!).</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/2b9da02f/crates/wasi-nn/examples/classification-example/README.md\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/56bf63a14db060fa509399ba867be2cfae55b488/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f363661316263623831336563323030613861353165323135636165343363653039633232366132356431663362646130373965373262373738383732623838622f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/2b9da02f/crates/wasi-nn/examples/classification-example/README.md\" title=\"wasmtime/crates/wasi-nn/examples/classification-example/README.md at 2b9da02f09d81dbcfb7cc615f67ffdf206394c19 · bytecodealliance/wasmtime\">wasmtime/crates/wasi-nn/examples/classification-example/README.md at 2b9da02f09d81dbcfb7cc615f67ffdf206394c19 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 507060342,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1742499452
    }
]