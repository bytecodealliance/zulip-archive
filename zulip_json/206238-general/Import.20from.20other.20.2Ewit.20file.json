[
    {
        "content": "<p>Hey,</p>\n<p>If I have two <code>.wit</code> files, how do I import types/interfaces/records from one <code>.wit</code> file into the other? Say one is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// logger.wit</span>\n<span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">techaro</span><span class=\"p\">:</span><span class=\"nc\">logger</span><span class=\"p\">;</span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">sink</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">debug</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">info</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">warn</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">logger</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">sink</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>How do I use the <code>techaro:logger/sink</code> interface in another .wit file?</p>",
        "id": 518977716,
        "sender_full_name": "Xe Iaso",
        "timestamp": 1747618951
    },
    {
        "content": "<p>You might want to read over <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md#wit-packages-and-use\">this</a> and <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md#filesystem-structure\">this</a> to help answer this?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md#wit-packages-and-use\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/147b95f128007b16692321cbcd60d126a68c13d5/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663130363962636262663661326431623566353561306533633330316634346130383138366637623562633930363862386337613262316465396431613364662f576562417373656d626c792f636f6d706f6e656e742d6d6f64656c&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md#wit-packages-and-use\" title=\"component-model/design/mvp/WIT.md at main 路 WebAssembly/component-model\">component-model/design/mvp/WIT.md at main 路 WebAssembly/component-model</a></div><div class=\"message_embed_description\">Repository for design and specification of the Component Model - WebAssembly/component-model</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md#filesystem-structure\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/147b95f128007b16692321cbcd60d126a68c13d5/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663130363962636262663661326431623566353561306533633330316634346130383138366637623562633930363862386337613262316465396431613364662f576562417373656d626c792f636f6d706f6e656e742d6d6f64656c&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md#filesystem-structure\" title=\"component-model/design/mvp/WIT.md at main 路 WebAssembly/component-model\">component-model/design/mvp/WIT.md at main 路 WebAssembly/component-model</a></div><div class=\"message_embed_description\">Repository for design and specification of the Component Model - WebAssembly/component-model</div></div></div>",
        "id": 518989993,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1747627974
    },
    {
        "content": "<p>Also, note that you likely want to get the WIT that you're trying to share out into a properly \"shared\" place. </p>\n<p>You don't have to go as far as actually publishing it, but you may benefit from separating the interface and the <code>world</code> that represents the usage of that interface</p>",
        "id": 519049266,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1747646854
    },
    {
        "content": "<p>As for examples, I wish I could point to an example repo that shows this simply (the <a href=\"https://component-model.bytecodealliance.org/creating-and-consuming/distributing.html\">component model book</a> is close, but we need to make changes to the WIT fetching instructions!)</p>\n<p>But for now, the absolute simplest no-advanced-tooling way might be to literally copy the relevant WIT files into <code>wit/deps</code> for two projects locally. That should help build confidence as to what the tooling is expected to do, and then you can pull in <code>wkg</code> and stuff.</p>\n<p>Would appreciate if you filed an issue to <a href=\"https://github.com/bytecodealliance/component-docs\"><code>component-docs</code></a> (the more you could include about what exactly was confusing, what the docs <em>should</em> have said/demonstrated to help you better, the better!)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/component-docs\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/aa0e139d117b246bb2938776372b5f3c3cb00ee4/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f656364623233323032656438393133613938636337646563666236626533396165376666346131393937343638333236643132386161653266356561323461362f62797465636f6465616c6c69616e63652f636f6d706f6e656e742d646f6373&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/component-docs\" title=\"GitHub - bytecodealliance/component-docs: Documentation around creating and using WebAssembly Components\">GitHub - bytecodealliance/component-docs: Documentation around creating and using WebAssembly Components</a></div><div class=\"message_embed_description\">Documentation around creating and using WebAssembly Components - bytecodealliance/component-docs</div></div></div>",
        "id": 519051863,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1747647451
    },
    {
        "content": "<p>I've put together a small repo that should help explain this (but contains no integration code):</p>\n<p><a href=\"https://github.com/vados-cosmonic/example-simple-wit-reuse\">https://github.com/vados-cosmonic/example-simple-wit-reuse</a></p>\n<p>Figure this might be better than giving <code>tree</code> output.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/vados-cosmonic/example-simple-wit-reuse\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/a88d89db7e115ba161cae7175a767378726237e5/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343634383839333235616439333435336437366130616634386163663738623033613038643465616335626266646333383832653534373131663465653234392f7661646f732d636f736d6f6e69632f6578616d706c652d73696d706c652d7769742d7265757365&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/vados-cosmonic/example-simple-wit-reuse\" title=\"GitHub - vados-cosmonic/example-simple-wit-reuse: Simplest possible WIT reuse example\">GitHub - vados-cosmonic/example-simple-wit-reuse: Simplest possible WIT reuse example</a></div><div class=\"message_embed_description\">Simplest possible WIT reuse example. Contribute to vados-cosmonic/example-simple-wit-reuse development by creating an account on GitHub.</div></div></div>",
        "id": 519055207,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1747648267
    },
    {
        "content": "<p>(all of this is useful after reading the already posted links of course!)</p>",
        "id": 519055798,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1747648419
    }
]