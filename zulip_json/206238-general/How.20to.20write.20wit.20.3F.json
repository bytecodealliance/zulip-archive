[
    {
        "content": "<p>Hi</p>\n<p>I am trying to create a component using cargo component.  In my <a href=\"http://lib.rs\">lib.rs</a> I have a function which I export with signature<br>\n<code>fn compute_result(&amp;mut self, out: &amp;mut [u8])</code></p>\n<p>I am confused how to write this in wit. Self comes in Resource I think . I don't have resources. <br>\nAlso how to write the second parameter which is array.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"http://lib.rs\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/a025d1dfcfcdb4f622e82e9f608412cba3162ba3/68747470733a2f2f6c69622e72732f6372617465732d6c6f676f2e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"http://lib.rs\" title=\"Lib.rs — home for Rust crates // Lib.rs\">Lib.rs — home for Rust crates // Lib.rs</a></div><div class=\"message_embed_description\">List of Rust libraries and applications. An unofficial experimental opinionated alternative to crates.io</div></div></div>",
        "id": 508276681,
        "sender_full_name": "celine santosh",
        "timestamp": 1742995943
    },
    {
        "content": "<p>Here is an example I'm working on: <br>\n<a href=\"https://github.com/cdmurph32/c2pa-component/blob/v24/wit/cai.wit\">https://github.com/cdmurph32/c2pa-component/blob/v24/wit/cai.wit</a></p>\n<p>It has a couple of resources. The self is implied.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/cdmurph32/c2pa-component/blob/v24/wit/cai.wit\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/4543fe0427824a7bf32d3ea2fa9777a03a847965/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353566356536393730336532366139366139306438666636346130303431653063306563333639346136353137653433626130633234333664643331333738612f63646d7572706833322f633270612d636f6d706f6e656e74&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/cdmurph32/c2pa-component/blob/v24/wit/cai.wit\" title=\"c2pa-component/wit/cai.wit at v24 · cdmurph32/c2pa-component\">c2pa-component/wit/cai.wit at v24 · cdmurph32/c2pa-component</a></div><div class=\"message_embed_description\">WASI P2 component for C2PA. Contribute to cdmurph32/c2pa-component development by creating an account on GitHub.</div></div></div>",
        "id": 508348724,
        "sender_full_name": "Colin D Murphy",
        "timestamp": 1743012743
    },
    {
        "content": "<p>Thanks.<br>\nWhat about the second parameter which is an array.<br>\nI am not able to write the corresponding wit for it. I can only see list&lt;u8&gt; which is vec in rust.</p>",
        "id": 508353764,
        "sender_full_name": "celine santosh",
        "timestamp": 1743014517
    },
    {
        "content": "<p>That might be best implemented as an output stream depending on how big you intend it to be. Is there a reason it needs to be a pointer to an array?</p>",
        "id": 508522975,
        "sender_full_name": "Colin D Murphy",
        "timestamp": 1743083266
    },
    {
        "content": "<p>In your implementation on either side of the wit interface you can have an array.</p>",
        "id": 508523884,
        "sender_full_name": "Colin D Murphy",
        "timestamp": 1743083496
    },
    {
        "content": "<p>This is my implementation in <a href=\"http://lib.rs\">lib.rs</a></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">result</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">hash</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">hasher</span><span class=\"p\">.</span><span class=\"n\">finalize_reset</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"n\">copy_slices</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">hash</span><span class=\"p\">.</span><span class=\"n\">as_slice</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"p\">)</span>\n\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>It's a function in snow framework. I want to override this function, so I am trying to implement the same thing with same function signature.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"http://lib.rs\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/a025d1dfcfcdb4f622e82e9f608412cba3162ba3/68747470733a2f2f6c69622e72732f6372617465732d6c6f676f2e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"http://lib.rs\" title=\"Lib.rs — home for Rust crates // Lib.rs\">Lib.rs — home for Rust crates // Lib.rs</a></div><div class=\"message_embed_description\">List of Rust libraries and applications. An unofficial experimental opinionated alternative to crates.io</div></div></div>",
        "id": 508540486,
        "sender_full_name": "celine santosh",
        "timestamp": 1743087214
    },
    {
        "content": "<p>So I was stuck at a point where I am writing the wit for it, because of second parameter. It's slice , sorry I thought it was an array.</p>",
        "id": 508540720,
        "sender_full_name": "celine santosh",
        "timestamp": 1743087263
    },
    {
        "content": "<p>The component model is designed around \"shared-nothing\" composition, meaning components do not have access to each others' memory.  Consequently, WIT interfaces do not support passing pointers, and a slice is basically just a fat pointer.  The callee couldn't do anything with such a pointer, since it's relative to a memory it doesn't have access to.</p>\n<p>If you need to return a list of bytes to the caller, you'll want to model that as <code>%result: func() -&gt; list&lt;u8&gt;</code> (which translates to <code>fn result(&amp;self) -&gt; Vec&lt;u8&gt;;</code> in Rust).  The host will take care of copying the contents of that <code>list&lt;u8&gt;</code> from the callee's memory to the caller's memory.</p>",
        "id": 508553005,
        "sender_full_name": "Joel Dice",
        "timestamp": 1743089998
    },
    {
        "content": "<p>Thanks<br>\nSo even if I compose both wasm components together with wac plug , both components will have isolated memory right?</p>",
        "id": 509036051,
        "sender_full_name": "celine santosh",
        "timestamp": 1743348029
    },
    {
        "content": "<p>Yes, correct.  You also have the option of \"shared-everything\" module linking using <code>wasm-tools component link</code> if you prefer.  <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/Linking.md\">This document</a> describes the various way static libraries, modules, and components can be composed.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/Linking.md\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/a37214201a030d520af31d2402a8532660b1b7a4/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343763653538383165333834363333313738643430323431313366313266353431666330393862613937383039656436363262303536366437346533636238632f576562417373656d626c792f636f6d706f6e656e742d6d6f64656c&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/Linking.md\" title=\"component-model/design/mvp/Linking.md at main · WebAssembly/component-model\">component-model/design/mvp/Linking.md at main · WebAssembly/component-model</a></div><div class=\"message_embed_description\">Repository for design and specification of the Component Model - WebAssembly/component-model</div></div></div>",
        "id": 509221301,
        "sender_full_name": "Joel Dice",
        "timestamp": 1743432103
    }
]