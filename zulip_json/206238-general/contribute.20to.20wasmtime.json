[
    {
        "content": "<p>Hi. I'd like to do sth. around wasmtime (or another project in the ecosystem), but don't know where to start. (I already read the <a href=\"https://docs.wasmtime.dev/contributing.html\">contributing guide</a>, but didn't find sth. concrete to do.)<br>\nWas hoping to get some ideas. Thanks!</p>\n<p>My main goal is to get better at Rust and to learn about components/WASI.<br>\nI'm fairly new to Rust, but know a bit about Wasm (wrote a compiler backend targeting Wasm 1.0).</p>",
        "id": 531712605,
        "sender_full_name": "Wolfgang Meier",
        "timestamp": 1753829748
    },
    {
        "content": "<p>Hey Wolfgang, there are a <em>ton</em> of places you could start based on what you're interested in:</p>\n<p>If you want to grok <code>wasmtime</code> as your way in:<br>\n<a href=\"https://docs.wasmtime.dev\">https://docs.wasmtime.dev</a><br>\n<a href=\"https://github.com/bytecodealliance/wasmtime\">https://github.com/bytecodealliance/wasmtime</a></p>\n<p>If you want to start grokking the component model + WIT -- i.e. the defining features of \"modern\" WebAssembly (I'd recommend this):<br>\n<a href=\"https://component-model.bytecodealliance.org\">https://component-model.bytecodealliance.org</a> <br>\n<a href=\"https://github.com/WebAssembly/component-model\">https://github.com/WebAssembly/component-model</a><br>\n<a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/CanonicalABI.md\">https://github.com/WebAssembly/component-model/blob/main/design/mvp/CanonicalABI.md</a><br>\n<a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md\">https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md</a></p>\n<p>Some other codebases that you might benefit from reading:<br>\n<a href=\"https://github.com/bytecodealliance/wasm-tools\">https://github.com/bytecodealliance/wasm-tools</a> (great way to figure out simple stuff like \"how does printing a component work, with Rust tooling?)<br>\n<a href=\"https://github.com/bytecodealliance/wit-bindgen\">https://github.com/bytecodealliance/wit-bindgen</a> (great way to see how a certain language actually becomes CM-compliant/what code is generated that makes the CM go)</p>\n<p>I suggest the component model book as a way in mostly because it starts with the concepts, motivations and some code you can compile to get started quickly -- wasmtime has high quality but very advanced Rust code in it, so it might be a bit hard to learn from/build intuition around.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/98e914cd291ab3f39e82cf1b54def4f5dea7b04b/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f316163626138363462613235323938353938363939623862306437646430656334386535323437653732653533303236313865333331306332363963353065642f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime\" title=\"GitHub - bytecodealliance/wasmtime: A lightweight WebAssembly runtime that is fast, secure, and standards-compliant\">GitHub - bytecodealliance/wasmtime: A lightweight WebAssembly runtime that is fast, secure, and standards-compliant</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/component-model\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/a2c2cfb09993bab602ca65312217c3e9ff312f2a/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306639336130316163346638333535306632313337373933323437363034343963363738333462616538666339396235386238306133663064656462303331362f576562417373656d626c792f636f6d706f6e656e742d6d6f64656c&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/component-model\" title=\"GitHub - WebAssembly/component-model: Repository for design and specification of the Component Model\">GitHub - WebAssembly/component-model: Repository for design and specification of the Component Model</a></div><div class=\"message_embed_description\">Repository for design and specification of the Component Model - WebAssembly/component-model</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/CanonicalABI.md\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/a2c2cfb09993bab602ca65312217c3e9ff312f2a/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306639336130316163346638333535306632313337373933323437363034343963363738333462616538666339396235386238306133663064656462303331362f576562417373656d626c792f636f6d706f6e656e742d6d6f64656c&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/CanonicalABI.md\" title=\"component-model/design/mvp/CanonicalABI.md at main 路 WebAssembly/component-model\">component-model/design/mvp/CanonicalABI.md at main 路 WebAssembly/component-model</a></div><div class=\"message_embed_description\">Repository for design and specification of the Component Model - WebAssembly/component-model</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/a2c2cfb09993bab602ca65312217c3e9ff312f2a/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306639336130316163346638333535306632313337373933323437363034343963363738333462616538666339396235386238306133663064656462303331362f576562417373656d626c792f636f6d706f6e656e742d6d6f64656c&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md\" title=\"component-model/design/mvp/WIT.md at main 路 WebAssembly/component-model\">component-model/design/mvp/WIT.md at main 路 WebAssembly/component-model</a></div><div class=\"message_embed_description\">Repository for design and specification of the Component Model - WebAssembly/component-model</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/ce4e7995a2db49d3673a7dc265bd0be836ff31f4/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f636434343431373734353838663661366336363239323235643565623563303363396663626265653461333232633433336662346139366332613565653034372f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c73&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools\" title=\"GitHub - bytecodealliance/wasm-tools: CLI and Rust libraries for low-level manipulation of WebAssembly modules\">GitHub - bytecodealliance/wasm-tools: CLI and Rust libraries for low-level manipulation of WebAssembly modules</a></div><div class=\"message_embed_description\"> CLI and Rust libraries for low-level manipulation of WebAssembly modules  - GitHub - bytecodealliance/wasm-tools: CLI and Rust libraries for low-level manipulation of WebAssembly modules</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/1357bdf91377d92491af89750eca820347107ae9/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633733633035356632653332373533633333326335393334623130323938356137653930386333363266356439663535303865396535333231353264653133312f62797465636f6465616c6c69616e63652f7769742d62696e6467656e&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen\" title=\"GitHub - bytecodealliance/wit-bindgen: A language binding generator for WebAssembly interface types\">GitHub - bytecodealliance/wit-bindgen: A language binding generator for WebAssembly interface types</a></div><div class=\"message_embed_description\">A language binding generator for WebAssembly interface types - bytecodealliance/wit-bindgen</div></div></div>",
        "id": 531762734,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1753858525
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"598440\">@Victor Adossi</span>, that's quite helpful to get started!</p>",
        "id": 531777520,
        "sender_full_name": "Wolfgang Meier",
        "timestamp": 1753863164
    }
]