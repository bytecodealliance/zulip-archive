[
    {
        "content": "<p>Hey all,<br>\nI'm looking at using componentize-dotnet and am having trouble understanding how to use types such as variant, option or result in C#.  I'm not sure what I need to implement or what, if anything, is generated for me to use or how to use it.</p>\n<p>Are there any examples of how this should be done?</p>",
        "id": 498616617,
        "sender_full_name": "godotdot",
        "timestamp": 1739121040
    },
    {
        "content": "<p>Ok, I'm sure I'm just doing something wrong but at this point I'm tempted to say result doesn't work properly with C#.</p>\n<p>So far as I can see, if a function is defined in wit to return a result, the C# code is incorrectly expected to return the type the result is parameterized by; so if the wit defines the function as returning result&lt;int, string&gt;, the C# code expects int, not result&lt;int, string&gt;.</p>",
        "id": 498897013,
        "sender_full_name": "godotdot",
        "timestamp": 1739234268
    },
    {
        "content": "<p>All right, if I understand correctly, if you're implementing an exported function that returns a result, there are generated bindings that call the function you implement, and it is they that return Ok or Err based on whether your implementation throws an exception.</p>\n<p>So the behavior I described before, where you just need to return  the value that would get wrapped in an Ok, makes sense if you know that.</p>\n<p>I'd have to think about it more, but I feel like I'd rather handle returning the Ok/Err myself.<br>\nAs it is, the function I have to implement in this case has a misleading signature that doesn't match the wit.<br>\nAlso, it has to throw an exception for Err, and my understanding is exceptions are not great for performance.</p>",
        "id": 498909498,
        "sender_full_name": "godotdot",
        "timestamp": 1739240067
    },
    {
        "content": "<p>You may be interested in <a href=\"https://github.com/bytecodealliance/wit-bindgen/pull/1115\">this PR</a> and the option it added.</p>",
        "id": 498914939,
        "sender_full_name": "Joel Dice",
        "timestamp": 1739242350
    },
    {
        "content": "<p>That does look interesting, thank you!<br>\nI'm not sure how I should use it, though.  I was thinking maybe adding <code>   &lt;Wit Update=\"gen-host.wit\" World=\"gen-host\" feature=\"with_wit_results=false\" /&gt;</code> to the .csproj  might do the trick, but it doesn't seem t.</p>",
        "id": 498921795,
        "sender_full_name": "godotdot",
        "timestamp": 1739245588
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"625613\">@James Sturtevant</span> do you know the answer to this?</p>",
        "id": 499006154,
        "sender_full_name": "Joel Dice",
        "timestamp": 1739279492
    },
    {
        "content": "<p>I don't think we pipe through extra setting to witbindgen yet. <span class=\"user-mention\" data-user-id=\"875880\">@godotdot</span>   Could you open an issue?</p>",
        "id": 499045223,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1739290246
    },
    {
        "content": "<p>Consider it done <span class=\"user-mention\" data-user-id=\"625613\">@James Sturtevant</span> <a href=\"https://github.com/bytecodealliance/componentize-dotnet/issues/66\">https://github.com/bytecodealliance/componentize-dotnet/issues/66</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-dotnet/issues/66\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/f9d583727eb182df8cbce5f009a3083b7ea63b1b/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306163353633653539346638613263656462313937626532313364356336633232313631646337326139636135303739393431313530366662333936366666372f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d646f746e65742f6973737565732f3636&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-dotnet/issues/66\" title=\"Pipe cli option to generate Result types through to wit-bindgen 路 Issue #66 路 bytecodealliance/componentize-dotnet\">Pipe cli option to generate Result types through to wit-bindgen 路 Issue #66 路 bytecodealliance/componentize-dotnet</a></div><div class=\"message_embed_description\">The option to generate Result types instead of handling Results via Exceptions has been implemented in bytecodealliance/wit-bindgen#1115, but doesn't appear to be getting used.</div></div></div>",
        "id": 499061436,
        "sender_full_name": "godotdot",
        "timestamp": 1739294847
    },
    {
        "content": "<p>Thanks!  I am AFK for a couple days but will take a look soon</p>",
        "id": 499096839,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1739307430
    },
    {
        "content": "<p>Cool, thank you!</p>",
        "id": 499104533,
        "sender_full_name": "godotdot",
        "timestamp": 1739310628
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"875880\">@godotdot</span>  this should be resolved in <a href=\"https://www.nuget.org/packages/ByteCodeAlliance.Componentize.DotNet.Wasm.SDK\">https://www.nuget.org/packages/ByteCodeAlliance.Componentize.DotNet.Wasm.SDK</a> v0.6.0.   </p>\n<p>docs: <a href=\"https://github.com/bytecodealliance/componentize-dotnet?tab=readme-ov-file#passing-additional-wit-bindgen-args\">https://github.com/bytecodealliance/componentize-dotnet?tab=readme-ov-file#passing-additional-wit-bindgen-args</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://www.nuget.org/packages/ByteCodeAlliance.Componentize.DotNet.Wasm.SDK\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/dbef038986c4c841099ccc11f724502c43a281eb/68747470733a2f2f6e756765742e6f72672f436f6e74656e742f67616c6c6572792f696d672f64656661756c742d7061636b6167652d69636f6e2d323536783235362e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://www.nuget.org/packages/ByteCodeAlliance.Componentize.DotNet.Wasm.SDK\" title=\"BytecodeAlliance.Componentize.DotNet.Wasm.SDK 0.6.0-preview00009\">BytecodeAlliance.Componentize.DotNet.Wasm.SDK 0.6.0-preview00009</a></div><div class=\"message_embed_description\">Tooling for creating WebAssembly components from C#</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-dotnet?tab=readme-ov-file#passing-additional-wit-bindgen-args\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/79e192e781d2aadd7207dbaf060c016ff66bff27/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f623766363234663933646666356161316531363231656336323262383139326463356262326433396633363663643866643463373137346266363631636666362f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d646f746e6574&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-dotnet?tab=readme-ov-file#passing-additional-wit-bindgen-args\" title=\"GitHub - bytecodealliance/componentize-dotnet: Tooling for creating WebAssembly components from C#\">GitHub - bytecodealliance/componentize-dotnet: Tooling for creating WebAssembly components from C#</a></div><div class=\"message_embed_description\">Tooling for creating WebAssembly components from C# - bytecodealliance/componentize-dotnet</div></div></div>",
        "id": 504216161,
        "sender_full_name": "James Sturtevant",
        "timestamp": 1741397053
    }
]