[
    {
        "content": "<p>Trying to compile an SDL cpp project for the N3DS, I am using SDL instructions here: <a href=\"https://github.com/libsdl-org/SDL/blob/main/docs/README-n3ds.md\">https://github.com/libsdl-org/SDL/blob/main/docs/README-n3ds.md</a></p>\n<p>I am adding wasmtime to my project through FetchContent, I have modified the first command to specify the target as so<br>\n<code>cmake -S. -Bbuild -DCMAKE_TOOLCHAIN_FILE=\"$DEVKITPRO/cmake/3DS.cmake\" -DCMAKE_BUILD_TYPE=Release -DWASMTIME_TARGET=armv6k-nintendo-3ds</code><br>\nwith the following <code>.cargo/config.toml</code></p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[target.armv6k-nintendo-3ds]</span>\n<span class=\"n\">cc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"/opt/devkitpro/devkitARM/bin/arm-none-eabi-gcc\"</span>\n<span class=\"n\">cxx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"/opt/devkitpro/devkitARM/bin/arm-none-eabi-g++\"</span>\n<span class=\"n\">ar</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"/opt/devkitpro/devkitARM/bin/arm-none-eabi-ar\"</span>\n<span class=\"n\">ranlib</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"/opt/devkitpro/devkitARM/bin/arm-none-eabi-ranlib\"</span>\n<span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"/opt/devkitpro/devkitARM/bin/arm-none-eabi-gcc\"</span>\n</code></pre></div>\n<p>The second build command however result in</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"o\">[</span><span class=\"w\">  </span><span class=\"m\">0</span>%<span class=\"o\">]</span><span class=\"w\"> </span>Performing<span class=\"w\"> </span>build<span class=\"w\"> </span>step<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"s1\">'wasmtime-crate'</span>\nerror:<span class=\"w\"> </span>expected<span class=\"w\"> </span>a<span class=\"w\"> </span>table,<span class=\"w\"> </span>but<span class=\"w\"> </span>found<span class=\"w\"> </span>a<span class=\"w\"> </span>string<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"sb\">`</span>target.armv6k-nintendo-3ds.cc<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>/Users/themode/CLionProjects/NewAge/.cargo/config.toml\nmake<span class=\"o\">[</span><span class=\"m\">2</span><span class=\"o\">]</span>:<span class=\"w\"> </span>***<span class=\"w\"> </span><span class=\"o\">[</span>wasmtime/wasmtime-crate-prefix/src/wasmtime-crate-stamp/wasmtime-crate-build<span class=\"o\">]</span><span class=\"w\"> </span>Error<span class=\"w\"> </span><span class=\"m\">101</span>\nmake<span class=\"o\">[</span><span class=\"m\">1</span><span class=\"o\">]</span>:<span class=\"w\"> </span>***<span class=\"w\"> </span><span class=\"o\">[</span>wasmtime/CMakeFiles/wasmtime-crate.dir/all<span class=\"o\">]</span><span class=\"w\"> </span>Error<span class=\"w\"> </span><span class=\"m\">2</span>\nmake:<span class=\"w\"> </span>***<span class=\"w\"> </span><span class=\"o\">[</span>all<span class=\"o\">]</span><span class=\"w\"> </span>Error<span class=\"w\"> </span><span class=\"m\">2</span>\n</code></pre></div>\n<p>Build processes always confuse me, I am wondering if all of this couldn't be handled by wasmtime itself?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/libsdl-org/SDL/blob/main/docs/README-n3ds.md\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/dc0ed3548d8c95a056276b7625c684c0b3bc0348/68747470733a2f2f7265706f7369746f72792d696d616765732e67697468756275736572636f6e74656e742e636f6d2f3333303030383830312f65343636656438302d353736622d313165622d393366382d626362313630346233393966&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/libsdl-org/SDL/blob/main/docs/README-n3ds.md\" title=\"SDL/docs/README-n3ds.md at main · libsdl-org/SDL\">SDL/docs/README-n3ds.md at main · libsdl-org/SDL</a></div><div class=\"message_embed_description\">Simple Directmedia Layer. Contribute to libsdl-org/SDL development by creating an account on GitHub.</div></div></div>",
        "id": 502064011,
        "sender_full_name": "Mode",
        "timestamp": 1740581030
    },
    {
        "content": "<p>I believe that you might accidentally be mixing up <code>config.toml</code> from the rust-lang/rust repository with Cargo's <code>.cargo/config.toml</code>. Those are similar but distinct formats for configuring various builds. Cargo for example, which you're configuring here with <code>.cargo/config.toml</code> does not understand <code>cc</code>, <code>cxx</code>, <code>ar</code>, or <code>ranlib</code>. I think you'll want to remove those keys from <code>.cargo/config.toml</code> to make some more progress in the build. To be clear though those keys are accepted and understood by rust-lang/rust's build which uses <code>config.toml</code>.</p>",
        "id": 502085792,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1740586140
    },
    {
        "content": "<p>I initially didn't have them, but wasmtime then seemed to build for my current platform. How else should I define the 3ds target?</p>",
        "id": 502087295,
        "sender_full_name": "Mode",
        "timestamp": 1740586517
    },
    {
        "content": "<p>I'm pretty certain you'll need <code>linker</code> to tell cargo how to link, but otherwise   the other keys are unrecognized by Cargo and are going to cause that error I think. When you tried and it built for the host was the <code>linker</code> configuration missing? If so I think it'll fix that</p>",
        "id": 502089208,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1740587058
    },
    {
        "content": "<p>We have some <a href=\"https://docs.wasmtime.dev/contributing-cross-compiling.html\">brief docs</a> on cross-compiling as well</p>",
        "id": 502089310,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1740587088
    },
    {
        "content": "<p>(that doesn't cover the C API use case though)</p>",
        "id": 502089355,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1740587099
    },
    {
        "content": "<p>Alright so I modified my config to</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">unstable</span><span class=\"p\">]</span>\n<span class=\"n\">mtime</span><span class=\"o\">-</span><span class=\"n\">on</span><span class=\"o\">-</span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">true</span>\n<span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">std</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"core\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"alloc\"</span><span class=\"p\">]</span>\n\n<span class=\"p\">[</span><span class=\"n\">target</span><span class=\"p\">.</span><span class=\"n\">armv6k</span><span class=\"o\">-</span><span class=\"n\">nintendo</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"n\">ds</span><span class=\"p\">]</span>\n<span class=\"n\">ar</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"/opt/devkitpro/devkitARM/bin/arm-none-eabi-ar\"</span>\n<span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"/opt/devkitpro/devkitARM/bin/arm-none-eabi-gcc\"</span>\n</code></pre></div>\n<p>And my first build command to<br>\n<code>cmake -S. -Bbuild -DCMAKE_TOOLCHAIN_FILE=\"$DEVKITPRO/cmake/3DS.cmake\" -DCMAKE_BUILD_TYPE=Release -DWASMTIME_TARGET=armv6k-nintendo-3ds -DWASMTIME_USER_CARGO_BUILD_OPTIONS=\"-Zbuild-std\"</code></p>\n<p>And my problem now seems to be about <code>rustix</code>. Its very long so I won't send it all, but its essentially missing types like</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]:</span><span class=\"w\"> </span><span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">fstatfs</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">c</span><span class=\"err\">`</span>\n<span class=\"w\">    </span><span class=\"o\">-</span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">themode</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"o\">/</span><span class=\"n\">rustix</span><span class=\"o\">-</span><span class=\"mf\">0.38.43</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">backend</span><span class=\"o\">/</span><span class=\"n\">libc</span><span class=\"o\">/</span><span class=\"n\">fs</span><span class=\"o\">/</span><span class=\"n\">syscalls</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">1475</span><span class=\"p\">:</span><span class=\"mi\">16</span>\n<span class=\"w\">     </span><span class=\"o\">|</span>\n<span class=\"mi\">1475</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"n\">ret</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">::</span><span class=\"n\">fstatfs</span><span class=\"p\">(</span><span class=\"n\">borrowed_fd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">statfs</span><span class=\"p\">.</span><span class=\"n\">as_mut_ptr</span><span class=\"p\">()))</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">                </span><span class=\"o\">^^^^^^^</span>\n<span class=\"w\">     </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"p\">:::</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">themode</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"o\">/</span><span class=\"n\">libc</span><span class=\"o\">-</span><span class=\"mf\">0.2.161</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">unix</span><span class=\"o\">/</span><span class=\"k\">mod</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">1384</span><span class=\"p\">:</span><span class=\"mi\">5</span>\n<span class=\"w\">     </span><span class=\"o\">|</span>\n<span class=\"mi\">1384</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">fstatvfs</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">::</span><span class=\"n\">c_int</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buf</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">statvfs</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">::</span><span class=\"n\">c_int</span><span class=\"p\">;</span>\n<span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">-----------------------------------------------------------</span><span class=\"w\"> </span><span class=\"n\">similarly</span><span class=\"w\"> </span><span class=\"n\">named</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">fstatvfs</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"n\">here</span>\n<span class=\"w\">     </span><span class=\"o\">|</span>\n</code></pre></div>\n<p>Rustix is apparently a syscall wrapper. I have personally no need at all for wasm WASI or any other way to run environment code through wasm. Is it necessary in other places?</p>",
        "id": 502157270,
        "sender_full_name": "Mode",
        "timestamp": 1740609445
    },
    {
        "content": "<p>You should be able to disable the \"wasi\" feature of the C API which will disable building that dependency. The error you're seeing is that the crate basically just doesn't compile for the target in question</p>",
        "id": 502162230,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1740611484
    },
    {
        "content": "<p>You can also read some high-level information at <a href=\"https://docs.wasmtime.dev/stability-platform-support.html\">https://docs.wasmtime.dev/stability-platform-support.html</a> about platform support and no_std</p>",
        "id": 502162368,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1740611546
    },
    {
        "content": "<p>I see the features here <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/c-api/cmake/features.cmake\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/c-api/cmake/features.cmake</a><br>\nBut I genuinely do not understand how to disable rustix.<br>\n<code>SET(WASMTIME_DISABLE_ALL_FEATURES ON CACHE BOOL \"\")</code><br>\nDoes reduce dependencies from 362 to 101, but rustix is still there with the same errors.</p>\n<p>About no_std support, I don't believe this is necessary for the 3DS target?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/c-api/cmake/features.cmake\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/3171b6d8855c7fdfea531d2c0dc89259cb756871/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643765653335626135653334363565333036303134666466363533653530653536623530353730336164366430616539303333336161343332646163643539362f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/c-api/cmake/features.cmake\" title=\"wasmtime/crates/c-api/cmake/features.cmake at main · bytecodealliance/wasmtime\">wasmtime/crates/c-api/cmake/features.cmake at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 502170551,
        "sender_full_name": "Mode",
        "timestamp": 1740615811
    },
    {
        "content": "<p>Is it perhaps something I should create a github issue for?</p>",
        "id": 502172504,
        "sender_full_name": "Mode",
        "timestamp": 1740616949
    },
    {
        "content": "<p>In theory yeah rustix gets dropped unless it's for wasi, but we also don't test no_std builds of the c-api just the main wasmtime crate. If you wouldn't mind filing an issue that'd be great!</p>",
        "id": 502180277,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1740621418
    },
    {
        "content": "<p>rustix gets called if you enable the \"runtime\" feature, because it's used for mmap and such. However last time I looked at supporting <code>armv6k-nintendo-3ds</code>, the rust libc crate was lacking basic things like <code>MAP_ANONYMOUS</code> and <code>PROT_READ</code> and so on so I didn't get very far.</p>",
        "id": 502180866,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1740621736
    },
    {
        "content": "<p>Well I have made this <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10299\">https://github.com/bytecodealliance/wasmtime/issues/10299</a></p>\n<p>Not in a hurry at all (SDL seems to have issues as well), though I hope it will eventually be considered :)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/10299\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/cc8cc55ec08398894734e9e10333a8b1950b0992/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f336462396337323536356534353863613232653538623835623863313764393065396337626538653432643433333430303161356564313234396538386332632f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f3130323939&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/10299\" title=\"armv6k-nintendo-3ds Support · Issue #10299 · bytecodealliance/wasmtime\">armv6k-nintendo-3ds Support · Issue #10299 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Feature Support the Nintendo 3DS through the armv6k-nintendo-3ds target. Ensure c-api support as well. Benefit WebAssembly to the best game console ever conceived Implementation Compilation is curr...</div></div></div>",
        "id": 502182254,
        "sender_full_name": "Mode",
        "timestamp": 1740622622
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"879426\">Mode</span> <a href=\"#narrow/channel/206238-general/topic/Compile.20for.20the.20N3DS/near/502182254\">said</a>:</p>\n<blockquote>\n<p>Not in a hurry at all, though I hope it will eventually be considered :)</p>\n</blockquote>\n<p>I don't have any particular ideas to help here, but just wanted to drop a friendly note to ensure expectations are properly aligned: the usual way that work gets done on Wasmtime, because folks are stretched so thin and we all have our own TODO-lists, is that if you want a particular niche thing, the best way to make it happen is to do it and then submit a PR :-) Apologies if you already had this sense, but \"will be considered\" implies maintainers are taking requests for work to do, which is usually not how open-source projects work</p>",
        "id": 502183029,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1740622970
    },
    {
        "content": "<p>All that to say: if you do hack on this further, we'd be happy to review PRs!</p>",
        "id": 502183042,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1740622981
    },
    {
        "content": "<p>Oh yes I'm definitely wrong, Dan's right that rustix is pulled in even without default features. That's me misremembering what we've got going on.</p>",
        "id": 502185848,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1740624623
    },
    {
        "content": "<p>Does the N3DS have an <code>mmap</code>? I looked around for documentation, and all I could find was <a href=\"https://libctru.devkitpro.org/files.html\">this</a>, which doesn't seem to have <code>mmap</code>.</p>",
        "id": 502203028,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1740636186
    }
]