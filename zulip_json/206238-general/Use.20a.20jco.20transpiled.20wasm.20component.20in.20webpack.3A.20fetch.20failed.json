[
    {
        "content": "<p>Hello!<br>\nI'm trying to embed a wasm component I'm working on in a webpack application: <a href=\"https://github.com/gchq/CyberChef\">https://github.com/gchq/CyberChef</a><br>\nI'm quite new with the wasm ecosystem, and I'm facing an issue I don't really get.</p>\n<p><code>jco</code> is generating a JS glue file with a .wasm core file, and tries to fetch and compile it with <code>fetchCompile</code>.<br>\nWhen using node, it uses <code>node:fs</code>. Otherwise, it falls back to the classic <code>fetch</code>.</p>\n<p>The issue here is that CyberChef is a webpack application that can build a web app and a node app.<br>\nBuilding the node app works like a charm <span aria-label=\"sparkles\" class=\"emoji emoji-2728\" role=\"img\" title=\"sparkles\">:sparkles:</span> <br>\nHowever, I experience <code>fetch</code> issues with the web version.</p>\n<p>First, it doesn't seem to choose correctly if it should use <code>node:fs</code> or <code>fetch</code>. Because node is installed in the CyberChef app, it detects the <code>process.versions.node</code> and tries to use <code>node:fs</code> which is not handled in the webpack web app:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">node</span><span class=\"p\">:</span><span class=\"nc\">fs</span><span class=\"o\">/</span><span class=\"n\">promises</span>\n<span class=\"n\">Module</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">UnhandledSchemeError</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Reading</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"s\">\"node:fs/promises\"</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">handled</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">plugins</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Unhandled</span><span class=\"w\"> </span><span class=\"n\">scheme</span><span class=\"p\">).</span>\n<span class=\"n\">Webpack</span><span class=\"w\"> </span><span class=\"n\">supports</span><span class=\"w\"> </span><span class=\"s\">\"data:\"</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"s\">\"file:\"</span><span class=\"w\"> </span><span class=\"n\">URIs</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"p\">.</span>\n<span class=\"n\">You</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">need</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">additional</span><span class=\"w\"> </span><span class=\"n\">plugin</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">handle</span><span class=\"w\"> </span><span class=\"s\">\"node:\"</span><span class=\"w\"> </span><span class=\"n\">URIs</span><span class=\"p\">.</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">ghq</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">dolphinau</span><span class=\"o\">/</span><span class=\"n\">CyberChef</span><span class=\"o\">/</span><span class=\"n\">node_modules</span><span class=\"o\">/</span><span class=\"n\">webpack</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">NormalModule</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">984</span><span class=\"p\">:</span><span class=\"mi\">10</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">Hook</span><span class=\"p\">.</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">callAsync</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">create</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">ghq</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">dolphinau</span><span class=\"o\">/</span><span class=\"n\">CyberChef</span><span class=\"o\">/</span><span class=\"n\">node_modules</span><span class=\"o\">/</span><span class=\"n\">tapable</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">HookCodeFactory</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">33</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">anonymous</span><span class=\"o\">&gt;</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">Hook</span><span class=\"p\">.</span><span class=\"n\">CALL_ASYNC_DELEGATE</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">_callAsync</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">ghq</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">dolphinau</span><span class=\"o\">/</span><span class=\"n\">CyberChef</span><span class=\"o\">/</span><span class=\"n\">node_modules</span><span class=\"o\">/</span><span class=\"n\">tapable</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">Hook</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">18</span><span class=\"p\">:</span><span class=\"mi\">14</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">Object</span><span class=\"p\">.</span><span class=\"n\">processResource</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">ghq</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">dolphinau</span><span class=\"o\">/</span><span class=\"n\">CyberChef</span><span class=\"o\">/</span><span class=\"n\">node_modules</span><span class=\"o\">/</span><span class=\"n\">webpack</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">NormalModule</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">980</span><span class=\"p\">:</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">processResource</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">ghq</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">dolphinau</span><span class=\"o\">/</span><span class=\"n\">CyberChef</span><span class=\"o\">/</span><span class=\"n\">node_modules</span><span class=\"o\">/</span><span class=\"n\">loader</span><span class=\"o\">-</span><span class=\"n\">runner</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">LoaderRunner</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">220</span><span class=\"p\">:</span><span class=\"mi\">11</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">iteratePitchingLoaders</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">ghq</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">dolphinau</span><span class=\"o\">/</span><span class=\"n\">CyberChef</span><span class=\"o\">/</span><span class=\"n\">node_modules</span><span class=\"o\">/</span><span class=\"n\">loader</span><span class=\"o\">-</span><span class=\"n\">runner</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">LoaderRunner</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">171</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">runLoaders</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">ghq</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">dolphinau</span><span class=\"o\">/</span><span class=\"n\">CyberChef</span><span class=\"o\">/</span><span class=\"n\">node_modules</span><span class=\"o\">/</span><span class=\"n\">loader</span><span class=\"o\">-</span><span class=\"n\">runner</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">LoaderRunner</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">398</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">NormalModule</span><span class=\"p\">.</span><span class=\"n\">_doBuild</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">ghq</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">dolphinau</span><span class=\"o\">/</span><span class=\"n\">CyberChef</span><span class=\"o\">/</span><span class=\"n\">node_modules</span><span class=\"o\">/</span><span class=\"n\">webpack</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">NormalModule</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">965</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">NormalModule</span><span class=\"p\">.</span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">ghq</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">dolphinau</span><span class=\"o\">/</span><span class=\"n\">CyberChef</span><span class=\"o\">/</span><span class=\"n\">node_modules</span><span class=\"o\">/</span><span class=\"n\">webpack</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">NormalModule</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">1155</span><span class=\"p\">:</span><span class=\"mi\">15</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">ghq</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">dolphinau</span><span class=\"o\">/</span><span class=\"n\">CyberChef</span><span class=\"o\">/</span><span class=\"n\">node_modules</span><span class=\"o\">/</span><span class=\"n\">webpack</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">Compilation</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">1422</span><span class=\"p\">:</span><span class=\"mi\">12</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">NormalModule</span><span class=\"p\">.</span><span class=\"n\">needBuild</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">ghq</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">dolphinau</span><span class=\"o\">/</span><span class=\"n\">CyberChef</span><span class=\"o\">/</span><span class=\"n\">node_modules</span><span class=\"o\">/</span><span class=\"n\">webpack</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">NormalModule</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">1477</span><span class=\"p\">:</span><span class=\"mi\">32</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">Compilation</span><span class=\"p\">.</span><span class=\"n\">_buildModule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">ghq</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">dolphinau</span><span class=\"o\">/</span><span class=\"n\">CyberChef</span><span class=\"o\">/</span><span class=\"n\">node_modules</span><span class=\"o\">/</span><span class=\"n\">webpack</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">Compilation</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">1403</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">ghq</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">dolphinau</span><span class=\"o\">/</span><span class=\"n\">CyberChef</span><span class=\"o\">/</span><span class=\"n\">node_modules</span><span class=\"o\">/</span><span class=\"n\">webpack</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">util</span><span class=\"o\">/</span><span class=\"n\">AsyncQueue</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">340</span><span class=\"p\">:</span><span class=\"mi\">10</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">Hook</span><span class=\"p\">.</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">callAsync</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">eval</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">create</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">ghq</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">dolphinau</span><span class=\"o\">/</span><span class=\"n\">CyberChef</span><span class=\"o\">/</span><span class=\"n\">node_modules</span><span class=\"o\">/</span><span class=\"n\">tapable</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">HookCodeFactory</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">33</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">anonymous</span><span class=\"o\">&gt;</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">AsyncQueue</span><span class=\"p\">.</span><span class=\"n\">_startProcessing</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">ghq</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">dolphinau</span><span class=\"o\">/</span><span class=\"n\">CyberChef</span><span class=\"o\">/</span><span class=\"n\">node_modules</span><span class=\"o\">/</span><span class=\"n\">webpack</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">util</span><span class=\"o\">/</span><span class=\"n\">AsyncQueue</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">330</span><span class=\"p\">:</span><span class=\"mi\">26</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">AsyncQueue</span><span class=\"p\">.</span><span class=\"n\">_ensureProcessing</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">alex</span><span class=\"o\">/</span><span class=\"n\">ghq</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">dolphinau</span><span class=\"o\">/</span><span class=\"n\">CyberChef</span><span class=\"o\">/</span><span class=\"n\">node_modules</span><span class=\"o\">/</span><span class=\"n\">webpack</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">util</span><span class=\"o\">/</span><span class=\"n\">AsyncQueue</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">317</span><span class=\"p\">:</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">process</span><span class=\"p\">.</span><span class=\"n\">processImmediate</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">:</span><span class=\"nc\">internal</span><span class=\"o\">/</span><span class=\"n\">timers</span><span class=\"p\">:</span><span class=\"mi\">476</span><span class=\"p\">:</span><span class=\"mi\">21</span><span class=\"p\">)</span>\n<span class=\"w\"> </span><span class=\"o\">@</span><span class=\"w\"> </span><span class=\"o\">../../../</span><span class=\"n\">ditto</span><span class=\"o\">/</span><span class=\"n\">dittojs</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">transpiled_node</span><span class=\"o\">/</span><span class=\"n\">dittojs</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"w\"> </span><span class=\"mi\">1035</span><span class=\"p\">:</span><span class=\"mi\">43</span><span class=\"o\">-</span><span class=\"mi\">70</span>\n<span class=\"w\"> </span><span class=\"o\">@</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">operations</span><span class=\"o\">/</span><span class=\"n\">ObfuscatePowershell</span><span class=\"p\">.</span><span class=\"n\">mjs</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"mi\">53</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"p\">:</span><span class=\"mi\">13</span><span class=\"o\">-</span><span class=\"mi\">25</span><span class=\"w\"> </span><span class=\"mi\">61</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"o\">-</span><span class=\"mi\">56</span>\n<span class=\"w\"> </span><span class=\"o\">@</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">config</span><span class=\"o\">/</span><span class=\"n\">modules</span><span class=\"o\">/</span><span class=\"n\">Obfuscation</span><span class=\"p\">.</span><span class=\"n\">mjs</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"mi\">75</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"mi\">26</span><span class=\"o\">-</span><span class=\"mi\">4</span>\n</code></pre></div>\n<p>So I force the package not to use node. Two options here: </p>\n<ul>\n<li>Use <code>jco --no-node-compat</code></li>\n<li>Patch the isNode in the JS glue</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"JavaScript\"><pre><span></span><code><span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"nx\">isNode</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"ow\">typeof</span><span class=\"w\"> </span><span class=\"nx\">process</span><span class=\"w\"> </span><span class=\"o\">!==</span><span class=\"w\"> </span><span class=\"s1\">'undefined'</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">versions</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">versions</span><span class=\"p\">.</span><span class=\"nx\">node</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">.</span><span class=\"nx\">NO_NODE</span><span class=\"w\"> </span><span class=\"o\">===</span><span class=\"w\"> </span><span class=\"kc\">undefined</span><span class=\"p\">;</span>\n</code></pre></div>\n<p>Thanks to the second method, I can just run <code>NO_NODE=1 npm run build</code> to select manually when I want node or not.<br>\nBut even without <code>node:fs</code>, it looks like the <code>fetch</code> method also falls back to <code>node</code>. I get the following stack trace when building with <code>NO_NODE=1</code>: </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">TypeError</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">fetch</span><span class=\"w\"> </span><span class=\"n\">failed</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">node</span><span class=\"p\">:</span><span class=\"nc\">internal</span><span class=\"o\">/</span><span class=\"n\">deps</span><span class=\"o\">/</span><span class=\"n\">undici</span><span class=\"o\">/</span><span class=\"n\">undici</span><span class=\"p\">:</span><span class=\"mi\">12637</span><span class=\"p\">:</span><span class=\"mi\">11</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">cause</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">not</span><span class=\"w\"> </span><span class=\"n\">implemented</span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">yet</span><span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"w\">      </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">makeNetworkError</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">:</span><span class=\"nc\">internal</span><span class=\"o\">/</span><span class=\"n\">deps</span><span class=\"o\">/</span><span class=\"n\">undici</span><span class=\"o\">/</span><span class=\"n\">undici</span><span class=\"p\">:</span><span class=\"mi\">5851</span><span class=\"p\">:</span><span class=\"mi\">35</span><span class=\"p\">)</span>\n<span class=\"w\">      </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">schemeFetch</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">:</span><span class=\"nc\">internal</span><span class=\"o\">/</span><span class=\"n\">deps</span><span class=\"o\">/</span><span class=\"n\">undici</span><span class=\"o\">/</span><span class=\"n\">undici</span><span class=\"p\">:</span><span class=\"mi\">10757</span><span class=\"p\">:</span><span class=\"mi\">34</span><span class=\"p\">)</span>\n<span class=\"w\">      </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">node</span><span class=\"p\">:</span><span class=\"nc\">internal</span><span class=\"o\">/</span><span class=\"n\">deps</span><span class=\"o\">/</span><span class=\"n\">undici</span><span class=\"o\">/</span><span class=\"n\">undici</span><span class=\"p\">:</span><span class=\"mi\">10634</span><span class=\"p\">:</span><span class=\"mi\">26</span>\n<span class=\"w\">      </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">mainFetch</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">:</span><span class=\"nc\">internal</span><span class=\"o\">/</span><span class=\"n\">deps</span><span class=\"o\">/</span><span class=\"n\">undici</span><span class=\"o\">/</span><span class=\"n\">undici</span><span class=\"p\">:</span><span class=\"mi\">10653</span><span class=\"p\">:</span><span class=\"mi\">11</span><span class=\"p\">)</span>\n<span class=\"w\">      </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">fetching</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">:</span><span class=\"nc\">internal</span><span class=\"o\">/</span><span class=\"n\">deps</span><span class=\"o\">/</span><span class=\"n\">undici</span><span class=\"o\">/</span><span class=\"n\">undici</span><span class=\"p\">:</span><span class=\"mi\">10601</span><span class=\"p\">:</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"w\">      </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">fetch</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">:</span><span class=\"nc\">internal</span><span class=\"o\">/</span><span class=\"n\">deps</span><span class=\"o\">/</span><span class=\"n\">undici</span><span class=\"o\">/</span><span class=\"n\">undici</span><span class=\"p\">:</span><span class=\"mi\">10465</span><span class=\"p\">:</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"w\">      </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">Object</span><span class=\"p\">.</span><span class=\"n\">fetch</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">:</span><span class=\"nc\">internal</span><span class=\"o\">/</span><span class=\"n\">deps</span><span class=\"o\">/</span><span class=\"n\">undici</span><span class=\"o\">/</span><span class=\"n\">undici</span><span class=\"p\">:</span><span class=\"mi\">12636</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"w\">      </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">fetch</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">:</span><span class=\"nc\">internal</span><span class=\"o\">/</span><span class=\"n\">process</span><span class=\"o\">/</span><span class=\"n\">pre_execution</span><span class=\"p\">:</span><span class=\"mi\">281</span><span class=\"p\">:</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n<span class=\"w\">      </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">fetchCompile</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">:</span><span class=\"sd\">///home/alex/ghq/github.cert.corp/CERT/ditto/dittojs/target/transpiled_node/dittojs.js:667:10)</span>\n<span class=\"w\">      </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">:</span><span class=\"sd\">///home/alex/ghq/github.cert.corp/CERT/ditto/dittojs/target/transpiled_node/dittojs.js:3399:21)</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>The JS glue calls to the <code>node:internal</code> fetch implementation, that is <em>not implemented... yet...</em><br>\nIt is maybe not related to <code>jco</code> are bytecodealliance, but I'm a bit lost so far so if anyone can help me don't hesitate <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span> </p>\n<p>My last option was to embed the base64 of the wasm core directly inside the JS glue to avoid using fetch at all but I would prefer another solution <span aria-label=\"tear\" class=\"emoji emoji-1f972\" role=\"img\" title=\"tear\">:tear:</span></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/gchq/CyberChef\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/deb3318a76dca844b7b6972c4565c2d798fab73d/68747470733a2f2f7265706f7369746f72792d696d616765732e67697468756275736572636f6e74656e742e636f6d2f37343936323531352f31333763366431622d346161632d343430382d613336312d633261323766313235623034&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/gchq/CyberChef\" title=\"GitHub - gchq/CyberChef: The Cyber Swiss Army Knife - a web app for encryption, encoding, compression and data analysis\">GitHub - gchq/CyberChef: The Cyber Swiss Army Knife - a web app for encryption, encoding, compression and data analysis</a></div><div class=\"message_embed_description\">The Cyber Swiss Army Knife - a web app for encryption, encoding, compression and data analysis - gchq/CyberChef</div></div></div>",
        "id": 541222804,
        "sender_full_name": "dolphino",
        "timestamp": 1758718677
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"963456\">@dolphino</span> I think you've run into the fact that the web version of Jco is still experimental (and in general we don't support NodeJS modules that are imported outside the browser -- we don't have a shim for that). The import of <code>node:fs/promises</code> is not being replaced because there isn't a polyfill for that as you've found.</p>\n<p>Based on what you have here I think the quickest current solution is to shim out <code>node:fs</code> with webpack -- and keep the nodejs compat in. </p>\n<p>Would you mind filing an issue on <code>jco</code> and a small reproduction? This is probably something we should track as to how to avoid people getting bit by this so easily (or at least until NodeJS support is available via some shim).</p>\n<p>We <em>should</em> also have a browser-fetch example similar to the NodeJS example.</p>\n<p>There's a plan and work going to support node interfaces at a lower level than Jco, but that work is still far away from being done, unfortunately.</p>",
        "id": 541247523,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1758725019
    },
    {
        "content": "<p>Here's an example of how you might shim this stuff, thanks to the awesome work of <span class=\"user-mention\" data-user-id=\"763150\">@Tomasz Andrzejak</span> :</p>\n<p><a href=\"https://github.com/andreiltd/probot-wasm/blob/main/shims/fs.js\">https://github.com/andreiltd/probot-wasm/blob/main/shims/fs.js</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/andreiltd/probot-wasm/blob/main/shims/fs.js\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/62facdf81049500068f9f5535be4e7d3a43decdf/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f623465373038666662386466333438313265303030656632613563346637383730393733303539373638356231626134396636386362386164613434383330662f616e647265696c74642f70726f626f742d7761736d&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/andreiltd/probot-wasm/blob/main/shims/fs.js\" title=\"probot-wasm/shims/fs.js at main · andreiltd/probot-wasm\">probot-wasm/shims/fs.js at main · andreiltd/probot-wasm</a></div><div class=\"message_embed_description\">probot in WebAssembly component. Contribute to andreiltd/probot-wasm development by creating an account on GitHub.</div></div></div>",
        "id": 541248231,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1758725184
    },
    {
        "content": "<p>what I ended up doing is generating the code with --no-nodejs-compat and async mode and then provide a platform specific fetchCompile to instantiate</p>",
        "id": 541248324,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1758725210
    },
    {
        "content": "<p>Ah that's definitely a simpler solution if <code>node:fs</code> was the only requirement that you needed!</p>",
        "id": 541248868,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1758725339
    },
    {
        "content": "<p>Thanks for your answer <span class=\"user-mention\" data-user-id=\"598440\">@Victor Adossi</span> ! <code>jco</code> is already doing an amazing job, can't wait for the future of this project!<br>\nI'll try to provide a minimal example to reproduce the issue <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n<p><span class=\"user-mention\" data-user-id=\"550770\">@Ramon Klass</span> do you have an example of a <code>fetchCompile</code> instantiation? Just to get a glimpse of what it should look like <span aria-label=\"smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 541394759,
        "sender_full_name": "dolphino",
        "timestamp": 1758787869
    },
    {
        "content": "<p>from the generated code:<br>\nexport function instantiate(getCoreModule, imports, instantiateCore = WebAssembly.instantiate) {<br>\n...<br>\nconst isNode = typeof process !== 'undefined' &amp;&amp; process.versions &amp;&amp; process.versions.node;<br>\nlet _fs;<br>\nasync function fetchCompile (url) {<br>\n  if (isNode) {<br>\n    _fs = _fs || await import('node:fs/promises');<br>\n    return WebAssembly.compile(await _fs.readFile(url));<br>\n  }<br>\n  return fetch(url).then(WebAssembly.compileStreaming);<br>\n}<br>\n...<br>\nif (!getCoreModule) getCoreModule = (name) =&gt; fetchCompile(new URL(<code>./${name}</code>, import.meta.url));</p>\n<p>so you have to provide it as the first argument to instantiate and for node it is<br>\n(url) =&gt; fs.readFile(url).then(WebAssembly.compile)<br>\nand for browsers it is<br>\n(url) =&gt; fetch(url).then(WebAssembly.compileStreaming)</p>",
        "id": 541457375,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1758806675
    },
    {
        "content": "<p>Thanks I'll try out<br>\nIn the meantime I put<code> --base64-cutoff 10000000</code> (bigger than my .core.wasm) so it's embedded directly in the js file and avoids the fetch</p>",
        "id": 541681462,
        "sender_full_name": "dolphino",
        "timestamp": 1758896898
    }
]