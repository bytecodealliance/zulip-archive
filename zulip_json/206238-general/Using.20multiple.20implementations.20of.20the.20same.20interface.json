[
    {
        "content": "<p>Hey! </p>\n<p>I'm currently developing a tic-tac-toe toy project using a MVC-esque architecture.<br>\nThe goal would be that the <code>user</code> resource from the <code>user-interface</code> could have 2 implementations, for example 'real-player' and 'bot', which both can be used in the <code>game</code> component.<br>\nThe goal would be to have a similar system to having 2 different structs in Rust, implement the same trait.<br>\nThe main issue I'm facing is that in order to instantiate 2 different implementations, these would both have to be composed into the final artifact and thus would have to be differentiated.</p>\n<p><a href=\"/user_uploads/15107/jECI3YXoYInbHh0rnVFgkXya/image.png\">sketch of both current and desired setup</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/15107/jECI3YXoYInbHh0rnVFgkXya/image.png\" title=\"sketch of both current and desired setup\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"2655x1360\" src=\"/user_uploads/thumbnail/15107/jECI3YXoYInbHh0rnVFgkXya/image.png/840x560.webp\"></a></div><p>The ideal API for this use-case would be that I want to express that there are multiple implementations available for the same interface, but this goes against the current system.<br>\nMy current attempts try to create wrappers (worlds and interfaces which's only goal is to re-export the capabilities of the user), which are purely WIT files, but I haven't gotten it to work yet.</p>\n<p>What would be the proper approach for tackling this problem?</p>",
        "id": 541669038,
        "sender_full_name": "Robbe Haegeman",
        "timestamp": 1758893313
    },
    {
        "content": "<p>More-or-less this is unfortunately not supported at this time. You can only export or import one version of an interface, which means that this pattern is not well supported. </p>\n<p>You're not the first person to desire this, however, and it's something we'd like to support! I don't believe there's many tracking issues on this but effectively what you want is \"nested interfaces\" in WIT where you could do something like:</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>world my-world {\n  interface player1: { nest my:player/interface-definition; }\n  interface player2: { nest my:player/interface-definition; }\n}\n</code></pre></div>\n<p>(bikeshedding notwithstanding)</p>",
        "id": 541736058,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1758916303
    },
    {
        "content": "<p>There's an <a href=\"https://github.com/WebAssembly/component-model/pull/372\">open PR for nested interfaces</a>. Not sure what <span class=\"user-mention\" data-user-id=\"486181\">@Daniel Macovei</span>'s plans are around this, though</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/component-model/pull/372\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/0ce7b11b9043023b8d18e47c4cb22712c645cb5d/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f356338633839616533613062373730313766396331333939656266616636623334316338653238373839393134333666376639616263626333333633613931382f576562417373656d626c792f636f6d706f6e656e742d6d6f64656c2f70756c6c2f333732&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/component-model/pull/372\" title=\"Nested interfaces by macovedj 路 Pull Request #372 路 WebAssembly/component-model\">Nested interfaces by macovedj 路 Pull Request #372 路 WebAssembly/component-model</a></div><div class=\"message_embed_description\">Here is an outline for the various ways in which one could describe nested interfaces in wit.\nFor additional context re: motivation, see this issue, though generally what this enables is the abilit...</div></div></div>",
        "id": 542000350,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1759142280
    },
    {
        "content": "<p>I could put effort into reviving this PR if there were renewed interest in it.  I think resolving dependencies from registries would benefit from it.  At the moment though, I kindof figured it would make more sense to revisit after wasi p3 ships</p>",
        "id": 542293748,
        "sender_full_name": "Daniel Macovei",
        "timestamp": 1759242935
    },
    {
        "content": "<p>yeah, I don't disagree with the order of things. However, with work on p3 winding down on the spec and tooling side, it might make sense to look into again</p>",
        "id": 542487237,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1759323214
    }
]