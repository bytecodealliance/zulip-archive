[
    {
        "content": "<p>Oh, my expectation was that <code>.wit</code> files were kinda like protobuf files in that you can just have them mutually import eachother and have a \"bank\" of shared APIs, each with different packages.</p>\n<p>EG:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wit</span>\n<span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">techaro</span>\n<span class=\"w\">    </span><span class=\"err\">├──</span><span class=\"w\"> </span><span class=\"n\">logger</span><span class=\"p\">.</span><span class=\"n\">wit</span><span class=\"w\"> </span><span class=\"c1\">// package techaro:logger</span>\n<span class=\"w\">    </span><span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">checker</span><span class=\"p\">.</span><span class=\"n\">wit</span><span class=\"w\"> </span><span class=\"c1\">// package techaro:wasm-checker</span>\n</code></pre></div>\n<p>Is this not really designed for the monorepo case where you have a big generic library full of stuff and then your components reach into and pull from part of that?</p>\n<p>Your example for simple WIT reuse is something I wish was in the docs because I didn't know where to put the files in order to make things Just Work<span aria-label=\"tm\" class=\"emoji emoji-2122\" role=\"img\" title=\"tm\">:tm:</span>. Is there a way to do this that doesn't involve having to make symlink farms for deps folders?</p>",
        "id": 519140597,
        "sender_full_name": "Xe Iaso",
        "timestamp": 1747667042
    },
    {
        "content": "<p>if you have a monorepo with lots of separate packages, a wit/ directory that has no wit files but only a deps/ directory with all named packages is fine too, then everything in your repo can refer to worlds by their package names</p>",
        "id": 519142478,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1747667431
    },
    {
        "content": "<p>you can refer to the world by the full legal package name?</p>",
        "id": 519143385,
        "sender_full_name": "Xe Iaso",
        "timestamp": 1747667627
    },
    {
        "content": "<p>reading <a href=\"https://docs.rs/wit-bindgen/latest/wit_bindgen/macro.generate.html#options-to-generate\">https://docs.rs/wit-bindgen/latest/wit_bindgen/macro.generate.html#options-to-generate</a> doesn't give me the impression you can do that</p>",
        "id": 519143524,
        "sender_full_name": "Xe Iaso",
        "timestamp": 1747667647
    },
    {
        "content": "<p>putting in <code>techaro:wasm-checker/checker</code> works</p>",
        "id": 519144004,
        "sender_full_name": "Xe Iaso",
        "timestamp": 1747667747
    },
    {
        "content": "<p>yes you can refer to worlds with their full path for your use case :)</p>",
        "id": 519144246,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1747667792
    },
    {
        "content": "<p>moving everything to a <code>deps</code> folder makes wit-bindgen break:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wit</span>\n<span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">deps</span>\n<span class=\"w\">    </span><span class=\"err\">├──</span><span class=\"w\"> </span><span class=\"n\">techaro</span><span class=\"p\">:</span><span class=\"nc\">logger</span>\n<span class=\"w\">    </span><span class=\"err\">│</span><span class=\"w\">   </span><span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">logger</span><span class=\"p\">.</span><span class=\"n\">wit</span>\n<span class=\"w\">    </span><span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">techaro</span><span class=\"p\">:</span><span class=\"nc\">wasm</span><span class=\"o\">-</span><span class=\"n\">checker</span>\n<span class=\"w\">        </span><span class=\"err\">└──</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">checker</span><span class=\"p\">.</span><span class=\"n\">wit</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"o\">-</span><span class=\"n\">modern</span><span class=\"o\">-</span><span class=\"n\">browser</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">1.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">cadey</span><span class=\"o\">/</span><span class=\"n\">Code</span><span class=\"o\">/</span><span class=\"n\">Techaro</span><span class=\"o\">/</span><span class=\"n\">hivemind</span><span class=\"o\">/</span><span class=\"n\">wasm</span><span class=\"o\">/</span><span class=\"n\">is</span><span class=\"o\">-</span><span class=\"n\">modern</span><span class=\"o\">-</span><span class=\"n\">browser</span><span class=\"p\">)</span>\n<span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span><span class=\"w\"> </span><span class=\"n\">directory</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">parsing</span><span class=\"w\"> </span><span class=\"n\">WIT</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">cadey</span><span class=\"o\">/</span><span class=\"n\">Code</span><span class=\"o\">/</span><span class=\"n\">Techaro</span><span class=\"o\">/</span><span class=\"n\">hivemind</span><span class=\"o\">/</span><span class=\"n\">wit</span><span class=\"p\">]</span>\n\n<span class=\"w\">       </span><span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">         </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">parse</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">cadey</span><span class=\"o\">/</span><span class=\"n\">Code</span><span class=\"o\">/</span><span class=\"n\">Techaro</span><span class=\"o\">/</span><span class=\"n\">hivemind</span><span class=\"o\">/</span><span class=\"n\">wit</span>\n\n<span class=\"w\">       </span><span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">         </span><span class=\"nc\">no</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">package</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">header</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">any</span><span class=\"w\"> </span><span class=\"n\">WIT</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">package</span>\n<span class=\"w\"> </span><span class=\"o\">-</span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">wasm</span><span class=\"o\">/</span><span class=\"n\">is</span><span class=\"o\">-</span><span class=\"n\">modern</span><span class=\"o\">-</span><span class=\"n\">browser</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"mi\">1</span>\n<span class=\"w\">  </span><span class=\"o\">|</span>\n<span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">wit_bindgen</span><span class=\"p\">::</span><span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">world</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"techaro:wasm-checker/checker\"</span><span class=\"p\">,</span>\n<span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"../../wit\"</span><span class=\"p\">,</span>\n<span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">generate_all</span><span class=\"p\">,</span>\n<span class=\"mi\">9</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">});</span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">__</span><span class=\"o\">^</span>\n</code></pre></div>",
        "id": 519144397,
        "sender_full_name": "Xe Iaso",
        "timestamp": 1747667827
    },
    {
        "content": "<p>oh I thought that was fixed, your wit/ needs to define a package name which can just be <code>package unused:unused;</code> which is not intended, a wit directory purely with deps in it is supposed to be fine</p>",
        "id": 519144854,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1747667930
    },
    {
        "content": "<p>ah, i see, that makes it work</p>",
        "id": 519145064,
        "sender_full_name": "Xe Iaso",
        "timestamp": 1747667985
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"912721\">Xe Iaso</span> has marked this topic as resolved.</p>",
        "id": 519147028,
        "sender_full_name": "Notification Bot",
        "timestamp": 1747668419
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wit-bindgen/pull/1299\">https://github.com/bytecodealliance/wit-bindgen/pull/1299</a> filed a docs PR</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/pull/1299\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/bd27fd14fe4871fba360ee92f3c39493df721c1a/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f653733346436356666386532643931383935623430396365343864336235363833303930616365376561393336323439636633656663333166643833623237612f62797465636f6465616c6c69616e63652f7769742d62696e6467656e2f70756c6c2f31323939&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/pull/1299\" title=\"Document fully qualified worlds in generate! by Xe · Pull Request #1299 · bytecodealliance/wit-bindgen\">Document fully qualified worlds in generate! by Xe · Pull Request #1299 · bytecodealliance/wit-bindgen</a></div><div class=\"message_embed_description\">This nudge would have saved me some time in trying to figure out how to share .wit interfaces between components in a monorepo.</div></div></div>",
        "id": 519151326,
        "sender_full_name": "Xe Iaso",
        "timestamp": 1747669364
    }
]