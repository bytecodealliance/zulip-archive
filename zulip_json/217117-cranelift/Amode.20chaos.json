[
    {
        "content": "<p>In Cranelift internally there are a bunch of enums named amode. You have AMode, Amode, SyntheticAmode. Most backends just have a single AMode enum, but x86 has Amode and SyntheticAmode. Would it be possible to merge the x86 Amode and SyntheticAmode and name it consistently with AMode from other backends?</p>",
        "id": 541023488,
        "sender_full_name": "bjorn3",
        "timestamp": 1758636291
    },
    {
        "content": "<p>Or alternatively to have the same SyntheticAmode split in other backends?</p>",
        "id": 541023637,
        "sender_full_name": "bjorn3",
        "timestamp": 1758636325
    },
    {
        "content": "<p>A cleanup here seems reasonable; IIRC aarch64 at least has <code>AMode</code> more or less equivalent to <code>SyntheticAmode</code> (has the artificial kinds) and <code>mem_finalize</code> maps down to the hardware-supported subdomain. Putting types on that to properly represent it seems good</p>",
        "id": 541061069,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1758646601
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264278\">@bjorn3</span>, related to this, I tried to clean up the <code>Reg</code>, <code>RegMem</code>, <code>RegMemImm</code> type issues in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10775\">https://github.com/bytecodealliance/wasmtime/pull/10775</a> but never got around to finishing that. Just a heads up...</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/10775\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/fd8abe20952f28d3f190571c4b2dca106b2cf5aa/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633164306430623736653631336337663738393366306135393864346463303135346264363432663464376239316235336336333165316533653734633134372f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f3130373735&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/10775\" title=\"x64: refactor the representation of `*Mem` and `*MemImm` by abrown 路 Pull Request #10775 路 bytecodealliance/wasmtime\">x64: refactor the representation of `*Mem` and `*MemImm` by abrown 路 Pull Request #10775 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">While reflecting on why #10762 is hard, it seemed that the underlying problem to many ISLE matching issues is our inability to actually inspect the variants of the register specific versions of Reg...</div></div></div>",
        "id": 541108513,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1758665166
    }
]