[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"isle\"><pre><span></span><code>;; or(x, C) + (-C)  --&gt;  and(x, ~C)\n(rule\n  (simplify (iadd ty\n              (bor ty x (iconst_s ty n))\n              (iconst_s ty m)))\n  (if-let m (i64_checked_neg n))\n  (band ty x (iconst ty (imm64_masked ty (i64_cast_unsigned (i64_not n))))))\n</code></pre></div>\n<p>Hi, looking at this simplify rule, I realized there can be more than one interpretation of this rule.<br>\nDoes <code>m</code> in the if-let clause shadow the binding of <code>m</code> in the LHS pattern, or<br>\ndoes it checks <code>m</code> is actually a negation of <code>n</code>?<br>\nI wanna know what is the expected behavior of ISLE.</p>",
        "id": 527593144,
        "sender_full_name": "Bongjun Jang",
        "timestamp": 1751940628
    },
    {
        "content": "<p>I <em>think</em> this should treat <code>m</code> as already-bound and thus check for equality -- I say this based on the reused <code>bindings</code> map <a href=\"https://github.com/bytecodealliance/wasmtime/blob/e61121733f3bdd865953088b9a668136cb6c0fdf/cranelift/isle/isle/src/sema.rs#L2611-L2612\">here</a>. I haven't actually tried though -- it would be good to look at the generated code to ensure this is what's happening.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/e61121733f3bdd865953088b9a668136cb6c0fdf/cranelift/isle/isle/src/sema.rs#L2611-L2612\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/2d173e6de32a102d4724b970fa3fd5028c51f2c7/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393532633731333839633365336230623933663863396630616561626166303663303461663064346362666139613539313131656134666361303966666261662f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/e61121733f3bdd865953088b9a668136cb6c0fdf/cranelift/isle/isle/src/sema.rs#L2611-L2612\" title=\"wasmtime/cranelift/isle/isle/src/sema.rs at e61121733f3bdd865953088b9a668136cb6c0fdf · bytecodealliance/wasmtime\">wasmtime/cranelift/isle/isle/src/sema.rs at e61121733f3bdd865953088b9a668136cb6c0fdf · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 527621914,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1751960478
    },
    {
        "content": "<p>I think that <code>let</code> allows shadowing but <code>if-let</code> does not. I have been annoyed by this in the past. I didn't ever consider if this was intentional to allow for equality checks with already-bound variables however</p>",
        "id": 527788439,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1752019861
    }
]