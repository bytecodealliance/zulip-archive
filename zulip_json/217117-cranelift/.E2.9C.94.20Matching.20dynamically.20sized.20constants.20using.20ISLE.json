[
    {
        "content": "<p>There isn't a single \"correct\" way, but this is an ideal case for an \"external extractor\", where you define your own logic as needed. Cranelift's use of ISLE has a bunch of examples of those -- grep for <code>(extern extractor ...)</code> -- including for some cases with constants predicated on types, etc. Or, if you need an input (say, <code>width</code> above), then a fallible constructor with an <code>if-let</code> is another option:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">is_all_ones_of_width</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Unit</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"n\">constructor</span><span class=\"w\"> </span><span class=\"n\">is_all_ones_of_width</span><span class=\"w\"> </span><span class=\"n\">is_all_ones_of_width</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lower</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Ast</span><span class=\"p\">.</span><span class=\"n\">Or</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Ast</span><span class=\"p\">.</span><span class=\"n\">Constant</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">width</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">))</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"k\">if</span><span class=\"o\">-</span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">is_all_ones_of_width</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">width</span><span class=\"p\">))</span>\n<span class=\"w\">  </span><span class=\"o\">..</span><span class=\"p\">.)</span>\n</code></pre></div>\n<p>then define <code>is_all_ones_of_width</code> in your environment trait to return <code>Some(())</code> if true or <code>None</code> if not.</p>",
        "id": 516319889,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1746490745
    },
    {
        "content": "<p>This is exactly what I was looking for. Thanks Chris!</p>",
        "id": 516320465,
        "sender_full_name": "Colton",
        "timestamp": 1746491154
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"675578\">Colton</span> has marked this topic as resolved.</p>",
        "id": 516320759,
        "sender_full_name": "Notification Bot",
        "timestamp": 1746491334
    }
]