[
    {
        "content": "<p>Saw division optimisations were added in #11129 - remember previously these were blocked as division wasn’t rewritten I believe due to possible side effects - interested in learning how this was now achieved !</p>",
        "id": 530220674,
        "sender_full_name": "Kirp",
        "timestamp": 1753217512
    },
    {
        "content": "<p>Guess PR#10524 is a starting point?</p>",
        "id": 530221010,
        "sender_full_name": "Kirp",
        "timestamp": 1753217649
    },
    {
        "content": "<p>Yes, Initial support was added in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10524\">https://github.com/bytecodealliance/wasmtime/pull/10524</a> and there have been one or two follow up PRs adding rules since then. Don’t have those links handy but you should be able to just git log the cranelift/src/opts subdirectory since there hasn’t been too much other stuff in there recently</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/10524\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/e6018318d0bb237a179cbe7c7ee980d00cc5396a/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f326265613730303234613766623030383362356431653839366332306263623131633433393662623434613838353935343030363037313033633237303539372f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f3130353234&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/10524\" title=\"Cranelift: simplify some side-effectful instructions in ISLE by fitzgen · Pull Request #10524 · bytecodealliance/wasmtime\">Cranelift: simplify some side-effectful instructions in ISLE by fitzgen · Pull Request #10524 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This commit adds a new top-level ISLE entrypoint specifically for instructions in the side-effectful skeleton: simplify_skeleton. While these rewrites are processed during the egraph pass, values f...</div></div></div>",
        "id": 530367906,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1753282773
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasmtime/pull/11129\">https://github.com/bytecodealliance/wasmtime/pull/11129</a> Was the PR for division specifically</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/11129\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/6598d1ea871334d3f76ecd4820772d5002b5965a/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f363436313532346439353965323833633737396663666166643033626431656661393565323831333731646631666330323039656330313163623061363637312f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f3131313239&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/11129\" title=\"Cranelift: Revive division-by-constant magic sequences by fitzgen · Pull Request #11129 · bytecodealliance/wasmtime\">Cranelift: Revive division-by-constant magic sequences by fitzgen · Pull Request #11129 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Revive the old module for generating division-by-constant magic numbers\n\n\nAdd proptests for divide-by-constant magic number generators, just for a little extra correctness assurances\n\n\nApply divisi...</div></div></div>",
        "id": 530368126,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1753282831
    }
]