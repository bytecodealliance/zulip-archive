[
    {
        "content": "<p>Okay so quick sanity check, it appears that (on riscv anyways) the frame pointer points to a different field in </p>\n<p>afaik under LLVM: </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">----</span><span class=\"w\">  </span><span class=\"n\">frame</span><span class=\"w\"> </span><span class=\"o\">----</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"w\"> </span><span class=\"n\">points</span><span class=\"w\"> </span><span class=\"n\">here</span>\n<span class=\"n\">ra</span><span class=\"p\">,</span>\n<span class=\"n\">fp</span><span class=\"p\">,</span>\n<span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">frame</span><span class=\"w\"> </span><span class=\"o\">----</span>\n</code></pre></div>\n<p>while under cranelift its</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">----</span><span class=\"w\">  </span><span class=\"n\">frame</span><span class=\"w\"> </span><span class=\"o\">----</span>\n<span class=\"n\">ra</span><span class=\"p\">,</span>\n<span class=\"n\">fp</span><span class=\"p\">,</span><span class=\"w\">   </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"w\"> </span><span class=\"n\">points</span><span class=\"w\"> </span><span class=\"n\">here</span>\n<span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">frame</span><span class=\"w\"> </span><span class=\"o\">----</span>\n</code></pre></div>\n<p>is that correct? or am I missing something <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 501377828,
        "sender_full_name": "Jonas Kruckenberg",
        "timestamp": 1740319287
    },
    {
        "content": "<p>The cranelift side is an accurate depiction of what we do today yeah, and I believe that fell out of \"well by default might as well match x64\". If LLVM uses a different frame layout though we should probably update to match that</p>",
        "id": 501397859,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1740334761
    },
    {
        "content": "<p>its very hard to find out what llvm is actually doing, but all stack walking implementations work that way yeah</p>",
        "id": 501401389,
        "sender_full_name": "Jonas Kruckenberg",
        "timestamp": 1740337671
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253994\">Alex Crichton</span> <a href=\"#narrow/stream/217117-cranelift/topic/riscv.20stack.20pointer.20offset/near/501397859\">said</a>:</p>\n<blockquote>\n<p>If LLVM uses a different frame layout though we should probably update to match that</p>\n</blockquote>\n<p>i mean its not too big of a deal, but it would be great if i could just use the same unwinder for all code of course yeah</p>",
        "id": 501401465,
        "sender_full_name": "Jonas Kruckenberg",
        "timestamp": 1740337726
    },
    {
        "content": "<p>The convention on RISC-V is to have the FP point above the frame record. The Linux perf unwinder relies on this.</p>",
        "id": 501405159,
        "sender_full_name": "Amanieu",
        "timestamp": 1740340445
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"769939\">@Jonas Kruckenberg</span> mind filing an issue on wasmtime for this?</p>",
        "id": 501416589,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1740350128
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/10281\">https://github.com/bytecodealliance/wasmtime/issues/10281</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/10281\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/02e54498cfe35ac068ec391d926758e4ff8abc8f/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f666237316233663530626230666539303939623463336664373263626433613139623830383961356331316461343964623063646132383031343731643163312f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f3130323831&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/10281\" title=\"Cranelift: RISCV frame pointer position differs from LLVM 路 Issue #10281 路 bytecodealliance/wasmtime\">Cranelift: RISCV frame pointer position differs from LLVM 路 Issue #10281 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Cranelift on RISCV (when frame pointers are enabled) generated code where the fp register always points to the next frame pointer like so: ---- frame ---- ra, fp, &lt;- fp points here ... ---- frame -...</div></div></div>",
        "id": 501506973,
        "sender_full_name": "Jonas Kruckenberg",
        "timestamp": 1740393970
    }
]