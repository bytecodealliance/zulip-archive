[
    {
        "content": "<p>I was testing <code>cranelift/filetests/filetests/runtests/*.clif</code> with the riscv64 target on x86-64, and I thought the clif-util test (test run) command and the clif-util run command would produce the same result, but I noticed that their behavior is different. For example, when I tested <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/bb-padding.clif\">bb-padding.clif</a>, the test command passed, but running run resulted in an error. Could you explain why this happens?</p>\n<p>clif-util test:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>wasmtime$<span class=\"w\"> </span>qemu-riscv64<span class=\"w\"> </span>-L<span class=\"w\"> </span>/usr/riscv64-linux-gnu<span class=\"w\"> </span>-E<span class=\"w\"> </span>LD<span class=\"se\">\\_</span>LIBRARY<span class=\"se\">\\_</span>PATH<span class=\"o\">=</span>/usr/riscv64-linux-gnu/lib<span class=\"w\"> </span>target/riscv64gc-unknown-linux-gnu/debug/clif-util<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>-v<span class=\"w\"> </span>./cranelift/filetests/filetests/runtests/bb-padding.clif\n<span class=\"m\">0</span>.581<span class=\"w\"> </span>./cranelift/filetests/filetests/runtests/bb-padding.clif\n<span class=\"m\">1</span><span class=\"w\"> </span>tests\n</code></pre></div>\n<p>clif-util run:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>wasmtime$<span class=\"w\"> </span>qemu-riscv64<span class=\"w\"> </span>-L<span class=\"w\"> </span>/usr/riscv64-linux-gnu<span class=\"w\"> </span>-E<span class=\"w\"> </span>LD<span class=\"se\">\\_</span>LIBRARY<span class=\"se\">\\_</span>PATH<span class=\"o\">=</span>/usr/riscv64-linux-gnu/lib<span class=\"w\"> </span>target/riscv64gc-unknown-linux-gnu/debug/clif-util<span class=\"w\"> </span>run<span class=\"w\"> </span>-v<span class=\"w\"> </span>./cranelift/filetests/filetests/runtests/bb-padding.clif\n./cranelift/filetests/filetests/runtests/bb-padding.clif:<span class=\"w\"> </span>Compilation<span class=\"w\"> </span>error:<span class=\"w\"> </span>Unsupported<span class=\"w\"> </span>feature:<span class=\"w\"> </span>should<span class=\"w\"> </span>be<span class=\"w\"> </span>implemented<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>ISLE:<span class=\"w\"> </span><span class=\"nv\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"sb\">`</span><span class=\"nv\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>vconst.i64x2<span class=\"w\"> </span>const0<span class=\"sb\">`</span>,<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"sb\">`</span>Some<span class=\"o\">(</span>types::I64X2<span class=\"o\">)</span><span class=\"sb\">`</span>\n<span class=\"m\">1</span><span class=\"w\"> </span>file\nError:<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>failure\n</code></pre></div>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/bb-padding.clif\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/922c09d1f87ae162202166254587fe08c44b8290/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f636236633535363863346564663438353366356262393766643236633664656630626434646531636335663362653963333038313865636333393237643539632f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/bb-padding.clif\" title=\"wasmtime/cranelift/filetests/filetests/runtests/bb-padding.clif at main · bytecodealliance/wasmtime\">wasmtime/cranelift/filetests/filetests/runtests/bb-padding.clif at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 538830445,
        "sender_full_name": "Masashi Yoshimura",
        "timestamp": 1757589362
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"217126\" href=\"/#narrow/channel/217126-wasmtime/topic/Difference.20between.20clif-util.20test.20run.20and.20clif-util.20run.2E\">#wasmtime &gt; Difference between clif-util test run and clif-util run.</a> by <span class=\"user-mention silent\" data-user-id=\"234973\">Till Schneidereit</span>.</p>",
        "id": 538858903,
        "sender_full_name": "Notification Bot",
        "timestamp": 1757597199
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"631600\">@Masashi Yoshimura</span> I moved this over to the <a class=\"stream\" data-stream-id=\"217117\" href=\"/#narrow/channel/217117-cranelift\">#cranelift</a> channel so you'd get more Cranelift focused folks to see it</p>",
        "id": 538859093,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1757597245
    },
    {
        "content": "<p>I believe this is because <code>clif-util test</code> reads the configuration options at the top (e.g. cranelift settings, target, etc) while <code>clif-util run</code> does not, so <code>run</code> is failing due to vector features being disabled</p>",
        "id": 538874837,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1757600944
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span>  Thanks. Then, Is it possible to pass a setting options (e.g., <code>has_v</code>) to <code>run</code>, like with <code>clif-util compile --set</code>?<br>\n<code>clif_util::compile::Options</code> has a <code>settings: Vec&lt;String&gt;</code>, but <code>clif_util::run::Options</code> doesn’t.  It looks like to me the setting options can’t be passed to <code>run</code>.</p>",
        "id": 539089743,
        "sender_full_name": "Masashi Yoshimura",
        "timestamp": 1757689627
    },
    {
        "content": "<p>Ah sorry I'm not familiar enough with <code>run</code> off the top of my head to know the answer</p>",
        "id": 539092338,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1757690265
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"631600\">@Masashi Yoshimura</span> it seems that the <code>run</code> command is legacy from early Cranelift where it was more useful to experiment with and directly invoke machine code. We have a much more structured testing situation now, and we also have removed \"dummy environments\" from Cranelift in the past (e.g., <code>clif-util wasm</code> no longer exists). I think the right move here is actually to decide that <code>clif-util run</code> is unneeded, and mostly redundant given that we have runtests, and delete it</p>",
        "id": 539096886,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1757691150
    },
    {
        "content": "<p>In general it's difficult to use Cranelift on its own -- we have testing functionality that effectively mirrors runtime bits that Wasmtime also implements, like trampolines and an unwinder, but overall it makes the most sense to use the library in the context of an embedder. I'd be curious what your use-case is and why you need <code>clif-util run</code> -- can you say more?</p>",
        "id": 539097432,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1757691238
    },
    {
        "content": "<p>Thank you! I understand. </p>\n<blockquote>\n<p>I'd be curious what your use-case is and why you need <code>clif-util run</code> -- can you say more?</p>\n</blockquote>\n<p>I was simply experimenting with Cranelift and don’t have a particular use case at the moment.</p>",
        "id": 539114611,
        "sender_full_name": "Masashi Yoshimura",
        "timestamp": 1757694142
    }
]