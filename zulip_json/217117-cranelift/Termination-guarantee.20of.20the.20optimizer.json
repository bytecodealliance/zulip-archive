[
    {
        "content": "<p>Hi,</p>\n<p>just out of curiosity,</p>\n<p>I wonder if the termination of the Cranelift optimizer (written in ISLE) is guaranteed.<br>\nFor example, if we have a simplify rule of commutativity of addition,<br>\n<code>(iadd x y) =&gt; (iadd y x) =&gt; ...</code> can loop forever.</p>\n<p>Is such a bug possible in theory, according to the current design of Cranelift?<br>\nI'm aware of the directional e-graph approach with code skeleton reconstruction.<br>\nBut I find it hard to make a conclusion for the question.</p>",
        "id": 536547320,
        "sender_full_name": "Bongjun Jang",
        "timestamp": 1756366700
    },
    {
        "content": "<p>It's guaranteed for the trivial reason that we bound the rewrite step count (at 5, currently) :-) But you're right, in general, without that one couldn't prove termination with our general ruleset and abstractions</p>",
        "id": 536642461,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1756397748
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 536703559,
        "sender_full_name": "Bongjun Jang",
        "timestamp": 1756430222
    }
]