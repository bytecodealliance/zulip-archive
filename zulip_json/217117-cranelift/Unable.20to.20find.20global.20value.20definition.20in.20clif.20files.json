[
    {
        "content": "<p>Hey guys! I am trying to load some pre-compiled cranelift IR snippets emitted from rustc with cranelift-reader. My ultimate goal is to add those pre-compiled functions to JITModule. The problem i have now is some of those functions contain reference to external global value, like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"n\">gv0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">symbol</span><span class=\"w\"> </span><span class=\"n\">colocated</span><span class=\"w\"> </span><span class=\"n\">userextname0</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">alloc3</span>\n<span class=\"w\">    </span><span class=\"n\">gv1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">symbol</span><span class=\"w\"> </span><span class=\"n\">colocated</span><span class=\"w\"> </span><span class=\"n\">userextname2</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">alloc10</span>\n</code></pre></div>\n<p>but i can't find the actual definition of them in any of the emitted clif files. Is there any workaround for this?</p>",
        "id": 543389726,
        "sender_full_name": "Zz",
        "timestamp": 1759777445
    },
    {
        "content": "<p>One thing that's potentially surprising about Cranelift, coming from a compiler like LLVM, is that the IR is mostly function-centric. The core compiler library (<code>cranelift-codegen</code>) is entirely built around functions, and knows only that and opaque references to \"the rest of the world\" (the <code>UserExternalName</code> you're seeing). <code>cranelift-jit</code>, <code>cranelift-module</code>, etc. form a second layer of software that does start to aggregate functions into modules, but we don't have a textual representation for that. We'd need such a textual representation if you wanted to serialize a whole module and load it back in.</p>",
        "id": 543396466,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1759780127
    }
]