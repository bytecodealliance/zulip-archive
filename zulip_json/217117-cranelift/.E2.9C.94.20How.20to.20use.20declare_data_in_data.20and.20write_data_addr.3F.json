[
    {
        "content": "<p>Hello! I am writing a compiler for Scheme and have to initialize <code>GLOBALS</code> array for GC to trace globals. This array is initialized like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">globals_array</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">module</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">declare_data</span><span class=\"p\">(</span><span class=\"s\">\"CAPY_GLOBALS\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Linkage</span><span class=\"p\">::</span><span class=\"n\">Export</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">DataDescription</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"n\">desc</span><span class=\"p\">.</span><span class=\"n\">set_align</span><span class=\"p\">(</span><span class=\"n\">size_of</span><span class=\"p\">::</span><span class=\"o\">&lt;</span><span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">datas</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">constants</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">values</span><span class=\"p\">()</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">copied</span><span class=\"p\">()</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">chain</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">cache_cells</span><span class=\"p\">.</span><span class=\"n\">values</span><span class=\"p\">().</span><span class=\"n\">copied</span><span class=\"p\">());</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">datas</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">gv</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">module</span><span class=\"p\">.</span><span class=\"n\">declare_data_in_data</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">desc</span><span class=\"p\">);</span>\n\n<span class=\"w\">            </span><span class=\"n\">desc</span><span class=\"p\">.</span><span class=\"n\">write_data_addr</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">gv</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"n\">desc</span><span class=\"p\">.</span><span class=\"n\">define_zeroinit</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kt\">usize</span><span class=\"p\">);</span>\n\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">module</span><span class=\"p\">.</span><span class=\"n\">define_data</span><span class=\"p\">(</span><span class=\"n\">globals_array</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">desc</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n</code></pre></div>\n<p>but when I load produced shared-library using <code>dlopen</code> and then <code>dlsym</code> the array it is not populated with anyfing but fully zeroed, is that expected?</p>",
        "id": 536720646,
        "sender_full_name": "Adel Prokurov",
        "timestamp": 1756445419
    },
    {
        "content": "<p>what would be the correct way to put addresses of all constants into that array?</p>",
        "id": 536720665,
        "sender_full_name": "Adel Prokurov",
        "timestamp": 1756445437
    },
    {
        "content": "<p>Oh apparently I had to use <code>.define(vec![0; offset])</code> instead of zeroinit, that makes this thing work properly.</p>",
        "id": 536721029,
        "sender_full_name": "Adel Prokurov",
        "timestamp": 1756445678
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"382336\">Adel Prokurov</span> has marked this topic as resolved.</p>",
        "id": 536721031,
        "sender_full_name": "Notification Bot",
        "timestamp": 1756445679
    }
]