[
    {
        "content": "<p>I'm currently working on this. PHP -&gt; AST -&gt; CLIF -&gt; [Pulley / Cranelift / Cranelift interpreter]<br>\nAnd considering a more complex version: PHP -&gt; AST -&gt; MLIR dialect -&gt; MLIR -&gt; CLIF -&gt; ...</p>\n<p>I'm working through some of the PHP fundamentals but I'm curious if anyone here has thoughts on the feasibility of this approach and/or ideas about gotchas or how to do this well. Is Cranelift potentially a good fit?</p>",
        "id": 538004149,
        "sender_full_name": "JP Barringer",
        "timestamp": 1757166580
    },
    {
        "content": "<p>Sure, Cranelift should be usable as a backend; of course the hard part is going to be the \"JIT for a dynamic language\" part, not the codegen library/compiler backend that you choose :-)</p>\n<p>There are some kinds of things that JITs want to do for dynamism that, if your implementation becomes advanced enough, you'll have to find your way around in: for example, ICs and on-stack replacement (tiering up or tiering down, sometimes called \"deopt\" in that direction). One could do ICs with function pointers and indirect calls (so dynamic updates are just data updates); replacing stack frames is trickier but I have some vague thoughts how this could eventually work.</p>\n<p>I'm not sure about the pathway through MLIR that you describe -- at a glance at least, that seems unnecessarily complex, unless there's some other attraction to it (e.g., pre-existing frontend or PHP-specific dialect+optimizations or...)</p>",
        "id": 538113045,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1757289505
    },
    {
        "content": "<p>Thanks. Yeah I'm definitely running before I can walk here. This whole question started with a PHP interpreter, with JIT op as a tier 2 feature. Trying to figure out some architectural choices ahead of time to keep that path open. The idea was to use a common MIR for both the interpreter and JIT (with the Cranelift interpreter in mind â€“ although now I'm less sure of that approach).</p>\n<p>MLIR is a bit of a side quest. The question is, if this already is looking like PHP -&gt; HIR -&gt; CLIF then \"what if the HIR is a PHP MLIR dialect?\" This might open up some paths to other backends for AOT (notably MLIR -&gt; LLVM) further down the road.</p>",
        "id": 538234865,
        "sender_full_name": "JP Barringer",
        "timestamp": 1757340119
    }
]