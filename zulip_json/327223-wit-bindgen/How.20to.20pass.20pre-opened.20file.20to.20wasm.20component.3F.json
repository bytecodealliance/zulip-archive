[
    {
        "content": "<p>I am creating a custom wit world for my components. These components take a file as input and do some calculations, returning the result. My current design was using <code>descriptor</code> as the module's function argument:</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>world myworld {\n    interface calc {\n        use wasi:filesystem@0.2.5.preopen.{descriptor};\n        calculate: func(file: descriptor) -&gt; s64;\n    }\n}\n</code></pre></div>\n<p>However, I noticed that the <code>descriptor</code> resource does not implement <code>std::io::{Read, Seek}</code>, which I require. </p>\n<p>Is there any way to make this work besides relying on <code>std::fs::File</code> and reading the file inside the component ? That would require me to provide the input at a static location, for example <code>/input.bin</code>. </p>\n<p>Thank you!</p>",
        "id": 517890452,
        "sender_full_name": "mainrs",
        "timestamp": 1747158538
    },
    {
        "content": "<p>wit-bindgen just knows how to create rust bindings to wit interfaces and types, it doesnt know how to map anything to the types in std.</p>",
        "id": 517890755,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1747158651
    },
    {
        "content": "<p>wit-bindgen will create a <code>struct Descriptor</code> and that should have methods on it such as <code>read_via_stream</code> and <code>write_via_stream</code></p>",
        "id": 517890850,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1747158702
    },
    {
        "content": "<p>heres what wit-bindgen produces on just the wasi wits, in the wasi crate: <a href=\"https://docs.rs/wasi/latest/wasi/filesystem/types/struct.Descriptor.html\">https://docs.rs/wasi/latest/wasi/filesystem/types/struct.Descriptor.html</a></p>",
        "id": 517891033,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1747158769
    },
    {
        "content": "<p>if you need std::io::Read you can impl that on <a href=\"https://docs.rs/wasi/latest/wasi/filesystem/types/type.InputStream.html\">https://docs.rs/wasi/latest/wasi/filesystem/types/type.InputStream.html</a> using blocking_read.</p>",
        "id": 517891345,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1747158887
    },
    {
        "content": "<p>if you need Seek, you'll have to make your own struct that contains a Descriptor and the offset, track changes to the offset as you seek or read, and open a new stream when you need to read at a new offset.</p>",
        "id": 517891433,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1747158922
    },
    {
        "content": "<p>one day it may be easier to do all of that with std, but right now std isnt using Descriptors under the hood, so unfortunately you have to wire some of this up yourself.</p>",
        "id": 517891515,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1747158957
    },
    {
        "content": "<p>this is a very sketchy overview, happy to dive more into the details of any of these points as you need.</p>",
        "id": 517891616,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1747158986
    }
]