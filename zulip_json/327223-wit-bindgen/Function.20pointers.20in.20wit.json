[
    {
        "content": "<p>I'm looking to use wit/wit-bindgen/wasmtime to build what amounts to a plugin system. There are exported functions that we'll call from our wasmtime environment. Those functions will schedule callbacks whose flow control is handled by the host environment.</p>\n<p>The problem that I'm running into is that those symbols are private, and so they are inaccessible from the component (rightfully so). But I don't see a mechanism for specifying a function pointer as a parameter type to host function that would register the callback. Am I missing something, or is there missing functionality?</p>",
        "id": 519491397,
        "sender_full_name": "Paul Hummer",
        "timestamp": 1747784569
    },
    {
        "content": "<p>You can probably implement this with a host-defined resource type</p>",
        "id": 519673837,
        "sender_full_name": "Lann Martin",
        "timestamp": 1747851182
    },
    {
        "content": "<p>This example might help: <a href=\"https://docs.rs/wasmtime/33.0.0/wasmtime/component/bindgen_examples/_4_imported_resources/index.html\">https://docs.rs/wasmtime/33.0.0/wasmtime/component/bindgen_examples/_4_imported_resources/index.html</a></p>",
        "id": 519673902,
        "sender_full_name": "Lann Martin",
        "timestamp": 1747851210
    },
    {
        "content": "<p>The host would track the function pointer in the resource state (<code>MyLogger</code> in the example)</p>",
        "id": 519674034,
        "sender_full_name": "Lann Martin",
        "timestamp": 1747851251
    }
]