[
    {
        "content": "<p>Hi, I am trying to use some of the new async support to expose a sqlite interface to a rust wasm app. The async support is, overall, amazing! However, I am running into problems because the wit-bindgen generated wrappers are not Send, as their futures store some <code>*mut u8</code> internally. That is an issue because Axum, which I am using to do some HTTP routing, has a Handler trait which requires Send.</p>\n<p>I can work around this by doing the call to the generated wrapper inside of a wit_bindgen::spawn and then sending the result back over a oneshot channel but that's yucky. I am sure I do not appreciate the subtleties of this, but I am currently thinking that since components are currently single-threaded, marking everything as Send might be okay, and that would require some wrapper type around the *mut u8 marked as Send.</p>\n<p>Curious to hear thoughts and suggestions. Thanks</p>",
        "id": 546774801,
        "sender_full_name": "Jelle van den Hooff",
        "timestamp": 1761256748
    },
    {
        "content": "<p>Oh this is definitely a bug and we should be able to mark things as <code>Send</code>, if you're up for it I'm happy to review a PR to the generated bindings to ensure this</p>",
        "id": 546779086,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1761259351
    },
    {
        "content": "<p>Great, thanks, I will see if I can get my head around the codegen :)</p>",
        "id": 546798465,
        "sender_full_name": "Jelle van den Hooff",
        "timestamp": 1761272645
    },
    {
        "content": "<p>I submitted <a href=\"https://github.com/bytecodealliance/wit-bindgen/pull/1405\">https://github.com/bytecodealliance/wit-bindgen/pull/1405</a>. Feedback on style and substance very welcome</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen/pull/1405\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/275b7c18dd1c025a5f0347f3b79f08ef40014f6c/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f383333653536666534343235656131613437376537626335366363656666306133316363373462376134383636306331346530393433353035636233366537612f62797465636f6465616c6c69616e63652f7769742d62696e6467656e2f70756c6c2f31343035&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen/pull/1405\" title=\"Make generated rust async futures Send by jellevandenhooff 路 Pull Request #1405 路 bytecodealliance/wit-bindgen\">Make generated rust async futures Send by jellevandenhooff 路 Pull Request #1405 路 bytecodealliance/wit-bindgen</a></div><div class=\"message_embed_description\">The futures for generated rust async bindings were not always Send, because the LoweredParams held a non-Send *mut u8. To fix this, explicitly implement Send for LoweredParams. This makes the futur...</div></div></div>",
        "id": 546954433,
        "sender_full_name": "Jelle van den Hooff",
        "timestamp": 1761329422
    }
]