[
    {
        "content": "<p>I would like to use WASI-HTTP components in my project and generate function something like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">   </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">handle</span><span class=\"p\">(</span><span class=\"n\">_request</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">IncomingRequest</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">response_out</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">ResponseOutparam</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// some code</span>\n<span class=\"w\">   </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>in rust file I can import it without problem:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">http</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::{</span>\n<span class=\"w\">   </span><span class=\"n\">Fields</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">IncomingRequest</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">OutgoingBody</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">OutgoingResponse</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ResponseOutparam</span><span class=\"p\">,</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n<p>but when I would like to declare components in WIT file </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"p\">:</span><span class=\"nc\">example</span><span class=\"p\">;</span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">http</span><span class=\"o\">/</span><span class=\"n\">types</span><span class=\"o\">@</span><span class=\"mf\">1.0.0</span>\n</code></pre></div>\n<p>and using wit_bindgen generate code for kotlin:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wit_bindgen</span><span class=\"p\">::</span><span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"wit\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">exports</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"s\">\"component-model:example/test\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Test</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"p\">});</span>\n</code></pre></div>\n<p>I got this error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">http</span><span class=\"o\">@</span><span class=\"mf\">0.2.3</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">deps</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">directory</span>\n<span class=\"w\">            </span><span class=\"o\">-</span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">C</span><span class=\"p\">:</span><span class=\"err\">\\</span><span class=\"n\">rust</span><span class=\"o\">-</span><span class=\"n\">component</span><span class=\"err\">\\</span><span class=\"n\">wit</span><span class=\"err\">\\</span><span class=\"n\">example</span><span class=\"p\">.</span><span class=\"n\">wit</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"mi\">5</span>\n<span class=\"w\">             </span><span class=\"o\">|</span>\n<span class=\"w\">           </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">http</span><span class=\"o\">/</span><span class=\"n\">types</span><span class=\"o\">@</span><span class=\"mf\">0.2.3</span><span class=\"p\">;</span>\n<span class=\"w\">             </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">^--------</span>\n</code></pre></div>\n<p>I have already specified <code>wasi</code> version in <code>Cargo.toml</code> file</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.14.1\"</span>\n</code></pre></div>\n<p>Looks like I have missed something or make mistake...</p>",
        "id": 500030463,
        "sender_full_name": "Dmitry Chub",
        "timestamp": 1739728582
    },
    {
        "content": "<p>When you use wit-bindgen, its expecting to find wit files at the <code>path:</code> you specify in the macro, which is relative to the crate root. You probably don't actually want to do that, though. I fyou are just trying to export your wasi-http incoming handler from your function, you can do that with the wasi crate (no need for wit-bindgen) with <a href=\"https://docs.rs/wasi/latest/wasi/http/proxy/macro.export.html\">https://docs.rs/wasi/latest/wasi/http/proxy/macro.export.html</a></p>",
        "id": 500090789,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1739772436
    }
]