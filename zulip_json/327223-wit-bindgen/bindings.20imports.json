[
    {
        "content": "<p>I'm trying to call an imported function in my component; the wit file <a href=\"https://gist.github.com/yan/a6fc5f277bcd6b955e64074114b7fda8\">is here</a>. <code>cargo component bindings</code> generates a bindings file successfully and it produces a <code>getrandom()</code> function. I bind an implementation to the linker in my host code and that gets invoked as well. However, when the host implementation returns back to the component, it panics in the component's bindings code, when it unpacks the result/vector by unmarshalling the ptr/size due to unaligned access. Anyone have any pointers to what can be happening? (cc <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> )</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://gist.github.com/yan/a6fc5f277bcd6b955e64074114b7fda8\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/91f9baed8f4fc08c462d1a4de5a8c23942d45e97/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f6173736574732f676973742d6f672d696d6167652d3534666437646330373133652e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://gist.github.com/yan/a6fc5f277bcd6b955e64074114b7fda8\" title=\"world.wit\">world.wit</a></div><div class=\"message_embed_description\">GitHub Gist: instantly share code, notes, and snippets.</div></div></div>",
        "id": 521189900,
        "sender_full_name": "Yan Ivnitskiy",
        "timestamp": 1748563165
    },
    {
        "content": "<p>looks like everything works if <code>getrandom()</code> returns <code>list&lt;u8&gt;</code> instead of <code>result&lt;list&lt;u8&gt;&gt;</code></p>",
        "id": 521194215,
        "sender_full_name": "Yan Ivnitskiy",
        "timestamp": 1748565083
    },
    {
        "content": "<p>I don't know what the exact issue is but if you're using <code>cargo component</code> you may have better luck building with <code>cargo component build</code>.</p>",
        "id": 521287976,
        "sender_full_name": "Lann Martin",
        "timestamp": 1748608406
    },
    {
        "content": "<p>If you're working with WASIp3, which is guest-level async, you'll need to make sure you're using up-to-date tools and everything is still a work-in-progress meaning that it's not a smooth experience at this time. </p>\n<p>What you're running into here is that if you build for wasm32-wasip1 that doesn't build a component, it just builds a core module. With wasm32-wasip2 the linker being used by rustc doesn't have async support, so it's failing to recognize the intrinsic.</p>\n<p>To build for wasm32-wasip3 right now (which is a target that doesn't exist in rust) you typically need to build for wasm32-wasip1 and manually run <code>wasm-tools component new</code> yourself.</p>",
        "id": 521308791,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1748615351
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> i have been using wasm32-unknown-unknown; it works with my imported function returning <code>list&lt;u8&gt;</code> but not with it wrapped in a result; i wonder if it's a bindgen issue?</p>",
        "id": 521342117,
        "sender_full_name": "Yan Ivnitskiy",
        "timestamp": 1748626370
    },
    {
        "content": "<p>Can you confirm you've got the most up-to-date wasm-tools and wit-bindgen deps?</p>",
        "id": 521342313,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1748626453
    },
    {
        "content": "<p>had an older install of cargo-component; bumped to wit-bindgen 0.41; it works now, thanks</p>",
        "id": 521462901,
        "sender_full_name": "Yan Ivnitskiy",
        "timestamp": 1748713700
    }
]