[
    {
        "content": "<p>Hi, I'm not sure if this is intended, but giving the follow snippet, the compiler will \"no <code>Foo</code> in <code>my::test::test</code>\" unless the <code>test-fn</code> is uncommented. And this only applies to <code>variant</code> but not <code>enum</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wit_bindgen</span><span class=\"p\">::</span><span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">inline</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">r</span><span class=\"s\">\"</span>\n<span class=\"s\">        package my:test;</span>\n\n<span class=\"s\">        interface test {</span>\n<span class=\"s\">            variant foo {</span>\n<span class=\"s\">                a,</span>\n<span class=\"s\">            }</span>\n<span class=\"s\">            enum bar {</span>\n<span class=\"s\">                a,</span>\n<span class=\"s\">            }</span>\n<span class=\"s\">            /// test-fn: func(val: foo);</span>\n<span class=\"s\">        }</span>\n\n<span class=\"s\">        world the-world {</span>\n<span class=\"s\">            import test;</span>\n<span class=\"s\">        }</span>\n<span class=\"s\">    \"</span><span class=\"p\">,</span>\n<span class=\"p\">});</span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"p\">::</span><span class=\"n\">test</span><span class=\"p\">::</span><span class=\"n\">test</span><span class=\"p\">::</span><span class=\"n\">Bar</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"p\">::</span><span class=\"n\">test</span><span class=\"p\">::</span><span class=\"n\">test</span><span class=\"p\">::</span><span class=\"n\">Foo</span><span class=\"p\">;</span>\n</code></pre></div>",
        "id": 538576373,
        "sender_full_name": "anb",
        "timestamp": 1757486080
    },
    {
        "content": "<p>This is expected, but if you don't want this behavior you can pass <code>generate_unused_types: true</code> to the macro (documented <a href=\"https://docs.rs/wit-bindgen/latest/wit_bindgen/macro.generate.html\">here</a>)</p>",
        "id": 538669183,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1757515048
    },
    {
        "content": "<p>Thank you Alex, as always. How could I miss the obvious setting, and was also looking at the wrong docs at <a href=\"https://docs.rs/wasmtime/36.0.2/wasmtime/component/macro.bindgen.html\">wasmtime/component/bindgen</a>.</p>\n<p>Edit: Looks like the option works only for the guest(wit-bindgen), but not the host(wasmtime::component::bindgen).</p>",
        "id": 538674191,
        "sender_full_name": "anb",
        "timestamp": 1757516213
    },
    {
        "content": "<p>It's true yeah the two codebases have diverged over time and while we try to keep them similar they aren't the exact same</p>",
        "id": 538675829,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1757516590
    }
]