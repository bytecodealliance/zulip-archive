[
    {
        "content": "<p>Hi there. I'm trying to develop a PoC of having the Wasmtime-based runner to execute wasi-http p2 guest. For the guest, I tried doing a similar thing that Dan did here: <a href=\"https://github.com/sunfishcode/hello-wasi-http\">https://github.com/sunfishcode/hello-wasi-http</a>, but instead of generating all the bindings from WIT files, I tried using <a href=\"https://crates.io/crates/wasi/0.14.2+wasi-0.2.4\">wasi 0.14 crate</a>.</p>\n<p>Here you could see my code:</p>\n<ul>\n<li><a href=\"https://github.com/cardil/knative-serving-wasm/tree/ae6e3570e0b1c48e1c58364450d786ec273d5ace/runner\">runner</a></li>\n<li><a href=\"https://github.com/cardil/knative-serving-wasm/tree/main/examples/modules/reverse-text\">guest</a></li>\n</ul>\n<p>While trying to execute the runner, I get:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>Error: component imports instance `wasi:cli/environment@0.2.4`, but a matching implementation was not found in the linker\n\nCaused by:\n    0: instance export `get-environment` has the wrong type\n    1: function implementation is missing\n</code></pre></div>\n<p>Does this could be done, in a way I'm trying? Can someone help with this?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/sunfishcode/hello-wasi-http\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b3998da333b4ce3d93e37dc657bc7e855119ef83/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f653330626432636631633564656434313937386336326233663238633833343436623434383338333334373239636536366338646364333439656139666238352f73756e66697368636f64652f68656c6c6f2d776173692d68747470&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/sunfishcode/hello-wasi-http\" title=\"GitHub - sunfishcode/hello-wasi-http\">GitHub - sunfishcode/hello-wasi-http</a></div><div class=\"message_embed_description\">Contribute to sunfishcode/hello-wasi-http development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/cardil/knative-serving-wasm/tree/ae6e3570e0b1c48e1c58364450d786ec273d5ace/runner\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b764290558f94f331a36b7857cd12d5f17517780/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323031306539353433303532313333616236643431623337643938666139346666396365363938623236313464316466316534613136653730333764303831662f63617264696c2f6b6e61746976652d73657276696e672d7761736d&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/cardil/knative-serving-wasm/tree/ae6e3570e0b1c48e1c58364450d786ec273d5ace/runner\" title=\"knative-serving-wasm/runner at ae6e3570e0b1c48e1c58364450d786ec273d5ace · cardil/knative-serving-wasm\">knative-serving-wasm/runner at ae6e3570e0b1c48e1c58364450d786ec273d5ace · cardil/knative-serving-wasm</a></div><div class=\"message_embed_description\">A WASM (wasi) runner for Knative. Contribute to cardil/knative-serving-wasm development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/cardil/knative-serving-wasm/tree/main/examples/modules/reverse-text\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b764290558f94f331a36b7857cd12d5f17517780/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323031306539353433303532313333616236643431623337643938666139346666396365363938623236313464316466316534613136653730333764303831662f63617264696c2f6b6e61746976652d73657276696e672d7761736d&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/cardil/knative-serving-wasm/tree/main/examples/modules/reverse-text\" title=\"knative-serving-wasm/examples/modules/reverse-text at main · cardil/knative-serving-wasm\">knative-serving-wasm/examples/modules/reverse-text at main · cardil/knative-serving-wasm</a></div><div class=\"message_embed_description\">A WASM (wasi) runner for Knative. Contribute to cardil/knative-serving-wasm development by creating an account on GitHub.</div></div></div>",
        "id": 526609626,
        "sender_full_name": "Chris Suszynski",
        "timestamp": 1751376790
    },
    {
        "content": "<p>You will likely need to call <code>wasmtime_wasi::p2::add_to_linker_async</code> on the linker too. Your wasm component depends on the wasi-cli interfaces like all components compiled for the wasm32-wasip2 rustc target.</p>",
        "id": 526615478,
        "sender_full_name": "bjorn3",
        "timestamp": 1751378386
    },
    {
        "content": "<p>You are linking <code>wasmtime_wasi_http</code> into your host but that doesn't include all of the interfaces needed by Rust <code>wasi</code> targets. You would either need your guest to target <code>wasm32-unknown-unknown</code> or ... do what bjorn3 just said <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 526615533,
        "sender_full_name": "Lann Martin",
        "timestamp": 1751378400
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"480579\">@Lann Martin</span> I'm building the guest like this: <a href=\"https://github.com/cardil/knative-serving-wasm/blob/ae6e3570e0b1c48e1c58364450d786ec273d5ace/build/tasks/build.go#L24-L25\">build/tasks/build.go#L24-L25</a>, so using the <code>wasm32-wasip2</code> target. So, I thought it would have those interfaces.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/cardil/knative-serving-wasm/blob/ae6e3570e0b1c48e1c58364450d786ec273d5ace/build/tasks/build.go#L24-L25\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b764290558f94f331a36b7857cd12d5f17517780/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323031306539353433303532313333616236643431623337643938666139346666396365363938623236313464316466316534613136653730333764303831662f63617264696c2f6b6e61746976652d73657276696e672d7761736d&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/cardil/knative-serving-wasm/blob/ae6e3570e0b1c48e1c58364450d786ec273d5ace/build/tasks/build.go#L24-L25\" title=\"knative-serving-wasm/build/tasks/build.go at ae6e3570e0b1c48e1c58364450d786ec273d5ace · cardil/knative-serving-wasm\">knative-serving-wasm/build/tasks/build.go at ae6e3570e0b1c48e1c58364450d786ec273d5ace · cardil/knative-serving-wasm</a></div><div class=\"message_embed_description\">A WASM (wasi) runner for Knative. Contribute to cardil/knative-serving-wasm development by creating an account on GitHub.</div></div></div>",
        "id": 526630422,
        "sender_full_name": "Chris Suszynski",
        "timestamp": 1751382477
    },
    {
        "content": "<p>Yes, by targetting <code>wasm32-wasip2</code> your guest is implicitly importing a bunch of <code>wasi</code> interfaces that aren't currently provided by your host, which currently only implements the <code>wasi:http/proxy</code> world by <a href=\"https://github.com/cardil/knative-serving-wasm/blob/ae6e3570e0b1c48e1c58364450d786ec273d5ace/runner/src/main.rs#L33\">linking with wasmtime_wasi_http</a>.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/cardil/knative-serving-wasm/blob/ae6e3570e0b1c48e1c58364450d786ec273d5ace/runner/src/main.rs#L33\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b764290558f94f331a36b7857cd12d5f17517780/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323031306539353433303532313333616236643431623337643938666139346666396365363938623236313464316466316534613136653730333764303831662f63617264696c2f6b6e61746976652d73657276696e672d7761736d&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/cardil/knative-serving-wasm/blob/ae6e3570e0b1c48e1c58364450d786ec273d5ace/runner/src/main.rs#L33\" title=\"knative-serving-wasm/runner/src/main.rs at ae6e3570e0b1c48e1c58364450d786ec273d5ace · cardil/knative-serving-wasm\">knative-serving-wasm/runner/src/main.rs at ae6e3570e0b1c48e1c58364450d786ec273d5ace · cardil/knative-serving-wasm</a></div><div class=\"message_embed_description\">A WASM (wasi) runner for Knative. Contribute to cardil/knative-serving-wasm development by creating an account on GitHub.</div></div></div>",
        "id": 526642749,
        "sender_full_name": "Lann Martin",
        "timestamp": 1751386410
    },
    {
        "content": "<p>I haven't worked on this for the latest versions of wasmtime but I think you would need to switch to instead use these two functions:</p>\n<ul>\n<li><a href=\"https://docs.rs/wasmtime-wasi/34.0.1/wasmtime_wasi/p2/fn.add_to_linker_async.html\">https://docs.rs/wasmtime-wasi/34.0.1/wasmtime_wasi/p2/fn.add_to_linker_async.html</a> </li>\n<li><a href=\"https://docs.rs/wasmtime-wasi-http/34.0.1/wasmtime_wasi_http/fn.add_only_http_to_linker_async.html\">https://docs.rs/wasmtime-wasi-http/34.0.1/wasmtime_wasi_http/fn.add_only_http_to_linker_async.html</a></li>\n</ul>",
        "id": 526643190,
        "sender_full_name": "Lann Martin",
        "timestamp": 1751386582
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"480579\">@Lann Martin</span> Yes, it works!! Thanks a lot! You can see the change here: <a href=\"https://github.com/cardil/knative-serving-wasm/pull/4\">https://github.com/cardil/knative-serving-wasm/pull/4</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/cardil/knative-serving-wasm/pull/4\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/558b059c31a5893edca6dbe48bdca846e1446858/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f303537333762346634346530373362343230383532306661363339383738396362633735333534383934616338373431353137643063336234356464373533372f63617264696c2f6b6e61746976652d73657276696e672d7761736d2f70756c6c2f34&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/cardil/knative-serving-wasm/pull/4\" title=\":lady_beetle: Runner works by cardil · Pull Request #4 · cardil/knative-serving-wasm\">:lady_beetle: Runner works by cardil · Pull Request #4 · cardil/knative-serving-wasm</a></div><div class=\"message_embed_description\">🥳 🍾 The runner works as expected:\n$ http :8000 text==&#39;Hola!&#39;\nHTTP/1.1 200 OK\ndate: Tue, 01 Jul 2025 17:44:50 GMT\ntransfer-encoding: chunked\n\n!aloH\n\nRunner process:\n$ cargo run --color=alway...</div></div></div>",
        "id": 526658560,
        "sender_full_name": "Chris Suszynski",
        "timestamp": 1751392634
    },
    {
        "content": "<p>The <code>wasmtime_wasi_http</code> crate, shows in the usage example - <a href=\"https://docs.rs/wasmtime-wasi-http/34.0.1/wasmtime_wasi_http/index.html\">https://docs.rs/wasmtime-wasi-http/34.0.1/wasmtime_wasi_http/index.html</a> to just use:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime_wasi_http</span><span class=\"p\">::</span><span class=\"n\">add_to_linker_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n</code></pre></div>\n<p>But that does not work either. I wonder if the doc is wrong on this? Probably yes, as the tests are using this working tandem (I should have been looking at the tests, they never lie!):</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/c953cc8fd16df3ff73853101402f343436ab4cef/crates/wasi-http/tests/all/p2/async_.rs#L15-L16\">https://github.com/bytecodealliance/wasmtime/blob/c953cc8fd16df3ff73853101402f343436ab4cef/crates/wasi-http/tests/all/p2/async_.rs#L15-L16</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/c953cc8fd16df3ff73853101402f343436ab4cef/crates/wasi-http/tests/all/p2/async_.rs#L15-L16\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/3eb4a50b6cd0aecc78f967d2646d4ba7cfc50443/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f666437336330373564383834626666386139383362373766373865643965356531386339363733663362396231336232626334323639306662373662333663312f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/c953cc8fd16df3ff73853101402f343436ab4cef/crates/wasi-http/tests/all/p2/async_.rs#L15-L16\" title=\"wasmtime/crates/wasi-http/tests/all/p2/async_.rs at c953cc8fd16df3ff73853101402f343436ab4cef · bytecodealliance/wasmtime\">wasmtime/crates/wasi-http/tests/all/p2/async_.rs at c953cc8fd16df3ff73853101402f343436ab4cef · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 526660379,
        "sender_full_name": "Chris Suszynski",
        "timestamp": 1751393353
    },
    {
        "content": "<p>Once again, thanks for your help, folks! I appreciate it very much!</p>",
        "id": 526660567,
        "sender_full_name": "Chris Suszynski",
        "timestamp": 1751393438
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"933910\">Chris Suszynski</span> <a href=\"#narrow/channel/219900-wasi/topic/Help.3A.20Wasmtime's.20runner.20for.20WASI-HTTP.20p2.20guest/near/526660379\">said</a>:</p>\n<blockquote>\n<p>The <code>wasmtime_wasi_http</code> crate, shows in the usage example - <a href=\"https://docs.rs/wasmtime-wasi-http/34.0.1/wasmtime_wasi_http/index.html\">https://docs.rs/wasmtime-wasi-http/34.0.1/wasmtime_wasi_http/index.html</a> to just use:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime_wasi_http</span><span class=\"p\">::</span><span class=\"n\">add_to_linker_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n</code></pre></div>\n<p>But that does not work either. I wonder if the doc is wrong on this? Probably yes, as the tests are using this working tandem (I should have been looking at the tests, they never lie!):</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/c953cc8fd16df3ff73853101402f343436ab4cef/crates/wasi-http/tests/all/p2/async_.rs#L15-L16\">https://github.com/bytecodealliance/wasmtime/blob/c953cc8fd16df3ff73853101402f343436ab4cef/crates/wasi-http/tests/all/p2/async_.rs#L15-L16</a></p>\n</blockquote>\n<p>file a repro if you have a moment against the docs! that should ALWAYS work. :-)</p>",
        "id": 526661261,
        "sender_full_name": "Ralph",
        "timestamp": 1751393755
    },
    {
        "content": "<p>ill fix the docs rn</p>",
        "id": 526662350,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1751394252
    },
    {
        "content": "<p>thank you for catching our error</p>",
        "id": 526662352,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1751394253
    },
    {
        "content": "<p>unfortunately that doc is no_run, because it starts a server that never gets any requests and never dies, so it would just spin forever</p>",
        "id": 526662728,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1751394424
    },
    {
        "content": "<p>otherwise cargo doc would have caught this bug</p>",
        "id": 526662759,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1751394432
    },
    {
        "content": "<p>im not brave enough to fix the no_running-ness right now. we regret the error.</p>",
        "id": 526662790,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1751394452
    },
    {
        "content": "<p>Is the example actually <em>wrong</em>? It might be confusing that your guest can't target <code>wasm32-wasip2</code> but it would work fine for a guest that just uses <code>proxy</code> right? Or am I missing something...?</p>",
        "id": 526663075,
        "sender_full_name": "Lann Martin",
        "timestamp": 1751394584
    },
    {
        "content": "<p>its just missing the add_to_linker for the wasmtime-wasi parts</p>",
        "id": 526663752,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1751394901
    },
    {
        "content": "<p>which are required, even in <code>proxy</code>, for the io package, stdio from cli, and others</p>",
        "id": 526663830,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1751394933
    },
    {
        "content": "<p>I'm pretty sure <code>wasmtime_wasi_http::add_to_linker_async</code> does add those, which is what differentiates it from <code>add_only_http_to_linker_async</code></p>",
        "id": 526664061,
        "sender_full_name": "Lann Martin",
        "timestamp": 1751395042
    },
    {
        "content": "<p>Either way it seems reasonable for the example to link the rest of wasi just to avoid this kind of confusion.</p>",
        "id": 526664211,
        "sender_full_name": "Lann Martin",
        "timestamp": 1751395124
    },
    {
        "content": "<p>oh, you know what, you're right.</p>",
        "id": 526664268,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1751395152
    },
    {
        "content": "<p>but, unfortunately, its very hard to actually target the proxy world, virtually all guests end up being proxy + cli imports</p>",
        "id": 526664315,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1751395175
    },
    {
        "content": "<p>the <code>wasmtime server -Scli</code> set</p>",
        "id": 526664359,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1751395187
    },
    {
        "content": "<p>Spin always links both so I'm not going to argue there. <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 526664453,
        "sender_full_name": "Lann Martin",
        "timestamp": 1751395233
    },
    {
        "content": "<p>once we have 0.3 we can finally solve that problem in wasm with wasi-virt, but we gave up on it in 0.2 because too much pain for too little gain</p>",
        "id": 526664480,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1751395255
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasmtime/pull/11171\">https://github.com/bytecodealliance/wasmtime/pull/11171</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/11171\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/e2a0b12b7707471a31093f964e45d21e657c0253/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663666343734303337376330323438666533353366316661626561623639323032323932336633323032373261323834303731306533363063353038373337612f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f3131313731&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/11171\" title=\"Cargo doc fixes by pchickey · Pull Request #11171 · bytecodealliance/wasmtime\">Cargo doc fixes by pchickey · Pull Request #11171 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">wasmtime-wasi-http: fix docs missing wasmtime_wasi::p2::add_to_linker. This creates the equivelant of wasmtime serve -Scli, which is what most guests end up needing. reported in https://bytecodeall...</div></div></div>",
        "id": 526664694,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1751395369
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253992\">@Pat Hickey</span> <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 526666764,
        "sender_full_name": "Chris Suszynski",
        "timestamp": 1751396326
    }
]