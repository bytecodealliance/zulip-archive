[
    {
        "content": "<p>Forgive me if there's something simple I've missed, but does anything stand out as incorrect with this <code>wit_bindgen::generate!</code> use here?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wit_bindgen</span><span class=\"p\">::</span><span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">world</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"plugin\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">with</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"s\">\"wasi:http/types@0.3.0-rc-2025-09-16\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">wasmtime_wasi_http</span><span class=\"p\">::</span><span class=\"n\">p3</span><span class=\"p\">::</span><span class=\"n\">bindings</span><span class=\"p\">::</span><span class=\"n\">http</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">true</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">generate_all</span>\n<span class=\"p\">});</span>\n</code></pre></div>\n<p>Leads to the following compiler error (for [<code>take_handle</code>,<code>from_handle</code>] X [<code>wasmtime_wasi_http::p3::Request</code>,<code>wasmtime_wasi_http::p3::Response</code>]):</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>error<span class=\"o\">[</span>E0599<span class=\"o\">]</span>:<span class=\"w\"> </span>no<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>or<span class=\"w\"> </span>associated<span class=\"w\"> </span>item<span class=\"w\"> </span>named<span class=\"w\"> </span><span class=\"sb\">`</span>from_handle<span class=\"sb\">`</span><span class=\"w\"> </span>found<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>struct<span class=\"w\"> </span><span class=\"sb\">`</span>wasmtime_wasi_http::p3::Request<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>the<span class=\"w\"> </span>current<span class=\"w\"> </span>scope\n<span class=\"w\">  </span>--&gt;<span class=\"w\"> </span>src/apps/mitmproxy-rs/src/plugins/mod.rs:25:1\n<span class=\"w\">   </span><span class=\"p\">|</span>\n<span class=\"m\">25</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\">   </span>wit_bindgen::generate!<span class=\"o\">({</span>\n<span class=\"w\">   </span><span class=\"p\">|</span><span class=\"w\">  </span>_^\n<span class=\"m\">26</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\">     </span>world:<span class=\"w\"> </span><span class=\"s2\">\"plugin\"</span>,\n<span class=\"m\">27</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\">     </span>with:<span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"m\">28</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\">         </span><span class=\"s2\">\"wasi:http/types@0.3.0-rc-2025-09-16\"</span>:<span class=\"w\"> </span>wasmtime_wasi_http::p3::bindings::http::types,\n...<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"m\">31</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\">     </span>generate_all\n<span class=\"m\">32</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"o\">})</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"p\">|</span>__^<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>or<span class=\"w\"> </span>associated<span class=\"w\"> </span>item<span class=\"w\"> </span>not<span class=\"w\"> </span>found<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"sb\">`</span>wasmtime_wasi_http::p3::Request<span class=\"sb\">`</span>\n<span class=\"w\">   </span><span class=\"p\">|</span>\n<span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>this<span class=\"w\"> </span>error<span class=\"w\"> </span>originates<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>the<span class=\"w\"> </span>macro<span class=\"w\"> </span><span class=\"sb\">`</span>wit_bindgen::generate<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"k\">in</span><span class=\"w\"> </span>Nightly<span class=\"w\"> </span>builds,<span class=\"w\"> </span>run<span class=\"w\"> </span>with<span class=\"w\"> </span>-Z<span class=\"w\"> </span>macro-backtrace<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>more<span class=\"w\"> </span>info<span class=\"o\">)</span>\n</code></pre></div>\n<p>Enabled features + wit_bindgen version (in case it matters)</p>\n<div class=\"codehilite\" data-code-language=\"cargo.toml\"><pre><span></span><code>// ...\nwasmtime = { path = \"../wasmtime/crates/wasmtime\", features = [\"component-model-async\"] }\nwasmtime-wasi = { path = \"../wasmtime/crates/wasi\", features = [\"p3\"] }\nwasmtime-wasi-http = { path = \"../wasmtime/crates/wasi-http\", features = [\"p3\"] }\nwit-bindgen = { version = \"0.46.0\" }\n</code></pre></div>\n<p>WIT snippet (in case it matters):</p>\n<div class=\"codehilite\" data-code-language=\"world.wit\"><pre><span></span><code>world plugin {\n    use wasi:http/types@0.3.0-rc-2025-09-16.{request, response};\n    // ...\n\n    variant event-data {\n        request(request),\n        response(response),\n    }\n}\n</code></pre></div>",
        "id": 542363910,
        "sender_full_name": "Theodore Brockman",
        "timestamp": 1759264881
    },
    {
        "content": "<p>Using <code>wasmtime::component::bindgen</code> instead seems to compile:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">world</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"plugin\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">with</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"s\">\"wasi:http/types@0.3.0-rc-2025-09-16\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">wasmtime_wasi_http</span><span class=\"p\">::</span><span class=\"n\">p3</span><span class=\"p\">::</span><span class=\"n\">bindings</span><span class=\"p\">::</span><span class=\"n\">http</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"p\">});</span>\n</code></pre></div>\n<p>Whatever the distinction between the two that I'd missed ends up being <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 542368238,
        "sender_full_name": "Theodore Brockman",
        "timestamp": 1759266572
    },
    {
        "content": "<p>wit-bindgen is for generating the guest part, so what is inside the .wasm file, while wasmtime::component::bindgen generates the host part, the thing you run on your machine to load and run these comonent wasm files</p>",
        "id": 542372334,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1759268552
    },
    {
        "content": "<p>so wit-bindgen code needs some wasm32-* target to compile</p>",
        "id": 542372422,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1759268605
    },
    {
        "content": "<p>Yeah this is a mismatch where you're pointing <code>wit-bindgen</code>-the-crate at <code>wasmtime::component::bindgen!</code>-generated bindings which is a host/guest mismatch</p>",
        "id": 542507135,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1759328041
    },
    {
        "content": "<p><span aria-label=\"man facepalming\" class=\"emoji emoji-1f926-200d-2642\" role=\"img\" title=\"man facepalming\">:man_facepalming:</span> think my brain completely glossed over the difference in <a href=\"https://component-model.bytecodealliance.org/language-support/rust.html#implementing-and-exporting-a-resource-implementation-in-a-host\">https://component-model.bytecodealliance.org/language-support/rust.html#implementing-and-exporting-a-resource-implementation-in-a-host</a> </p>\n<p>thanks for the explanation</p>",
        "id": 542562254,
        "sender_full_name": "Theodore Brockman",
        "timestamp": 1759344610
    }
]