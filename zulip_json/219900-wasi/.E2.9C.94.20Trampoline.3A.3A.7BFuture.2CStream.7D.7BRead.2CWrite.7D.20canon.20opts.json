[
    {
        "content": "<p>Hey all, quick question -- it seems like <code>wasmtime_environ::Trampoline::StreamWrite</code> and friends have <code>async_</code> set in theircanon opts (via the <code>options: OptionsIndex</code> member). </p>\n<p>I'm pulling the opts like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">                </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">options</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span>\n<span class=\"w\">                    </span><span class=\"p\">.</span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"c1\">// &amp;wasmtime_environ::Component</span>\n<span class=\"w\">                    </span><span class=\"p\">.</span><span class=\"n\">options</span>\n<span class=\"w\">                    </span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">options</span><span class=\"p\">)</span>\n<span class=\"w\">                    </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"failed to find options\"</span><span class=\"p\">);</span>\n</code></pre></div>\n<p>When I get the <code>CanonicalOptions</code> object out, it's got <code>async_</code> set and no <code>callback</code> (which is invalid)</p>\n<p>Intuitively, the canon functions are clearly not async, so I'm thinking the issue here is that <code>async_</code> is set on the <code>CanonicalOptions</code> that got created?</p>\n<p>Alternatively, if I read this line in <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/CanonicalABI.md#canonopt-validation\">the canonopt validation section</a> a bit differently:</p>\n<blockquote>\n<ul>\n<li><span aria-label=\"shuffle\" class=\"emoji emoji-1f500\" role=\"img\" title=\"shuffle\">:shuffle:</span> <code>callback</code> - the function has type <code>(func (param i32 i32 i32) (result i32))</code> and cannot be present without <code>async</code> and is only allowed with <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/CanonicalABI.md#canon-lift\"><code>canon lift</code></a></li>\n</ul>\n</blockquote>\n<p>Maybe the intent was that it's fine for <code>async_</code> to be set, but <code>callback</code> <em>can</em> be missing (and I should basically only check that <em>non</em>-async things don't have a callback, not that all async things <em>must</em> have a callback).</p>\n<p>Obviously during <code>canon_lift</code> the callback is quite required, but the canon function is a little blurrier...</p>\n<p>I'm leaning towards the idea that the <code>CanonicalOptions</code> being set/saved for the relevant <code>Trampoline::</code> members should not have <code>async_</code> set in the first place.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/CanonicalABI.md#canonopt-validation\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/7fc6da16cfa7069274d3b7aa350dd0ae4d436425/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f613030376431356539666433613636306135336131613834313366323166363731383864383261306535313966303131366663323565356366623432323964632f576562417373656d626c792f636f6d706f6e656e742d6d6f64656c&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/CanonicalABI.md#canonopt-validation\" title=\"component-model/design/mvp/CanonicalABI.md at main · WebAssembly/component-model\">component-model/design/mvp/CanonicalABI.md at main · WebAssembly/component-model</a></div><div class=\"message_embed_description\">Repository for design and specification of the Component Model - WebAssembly/component-model</div></div></div>",
        "id": 537525076,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1756920802
    },
    {
        "content": "<p>ah yeah this is where each option is a bit overloaded in the context of each intrinsic</p>",
        "id": 537526179,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1756921198
    },
    {
        "content": "<p>but <code>async_</code> means whether these intrinsics are blocking or not basically for stream/future read/write</p>",
        "id": 537526218,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1756921212
    },
    {
        "content": "<p>and the validation is different from <code>canon lift</code>'d functions for now (in the future though we might allow just-<code>async_</code> on functions)</p>",
        "id": 537526265,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1756921231
    },
    {
        "content": "<p>Ah OK, I thought that <em>might</em> be the case -- that somehow <code>async_</code> meant something different in this context</p>",
        "id": 537526277,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1756921237
    },
    {
        "content": "<p>OK, great, I've got that implemented -- I just disabled that last check for <code>stream.write</code>/etc and kept all the other ones on</p>",
        "id": 537526361,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1756921267
    },
    {
        "content": "<p>FWIW you can skip all the validation bits in jco b/c wasmparser/wasmtime-environ do all that for you</p>",
        "id": 537526426,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1756921301
    },
    {
        "content": "<p>Even better, I'll do that!</p>",
        "id": 537526532,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1756921339
    },
    {
        "content": "<p>Thanks for the help! I think this makes sense now</p>",
        "id": 537526777,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1756921441
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598440\">Victor Adossi</span> has marked this topic as resolved.</p>",
        "id": 537526786,
        "sender_full_name": "Notification Bot",
        "timestamp": 1756921443
    }
]