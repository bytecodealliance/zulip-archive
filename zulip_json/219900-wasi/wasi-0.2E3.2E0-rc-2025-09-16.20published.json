[
    {
        "content": "<p>Hey all, we published another 0.3.0 RC yesterday which includes updates to <code>wasi:cli</code> and <code>wasi:http</code>. We did this on the request of Wasmtime, so that these changes can be back ported in time for next Monday's Wasmtime release.</p>",
        "id": 540027097,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1758118514
    },
    {
        "content": "<p>For anyone tracking the WASI releases: you may have noticed yesterday's release was quite noisy. We've been working on continuing the automation of the release process, and ran into a lot of errors and issues along the way.</p>",
        "id": 540027485,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1758118621
    },
    {
        "content": "<p>The good news: publishing any future RCs should now be a matter of running a single script locally that takes about 5 mins to complete.</p>",
        "id": 540027668,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1758118673
    },
    {
        "content": "<p>The less good news: we do need to make some improvements to the WASI repos. Having run this latest release, I think we should:</p>\n<ul>\n<li>enable merge queues everywhere, prevent pushing directly to the main branch, and require CI to pass before merging</li>\n<li>add CI for all 0.3 draft proposals</li>\n<li>agree on a merge strategy for all WASI proposals</li>\n</ul>\n<p>I'll add this to the agenda for tomorrow's WASI meeting to discuss further.</p>",
        "id": 540029976,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1758119227
    },
    {
        "content": "<p>Merge queues are probably unnecessary for WASI repos, but requiring PRs w/ passing CI makes sense.</p>",
        "id": 540030756,
        "sender_full_name": "Lann Martin",
        "timestamp": 1758119412
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"480579\">@Lann Martin</span> I was mainly thinking of merge queues as a convenience feature, so maintainers don't need to wait for CI to finish to approve a change. But it sounds like there may be downsides to GitHub's merge queues I'm not aware of?</p>",
        "id": 540047901,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1758123583
    },
    {
        "content": "<p>Ah OK. I don't know what the tradeoffs are between merge queues and automerge for that. I guess my perception is that merge queues add complexity but my experience is mostly with non-github merge queues. <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 540048442,
        "sender_full_name": "Lann Martin",
        "timestamp": 1758123727
    },
    {
        "content": "<p>Oh by \"automerge\" you mean GitHub's \"merge when ready button\", right? If so, we're talking about the same thing: that's the front-end to GitHub's merge queues feature.</p>",
        "id": 540049462,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1758123968
    },
    {
        "content": "<p>I mean the \"Enable auto-merge\" button <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span> <br>\n<a href=\"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request\">https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request</a><br>\nvs<br>\n<a href=\"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/merging-a-pull-request-with-a-merge-queue\">https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/merging-a-pull-request-with-a-merge-queue</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/7f83a38469d964e4675c221d8f4a8787f3c19884/68747470733a2f2f646f63732e6769746875622e636f6d2f6173736574732f63622d3334352f696d616765732f736f6369616c2d63617264732f64656661756c742e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-request\" title=\"Automatically merging a pull request - GitHub Docs\">Automatically merging a pull request - GitHub Docs</a></div><div class=\"message_embed_description\">You can increase development velocity by enabling auto-merge for a pull request so that the pull request will merge automatically when all merge requirements are met.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/merging-a-pull-request-with-a-merge-queue\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/7f83a38469d964e4675c221d8f4a8787f3c19884/68747470733a2f2f646f63732e6769746875622e636f6d2f6173736574732f63622d3334352f696d616765732f736f6369616c2d63617264732f64656661756c742e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/merging-a-pull-request-with-a-merge-queue\" title=\"Merging a pull request with a merge queue - GitHub Docs\">Merging a pull request with a merge queue - GitHub Docs</a></div><div class=\"message_embed_description\">If a merge queue is required by the branch protection setting for the branch, you can add your pull requests to a merge queue and GitHub will merge the pull requests for you once all required checks have passed.</div></div></div>",
        "id": 540049820,
        "sender_full_name": "Lann Martin",
        "timestamp": 1758124045
    },
    {
        "content": "<p>iirc merge queues are newer so maybe there aren't significant downsides to it over auto-merge</p>",
        "id": 540049902,
        "sender_full_name": "Lann Martin",
        "timestamp": 1758124065
    },
    {
        "content": "<p>Ahh, I didn't realize that. Yeah no, the thing I care about really is adding that button. I thought that was the same feature, but I guess not.</p>",
        "id": 540050199,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1758124135
    },
    {
        "content": "<p><span aria-label=\"sparkles\" class=\"emoji emoji-2728\" role=\"img\" title=\"sparkles\">:sparkles:</span>convenience<span aria-label=\"sparkles\" class=\"emoji emoji-2728\" role=\"img\" title=\"sparkles\">:sparkles:</span></p>",
        "id": 540050259,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1758124149
    },
    {
        "content": "<p>But yeah, will bring this to the broader group in tomorrow's meeting</p>",
        "id": 540050509,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1758124215
    },
    {
        "content": "<p>I suspect given the low PR volume and fast CI for WASI repos it probably makes very little difference. (Auto-merge vs Merge Queue...vs neither, really)</p>",
        "id": 540050657,
        "sender_full_name": "Lann Martin",
        "timestamp": 1758124246
    },
    {
        "content": "<p>Hi, ignorant question, where do I see the wasi releases?  Is there a single place with release notes, or do I just look in all the different wasi-cli, wasi-http, etc git modules?</p>",
        "id": 540185510,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1758186950
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"396878\">@Andy Wingo</span> not an ignorant question at all! — We generate release notes per-repo, so for example for the latest <code>wasi:http</code> 0.3 RC the release notes are here:<br>\n<a href=\"https://github.com/WebAssembly/wasi-http/releases/tag/v0.3.0-rc-2025-09-16\">https://github.com/WebAssembly/wasi-http/releases/tag/v0.3.0-rc-2025-09-16</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-http/releases/tag/v0.3.0-rc-2025-09-16\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/8667778654c11dda5be5d6d0ee4e7561f08ddb33/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353566623563343937626565623030373439393733656165363834386238346463626636333932366136363661353566353935333636623763313330376537352f576562417373656d626c792f776173692d687474702f72656c65617365732f7461672f76302e332e302d72632d323032352d30392d3136&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-http/releases/tag/v0.3.0-rc-2025-09-16\" title=\"Release v0.3.0-rc-2025-09-16 · WebAssembly/wasi-http\">Release v0.3.0-rc-2025-09-16 · WebAssembly/wasi-http</a></div><div class=\"message_embed_description\">What's Changed\n\np3: rework consume-body by @rvolosatovs in #185\nUpdate 0.3.0 WIT definitions to 0.3.0-rc-2025-09-16 by @github-actions[bot] in #189\n\nFull Changelog: v0.3.0-rc-2025-08-15...v0.3.0-rc...</div></div></div>",
        "id": 540219114,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1758198014
    },
    {
        "content": "<p>I believe on this release the main changes were to wasi:http and wasi:cli.</p>",
        "id": 540219301,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1758198070
    }
]