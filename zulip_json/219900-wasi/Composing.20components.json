[
    {
        "content": "<p>Hi,<br>\nI am looking for an exemplary example of how to create and compose Wasm components.</p>\n<p><strong><em>WASI</em></strong></p>\n<p><strong>WASIp3</strong><br>\nI see that WASIp3 is in progress. I assume that using WASIp3 for the example would be ideal. However, WASIp3 may not be ready to create an example of composing components. Can I get some advice here, please?</p>\n<p><strong>WASIp2</strong><br>\nWhen I have tried to write an example of how to create and compose Wasm components using <code>cargo component</code> I have hit an issue.  Specifically, the issue that <code>cargo-component</code> doesn't yet work with the WASIp2 target &lt; <a href=\"https://github.com/bytecodealliance/cargo-component/issues/364#issuecomment-2575877508\">https://github.com/bytecodealliance/cargo-component/issues/364#issuecomment-2575877508</a> &gt;</p>\n<p><strong>WASIp1</strong><br>\nThe official Rust Wasm component model documentation &lt; <a href=\"https://component-model.bytecodealliance.org/language-support/rust.html\">https://component-model.bytecodealliance.org/language-support/rust.html</a> &gt; uses WASIp1 exclusively. </p>\n<p>Is there a timeline for when the <code>cargo component</code> crate will support WASIp2?<br>\nIs it possible that the <code>cargo component</code> crate will just skip straight to WASIp3 (because of potential double handling)?<br>\nIs there any indication of a timeline/timeframe where I could create an example of using Wasm components using the WASIp3 target in production?</p>\n<p>Thanks <br>\nTim McCallum</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/cargo-component/issues/364#issuecomment-2575877508\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/13542549f4b04955654e46cde78614c2e82d76ca/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f613234356132383561326232643532633037376437613634373762383365636562363930396531633133383738396564323639636334313032316530343230352f62797465636f6465616c6c69616e63652f636172676f2d636f6d706f6e656e742f6973737565732f333634&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/cargo-component/issues/364#issuecomment-2575877508\" title=\"`cargo component` does not obey `.cargo/config.toml` · Issue #364 · bytecodealliance/cargo-component\">`cargo component` does not obey `.cargo/config.toml` · Issue #364 · bytecodealliance/cargo-component</a></div><div class=\"message_embed_description\">I use .cargo/config.toml to control the compilation of workspace. # .cargo/config.toml [build] target = \"wasm32-wasip2\" But cargo component build still generates wasm32-wasip1 cargo-component-compo...</div></div></div>",
        "id": 508866517,
        "sender_full_name": "Timothy McCallum",
        "timestamp": 1743208653
    },
    {
        "content": "<p>I have started a GitHub repo with what I think is currently a suitable example (using wasip1):</p>\n<p><a href=\"https://github.com/tpmccallum/composing-wasm-components/tree/main/geolocation\">https://github.com/tpmccallum/composing-wasm-components/tree/main/geolocation</a></p>\n<p>If I follow <a href=\"https://github.com/tpmccallum/composing-wasm-components/blob/main/README.md\">the README.md's instructions</a> I get the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>create<span class=\"w\"> </span>a<span class=\"w\"> </span>target<span class=\"w\"> </span>world<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>package<span class=\"w\"> </span><span class=\"sb\">`</span>dms-converter<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span>/Users/tpmccallum/composing-wasm-components/geolocation/dms-converter/Cargo.toml<span class=\"o\">)</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>parse<span class=\"w\"> </span><span class=\"nb\">local</span><span class=\"w\"> </span>target<span class=\"w\"> </span>from<span class=\"w\"> </span>directory<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/tpmccallum/composing-wasm-components/geolocation/dms-converter/wit<span class=\"sb\">`</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>expected<span class=\"w\"> </span><span class=\"s1\">')'</span>,<span class=\"w\"> </span>found<span class=\"w\"> </span><span class=\"s1\">':'</span>\n<span class=\"w\">            </span>--&gt;<span class=\"w\"> </span>/Users/tpmccallum/composing-wasm-components/geolocation/dms-converter/wit/world.wit:14:42\n<span class=\"w\">             </span><span class=\"p\">|</span>\n<span class=\"w\">          </span><span class=\"m\">14</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\">     </span>convert-to-dms:<span class=\"w\"> </span>func<span class=\"o\">(</span>normalized:<span class=\"w\"> </span>docs:normalizer/normalize/normalized-coordinates<span class=\"o\">)</span><span class=\"w\"> </span>-&gt;<span class=\"w\"> </span>dms-coordinates<span class=\"p\">;</span>\n</code></pre></div>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/tpmccallum/composing-wasm-components/tree/main/geolocation\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/1a00832ce105daade3329d8e6cbbc6aa452cc595/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f326334396565656537643433656537326134383163613863363933653233643638373663353231373532386533616537363866336264323163626136306566332f74706d6363616c6c756d2f636f6d706f73696e672d7761736d2d636f6d706f6e656e7473&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/tpmccallum/composing-wasm-components/tree/main/geolocation\" title=\"composing-wasm-components/geolocation at main · tpmccallum/composing-wasm-components\">composing-wasm-components/geolocation at main · tpmccallum/composing-wasm-components</a></div><div class=\"message_embed_description\">An example of composing wasm components. Contribute to tpmccallum/composing-wasm-components development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/tpmccallum/composing-wasm-components/blob/main/README.md\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/1a00832ce105daade3329d8e6cbbc6aa452cc595/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f326334396565656537643433656537326134383163613863363933653233643638373663353231373532386533616537363866336264323163626136306566332f74706d6363616c6c756d2f636f6d706f73696e672d7761736d2d636f6d706f6e656e7473&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/tpmccallum/composing-wasm-components/blob/main/README.md\" title=\"composing-wasm-components/README.md at main · tpmccallum/composing-wasm-components\">composing-wasm-components/README.md at main · tpmccallum/composing-wasm-components</a></div><div class=\"message_embed_description\">An example of composing wasm components. Contribute to tpmccallum/composing-wasm-components development by creating an account on GitHub.</div></div></div>",
        "id": 508972837,
        "sender_full_name": "Timothy McCallum",
        "timestamp": 1743295713
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"421662\">@Timothy McCallum</span> sorry I'm a bit late here, but it looks like there is a syntax error in the WIT there</p>",
        "id": 509260112,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1743441165
    },
    {
        "content": "<p><a href=\"https://github.com/tpmccallum/composing-wasm-components/blob/main/geolocation/dms-converter/wit/world.wit#L14\">This line</a>: </p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>    convert-to-dms: func(normalized: docs:normalizer/normalize/normalized-coordinates) -&gt; dms-coordinates;\n</code></pre></div>\n<p>Should look like this:</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>    convert-to-dms: func(normalized: normalized-coordinates) -&gt; dms-coordinates;\n</code></pre></div>\n<p>And earlier in the interface, you'll need to import that type:</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>interface convert {\n    use docs:normalizer/normalize.{normalized-coordinates};\n    // ... rest ...\n}\n</code></pre></div>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/tpmccallum/composing-wasm-components/blob/main/geolocation/dms-converter/wit/world.wit#L14\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/1a00832ce105daade3329d8e6cbbc6aa452cc595/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f326334396565656537643433656537326134383163613863363933653233643638373663353231373532386533616537363866336264323163626136306566332f74706d6363616c6c756d2f636f6d706f73696e672d7761736d2d636f6d706f6e656e7473&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/tpmccallum/composing-wasm-components/blob/main/geolocation/dms-converter/wit/world.wit#L14\" title=\"composing-wasm-components/geolocation/dms-converter/wit/world.wit at main · tpmccallum/composing-wasm-components\">composing-wasm-components/geolocation/dms-converter/wit/world.wit at main · tpmccallum/composing-wasm-components</a></div><div class=\"message_embed_description\">An example of composing wasm components. Contribute to tpmccallum/composing-wasm-components development by creating an account on GitHub.</div></div></div>",
        "id": 509260569,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1743441312
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"598440\">@Victor Adossi</span> <br>\nThank you so much. Sorry about the late reply. I have been beavering away on the <code>--invoke</code> implementation. I appreciate your response and am back composing components again. <br>\nThanks again<br>\nTim</p>",
        "id": 510058345,
        "sender_full_name": "Timothy McCallum",
        "timestamp": 1743725485
    },
    {
        "content": "<p>Absolutely no problem Tim!</p>",
        "id": 510062284,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1743727908
    }
]