[
    {
        "content": "<p>Consider:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">wit_bindgen</span><span class=\"p\">;</span>\n\n<span class=\"n\">wit_bindgen</span><span class=\"p\">::</span><span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">inline</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">r</span><span class=\"s\">\"</span>\n<span class=\"s\">  package test:test;</span>\n\n<span class=\"s\">  world test {</span>\n<span class=\"s\">      include wasi:http/imports@0.3.0-rc-2025-08-15;</span>\n<span class=\"s\">  }</span>\n<span class=\"s\">\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">features</span><span class=\"p\">:[</span><span class=\"s\">\"clocks-timezone\"</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"n\">generate_all</span>\n<span class=\"p\">});</span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">http</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::</span><span class=\"n\">Fields</span><span class=\"p\">;</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">test_fields</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fields</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Fields</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"fm\">assert!</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">fields</span><span class=\"p\">.</span><span class=\"n\">has</span><span class=\"p\">(</span><span class=\"s\">r\"foo\"</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">test_fields</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Compiles fine (with nightly and --target=wasm32-wasip2).  However running doesn't work:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"s\">\"$HOME/src/wasip3/wasmtime/target/release/wasmtime\"</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wcomponent</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"o\">-</span><span class=\"k\">async</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Shttp</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Sp3</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">-</span><span class=\"n\">fields</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">-</span><span class=\"n\">fields</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">component</span><span class=\"w\"> </span><span class=\"n\">imports</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">http</span><span class=\"o\">/</span><span class=\"n\">types</span><span class=\"o\">@</span><span class=\"mf\">0.3.0</span><span class=\"o\">-</span><span class=\"n\">rc</span><span class=\"o\">-</span><span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">15</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">matching</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">linker</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">instance</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">fields</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">resource</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">missing</span>\n</code></pre></div>\n<p>This is with wasmtime compiled from git from today, built with <code>--features component-model-async</code>.  Any ideas?</p>",
        "id": 537222703,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756797756
    },
    {
        "content": "<p><del>I don't know that the wasmtime cli has gained supprt for wasi-http p3</del></p>",
        "id": 537279754,
        "sender_full_name": "Lann Martin",
        "timestamp": 1756817613
    },
    {
        "content": "<p>Try <code>wasmtime serve</code></p>",
        "id": 537280032,
        "sender_full_name": "Lann Martin",
        "timestamp": 1756817698
    },
    {
        "content": "<p>hmm.  i don't need socket support</p>",
        "id": 537280165,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756817732
    },
    {
        "content": "<p>ah I see hmm</p>",
        "id": 537280243,
        "sender_full_name": "Lann Martin",
        "timestamp": 1756817750
    },
    {
        "content": "<p>like, i should be able to test http without a network connection i think</p>",
        "id": 537280247,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756817750
    },
    {
        "content": "<p>without listening on a port / socket i mean</p>",
        "id": 537280348,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756817775
    },
    {
        "content": "<p>OK well going back to my stricken comment, I don't <em>see</em> where wasi-http p3 is linked for the wasmtime cli</p>",
        "id": 537280728,
        "sender_full_name": "Lann Martin",
        "timestamp": 1756817883
    },
    {
        "content": "<p>I could easily be missing it among the feature flag logic</p>",
        "id": 537280771,
        "sender_full_name": "Lann Martin",
        "timestamp": 1756817895
    },
    {
        "content": "<p>I'd expect to see it around here: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/10d2cbc59d35b14c3027a8542f636c591b2ec96b/src/common.rs#L389-L395\">https://github.com/bytecodealliance/wasmtime/blob/10d2cbc59d35b14c3027a8542f636c591b2ec96b/src/common.rs#L389-L395</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/10d2cbc59d35b14c3027a8542f636c591b2ec96b/src/common.rs#L389-L395\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/ecb51d5d13c99d8db3491d850dace16922937c67/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f653566356665643964613562383030316635376533633161333931363839373537636461326130653632343031333539393239353563323832333934333535332f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/10d2cbc59d35b14c3027a8542f636c591b2ec96b/src/common.rs#L389-L395\" title=\"wasmtime/src/common.rs at 10d2cbc59d35b14c3027a8542f636c591b2ec96b · bytecodealliance/wasmtime\">wasmtime/src/common.rs at 10d2cbc59d35b14c3027a8542f636c591b2ec96b · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 537281616,
        "sender_full_name": "Lann Martin",
        "timestamp": 1756818122
    },
    {
        "content": "<p>hmm, i actually don't see http at all in p3/ <a href=\"https://github.com/bytecodealliance/wasmtime/tree/10d2cbc59d35b14c3027a8542f636c591b2ec96b/crates/wasi/src/p3\">https://github.com/bytecodealliance/wasmtime/tree/10d2cbc59d35b14c3027a8542f636c591b2ec96b/crates/wasi/src/p3</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/tree/10d2cbc59d35b14c3027a8542f636c591b2ec96b/crates/wasi/src/p3\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/ecb51d5d13c99d8db3491d850dace16922937c67/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f653566356665643964613562383030316635376533633161333931363839373537636461326130653632343031333539393239353563323832333934333535332f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/tree/10d2cbc59d35b14c3027a8542f636c591b2ec96b/crates/wasi/src/p3\" title=\"wasmtime/crates/wasi/src/p3 at 10d2cbc59d35b14c3027a8542f636c591b2ec96b · bytecodealliance/wasmtime\">wasmtime/crates/wasi/src/p3 at 10d2cbc59d35b14c3027a8542f636c591b2ec96b · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 537281965,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756818222
    },
    {
        "content": "<p>so i guess http p3 needs some special linker sauce, it's in its own crate <a href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/wasi-http/src\">https://github.com/bytecodealliance/wasmtime/tree/main/crates/wasi-http/src</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/wasi-http/src\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/ecb51d5d13c99d8db3491d850dace16922937c67/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f653566356665643964613562383030316635376533633161333931363839373537636461326130653632343031333539393239353563323832333934333535332f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/wasi-http/src\" title=\"wasmtime/crates/wasi-http/src at main · bytecodealliance/wasmtime\">wasmtime/crates/wasi-http/src at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 537282232,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756818295
    },
    {
        "content": "<p>or here actually for <code>run</code>: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/10d2cbc59d35b14c3027a8542f636c591b2ec96b/src/commands/run.rs#L976\">https://github.com/bytecodealliance/wasmtime/blob/10d2cbc59d35b14c3027a8542f636c591b2ec96b/src/commands/run.rs#L976</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/10d2cbc59d35b14c3027a8542f636c591b2ec96b/src/commands/run.rs#L976\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/ecb51d5d13c99d8db3491d850dace16922937c67/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f653566356665643964613562383030316635376533633161333931363839373537636461326130653632343031333539393239353563323832333934333535332f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/10d2cbc59d35b14c3027a8542f636c591b2ec96b/src/commands/run.rs#L976\" title=\"wasmtime/src/commands/run.rs at 10d2cbc59d35b14c3027a8542f636c591b2ec96b · bytecodealliance/wasmtime\">wasmtime/src/commands/run.rs at 10d2cbc59d35b14c3027a8542f636c591b2ec96b · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 537282405,
        "sender_full_name": "Lann Martin",
        "timestamp": 1756818344
    },
    {
        "content": "<p>it looks like wasi-http's add_to_linker is only called from src/commands/serve.rs</p>",
        "id": 537282482,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756818366
    },
    {
        "content": "<p>and not from run</p>",
        "id": 537282494,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756818370
    },
    {
        "content": "<p>p3 support for <code>wasmtime-wasi-http</code> has not yet been merged into Wasmtime -- it's all currently in <a href=\"https://github.com/bytecodealliance/wasip3-prototyping\">https://github.com/bytecodealliance/wasip3-prototyping</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasip3-prototyping\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/7726f6c11ef9ec07a71d50fcf569018b85c9da17/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643166343163363937623361646561333835663637353964643161323236663435366538323930666461623134323938653864636261623931643333636565612f62797465636f6465616c6c69616e63652f7761736970332d70726f746f747970696e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasip3-prototyping\" title=\"GitHub - bytecodealliance/wasip3-prototyping: Fork of wasmtime for protoyping WASIp3 work and coordination, not intended for any production use case, purely for development\">GitHub - bytecodealliance/wasip3-prototyping: Fork of wasmtime for protoyping WASIp3 work and coordination, not intended for any production use case, purely for development</a></div><div class=\"message_embed_description\">Fork of wasmtime for protoyping WASIp3 work and coordination, not intended for any production use case, purely for development - bytecodealliance/wasip3-prototyping</div></div></div>",
        "id": 537282525,
        "sender_full_name": "Joel Dice",
        "timestamp": 1756818377
    },
    {
        "content": "<p>yaaargh :)  ok :)</p>",
        "id": 537282580,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756818394
    },
    {
        "content": "<p>are there decisions that need to be made before p3 http is merged to mainline ?</p>",
        "id": 537282725,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756818430
    },
    {
        "content": "<p>there is a p3/ dir over at <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/p3/mod.rs\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/p3/mod.rs</a>, maybe it is missing things</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/p3/mod.rs\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/ecb51d5d13c99d8db3491d850dace16922937c67/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f653566356665643964613562383030316635376533633161333931363839373537636461326130653632343031333539393239353563323832333934333535332f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/p3/mod.rs\" title=\"wasmtime/crates/wasi-http/src/p3/mod.rs at main · bytecodealliance/wasmtime\">wasmtime/crates/wasi-http/src/p3/mod.rs at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 537282912,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756818480
    },
    {
        "content": "<p>lol i see that the implementation is completely stubbed out.  ok :) <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/p3/host/types.rs\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/p3/host/types.rs</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/p3/host/types.rs\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/ecb51d5d13c99d8db3491d850dace16922937c67/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f653566356665643964613562383030316635376533633161333931363839373537636461326130653632343031333539393239353563323832333934333535332f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/src/p3/host/types.rs\" title=\"wasmtime/crates/wasi-http/src/p3/host/types.rs at main · bytecodealliance/wasmtime\">wasmtime/crates/wasi-http/src/p3/host/types.rs at main · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 537283012,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756818514
    },
    {
        "content": "<p>The main (only?) blocker right now is settling on a host-side API for futures and streams that does everything <code>wasmtime-wasi-http</code> needs it to, hence <a href=\"#narrow/channel/219900-wasi/topic/Behavior.20of.20Wasmtime.20future.2Fstream.20host.20APIs/with/536838047\">this discussion</a>.  I sketched an implementation out on Friday and hope to finish it today.  Roman is working on updating <code>wasmtime-wasi</code> and <code>wasmtime-wasi-http</code> to use that new API.  The WIP PR is <a href=\"http://github.com/bytecodealliance/wasmtime/pull/11515\">github.com/bytecodealliance/wasmtime/pull/11515</a>.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"http://github.com/bytecodealliance/wasmtime/pull/11515\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/ac5348156520612a597b70ceec159cb22fff7007/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f623665353664656339663765353332353933643736373833383238316437336664396135663166326461646634353566323064306663303236333739363136612f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f3131353135&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"http://github.com/bytecodealliance/wasmtime/pull/11515\" title=\"Revamp component model stream/future host API (again) by dicej · Pull Request #11515 · bytecodealliance/wasmtime\">Revamp component model stream/future host API (again) by dicej · Pull Request #11515 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This changes the host APIs for dealing with futures and streams from a &quot;rendezvous&quot;-style API to a callback-oriented one.\nPreviously you would create e.g. a StreamReader/StreamWriter pair...</div></div></div>",
        "id": 537283358,
        "sender_full_name": "Joel Dice",
        "timestamp": 1756818606
    },
    {
        "content": "<p>hoo, that is a deep change</p>",
        "id": 537283726,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756818710
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"509936\">@Joel Dice</span> do i understand correctly that the wasmtime change is also a change to the component model async facility?  or is this all hidden behind wasmtime's implementation of lowering/lifting</p>",
        "id": 537284573,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756818944
    },
    {
        "content": "<p>It doesn't change anything about the component model, its ABI, its semantics, or anything like that.  It only affects the public API Wasmtime presents to \"host embedders\" (i.e. users of Wasmtime as a library) for managing streams and futures.</p>",
        "id": 537285098,
        "sender_full_name": "Joel Dice",
        "timestamp": 1756819098
    },
    {
        "content": "<p>so components still rendez-vous with each other, but the host doesn't rdv with components?</p>",
        "id": 537285459,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756819211
    },
    {
        "content": "<p>yeah, that's a good summary</p>",
        "id": 537285514,
        "sender_full_name": "Joel Dice",
        "timestamp": 1756819225
    },
    {
        "content": "<p>(from the perspective of the host)</p>",
        "id": 537285525,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756819228
    },
    {
        "content": "<p>that makes sense to me, thanks for the explanation</p>",
        "id": 537285650,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756819265
    },
    {
        "content": "<p>it sounds like i'll develop wasip3 http tests using wasip3-prototyping as the test harness for the time being, hopefully in a week or two i can run everything with upstream wasmtime then.</p>",
        "id": 537285868,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756819327
    },
    {
        "content": "<p>zomg i am going crazy, i am completely holding this thing wrong:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"o\">~/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">wasip3</span><span class=\"o\">/</span><span class=\"n\">wasip3</span><span class=\"o\">-</span><span class=\"n\">prototyping</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wcomponent</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"o\">-</span><span class=\"k\">async</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Sp3</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Shttp</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">-</span><span class=\"n\">fields</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">unknown</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">S</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"n\">option</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">p3</span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"o\">~/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">wasip3</span><span class=\"o\">/</span><span class=\"n\">wasip3</span><span class=\"o\">-</span><span class=\"n\">prototyping</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wcomponent</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"o\">-</span><span class=\"k\">async</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Shttp</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">-</span><span class=\"n\">fields</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">http</span><span class=\"o\">-</span><span class=\"n\">fields</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">component</span><span class=\"w\"> </span><span class=\"n\">imports</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">http</span><span class=\"o\">/</span><span class=\"n\">types</span><span class=\"o\">@</span><span class=\"mf\">0.3.0</span><span class=\"o\">-</span><span class=\"n\">rc</span><span class=\"o\">-</span><span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">08</span><span class=\"o\">-</span><span class=\"mi\">15</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">matching</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">linker</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">instance</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">fields</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">resource</span><span class=\"w\"> </span><span class=\"n\">implementation</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">missing</span>\n</code></pre></div>",
        "id": 537286915,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756819663
    },
    {
        "content": "<p>maybe we are back to what lann was saying, http not linkable from <code>wasmtime run</code></p>",
        "id": 537287169,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756819738
    },
    {
        "content": "<p>even though on the wasip3-prototyping branch, there is an http p3 implementation (i hope!)</p>",
        "id": 537287275,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756819767
    },
    {
        "content": "<p>Looks like wasip3-prototyping is using some earlier 0.3.0-draft rather than the rc: <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/blob/main/crates/wasi-http/src/p3/wit/world.wit\">https://github.com/bytecodealliance/wasip3-prototyping/blob/main/crates/wasi-http/src/p3/wit/world.wit</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasip3-prototyping/blob/main/crates/wasi-http/src/p3/wit/world.wit\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/7726f6c11ef9ec07a71d50fcf569018b85c9da17/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643166343163363937623361646561333835663637353964643161323236663435366538323930666461623134323938653864636261623931643333636565612f62797465636f6465616c6c69616e63652f7761736970332d70726f746f747970696e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasip3-prototyping/blob/main/crates/wasi-http/src/p3/wit/world.wit\" title=\"wasip3-prototyping/crates/wasi-http/src/p3/wit/world.wit at main · bytecodealliance/wasip3-prototyping\">wasip3-prototyping/crates/wasi-http/src/p3/wit/world.wit at main · bytecodealliance/wasip3-prototyping</a></div><div class=\"message_embed_description\">Fork of wasmtime for protoyping WASIp3 work and coordination, not intended for any production use case, purely for development - bytecodealliance/wasip3-prototyping</div></div></div>",
        "id": 537287352,
        "sender_full_name": "Joel Dice",
        "timestamp": 1756819795
    },
    {
        "content": "<p>Sorry this is such a minefield.  We're racing to finish this thing while you race to test it.</p>",
        "id": 537287615,
        "sender_full_name": "Joel Dice",
        "timestamp": 1756819875
    },
    {
        "content": "<p>hey np, sympathies flow in all the directions</p>",
        "id": 537287682,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756819895
    },
    {
        "content": "<p>maybe for the moment i move to testing dependencies of wasi:cli</p>",
        "id": 537287819,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756819937
    },
    {
        "content": "<p>Good plan</p>",
        "id": 537287843,
        "sender_full_name": "Joel Dice",
        "timestamp": 1756819945
    },
    {
        "content": "<p>The WITs for wasip3-prototyping are in spirit pretty similar to the RC but you'll want to use the literal WIT files from the repo since they're not even reflected upstream (just locally edited copies)</p>",
        "id": 537294513,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1756821940
    },
    {
        "content": "<p>(aka if there's other stuff to test that seems reasonable)</p>",
        "id": 537294598,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1756821960
    },
    {
        "content": "<p>FWIW, incoming HTTP is implemented in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11440\">https://github.com/bytecodealliance/wasmtime/pull/11440</a> using latest RC<br>\nno support for <code>wasmtime serve</code> though and such yet</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/11440\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/63c01880e9e50c865154ae61cf84b794b6a6540f/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f373861386332373630663964333865333434346562373535346539653363633165396232383762626531333566623730626364313437653164316132633933652f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f3131343430&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/11440\" title=\"feat(p3): implement `wasi:http` by rvolosatovs · Pull Request #11440 · bytecodealliance/wasmtime\">feat(p3): implement `wasi:http` by rvolosatovs · Pull Request #11440 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This PR builds on top of #11221 and will contain the full implementation of wasi:http proposal with refcounting (no child resources). This will be made ready-for-review once all currently ignored t...</div></div></div>",
        "id": 537295421,
        "sender_full_name": "Roman Volosatovs",
        "timestamp": 1756822187
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"396878\">@Andy Wingo</span> it goes without saying that we appreciate your work here......</p>",
        "id": 537672032,
        "sender_full_name": "Ralph",
        "timestamp": 1756992306
    },
    {
        "content": "<p>tx!  am currently working on filesystem stuff; found a fun bug (?) <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\">https://github.com/bytecodealliance/wasmtime/issues/11606</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/1372d67bfc780750247cca19747d2033338b547c/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633165656164316131616138663633636361613064646265643335663563623534666639633134373765393365366266353966336630326362383839393632302f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f3131363036&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\" title=\"[v0.3] dirfd.stat_at(&quot;/&quot;) unexpectedly succeeds · Issue #11606 · bytecodealliance/wasmtime\">[v0.3] dirfd.stat_at(\"/\") unexpectedly succeeds · Issue #11606 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Summary I can stat-at \"/\", whereas the filesystem spec says that any path that starts with / should result in not-permitted. Test case use std::process; extern crate wit_bindgen; wit_bindgen::gener...</div></div></div>",
        "id": 537672203,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756992361
    },
    {
        "content": "<p>no idea if that's statting the real / or some fabricated dir that wasmtime uses as a root for its filesystem</p>",
        "id": 537672376,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756992410
    },
    {
        "content": "<p>hmm, seems it's the real /, unless we are in a namespace</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">statx</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"/\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">AT_STATX_SYNC_AS_STAT</span><span class=\"o\">|</span><span class=\"n\">AT_SYMLINK_NOFOLLOW</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">STATX_ALL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">stx_mask</span><span class=\"o\">=</span><span class=\"n\">STATX_ALL</span><span class=\"o\">|</span><span class=\"n\">STATX_MNT_ID</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">stx_attributes</span><span class=\"o\">=</span><span class=\"n\">STATX_ATTR_MOUNT_ROOT</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">stx_mode</span><span class=\"o\">=</span><span class=\"n\">S_IFDIR</span><span class=\"o\">|</span><span class=\"mi\">0755</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">stx_size</span><span class=\"o\">=</span><span class=\"mi\">4096</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.})</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n</code></pre></div>",
        "id": 537672720,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756992492
    },
    {
        "content": "<p>fortunately the same bug is not there for openat</p>",
        "id": 537674984,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756993100
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">openat2</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"/\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"n\">O_RDONLY</span><span class=\"o\">|</span><span class=\"n\">O_LARGEFILE</span><span class=\"o\">|</span><span class=\"n\">O_NOFOLLOW</span><span class=\"o\">|</span><span class=\"n\">O_CLOEXEC</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">resolve</span><span class=\"o\">=</span><span class=\"n\">RESOLVE_NO_MAGICLINKS</span><span class=\"o\">|</span><span class=\"n\">RESOLVE_BENEATH</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">EXDEV</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Invalid</span><span class=\"w\"> </span><span class=\"n\">cross</span><span class=\"o\">-</span><span class=\"n\">device</span><span class=\"w\"> </span><span class=\"n\">link</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 537675402,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756993228
    },
    {
        "content": "<p>the <code>RESOLVE_BENEATH</code> saves us there.  but i would think that already cap-std should have filtered out a request for /, dunno.</p>",
        "id": 537675685,
        "sender_full_name": "Andy Wingo",
        "timestamp": 1756993302
    }
]