[
    {
        "content": "<p>Is there way to configure a <code>wasmtime-wasi</code> WASI context such that a call to <code>sleep</code> or an equivalent operation in a Wasm instance returns immediately?</p>\n<p>The context is we have a platform where we expect third-party modules to run for very short periods of time and would not have a valid reason to sleep. We impose a strict fuel limit on instances but have a more generous time-based limit to not trigger user or developer-facing errors when there's CPU contention. With <code>wasi-common</code>'s <code>WasiCtx</code>, I could provide my own <code>WasiSched</code> implementation but that doesn't appear to be configurable in <code>wasmtime-wasi</code>.</p>",
        "id": 505213446,
        "sender_full_name": "Jeff Charles",
        "timestamp": 1741803304
    },
    {
        "content": "<p>wasmtime-wasi is really not designed to be configured in that manner.</p>",
        "id": 505213929,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1741803433
    },
    {
        "content": "<p>however, you can compose your own wasi implementation reusing some pieces of wasmtime-wasi (via add_to_linker_get_host) and some pieces of your own</p>",
        "id": 505214035,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1741803460
    },
    {
        "content": "<p>in this case you'd want to just provide your own impl of the wasi::clocks::...::Host traits, and for the Pollable implementation returned by the subscribe functions it would just have  <code>async fn ready(&amp;self) {}</code></p>",
        "id": 505214323,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1741803525
    },
    {
        "content": "<p>so you could copy-paste the implementations of those clocks traits from wasmtime-wasi into your own crate, change enough identifiers that it compiles, and then basically erase the tokio:<span aria-label=\"time\" class=\"emoji emoji-1f557\" role=\"img\" title=\"time\">:time:</span>:sleep(whatever).await in those ready funcs</p>",
        "id": 505214468,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1741803562
    }
]