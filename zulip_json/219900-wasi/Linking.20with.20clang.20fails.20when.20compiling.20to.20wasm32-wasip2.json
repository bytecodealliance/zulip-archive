[
    {
        "content": "<p>I'm currently trying to build a rather large project for the <code>wasm32-wasip2</code> target in Rust - it is not written as a  WebAssembly specific target and therefore does not depend on either wasmtime or any other wasm-related crate. Everything compiles, however, linking fails. I use the wasi-sdk toolchain with clang  &amp; wasm-component-ld, which results in the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">parse</span><span class=\"w\"> </span><span class=\"n\">core</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">componentization</span>\n\n<span class=\"w\">          </span><span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">              </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">updating</span><span class=\"w\"> </span><span class=\"n\">metadata</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"o\">-</span><span class=\"k\">type</span><span class=\"p\">:</span><span class=\"nc\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"p\">:</span><span class=\"mf\">0.33.0</span><span class=\"p\">:</span><span class=\"nc\">rust</span><span class=\"p\">:</span><span class=\"nc\">wasi</span><span class=\"p\">:</span><span class=\"nc\">bindings</span><span class=\"p\">:</span><span class=\"nc\">encoded</span><span class=\"w\"> </span><span class=\"n\">worldrust</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">from</span><span class=\"o\">-</span><span class=\"n\">crates</span><span class=\"o\">-</span><span class=\"n\">io</span>\n<span class=\"w\">              </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">merge</span><span class=\"w\"> </span><span class=\"n\">WIT</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">sets</span><span class=\"w\"> </span><span class=\"n\">together</span>\n<span class=\"w\">              </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">merge</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">rust</span><span class=\"p\">:</span><span class=\"nc\">wasi</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">into</span><span class=\"w\"> </span><span class=\"n\">existing</span><span class=\"w\"> </span><span class=\"n\">copy</span>\n<span class=\"w\">              </span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">merge</span><span class=\"w\"> </span><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">bindings</span><span class=\"err\">`</span>\n<span class=\"w\">              </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">import</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">io</span><span class=\"o\">/</span><span class=\"n\">poll</span><span class=\"o\">@</span><span class=\"mf\">0.2.2</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">world</span>\n<span class=\"w\">          </span><span class=\"n\">clang</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">linker</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">see</span><span class=\"w\"> </span><span class=\"n\">invocation</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>I'm not sure what this error means, who should provide this world?</p>",
        "id": 511610468,
        "sender_full_name": "Lukas",
        "timestamp": 1744365600
    },
    {
        "content": "<p>as far as I'm aware, wasi-sdk still produces wasip1 modules which wasm-tools can adapt into wasip2 components, ie. tell your rust to compile as wasip1 and then use wasm-tools component adapt</p>",
        "id": 511631827,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1744372474
    },
    {
        "content": "<p>Thank you very much! That's what I thought, but some dependencies need socket support, so I depend on wasip2 - have you any idea how I could get around that?</p>",
        "id": 511632145,
        "sender_full_name": "Lukas",
        "timestamp": 1744372574
    },
    {
        "content": "<p>If you tell rustc to compile for wasip2 it will already use the wasip1-&gt;wasip2 adapter.</p>",
        "id": 511651784,
        "sender_full_name": "bjorn3",
        "timestamp": 1744378057
    },
    {
        "content": "<p>Meaning that the wasi-sdk should not be the issue here?</p>",
        "id": 511652374,
        "sender_full_name": "Lukas",
        "timestamp": 1744378195
    }
]