[
    {
        "content": "<p>What's the current state of bundling shared-everything \"dynamic\" libraries in wasi-sdk and wasm-tools?</p>",
        "id": 511413905,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1744292413
    },
    {
        "content": "<p>Bundling them into components, you mean?  It should be as simple as passing <code>-shared</code> to <code>clang</code> when linking to produce a <code>.so</code> and using <code>wasm-tools component link</code> to bundle it (and any other <code>.so</code> files it might depend on, e.g. <code>libc.so</code>) into a component.</p>\n<p>See <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/Linking.md\">https://github.com/WebAssembly/component-model/blob/main/design/mvp/Linking.md</a> for an overview.  I'm happy to answer any questions about the details.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/Linking.md\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/ce212ac2aa8039369c43212030ffa87e04e0e225/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353936643538373864353862643363363138336330363563363436663930626536643336373261336332613531303537303136613662663032333666396337632f576562417373656d626c792f636f6d706f6e656e742d6d6f64656c&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/Linking.md\" title=\"component-model/design/mvp/Linking.md at main · WebAssembly/component-model\">component-model/design/mvp/Linking.md at main · WebAssembly/component-model</a></div><div class=\"message_embed_description\">Repository for design and specification of the Component Model - WebAssembly/component-model</div></div></div>",
        "id": 511417019,
        "sender_full_name": "Joel Dice",
        "timestamp": 1744293082
    },
    {
        "content": "<p>What's the best way to link an executable with undefined symbols that will be defined in a dynamic library?</p>",
        "id": 511417670,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1744293233
    },
    {
        "content": "<p>I know about <code>-Wl,--warn-unresolved-symbols</code>, but I'm curious if there's a better way.</p>",
        "id": 511417979,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1744293310
    },
    {
        "content": "<p>I haven't tried that myself, so I don't know.  And <code>wasm-tools component link</code> currently assumes all the input files are <code>.so</code> files and that it is responsible for synthesizing a \"main\" module (i.e. the one that exports a memory and table), so it will need some work to accommodate a user-supplied main module.</p>",
        "id": 511419446,
        "sender_full_name": "Joel Dice",
        "timestamp": 1744293647
    },
    {
        "content": "<p>Hey Joel is there a reasonable guide/example repo for this? </p>\n<p>It's a pretty advanced thing to try and do but maybe someone ought to write up an example project that does this. I might try and take a stab at this for a common case (Python? C?)</p>",
        "id": 513881833,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745417277
    },
    {
        "content": "<p><code>wasm-tools component link --help</code> is a good place to start.  I don't know of a complete, up-to-date, simple example project which illustrates all the steps, though.</p>\n<p>You can find examples of building <code>.so</code> files using the <code>-shared</code> flag to clang in <a href=\"https://github.com/bytecodealliance/componentize-py/blob/main/build.rs\">componentize-py's build.rs</a>, and an example of using <code>wit-component</code> to compose them into a component programmatically <a href=\"https://github.com/bytecodealliance/componentize-py/blob/main/src/link.rs\">here</a>.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-py/blob/main/build.rs\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/4c8288e85497e9241dd63390724eb0432d972cdf/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393137366163346536393164376335383639666533633439666238626462383334346165373332346130633139633538336265653362363831636335636161322f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d7079&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-py/blob/main/build.rs\" title=\"componentize-py/build.rs at main · bytecodealliance/componentize-py\">componentize-py/build.rs at main · bytecodealliance/componentize-py</a></div><div class=\"message_embed_description\">Contribute to bytecodealliance/componentize-py development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-py/blob/main/src/link.rs\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/4c8288e85497e9241dd63390724eb0432d972cdf/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393137366163346536393164376335383639666533633439666238626462383334346165373332346130633139633538336265653362363831636335636161322f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d7079&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-py/blob/main/src/link.rs\" title=\"componentize-py/src/link.rs at main · bytecodealliance/componentize-py\">componentize-py/src/link.rs at main · bytecodealliance/componentize-py</a></div><div class=\"message_embed_description\">Contribute to bytecodealliance/componentize-py development by creating an account on GitHub.</div></div></div>",
        "id": 513892592,
        "sender_full_name": "Joel Dice",
        "timestamp": 1745419827
    },
    {
        "content": "<p>Thanks -- left myself a component-docs issue -- that's where I'm going to try and land this (possibly pointing to an example repo)</p>",
        "id": 513914028,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745425073
    }
]