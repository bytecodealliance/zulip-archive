[
    {
        "content": "<p>On aarch64, I'm trying to debug some wasm and using</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">lldb</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>\n</code></pre></div>\n<p>Then</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">breakpoint</span><span class=\"w\"> </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">StackFrame</span><span class=\"p\">.</span><span class=\"n\">NativeAot</span><span class=\"p\">.</span><span class=\"n\">Wasm</span><span class=\"p\">.</span><span class=\"n\">cs</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"mi\">42</span>\n<span class=\"n\">process</span><span class=\"w\"> </span><span class=\"n\">launch</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Ccache</span><span class=\"o\">=</span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Oopt</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">S</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Ddebug</span><span class=\"o\">-</span><span class=\"n\">info</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">scott</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"o\">/</span><span class=\"n\">runtimelab</span><span class=\"o\">-</span><span class=\"n\">sep</span><span class=\"o\">/</span><span class=\"n\">artifacts</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">Diagnostics</span><span class=\"p\">.</span><span class=\"n\">StackTrace</span><span class=\"p\">.</span><span class=\"n\">Tests</span><span class=\"o\">/</span><span class=\"n\">Debug</span><span class=\"o\">/</span><span class=\"n\">net10</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"o\">/</span><span class=\"n\">publish</span><span class=\"o\">/</span><span class=\"n\">System</span><span class=\"p\">.</span><span class=\"n\">Diagnostics</span><span class=\"p\">.</span><span class=\"n\">StackTrace</span><span class=\"p\">.</span><span class=\"n\">Tests</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<p>The breakpoint is hit.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">__vmctx</span><span class=\"p\">-&gt;</span><span class=\"nc\">set</span><span class=\"p\">()</span>\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">frame</span><span class=\"w\"> </span><span class=\"n\">variable</span>\n<span class=\"p\">(</span><span class=\"n\">WasmtimeVMContext</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">__vmctx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x0000aaab19392a30</span>\n<span class=\"p\">(</span><span class=\"n\">WebAssemblyPtrWrapper</span><span class=\"o\">&lt;</span><span class=\"n\">S_P_CoreLib_System_Diagnostics_StackFrame</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">__this</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">available</span><span class=\"o\">&gt;</span>\n\n<span class=\"p\">(</span><span class=\"kt\">bool</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">includeFileInfo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">available</span><span class=\"o\">&gt;</span>\n\n<span class=\"p\">(</span><span class=\"n\">WebAssemblyRefWrapper</span><span class=\"o\">&lt;</span><span class=\"kt\">bool</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">isStackTraceHidden</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">available</span><span class=\"o\">&gt;</span>\n\n<span class=\"p\">(</span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">ip</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">available</span><span class=\"o\">&gt;</span>\n\n<span class=\"p\">(</span><span class=\"n\">WebAssemblyRefWrapper</span><span class=\"o\">&lt;</span><span class=\"n\">System_String</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">available</span><span class=\"o\">&gt;</span>\n</code></pre></div>\n<p>And my variables are not available, </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">__this</span>\n<span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Couldn</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">materialize</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">couldn</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">__this</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">variable</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">available</span>\n<span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">errored</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">DoExecute</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">couldn</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">PrepareToExecuteJITExpression</span>\n</code></pre></div>\n<p>Any thing I can try?</p>",
        "id": 547017207,
        "sender_full_name": "Scott Waye",
        "timestamp": 1761355218
    },
    {
        "content": "<p>I tried wasmtime 31 and 37, but they both seem the same for this, I guess I'm either missing an option, or my wasm is missing some debug things.</p>",
        "id": 547017323,
        "sender_full_name": "Scott Waye",
        "timestamp": 1761355370
    },
    {
        "content": "<p>Try <code>p __vmctx-&gt;set()</code> before accessing any variables.</p>",
        "id": 547057289,
        "sender_full_name": "bjorn3",
        "timestamp": 1761398356
    },
    {
        "content": "<p>thanks, yes I have that</p>",
        "id": 547058213,
        "sender_full_name": "Scott Waye",
        "timestamp": 1761399294
    },
    {
        "content": "<p>missed it from the OP</p>",
        "id": 547058242,
        "sender_full_name": "Scott Waye",
        "timestamp": 1761399313
    },
    {
        "content": "<p>could be I suppose it is reported incorrectly, I don't know how I would test that</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">__vmctx</span><span class=\"p\">-&gt;</span><span class=\"nc\">set</span><span class=\"p\">()</span>\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">frame</span><span class=\"w\"> </span><span class=\"n\">variable</span>\n<span class=\"p\">(</span><span class=\"n\">WasmtimeVMContext</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">__vmctx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x0000aaab06db8fe0</span>\n</code></pre></div>",
        "id": 547058406,
        "sender_full_name": "Scott Waye",
        "timestamp": 1761399456
    }
]