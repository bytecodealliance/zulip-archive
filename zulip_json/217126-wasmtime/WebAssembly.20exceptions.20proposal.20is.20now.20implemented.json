[
    {
        "content": "<p>Figured this was worth a shout-out here -- due to huge amount of effort <span class=\"user-mention\" data-user-id=\"254389\">@Chris Fallin</span> has put in the WebAssembly exceptions proposal is now supported in Wasmtime as of <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11326\">https://github.com/bytecodealliance/wasmtime/pull/11326</a>. Support is only in the <code>main</code> branch and will be released as off-by-default in Wasmtime 37 for the first time. If anyone's been waiting to test out various use cases or see if things work, now's the time to test!</p>\n<p>If anyone runs into anything please feel free to open an issue as well</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/11326\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/23148ab3f4a2b17c85f266ec0c702d49fd85fcd6/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f373230356236323732633962383261393864623636653164633536343239373761653937376462656536316530316264643236383563343934386339616461382f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f3131333236&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/11326\" title=\"WebAssembly exception-handling support. by cfallin 路 Pull Request #11326 路 bytecodealliance/wasmtime\">WebAssembly exception-handling support. by cfallin 路 Pull Request #11326 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This PR introduces support for the Wasm exception-handling proposal, which introduces a conventional try/catch mechanism to WebAssembly. The PR supports modules that use try_table to register handl...</div></div></div>",
        "id": 535585267,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1755813736
    },
    {
        "content": "<p>Also worth noting: this only includes the \"standard\" exceptions proposal for WebAssembly. The legacy instructions implemented by browsers are not implement and there is no plan to implement them in Wasmtime.</p>",
        "id": 535585462,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1755813796
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254389\">@Chris Fallin</span> up for writing a BA blog post to brag about this?</p>",
        "id": 535589547,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1755816609
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253994\">Alex Crichton</span> <a href=\"#narrow/channel/217126-wasmtime/topic/WebAssembly.20exceptions.20proposal.20is.20now.20implemented/near/535585462\">said</a>:</p>\n<blockquote>\n<p>Also worth noting: this only includes the \"standard\" exceptions proposal for WebAssembly. The legacy instructions implemented by browsers are not implement and there is no plan to implement them in Wasmtime.</p>\n</blockquote>\n<p>and you can translate legacy exceptions into standard exceptions via binaryen (I think via <code>wasm-opt</code>, but I haven't actually tested it myself)</p>",
        "id": 535589606,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1755816662
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253992\">Pat Hickey</span> <a href=\"#narrow/channel/217126-wasmtime/topic/WebAssembly.20exceptions.20proposal.20is.20now.20implemented/near/535589547\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"254389\">Chris Fallin</span> up for writing a BA blog post to brag about this?</p>\n</blockquote>\n<p>Yep, that's the plan! Still sketching out how it might look (there will definitely be a deep dive through the twisty design question adventures)</p>",
        "id": 535589710,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1755816761
    },
    {
        "content": "<p>\\o/ Yay! <br>\nIt works fine with a simple Kotlin/Wasm project. More tests coming...</p>",
        "id": 536299383,
        "sender_full_name": "Zalim Bashorov (Kotlin_, JetBrains)",
        "timestamp": 1756236397
    },
    {
        "content": "<p>JFTR: I've recently run a big chunk of our compiler tests (~8K) on wasmtime and all passed. Great job, folks!</p>",
        "id": 543748960,
        "sender_full_name": "Zalim Bashorov (Kotlin_, JetBrains)",
        "timestamp": 1759930343
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"548708\">@Zalim Bashorov (Kotlin_, JetBrains)</span> that's fantastic to hear!</p>",
        "id": 543783566,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1759938953
    },
    {
        "content": "<p>Indeed, thank you <span class=\"user-mention\" data-user-id=\"548708\">@Zalim Bashorov (Kotlin_, JetBrains)</span> for that confirmation!</p>",
        "id": 543784176,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1759939149
    }
]