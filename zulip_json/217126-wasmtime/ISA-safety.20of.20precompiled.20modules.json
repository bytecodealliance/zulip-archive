[
    {
        "content": "<p>(relatively related ref: <a class=\"stream-topic\" data-stream-id=\"217126\" href=\"/#narrow/channel/217126-wasmtime/topic/Selecting.20Cranelift.20ISA.20in.20wasmtime.3A.3AConfig/with/427998216\">#wasmtime &gt; Selecting Cranelift ISA in wasmtime::Config</a>)</p>\n<p>I have a couple of questions with regards to module precompilation and CPU feature detection. I can see that precompiled+serialized modules hash to different values between my local machine and what's generated on the CI, and in my mind the most likely cause is the auto-detection of host cpu features. Host CPU feature detection is actually somewhat a desired behaviour for me, I want the generated code to run as fast as the hardware allows. At the same time, though, I save these precompiled modules onto a disk with a hash (of certain input information such as hash of wasm code) for a name. And the system should continue working correctly if these files are made available on a different machine with a different set of CPU features.</p>\n<p>This means that I need to mix into the filename hash additional information that can affect the validity of the modules, and I need to do so from the information that's available with an <code>Engine</code> (or anything that leads to it.) I see that cranelift's flags struct(s) have a hashing function, but I can't find any API at wasmtime level to obtain the hash or, alternatively, relevant hashable structures. Is there perhaps a straightforward API I'm missing here?</p>",
        "id": 541483638,
        "sender_full_name": "Simonas (nagisa)",
        "timestamp": 1758813013
    },
    {
        "content": "<p>A side question is: does anybody know off top of their heads what would happen if a precompiled module that was compiled with, say, AVX512, were to be loaded on a machine without it? SIGILL? An instantiation-time result? Something else?</p>",
        "id": 541484108,
        "sender_full_name": "Simonas (nagisa)",
        "timestamp": 1758813113
    },
    {
        "content": "<p>We check enabled features at compile time are also available at runtime when a module is loaded -- <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasmtime/src/config.rs#L3705\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasmtime/src/config.rs#L3705</a> which if I understand right means that if you load a precompiled module with more features than the host platform some sort of error should pop out. That's the intention at least and this has grown over time so it may not be bulletproof necessarily, so if you notice an issue let us know!</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasmtime/src/config.rs#L3705\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/3f7d7bc418ddd001de12929a3b18c6963d8b526d/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f646437646137316534366239303035663161326437643834663763326337616237373963346539633133316261663762383839636637323430643533333061322f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasmtime/src/config.rs#L3705\" title=\"wasmtime/crates/wasmtime/src/config.rs at main 路 bytecodealliance/wasmtime\">wasmtime/crates/wasmtime/src/config.rs at main 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 541534089,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1758829728
    },
    {
        "content": "<p>For hashing does this work? <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasmtime/src/engine.rs#L819\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasmtime/src/engine.rs#L819</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasmtime/src/engine.rs#L819\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/3f7d7bc418ddd001de12929a3b18c6963d8b526d/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f646437646137316534366239303035663161326437643834663763326337616237373963346539633133316261663762383839636637323430643533333061322f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasmtime/src/engine.rs#L819\" title=\"wasmtime/crates/wasmtime/src/engine.rs at main 路 bytecodealliance/wasmtime\">wasmtime/crates/wasmtime/src/engine.rs at main 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 541534305,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1758829815
    },
    {
        "content": "<p>IIRC that contains compiler flags enabled but I am also on a phone so can't say for certain</p>",
        "id": 541534360,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1758829838
    },
    {
        "content": "<p>Thank you, yeah I'll look into it. For some reason I didn't see when scrolling through Engine's API earlier today <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 541551650,
        "sender_full_name": "Simonas (nagisa)",
        "timestamp": 1758838143
    }
]