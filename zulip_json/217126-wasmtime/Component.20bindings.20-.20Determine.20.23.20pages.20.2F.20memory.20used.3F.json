[
    {
        "content": "<p>Hi, I'm embedding wasmtime in my Rust app for a plugin architecture. I'm using WIT to define the contract (no WASI), just targeting wasm32-unknown-unknown.</p>\n<p>I'm struggling to figure out how much memory / # pages my instantiated component is using in real-time.  Since my application + component is long-lived, I'd like to track this to ensure I'm not leaking. Can someone point me in the right direction here? I have a leak in my application, and I'm trying to eliminate WASM as the source. I understand that WASM cannot return pages to the host, but am I understanding correctly that the memory allocator can reuse previously freed memory, right?</p>",
        "id": 498827810,
        "sender_full_name": "Adam Crain",
        "timestamp": 1739210682
    },
    {
        "content": "<p>You're correct wasm can't free memory, and you can track memory with a <a href=\"https://docs.rs/wasmtime/latest/wasmtime/trait.ResourceLimiter.html\"><code>ResourceLimiter</code></a> implementation</p>",
        "id": 498828137,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1739210782
    },
    {
        "content": "<p>(basically hook <code>memory_growing</code> and <code>table_growing</code> and add in values)</p>",
        "id": 498828193,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1739210801
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> ! I'll tack this onto the Store. Appreciate the tip.</p>",
        "id": 498829017,
        "sender_full_name": "Adam Crain",
        "timestamp": 1739211018
    }
]