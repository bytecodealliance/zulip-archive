[
    {
        "content": "<p>Seems when wasmtime C/API calls are made from a Windows DLL, lldb fails to resolve the breakpoint.<br>\nWhen C/API calls made from a window exe, such as the example I posted yesterday, breakpoints resolve.<br>\nSeems to be an lldb issue. Will update yesterday's repro to emulate what our actual app does in a DLL &amp; see if that can reproduce. If so, seems an LLDB issue, not a wasmtime issue, but FYI.</p>\n<p>lldb version 21.1.3</p>\n<p>next step is build lldb trunk from source in debug mode &amp; see if I can figure out what's going on.</p>\n<p>This is a regression somewhere as it used to work.</p>",
        "id": 544802220,
        "sender_full_name": "Steve Williams",
        "timestamp": 1760462059
    },
    {
        "content": "<p>Fixed this once. Will be something like this.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">diff</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"s\">\"a/lldb/source/Plugins/JITLoader/GDB/JITLoaderGDB.cpp\"</span><span class=\"w\"> </span><span class=\"s\">\"b/lldb/source/Plugins/JITLoader/GDB/JITLoaderGDB.cpp\"</span>\n<span class=\"n\">index</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"n\">b810c0fee43</span><span class=\"o\">..</span><span class=\"n\">f6d45685e4b7</span><span class=\"w\"> </span><span class=\"mi\">100644</span>\n<span class=\"o\">---</span><span class=\"w\"> </span><span class=\"s\">\"a/lldb/source/Plugins/JITLoader/GDB/JITLoaderGDB.cpp\"</span>\n<span class=\"o\">+++</span><span class=\"w\"> </span><span class=\"s\">\"b/lldb/source/Plugins/JITLoader/GDB/JITLoaderGDB.cpp\"</span>\n<span class=\"o\">@@</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">195</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"mi\">195</span><span class=\"p\">,</span><span class=\"mi\">17</span><span class=\"w\"> </span><span class=\"o\">@@</span><span class=\"w\"> </span><span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">JITLoaderGDB</span><span class=\"p\">::</span><span class=\"n\">SetJITBreakpoint</span><span class=\"p\">(</span><span class=\"n\">lldb_private</span><span class=\"p\">::</span><span class=\"n\">ModuleList</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module_list</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">     </span><span class=\"k\">return</span><span class=\"p\">;</span>\n\n<span class=\"w\">   </span><span class=\"n\">m_jit_descriptor_addr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">GetSymbolAddress</span><span class=\"p\">(</span>\n<span class=\"o\">-</span><span class=\"w\">      </span><span class=\"n\">module_list</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ConstString</span><span class=\"p\">(</span><span class=\"s\">\"__jit_debug_descriptor\"</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">eSymbolTypeData</span><span class=\"p\">);</span>\n<span class=\"o\">+</span><span class=\"w\">      </span><span class=\"n\">module_list</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ConstString</span><span class=\"p\">(</span><span class=\"s\">\"__jit_debug_descriptor\"</span><span class=\"p\">),</span>\n<span class=\"o\">+</span>\n<span class=\"o\">+</span><span class=\"p\">#</span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"n\">WIN32</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"n\">WINDOWS</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"n\">WIN64</span>\n<span class=\"o\">+</span><span class=\"w\">                       </span><span class=\"c1\">// ADV_SW_PATCH: Windows implementation not indicating symbol is Data</span>\n<span class=\"o\">+</span><span class=\"w\">                       </span><span class=\"c1\">// so we use Any as workaround for the time being.</span>\n<span class=\"o\">+</span><span class=\"w\">                       </span><span class=\"n\">eSymbolTypeAny</span><span class=\"p\">);</span>\n<span class=\"o\">+</span><span class=\"p\">#</span><span class=\"k\">else</span>\n<span class=\"o\">+</span><span class=\"w\">                       </span><span class=\"n\">eSymbolTypeData</span><span class=\"p\">);</span>\n<span class=\"o\">+</span><span class=\"p\">#</span><span class=\"n\">endif</span>\n<span class=\"o\">+</span>\n<span class=\"o\">+</span>\n<span class=\"w\">   </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">m_jit_descriptor_addr</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">LLDB_INVALID_ADDRESS</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">     </span><span class=\"n\">LLDB_LOGF</span><span class=\"p\">(</span><span class=\"n\">log</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"JITLoaderGDB::%s failed to find JIT descriptor address\"</span><span class=\"p\">,</span>\n<span class=\"w\">               </span><span class=\"n\">__FUNCTION__</span><span class=\"p\">);</span>\n</code></pre></div>",
        "id": 544806166,
        "sender_full_name": "Steve Williams",
        "timestamp": 1760463591
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"448652\">@Steve Williams</span> this is not a forum for LLDB diffs; please take it to their issue tracker. Thanks.</p>",
        "id": 544807526,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1760464128
    },
    {
        "content": "<p>course but this stuff is difficult, if it doesn't interest you, stay out of my threads. you're getting annoying.</p>\n<p>its core functionality. without this wasmtime is a toy.</p>",
        "id": 544807663,
        "sender_full_name": "Steve Williams",
        "timestamp": 1760464188
    },
    {
        "content": "<p>that's not a fix, that's how I fixed it last time. I don't know what the current status is yet, but the issue will be somewhere around there. robust wasm debugging on core platforms absolutely is relevant here.</p>",
        "id": 544808176,
        "sender_full_name": "Steve Williams",
        "timestamp": 1760464392
    },
    {
        "content": "<p>you can't force people to reprioritize your favorite toy by shouting louder, what do you think would happen if everyone started to post a zulip message every time they found out another detail about what they are currently working on?</p>",
        "id": 544809726,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1760464956
    },
    {
        "content": "<p>You're in my thread, if you've got an issue higher priority, post it.</p>",
        "id": 544809870,
        "sender_full_name": "Steve Williams",
        "timestamp": 1760464998
    }
]