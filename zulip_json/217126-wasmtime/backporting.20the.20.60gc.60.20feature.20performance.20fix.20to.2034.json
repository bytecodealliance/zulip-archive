[
    {
        "content": "<p>Currently, disabling <code>gc</code> via feature flag (or otherwise) may carry pretty significant performance penalty, at least in Wasm modules. I know that 34 release has already been branched off, but is there a chance the fix could be back ported? I am happy to open a PR to the release branch to facilitate that</p>\n<p>Here's the PR with more details and the fix (which is tiny): <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11068\">https://github.com/bytecodealliance/wasmtime/pull/11068</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/11068\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/0eaf022116e7a01b9775086852673152cc01d597/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f626565643736633732626563363565613636343934326462663339663165396461656166666464313137343162336137623930363365626165393932333133642f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f3131303638&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/11068\" title=\"fix: do not collect backtrace on each `gc_runtime` access by rvolosatovs · Pull Request #11068 · bytecodealliance/wasmtime\">fix: do not collect backtrace on each `gc_runtime` access by rvolosatovs · Pull Request #11068 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This is something I&#39;ve discovered profiling a Wasmtime embedding with wasm32-unknown-unknown modules. Currently, gc_runtime accessor returns an anyhow::Result, which triggers a backtrace collec...</div></div></div>",
        "id": 524857649,
        "sender_full_name": "Roman Volosatovs",
        "timestamp": 1750329367
    },
    {
        "content": "<p>Filed a backport PR for now: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11074\">https://github.com/bytecodealliance/wasmtime/pull/11074</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/11074\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/0d1eed79fd41fcb649b059f31fc2aab781c1d9d9/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663837356234663066363930613938333630336364666131313030393532346130323235306333636639646633333639303930393163396636303638336237382f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f3131303734&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/11074\" title=\"[backport] fix: do not collect backtrace on each gc_runtime access by rvolosatovs · Pull Request #11074 · bytecodealliance/wasmtime\">[backport] fix: do not collect backtrace on each gc_runtime access by rvolosatovs · Pull Request #11074 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This is a backport of #11068 to 34.0.0 release branch.\nI am not entirely sure what&#39;s the standard procedure for backports, but hopefully this helps.\nZulip discussion: #wasmtime &gt; backporting...</div></div></div>",
        "id": 524858333,
        "sender_full_name": "Roman Volosatovs",
        "timestamp": 1750329654
    },
    {
        "content": "<p>Backport sounds good to me, and thanks for making the PR!</p>",
        "id": 524945709,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1750365667
    }
]