[
    {
        "content": "<p>Hi! I'm trying to implement a world that imports both wasi types and wasi-http types and running into issues with satisfying wasmtime bindgen Host trait requirements. So if I use just wasi then I can implement all my interfaces for <code>WasiImpl&lt;MyState&gt;</code> and it automatically satisfies all the wasi import traits because they are implemented for <code>WasiImpl&lt;T&gt;</code>, but then I can't add wasi-http implementations since they are only implemented for WasiHttpImpl&lt;T&gt; newtype, and the wasmtime bindgen generated world requires the  <code>World::add_to_linker(linker,  state)</code> to have state satisfy <code>FnOnce(T) -&gt; U</code>, where <code>U</code> implements all my world interfaces, wasi interfaces, and wasi-http interfaces in one type, which seems impossible unless I create a new newtype and implement all wasi and wasi-http implementations for it?</p>",
        "id": 506824692,
        "sender_full_name": "Marek Vavrusa",
        "timestamp": 1742417151
    },
    {
        "content": "<p>I guess I can implement a custom <code>add_to_linker</code> without the Host traits as they are satisfied via newtype conversions already</p>",
        "id": 506826321,
        "sender_full_name": "Marek Vavrusa",
        "timestamp": 1742417720
    },
    {
        "content": "<p>Are you implementing the wasi traits by hand? Or using the impls in the <code>wasmtime-wasi*</code> crates? If you're only doing your own functionality by hand then you might also be interested in the <code>*_get_host</code> variant of the add_to_linker functions that are generated</p>",
        "id": 506826690,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1742417845
    },
    {
        "content": "<p>I'm using impls from wasmtime-wasi* crates</p>",
        "id": 506827092,
        "sender_full_name": "Marek Vavrusa",
        "timestamp": 1742417985
    },
    {
        "content": "<p>ah ok, in that case what led you to work with <code>WasiImpl</code>? In theory that's just an implementation detail of those crates</p>",
        "id": 506827535,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1742418136
    },
    {
        "content": "<p>The wasmtime-wasi* crates <code>add_to_linker()</code>are fine because they require T to be WasiView/WasiHttpView and then wrap the T in newtype and add bindings for that. The problem is bindgen generated <code>add_to_linker</code> for my world which generates a function that looks like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">add_to_linker</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">U</span><span class=\"o\">&gt;</span><span class=\"p\">(</span>\n<span class=\"w\">            </span><span class=\"n\">linker</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">Linker</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"n\">get</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"nb\">Fn</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">U</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Send</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Sync</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Copy</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"nb\">static</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span>\n<span class=\"w\">        </span><span class=\"k\">where</span>\n<span class=\"w\">            </span><span class=\"n\">T</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Send</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">U</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">host</span><span class=\"p\">::</span><span class=\"n\">app</span><span class=\"p\">::</span><span class=\"n\">init</span><span class=\"p\">::</span><span class=\"n\">Host</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\">  </span><span class=\"n\">__with_name9</span><span class=\"p\">::</span><span class=\"n\">network</span><span class=\"p\">::</span><span class=\"n\">Host</span><span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">__with_name5</span><span class=\"p\">::</span><span class=\"n\">wall_clock</span><span class=\"p\">::</span><span class=\"n\">Host</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>But the wasi traits are implemented only for <code>WasiImpl&lt;U&gt;</code> and not <code>U</code>.</p>",
        "id": 506828195,
        "sender_full_name": "Marek Vavrusa",
        "timestamp": 1742418412
    },
    {
        "content": "<p>Like ideally bindgen would generate U constraints like <code>host::app::init::Host + WasiView</code></p>",
        "id": 506828301,
        "sender_full_name": "Marek Vavrusa",
        "timestamp": 1742418450
    },
    {
        "content": "<p>I ignored the generated <code>add_to_linker</code>, and instead implemented <code>add_to_linker</code> manually for my concrete MyState which seems like the best solution</p>",
        "id": 506829725,
        "sender_full_name": "Marek Vavrusa",
        "timestamp": 1742419008
    },
    {
        "content": "<p>Makes sense, I'd recommend avoiding the generated add_to_linker for wasi, you probably want the <a href=\"https://docs.rs/wasmtime-wasi/latest/wasmtime_wasi/fn.add_to_linker_sync.html\">top-level handwritten one instead</a> which avoids dealing with <code>WasiImpl</code></p>",
        "id": 506831427,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1742419736
    },
    {
        "content": "<p>Yeah makes sense thanks! I was thinking about this for a while but only after writing this it occurred to me that I can just write my own <code>add_to_linker</code> <span aria-label=\"melting face\" class=\"emoji emoji-1fae0\" role=\"img\" title=\"melting face\">:melting_face:</span></p>",
        "id": 506832129,
        "sender_full_name": "Marek Vavrusa",
        "timestamp": 1742420037
    },
    {
        "content": "<p>any recommended tutorials for using wasmtime with hot reloading? trying to figure it out for a game I am making</p>",
        "id": 507392010,
        "sender_full_name": "Andrew Gazelka",
        "timestamp": 1742605106
    }
]