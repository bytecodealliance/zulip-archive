[
    {
        "content": "<p>looking at the docs for setting up a host environemt all the functions are loaded via a test search for the name and input + output values are dynamic and must be known when invoking the function signature </p>\n<p>Example from GCD C++ code </p>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"w\">  </span><span class=\"c1\">// Invoke `gcd` export</span>\n<span class=\"w\">  </span><span class=\"k\">auto</span><span class=\"w\"> </span><span class=\"n\">gcd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">get</span><span class=\"o\">&lt;</span><span class=\"n\">Func</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"gcd\"</span><span class=\"p\">));</span>\n<span class=\"w\">  </span><span class=\"k\">auto</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">gcd</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">27</span><span class=\"p\">}).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n\n<span class=\"w\">  </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"gcd(6, 27) = \"</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">i32</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">;</span>\n</code></pre></div>\n<p>is it possible given a wasm componet file (or even a top level WIT file) to auto generate all the binding code and wrap it as a C++ object / struct / free functions </p>\n<p>something along the lines of </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span><span class=\"o\">{</span>magic-wasmtime-tool<span class=\"o\">}</span><span class=\"w\"> </span>cpp<span class=\"w\"> </span>gcd.wit\n</code></pre></div>\n<p>and have it produce a file along the lines of </p>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">gcd_module</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"k\">public</span><span class=\"o\">:</span>\n<span class=\"w\">   </span><span class=\"c1\">// validate the loaded WASM file matches all the functions + params defined in the WIT files</span>\n<span class=\"w\">   </span><span class=\"n\">gcd_module</span><span class=\"p\">(</span><span class=\"n\">Instance</span><span class=\"o\">&amp;</span><span class=\"p\">);</span>\n<span class=\"w\">   </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"nf\">gcd</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 537783065,
        "sender_full_name": "Curtis Mahieu",
        "timestamp": 1757038603
    },
    {
        "content": "<p>I think you're looking for the C++ equivalent of <a href=\"https://docs.rs/wasmtime/latest/wasmtime/component/macro.bindgen.html\"><code>bindgen!</code></a> which does not currently exist</p>",
        "id": 537783648,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1757039169
    },
    {
        "content": "<p>yup that looks exactly like what im looking for .<br>\nthanks! ill keep an eye out for something similar for more languages.</p>",
        "id": 537787416,
        "sender_full_name": "Curtis Mahieu",
        "timestamp": 1757042768
    }
]