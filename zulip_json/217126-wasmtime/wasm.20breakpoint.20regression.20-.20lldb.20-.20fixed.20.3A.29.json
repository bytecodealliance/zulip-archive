[
    {
        "content": "<p>Breakpoints working again :)</p>\n<p>Might not be a Windows only issue this time. </p>\n<p>Quick fix :</p>\n<p>File: lldb\\source\\Plugins\\JITLoader\\GDB\\JITLoaderGDB.cpp</p>\n<ol>\n<li>In JITLoaderGDB::SetJITBreakpoint</li>\n</ol>\n<p>Comment out :</p>\n<p>//if (DidSetJITBreakpoint())<br>\n    //return;</p>\n<ol start=\"2\">\n<li>In JITLoaderGDB::ModulesDidLoad</li>\n</ol>\n<p>Comment out :<br>\n//if (!DidSetJITBreakpoint() &amp;&amp; m_process-&gt;IsAlive())</p>\n<ol start=\"3\">\n<li>Build lldb as normal. Fixed :)</li>\n</ol>\n<p>Apologies for the disturbance. We got a full toolchain again. Thanks to all for your excellent work.</p>",
        "id": 545111120,
        "sender_full_name": "Steve Williams",
        "timestamp": 1760555702
    },
    {
        "content": "<p>As expected the lldb inquisition begins :)</p>\n<p>As stated in the comment, I don't have time to deep dive lldb right now, I just need a fix &amp; have one. If anyone else has more time/inclination to analyze this in more depth, please feel free to contribute. Deep crunch getting our stuff out the door, until then, it's essentials only.</p>\n<p><a href=\"https://github.com/llvm/llvm-project/issues/163799#issuecomment-3412779618\">https://github.com/llvm/llvm-project/issues/163799#issuecomment-3412779618</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/llvm/llvm-project/issues/163799#issuecomment-3412779618\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/496bf30e2bc6adb1c74ca502d81b860e7389d951/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f336266313738643531356136636461383263613637313739363339313461336162636135646562666634643763336632343537306461353962383138383937392f6c6c766d2f6c6c766d2d70726f6a6563742f6973737565732f313633373939&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/llvm/llvm-project/issues/163799#issuecomment-3412779618\" title=\"LLDB: Breakpoints regressed - Web Assembly invoked from WASM C-API in a dynamic library (fix included) 路 Issue #163799 路 llvm/llvm-project\">LLDB: Breakpoints regressed - Web Assembly invoked from WASM C-API in a dynamic library (fix included) 路 Issue #163799 路 llvm/llvm-project</a></div><div class=\"message_embed_description\">What happened : LLDB breakpoints stopped working. Specific use case example here : https://advance-software.com/develop/#tutorial Our app invokes Web Asssembly C-API from a plugin (DLL on Windows) ...</div></div></div>",
        "id": 545515885,
        "sender_full_name": "Steve Williams",
        "timestamp": 1760691002
    },
    {
        "content": "<p>&amp; yes I know this isn't the llvm board &amp; all the rest of it but we all need this working to have a solid toolchain. External patches are workaround, ideally we want a commit so it just works out of the box.</p>",
        "id": 545516062,
        "sender_full_name": "Steve Williams",
        "timestamp": 1760691065
    },
    {
        "content": "<p>If anyone has a simple repro with full source, that can be provided to llvm team, that'd help. Ideally we pull something together to hopefully prevent future regressions. I'll work on this when I can but it won't be immediately.</p>",
        "id": 545568292,
        "sender_full_name": "Steve Williams",
        "timestamp": 1760707545
    }
]