[
    {
        "content": "<p>You are using the steps at <a href=\"https://github.com/hyperlight-dev/hyperlight/blob/main/docs/how-to-debug-a-hyperlight-guest.md\">https://github.com/hyperlight-dev/hyperlight/blob/main/docs/how-to-debug-a-hyperlight-guest.md</a> to attach gdb to the guest process? You could try if enabling debug-builtins compiles. Also make sure to tell Wasmtime to generate debuginfo in the first place (<code>config.debug_info(true)</code>).</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/hyperlight-dev/hyperlight/blob/main/docs/how-to-debug-a-hyperlight-guest.md\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/1d4f969a063d0640aa8297c5fbc6a2315fba151b/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633864383439613632616532653462373861613965653539313961643762383461373336633431383230316134383966376133386463656636643263313533622f68797065726c696768742d6465762f68797065726c69676874&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/hyperlight-dev/hyperlight/blob/main/docs/how-to-debug-a-hyperlight-guest.md\" title=\"hyperlight/docs/how-to-debug-a-hyperlight-guest.md at main · hyperlight-dev/hyperlight\">hyperlight/docs/how-to-debug-a-hyperlight-guest.md at main · hyperlight-dev/hyperlight</a></div><div class=\"message_embed_description\">Hyperlight is a lightweight Virtual Machine Manager (VMM) designed to be embedded within applications. It enables safe execution of untrusted code within micro virtual machines with very low latenc...</div></div></div>",
        "id": 523732189,
        "sender_full_name": "bjorn3",
        "timestamp": 1749726294
    },
    {
        "content": "<p>2 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"217126\" href=\"/#narrow/channel/217126-wasmtime/topic/Debugging.20wasm.20with.20lldb.2Fgdb/with/340514698\">#wasmtime &gt; Debugging wasm with lldb/gdb</a> by <span class=\"user-mention silent\" data-user-id=\"264278\">bjorn3</span>.</p>",
        "id": 523732371,
        "sender_full_name": "Notification Bot",
        "timestamp": 1749726349
    },
    {
        "content": "<p>Yes, I am using the steps in Hyperlight, this is not related to hyperlight.<br>\nI am able to attach and debug the guest. However, when the guest tries to use the wasmtime runtime to execute a module, I am not able to make <code>gdb/lldb</code> interactively debug the wasm source code for the module</p>",
        "id": 523734832,
        "sender_full_name": "Doru Blânzeanu",
        "timestamp": 1749727295
    },
    {
        "content": "<p>I provided the <code>config.debug_info(true)</code> option to the wasmtime Engine Config.</p>",
        "id": 523735158,
        "sender_full_name": "Doru Blânzeanu",
        "timestamp": 1749727397
    },
    {
        "content": "<p>I am wondering whether the <code>debug-builtins</code> are needed for this to work.</p>",
        "id": 523772577,
        "sender_full_name": "Doru Blânzeanu",
        "timestamp": 1749739259
    },
    {
        "content": "<p>Yeah, I believe you need to enable debug-builtins.</p>",
        "id": 523816121,
        "sender_full_name": "bjorn3",
        "timestamp": 1749754932
    },
    {
        "content": "<p>I've looked more thoroughly and tested and it does need the <code>debug-builtins</code> feature to allow debugger inspect the wasm module at runtime.<br>\nI cannot enable <code>debug-builtins</code> because it depends on the <code>std</code> feature and I am running in a no_std environment.<br>\nI've browsed the code that depends on the <code>debug-builtins</code> feature, and I am not sure, but it looks like that could be modified to run in a <code>no_std</code> env.</p>\n<p>What do you think?</p>",
        "id": 524270251,
        "sender_full_name": "Doru Blânzeanu",
        "timestamp": 1750084249
    },
    {
        "content": "<p>When no_std support was added most preexisting features were flagged as requiring std blindly. If debug-builtins works without std then that's great! If you're able to help out (which would be much appreciated!) the fix would look like <a href=\"https://github.com/bytecodealliance/wasmtime/blob/60269d642510263ccf5fe637c042d663fecfc43a/.github/workflows/main.yml#L506-L515\">configuring CI to test the feature here</a> (e.g. adding it to the list of features already built) and then fixing up any issues that arise.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/60269d642510263ccf5fe637c042d663fecfc43a/.github/workflows/main.yml#L506-L515\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/9f90f85e7d84412802c32af8c24381b480301b78/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f303865306566313761613134666431376337383165666336363766653261643334343665666565396466633836316336366464363139343366346430303366312f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/60269d642510263ccf5fe637c042d663fecfc43a/.github/workflows/main.yml#L506-L515\" title=\"wasmtime/.github/workflows/main.yml at 60269d642510263ccf5fe637c042d663fecfc43a · bytecodealliance/wasmtime\">wasmtime/.github/workflows/main.yml at 60269d642510263ccf5fe637c042d663fecfc43a · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 524273170,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1750085151
    },
    {
        "content": "<p>Thanks for the explanation, Alex!<br>\nI'll try make it not depend on <code>std</code> <span aria-label=\"smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 524274294,
        "sender_full_name": "Doru Blânzeanu",
        "timestamp": 1750085457
    },
    {
        "content": "<p>GO DORU GO</p>",
        "id": 524410411,
        "sender_full_name": "Ralph",
        "timestamp": 1750152935
    },
    {
        "content": "<p>I've submitted a PR regarding this no_std support for the debug-builtins feature, and I can't seem to figure out why <code>cargo vet</code> fails.</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/pull/11304\">https://github.com/bytecodealliance/wasmtime/pull/11304</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/11304\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b7b9fd30c00ddb4e32d10acf961e0c9e206f8405/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633664333932636535646239646661326538663363666366303338653332636139356230386339633666346330373362366363613838373764323064646436642f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f3131333034&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/11304\" title=\"Allow compiling debug-builtins in no_std environment to enable gdb jit by dblnz · Pull Request #11304 · bytecodealliance/wasmtime\">Allow compiling debug-builtins in no_std environment to enable gdb jit by dblnz · Pull Request #11304 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Description\nThis PR takes care of enabling the compilation of gdb_jit_int module in the jit-debug crate to ensure the native debugging also works in no_std environments.\nThe\nThis work has been disc...</div></div></div>",
        "id": 530214772,
        "sender_full_name": "Doru Blânzeanu",
        "timestamp": 1753214829
    },
    {
        "content": "<p>We are targeting Wasmtime 36.0.0 LTS release to use for debugging wasm modules/components running in the no_std environment of a Hyperlight guest.</p>",
        "id": 530377860,
        "sender_full_name": "Doru Blânzeanu",
        "timestamp": 1753285365
    },
    {
        "content": "<p>Thanks for the help provided in merging this! It is in time for the <code>v36.0.0</code> right?</p>",
        "id": 531878691,
        "sender_full_name": "Doru Blânzeanu",
        "timestamp": 1753891415
    },
    {
        "content": "<p>It is indeed yeah, that'll branch next week</p>",
        "id": 531885403,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1753893586
    }
]