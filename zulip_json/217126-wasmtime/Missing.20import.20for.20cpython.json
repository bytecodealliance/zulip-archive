[
    {
        "content": "<p>Hi all, I am trying to compile cpython for wasip2 and am getting the following issue when I try and run it with wasmtime:</p>\n<p><strong>Command:</strong></p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--wasm<span class=\"w\"> </span>max-wasm-stack<span class=\"o\">=</span><span class=\"m\">8388608</span><span class=\"w\"> </span>--wasi<span class=\"w\"> </span>preview2<span class=\"w\"> </span>--dir<span class=\"w\"> </span><span class=\"o\">{</span>HOST_DIR<span class=\"o\">}</span>::<span class=\"o\">{</span>GUEST_DIR<span class=\"o\">}</span>\n</code></pre></div>\n<p><strong>Output</strong></p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/benjamin.brandt/github/wasi-wheels/cpython-3.13.1/cross-build/wasm32-wasip2/python.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>instantiate<span class=\"w\"> </span><span class=\"s2\">\"/Users/benjamin.brandt/github/wasi-wheels/cpython-3.13.1/cross-build/wasm32-wasip2/python.wasm\"</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unknown<span class=\"w\"> </span>import:<span class=\"w\"> </span><span class=\"sb\">`</span>wasi_snapshot_preview1::adapter_open_badfd<span class=\"sb\">`</span><span class=\"w\"> </span>has<span class=\"w\"> </span>not<span class=\"w\"> </span>been<span class=\"w\"> </span>defined\nTraceback<span class=\"w\"> </span><span class=\"o\">(</span>most<span class=\"w\"> </span>recent<span class=\"w\"> </span>call<span class=\"w\"> </span>last<span class=\"o\">)</span>:\n<span class=\"w\">  </span>File<span class=\"w\"> </span><span class=\"s2\">\"/Users/benjamin.brandt/github/wasi-wheels/cpython-3.13.1/./Tools/wasm/wasi.py\"</span>,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">365</span>,<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>&lt;module&gt;\n<span class=\"w\">    </span>main<span class=\"o\">()</span>\n<span class=\"w\">    </span>~~~~^^\n<span class=\"w\">  </span>File<span class=\"w\"> </span><span class=\"s2\">\"/Users/benjamin.brandt/github/wasi-wheels/cpython-3.13.1/./Tools/wasm/wasi.py\"</span>,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">361</span>,<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>main\n<span class=\"w\">    </span>dispatch<span class=\"o\">[</span>context.subcommand<span class=\"o\">](</span>context<span class=\"o\">)</span>\n<span class=\"w\">    </span>~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^\n<span class=\"w\">  </span>File<span class=\"w\"> </span><span class=\"s2\">\"/Users/benjamin.brandt/github/wasi-wheels/cpython-3.13.1/./Tools/wasm/wasi.py\"</span>,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">85</span>,<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>wrapper\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span>func<span class=\"o\">(</span>context,<span class=\"w\"> </span>working_dir<span class=\"o\">)</span>\n<span class=\"w\">  </span>File<span class=\"w\"> </span><span class=\"s2\">\"/Users/benjamin.brandt/github/wasi-wheels/cpython-3.13.1/./Tools/wasm/wasi.py\"</span>,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">272</span>,<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>make_wasi_python\n<span class=\"w\">    </span>subprocess.check_call<span class=\"o\">([</span>exec_script,<span class=\"w\"> </span><span class=\"s2\">\"--version\"</span><span class=\"o\">])</span>\n<span class=\"w\">    </span>~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<span class=\"w\">  </span>File<span class=\"w\"> </span><span class=\"s2\">\"/opt/homebrew/Cellar/python@3.13/3.13.1/Frameworks/Python.framework/Versions/3.13/lib/python3.13/subprocess.py\"</span>,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">419</span>,<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>check_call\n<span class=\"w\">    </span>raise<span class=\"w\"> </span>CalledProcessError<span class=\"o\">(</span>retcode,<span class=\"w\"> </span>cmd<span class=\"o\">)</span>\nsubprocess.CalledProcessError:<span class=\"w\"> </span>Command<span class=\"w\"> </span><span class=\"s1\">'[PosixPath('</span>/Users/benjamin.brandt/github/wasi-wheels/cpython-3.13.1/cross-build/wasm32-wasip2/python.sh<span class=\"s1\">'), '</span>--version<span class=\"s1\">']'</span><span class=\"w\"> </span>returned<span class=\"w\"> </span>non-zero<span class=\"w\"> </span><span class=\"nb\">exit</span><span class=\"w\"> </span>status<span class=\"w\"> </span><span class=\"m\">1</span>.\n</code></pre></div>\n<p>The weird thing is it seems like it should be available based on this: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/cd67a6090d515189a9c286bec2d993a591da3739/crates/wasi-preview1-component-adapter/src/lib.rs#L171\">https://github.com/bytecodealliance/wasmtime/blob/cd67a6090d515189a9c286bec2d993a591da3739/crates/wasi-preview1-component-adapter/src/lib.rs#L171</a></p>\n<p>I built with wasi-sdk v25 (which might be the issue) and using wasmtime v28 and v29 caused the issue.</p>\n<p>If anyone has any ideas, I'd appreciate it, otherwise I'll keep trying different combinations of wasmtime and wasi-sdk. Thanks!</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/cd67a6090d515189a9c286bec2d993a591da3739/crates/wasi-preview1-component-adapter/src/lib.rs#L171\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/3d170df422625ba5d381224c4821f2c47dd80745/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343866336439366461626139666332646264653562363334336130363266376664343238326263393432376234613366346639393933613166336534613262632f62797465636f6465616c6c69616e63652f7761736d74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/cd67a6090d515189a9c286bec2d993a591da3739/crates/wasi-preview1-component-adapter/src/lib.rs#L171\" title=\"wasmtime/crates/wasi-preview1-component-adapter/src/lib.rs at cd67a6090d515189a9c286bec2d993a591da3739 · bytecodealliance/wasmtime\">wasmtime/crates/wasi-preview1-component-adapter/src/lib.rs at cd67a6090d515189a9c286bec2d993a591da3739 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 495063292,
        "sender_full_name": "Ben Brandt",
        "timestamp": 1737469445
    },
    {
        "content": "<p>Is <a href=\"https://github.com/bytecodealliance/wasm-tools/issues/1939\">this issue</a> possibly linked/relevant?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools/issues/1939\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/2ee922b4aad72f7fc539eb07d19050532ae3e9c0/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393738383630343766623666653033366537643835623663353538663664323066636132323465643434363032373965316464643666613961303837326335632f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c732f6973737565732f31393339&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools/issues/1939\" title=\"wasm-tools component new fails to resolve wasi_snapshot_preview1 with proxy adapter · Issue #1939 · bytecodealliance/wasm-tools\">wasm-tools component new fails to resolve wasi_snapshot_preview1 with proxy adapter · Issue #1939 · bytecodealliance/wasm-tools</a></div><div class=\"message_embed_description\">Hi There, I'm trying to build a component that could be used by wasmtime serve. The code is in Rust, but for various reasons I cannot rely on Cargo and have to work in Bazel. I can build core Wasm ...</div></div></div>",
        "id": 495073011,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1737471207
    },
    {
        "content": "<p>Hmm maybe... I will take a look. Thanks</p>",
        "id": 495073445,
        "sender_full_name": "Ben Brandt",
        "timestamp": 1737471283
    },
    {
        "content": "<p>Yeah it seems unlikely since the tooling probably <em>isn't</em> doing anything funny with the adapter name/does this properly... but I wonder if this is something that tripped people up somewhat recently, and specifying an adapter name (via <code>--adapt name=&lt;path&gt;</code> might be necessary now where it wasn't before...</p>",
        "id": 495074053,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1737471382
    },
    {
        "content": "<p>it is also possible that while I am telling cpython to compile with the target wasip2 that it is still doing it for p1 and that is also causing an issue...</p>",
        "id": 495076293,
        "sender_full_name": "Ben Brandt",
        "timestamp": 1737471782
    },
    {
        "content": "<p>Is the <code>python.wasm</code> file a module or a component (use e.g. <code>wasm-tools print</code> and look at the first line of the output)?  If it's a module, then presumably <code>wasm-component-ld</code> is not being run and the adapter isn't being used.  Keep in mind that <code>wasm32-wasip2</code> is not yet a supported target for CPython, so hacks may be required to get it working.</p>",
        "id": 495077913,
        "sender_full_name": "Joel Dice",
        "timestamp": 1737472113
    },
    {
        "content": "<p>ah it is just a module... Ok this likely explains the issue thanks. I was just trying to check out Brett's flag to try a different target , which doesn't work yet. All good. thanks everyone!</p>",
        "id": 495079241,
        "sender_full_name": "Ben Brandt",
        "timestamp": 1737472442
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"735261\">Ben Brandt</span> has marked this topic as resolved.</p>",
        "id": 495079293,
        "sender_full_name": "Notification Bot",
        "timestamp": 1737472446
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"735261\">Ben Brandt</span> has marked this topic as unresolved.</p>",
        "id": 495081903,
        "sender_full_name": "Notification Bot",
        "timestamp": 1737473134
    },
    {
        "content": "<p>OK nevermind, even if I build for wasip1 I still have the same issue:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Checked<span class=\"w\"> </span><span class=\"m\">112</span><span class=\"w\"> </span>modules<span class=\"w\"> </span><span class=\"o\">(</span><span class=\"m\">69</span><span class=\"w\"> </span>built-in,<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span>shared,<span class=\"w\"> </span><span class=\"m\">26</span><span class=\"w\"> </span>n/a<span class=\"w\"> </span>on<span class=\"w\"> </span>wasi-wasm32,<span class=\"w\"> </span><span class=\"m\">9</span><span class=\"w\"> </span>disabled,<span class=\"w\"> </span><span class=\"m\">8</span><span class=\"w\"> </span>missing,<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span>failed<span class=\"w\"> </span>on<span class=\"w\"> </span>import<span class=\"o\">)</span>\nError:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/benjamin.brandt/github/wasi-wheels/cpython-3.13.1/cross-build/wasm32-wasip1/python.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>instantiate<span class=\"w\"> </span><span class=\"s2\">\"/Users/benjamin.brandt/github/wasi-wheels/cpython-3.13.1/cross-build/wasm32-wasip1/python.wasm\"</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unknown<span class=\"w\"> </span>import:<span class=\"w\"> </span><span class=\"sb\">`</span>wasi_snapshot_preview1::adapter_open_badfd<span class=\"sb\">`</span><span class=\"w\"> </span>has<span class=\"w\"> </span>not<span class=\"w\"> </span>been<span class=\"w\"> </span>defined\n</code></pre></div>",
        "id": 495081975,
        "sender_full_name": "Ben Brandt",
        "timestamp": 1737473154
    },
    {
        "content": "<p>It also doesn't work with wasi-sdk 24... it is possible there's something wrong with my wasmtime or I messed something up in the build... I'll keep digging</p>",
        "id": 495083374,
        "sender_full_name": "Ben Brandt",
        "timestamp": 1737473503
    },
    {
        "content": "<p>Hmm, that definitely shouldn't happen.  The only part of wasi-libc that references <code>adapter_open_badfd</code> is <code>descriptor_table.c</code>, which is <a href=\"https://github.com/WebAssembly/wasi-libc/blob/main/Makefile#L88-L112\">explicitly excluded</a> from the WASIp1 build.  I wonder if files got accidentally cached across the p2 and p1 builds?  Maybe try doing a clean build if you haven't already.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-libc/blob/main/Makefile#L88-L112\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/f6216a4eca2cd55c9ae3e0a2c2278b720a37fa13/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f396531386633623538656335336531343566313630656330646232323838303134333766633965336237363035633237393830366562313138303331383565352f576562417373656d626c792f776173692d6c696263&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-libc/blob/main/Makefile#L88-L112\" title=\"wasi-libc/Makefile at main · WebAssembly/wasi-libc\">wasi-libc/Makefile at main · WebAssembly/wasi-libc</a></div><div class=\"message_embed_description\">WASI libc implementation for WebAssembly. Contribute to WebAssembly/wasi-libc development by creating an account on GitHub.</div></div></div>",
        "id": 495086492,
        "sender_full_name": "Joel Dice",
        "timestamp": 1737474327
    },
    {
        "content": "<p>I'm running into the same issue just running the basic command listed here: <a href=\"https://devguide.python.org/getting-started/setup-building/index.html#wasi\">https://devguide.python.org/getting-started/setup-building/index.html#wasi</a></p>\n<p>I can ask <span class=\"user-mention\" data-user-id=\"595471\">@Brett Cannon</span> again... for some reason it works for him, but I am having issues which leads me to believe I have something weird in my setup. But I guess this is more of a Cpython issue than a wasmtime issue...</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://devguide.python.org/getting-started/setup-building/index.html#wasi\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b9f3ed676c3e77f3927bd823a6578b781689821a/68747470733a2f2f64657667756964652e707974686f6e2e6f72672f5f7374617469632f6f672d696d6167652d323030783230302e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://devguide.python.org/getting-started/setup-building/index.html#wasi\" title=\"Setup and building\">Setup and building</a></div><div class=\"message_embed_description\">These instructions cover how to get a working copy of the source code and a compiled version of the CPython interpreter (CPython is the version of Python available from https://www.python.org/). It...</div></div></div>",
        "id": 495089514,
        "sender_full_name": "Ben Brandt",
        "timestamp": 1737475088
    },
    {
        "content": "<p>I've also cleaned the entire cpython dir and replaced it multiple times but nothing seems to help...</p>",
        "id": 495093062,
        "sender_full_name": "Ben Brandt",
        "timestamp": 1737475965
    },
    {
        "content": "<p>everything works for Brett</p>",
        "id": 495099525,
        "sender_full_name": "Ralph",
        "timestamp": 1737477737
    },
    {
        "content": "<p>Yeah maybe it is because I am on 3.13.1 and there are changes on main I<br>\nneed to backport... I'll take a look</p>",
        "id": 495100901,
        "sender_full_name": "Ben Brandt",
        "timestamp": 1737478131
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"509936\">@Joel Dice</span> I actually have the same problem with the build from the script in componentize-py... so maybe it has more to do with how we are invoking wasmtime (or my wasmtime is wrong)</p>",
        "id": 495105131,
        "sender_full_name": "Ben Brandt",
        "timestamp": 1737479288
    },
    {
        "content": "<p><code>componentize-py</code> only cares about <code>libpython312.so</code> and simply ignores <code>python.wasm</code>, so the latter could be broken in various ways without me noticing.  What's your goal here?  Are you planning to use <code>python.wasm</code> for some specific purpose?</p>",
        "id": 495105785,
        "sender_full_name": "Joel Dice",
        "timestamp": 1737479508
    },
    {
        "content": "<p>It was for building the wheels. And Brett's script does this validation.<br>\nBut maybe I also only need the .so file and can just ignore it as well.</p>",
        "id": 495108621,
        "sender_full_name": "Ben Brandt",
        "timestamp": 1737480321
    }
]