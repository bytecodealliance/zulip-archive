[
    {
        "content": "<p>I'm currently trying to run wasmtime in a no_std environment with limited memory on RISC-V. To achieve that, I compile wasm binaries the following way:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">                                </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">riscv64gc</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">none</span><span class=\"o\">-</span><span class=\"n\">elf</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">                                 </span><span class=\"o\">-</span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"n\">collector</span><span class=\"o\">=</span><span class=\"n\">null</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">                                 </span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"w\"> </span><span class=\"n\">threads</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">                                 </span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">                                 </span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"w\"> </span><span class=\"n\">gc</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">                                 </span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"w\"> </span><span class=\"n\">memory64</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">                                 </span><span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<p>I only have one memory section in <code>my-app.wasm</code> with the following layout: <code>(memory (;0;) 17 20)</code>.</p>\n<p>I then run my application like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">memory_reservation</span><span class=\"p\">(</span><span class=\"mi\">4_294_967_296</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">memory_guard_size</span><span class=\"p\">(</span><span class=\"mi\">33554432</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">signals_based_traps</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">memory_init_cow</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_memory64</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">);</span>\n\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// ...</span>\n<span class=\"w\">        </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"p\">::</span><span class=\"n\">deserialize</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_buffer</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// ...</span>\n</code></pre></div>\n<p>As soon as my cwasm binary has a memory section, the linker seems to try to allocate 4GB of memory, which will not work on my machine - and which shouldn't be necessary.</p>\n<p>However, if I set <code>config.memory_reservation</code> to anything other than 4GB, I get an error while building the module: <code>Module was compiled with a memory reservation of '4294967296' but '33554432' is expected for the host</code></p>\n<p>I don't see any way to compile the module with a different memory reservation, <code> -W max-memory-size=&lt;value&gt;</code> doesn't seem to have an impact either. </p>\n<p>Is there a solution to this problem?</p>",
        "id": 524830791,
        "sender_full_name": "Lukas",
        "timestamp": 1750318518
    }
]