[
    {
        "content": "<p>I've just used <code>unimplemented!()</code> and it seems those functions are not called.</p>",
        "id": 536592694,
        "sender_full_name": "Julien Cretin (ia0)",
        "timestamp": 1756383373
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"495613\">Julien Cretin (ia0)</span> has marked this topic as resolved.</p>",
        "id": 536592700,
        "sender_full_name": "Notification Bot",
        "timestamp": 1756383375
    },
    {
        "content": "<blockquote>\n<p>I'm wondering if there's a way to avoid doing that</p>\n</blockquote>\n<p>In theory this should bottom out with crate features for Wasmtime, where if neither <code>custom-virtual-memory</code> nor <code>custom-native-signals</code> is enabled it shouldn't require anything more thatn <code>wasmtime_tls_*</code></p>",
        "id": 536638319,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1756396448
    },
    {
        "content": "<p>This might be a bug in Wasmtime though where we're detecting linux for i686-unknown-linux-gnu and assuming there's virtual memory when no_std is otherwise active? Would you be able to post a reproduction and/or work-in-progress which requires the symbols that it shouldn't?</p>",
        "id": 536638491,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1756396511
    },
    {
        "content": "<blockquote>\n<p>In theory this should bottom out with crate features for Wasmtime, where if neither <code>custom-virtual-memory</code> nor <code>custom-native-signals</code> is enabled it shouldn't require anything more thatn <code>wasmtime_tls_*</code></p>\n</blockquote>\n<p>I'm using <code>default-features = false</code> and <code>features = [\"async\", \"runtime\"]</code>.</p>\n<blockquote>\n<p>assuming there's virtual memory when no_std is otherwise active?</p>\n</blockquote>\n<p>Mmm... the library that depends on Wasmtime is no-std, but the final binary isn't.</p>\n<blockquote>\n<p>Would you be able to post a reproduction</p>\n</blockquote>\n<p>You can clone <a href=\"https://github.com/ia0/wasefire.git\">https://github.com/ia0/wasefire.git</a>, checkout the branch <code>tmp/pulley-i686-linux</code>, move to the <code>crates/runner-host</code> directory, and run:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">PKG_CONFIG_SYSROOT_DIR</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">i386</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">pkgconfig</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">i686</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">features</span><span class=\"o\">=</span><span class=\"n\">debug</span><span class=\"p\">,</span><span class=\"n\">pulley</span>\n</code></pre></div>\n<p>You can uncomment the lines commented in the last commit to fix the issue. Those are in the <code>crates/scheduler/src/applet/store/pulley.rs</code> file.</p>\n<p>You might need some dependencies like <code>libudev-dev</code>, <code>libssl-dev</code>, <code>libssl-dev:i386</code>, <code>gcc-multilib</code>, and <code>linux-tools-common</code> (or <code>usbip</code>).</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/ia0/wasefire.git\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/7c72485f00d04b8362ae58c3d6e22e5e9eacca48/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f336533393330313165623736343734343462653661663839313961356566336463663131386233333437303735303830393134656630613437346333313763612f6961302f7761736566697265&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/ia0/wasefire.git\" title=\"GitHub - ia0/wasefire: Secure firmware framework focusing on developer experience\">GitHub - ia0/wasefire: Secure firmware framework focusing on developer experience</a></div><div class=\"message_embed_description\">Secure firmware framework focusing on developer experience - ia0/wasefire</div></div></div>",
        "id": 536738360,
        "sender_full_name": "Julien Cretin (ia0)",
        "timestamp": 1756455008
    },
    {
        "content": "<p>Thanks! I was able to confirm that <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11568\">https://github.com/bytecodealliance/wasmtime/pull/11568</a> should make this go away and work as expected</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/11568\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/bc4576752dbaf7146e4022dec38931910b28efae/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323337323831636663623431623130663230353264346533346363326531616237393332363736666533376631323533613936663665386133373739386666652f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f3131353638&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/11568\" title=\"Fix no_std builds on supported targets by alexcrichton 路 Pull Request #11568 路 bytecodealliance/wasmtime\">Fix no_std builds on supported targets by alexcrichton 路 Pull Request #11568 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This commit fixes a conditional in Wasmtime&#39;s build script from accidentally considering Unix and Windows targets as being a supported OS with all the bells and whistles. This is only true if t...</div></div></div>",
        "id": 536804104,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1756478597
    },
    {
        "content": "<p>Cool, thanks a lot!</p>",
        "id": 536808044,
        "sender_full_name": "Julien Cretin (ia0)",
        "timestamp": 1756479746
    }
]