[
    {
        "content": "<p>I have host state that contains methods which need to perform async operations. With the generated <code>Host</code> trait, calling these async methods is straightforward. However, I'm struggling to find the correct pattern to do this with <code>HostWithStore</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">HostWithStore</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyState</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">my_func</span><span class=\"p\">(</span><span class=\"n\">accessor</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Accessor</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"bp\">Self</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">          </span><span class=\"c1\">// The accessor.with() closure is synchronous.</span>\n<span class=\"w\">        </span><span class=\"n\">accessor</span><span class=\"p\">.</span><span class=\"n\">with</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">access</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">state</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">access</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">();</span>\n<span class=\"w\">           </span><span class=\"c1\">// state.do_async_work().await; // won't compile</span>\n</code></pre></div>\n<p>How can I correctly invoke an async method on <code>MyState</code> within this pattern?<br>\nIs there a way to call the async function on <code>MyState</code>?</p>",
        "id": 535672902,
        "sender_full_name": "Tomas Olvecky",
        "timestamp": 1755865831
    },
    {
        "content": "<p>What you'll effectively want to do at this time is \"take out\" bits from the store, await them outside of <code>.with(...)</code>, and then put them back in afterwards. It's not great right now and we're open to finding better idioms/solutions, but this is the best way we know of to map component model semantics onto rust.</p>\n<p>Notably the guest can invoke <code>my_func</code> many times while they're all processing, where previously that was not possible in wasm</p>",
        "id": 535692266,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1755872195
    }
]