[
    {
        "content": "<p>I'm trying to migrate my app to wasmtime 29.0.0 and am hitting a compile error for the Host implementations I have.</p>\n<p>For one of them I have a wit that looks  like this</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">evt</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">enum</span><span class=\"w\"> </span><span class=\"nc\">event</span><span class=\"o\">-</span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">info</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">warning</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">error</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">debug</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">emit</span><span class=\"o\">-</span><span class=\"n\">event</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">et</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">event</span><span class=\"o\">-</span><span class=\"k\">type</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">event</span><span class=\"o\">-</span><span class=\"n\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">event</span><span class=\"o\">-</span><span class=\"n\">data</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">list</span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">event</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">evt</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>And the Host code using the bindgen macro looks like this </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"../../wit/event\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">world</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"event\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">true</span><span class=\"p\">,</span>\n<span class=\"p\">});</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">enum</span><span class=\"w\"> </span><span class=\"nc\">EventType</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">Info</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">Warning</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">Error</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">Debug</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">EventManagerCtx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">eventmanager</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"k\">dyn</span><span class=\"w\"> </span><span class=\"n\">EventManager</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">marker</span><span class=\"p\">::</span><span class=\"nb\">Send</span><span class=\"o\">&gt;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">EventManagerCtx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"n\">eventmanager</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"k\">dyn</span><span class=\"w\"> </span><span class=\"n\">EventManager</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">marker</span><span class=\"p\">::</span><span class=\"nb\">Send</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">anyhow</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"bp\">Self</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">EventManagerCtx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">eventmanager</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">eventmanager</span>\n<span class=\"w\">        </span><span class=\"p\">})</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"cp\">#[async_trait::async_trait]</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">EventManager</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">emit_event</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">et</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">EventType</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">event_name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">event_data</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"cp\">#[async_trait::async_trait]</span>\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">airedale</span><span class=\"p\">::</span><span class=\"n\">event</span><span class=\"p\">::</span><span class=\"n\">evt</span><span class=\"p\">::</span><span class=\"n\">Host</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">EventManagerCtx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">emit_event</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">et</span><span class=\"p\">:</span><span class=\"nc\">airedale</span><span class=\"p\">::</span><span class=\"n\">event</span><span class=\"p\">::</span><span class=\"n\">evt</span><span class=\"p\">::</span><span class=\"n\">EventType</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">event_name</span><span class=\"p\">:</span><span class=\"nb\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">event_data</span><span class=\"p\">:</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"p\">,)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">event_type</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">EventType</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">et</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">airedale</span><span class=\"p\">::</span><span class=\"n\">event</span><span class=\"p\">::</span><span class=\"n\">evt</span><span class=\"p\">::</span><span class=\"n\">EventType</span><span class=\"p\">::</span><span class=\"n\">Info</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">event_type</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">EventType</span><span class=\"p\">::</span><span class=\"n\">Info</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"n\">airedale</span><span class=\"p\">::</span><span class=\"n\">event</span><span class=\"p\">::</span><span class=\"n\">evt</span><span class=\"p\">::</span><span class=\"n\">EventType</span><span class=\"p\">::</span><span class=\"n\">Warning</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">event_type</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">EventType</span><span class=\"p\">::</span><span class=\"n\">Warning</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"n\">airedale</span><span class=\"p\">::</span><span class=\"n\">event</span><span class=\"p\">::</span><span class=\"n\">evt</span><span class=\"p\">::</span><span class=\"n\">EventType</span><span class=\"p\">::</span><span class=\"n\">Debug</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">event_type</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">EventType</span><span class=\"p\">::</span><span class=\"n\">Debug</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"n\">airedale</span><span class=\"p\">::</span><span class=\"n\">event</span><span class=\"p\">::</span><span class=\"n\">evt</span><span class=\"p\">::</span><span class=\"n\">EventType</span><span class=\"p\">::</span><span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">event_type</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">EventType</span><span class=\"p\">::</span><span class=\"n\">Error</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">eventmanager</span><span class=\"p\">.</span><span class=\"n\">emit_event</span><span class=\"p\">(</span><span class=\"n\">event_type</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">event_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">event_data</span><span class=\"p\">).</span><span class=\"k\">await</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">EventManagerFactory</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">new_eventmanager</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"k\">dyn</span><span class=\"w\"> </span><span class=\"n\">EventManager</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">marker</span><span class=\"p\">::</span><span class=\"nb\">Send</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>With 29.0.0 I'm now getting an error on the emit_event function</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0195</span><span class=\"p\">]:</span><span class=\"w\"> </span><span class=\"nc\">lifetime</span><span class=\"w\"> </span><span class=\"n\">parameters</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">bounds</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">method</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">emit_event</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"kr\">do</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">declaration</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">crates</span><span class=\"o\">/</span><span class=\"n\">airedale</span><span class=\"o\">-</span><span class=\"n\">container</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">event</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">33</span><span class=\"p\">:</span><span class=\"mi\">14</span>\n<span class=\"w\">   </span><span class=\"o\">|</span>\n<span class=\"mi\">5</span><span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">});</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">lifetimes</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"kr\">do</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">method</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"k\">trait</span>\n<span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"mi\">31</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"cp\">#[async_trait::async_trait]</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">---------------------------</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"k\">where</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">clause</span><span class=\"w\"> </span><span class=\"n\">might</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">one</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">trait</span>\n<span class=\"mi\">32</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">airedale</span><span class=\"p\">::</span><span class=\"n\">event</span><span class=\"p\">::</span><span class=\"n\">evt</span><span class=\"p\">::</span><span class=\"n\">Host</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">EventManagerCtx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"mi\">33</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">emit_event</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">et</span><span class=\"p\">:</span><span class=\"nc\">airedale</span><span class=\"p\">::</span><span class=\"n\">event</span><span class=\"p\">::</span><span class=\"n\">evt</span><span class=\"p\">::</span><span class=\"n\">EventType</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">event_name</span><span class=\"p\">:</span><span class=\"nb\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">event_data</span><span class=\"p\">:</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"p\">,)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">              </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">lifetimes</span><span class=\"w\"> </span><span class=\"kr\">do</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">method</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"k\">trait</span>\n</code></pre></div>\n<p>I took a look at comparing the generated code and see that </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">            </span><span class=\"cp\">#[wasmtime::component::__internal::async_trait]</span>\n</code></pre></div>\n<p>was removed in the 29.0.0 version and replaced with </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">            </span><span class=\"cp\">#[wasmtime::component::__internal::trait_variant_make(::core::marker::Send)]</span>\n</code></pre></div>\n<p>Any thoughts on how to fix this ?<br>\nThanks</p>",
        "id": 495048799,
        "sender_full_name": "Richard Backhouse",
        "timestamp": 1737466209
    },
    {
        "content": "<p>Just a guess but I think this is coming from a vendored version of the <a href=\"https://crates.io/crates/trait-variant\"><code>trait-variant</code> crate</a> that is now in use by <code>wasmtime</code> to ensure that the <code>Send</code> bound is present on the <code>Self</code> in question.</p>\n<p>In your example the <code>EventManagerCtx</code> contains a <code>Box&lt;T&gt;</code> which is only <code>Send</code> when the internal type (<code>dyn T</code> in this case) is <code>Send</code>, and that's not the case by default -- You likely need to change to using a <code>Box&lt;dyn T + Send&gt;</code> to restrict what can be put in the Box to be <code>Send</code> (which should then then trigger the <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#impl-Send-for-Box%3CT,+A%3E\">auto-implementation of <code>Send</code> for <code>Box&lt;T&gt;</code></a>).</p>",
        "id": 495056812,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1737468192
    },
    {
        "content": "<p>I guess I'm not following. The EventManagerCtx already has the Box&lt;dyn T + Send&gt;.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">EventManagerCtx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">eventmanager</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"k\">dyn</span><span class=\"w\"> </span><span class=\"n\">EventManager</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">marker</span><span class=\"p\">::</span><span class=\"nb\">Send</span><span class=\"o\">&gt;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>It looks like this pr removed async_trait from bindgen</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/9823\">https://github.com/bytecodealliance/wasmtime/issues/9823</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/9823\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/ababb6fef360d7bc12f201699f1ea89ed3062496/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f346164656532663864306535663063616665396261333335323663656239636462363130633336333936346464356239313262333262356135326565616661622f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f39383233&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/9823\" title=\"Bindgen improvement: Remove the use of `async_trait` · Issue #9823 · bytecodealliance/wasmtime\">Bindgen improvement: Remove the use of `async_trait` · Issue #9823 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Feature Remove the use of async_trait in bindgen! as per #9776 (comment). Use async fn in traits, RPITIT and trait_variant instead. Benefit Removing async_trait simplifies the generated code by bin...</div></div></div>",
        "id": 495083411,
        "sender_full_name": "Richard Backhouse",
        "timestamp": 1737473513
    },
    {
        "content": "<p>Ah sorry I could have sworn it only said <code>Box&lt;dyn EventManager&gt;</code>... </p>\n<p>Did you try <em>removing</em> the <code>async_trait</code> annotation and using the <a href=\"https://blog.rust-lang.org/2023/12/21/async-fn-rpit-in-traits.html\">built in <code>async</code> w/ return position impl Trait</a>? This is where the trait_variant recommendation comes from (at least that's where I saw it)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://blog.rust-lang.org/2023/12/21/async-fn-rpit-in-traits.html\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/147ecc3caab69e5abda8478c67ed1c5c29a30233/68747470733a2f2f7777772e727573742d6c616e672e6f72672f7374617469632f696d616765732f727573742d736f6369616c2d776964652e6a7067&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://blog.rust-lang.org/2023/12/21/async-fn-rpit-in-traits.html\" title=\"Announcing `async fn` and return-position `impl Trait` in traits | Rust Blog\">Announcing `async fn` and return-position `impl Trait` in traits | Rust Blog</a></div><div class=\"message_embed_description\">Empowering everyone to build reliable and efficient software.</div></div></div>",
        "id": 495087857,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1737474694
    }
]