[
    {
        "content": "<p>Hey! I use WASM as a plugin system. I have a plugin <code>A</code> that provides information. It's existence during runtime is not guaranteed, though. Is it possible to implement \"optional\" imports using the component model? I.e., have a plugin <code>B</code> check if <code>A</code> is available and if it is, call its functions?</p>\n<p>AFAIK, there is no official specification for this feature, but there is interest. In the meantime, can I somehow hook into wasmtime to provide a stub implementation that simply returns no data at all when plugin <code>B</code> tries to invooke functions of <code>A</code> ?</p>",
        "id": 528701024,
        "sender_full_name": "mainrs",
        "timestamp": 1752510923
    },
    {
        "content": "<p>You are correct that there is no explicit support for optional imports yet.</p>",
        "id": 528708499,
        "sender_full_name": "Lann Martin",
        "timestamp": 1752513835
    },
    {
        "content": "<p>There are a few options here depending on your exact requirements. Wasmtime can inspect component exports so you might be able to provide some interface that lets one plugin query the interfaces of other plugins via the host.</p>",
        "id": 528709343,
        "sender_full_name": "Lann Martin",
        "timestamp": 1752514128
    },
    {
        "content": "<p>Wasmtime can also inspect imports so you could inject stub implementations for missing plugins.</p>",
        "id": 528709690,
        "sender_full_name": "Lann Martin",
        "timestamp": 1752514241
    },
    {
        "content": "<p>There is also this feature, though it's a pretty big hammer: <a href=\"https://docs.rs/wasmtime/latest/wasmtime/component/struct.Linker.html#method.define_unknown_imports_as_traps\">https://docs.rs/wasmtime/latest/wasmtime/component/struct.Linker.html#method.define_unknown_imports_as_traps</a></p>",
        "id": 528709799,
        "sender_full_name": "Lann Martin",
        "timestamp": 1752514278
    }
]