[
    {
        "content": "<p>Hi,</p>\n<p>Just to let y'all know that I have time allocated for mid-August to do \"full\" Node.js compatibility for StartlingMonkey.</p>\n<p>I'm happy to collaborate with others, jump on existing efforts, etc, but I do intend to work on this full time for whatever period of time is required for that compatibility to be in place.</p>\n<p>Ref: <a href=\"https://github.com/bytecodealliance/StarlingMonkey/issues/188\">https://github.com/bytecodealliance/StarlingMonkey/issues/188</a></p>\n<p>I don't intend to use any kind of shim or \"compat layer\", but to literally implement this directly into StarlingMonkey, but we can figure out if that's the right approach. See <a href=\"https://github.com/bytecodealliance/StarlingMonkey/pull/103\">https://github.com/bytecodealliance/StarlingMonkey/pull/103</a> for the current PR for doing that.</p>\n<p>If this is going to be implemented natively, we'll want to have finalized whether the Rust port is happening or not. I would like to only do this in one language, instead of having to port it over to Rust in some unknown future.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/StarlingMonkey/issues/188\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/bd0bb56c9f89c92064b59056969610afdf649aa3/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393838613064363630626664636463306531666430313935633937333337313461663763323764663833363763396337653564396166623165356634363965642f62797465636f6465616c6c69616e63652f537461726c696e674d6f6e6b65792f6973737565732f313838&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/StarlingMonkey/issues/188\" title=\"Node.js builtins · Issue #188 · bytecodealliance/StarlingMonkey\">Node.js builtins · Issue #188 · bytecodealliance/StarlingMonkey</a></div><div class=\"message_embed_description\">Tracking issue for supporting Node.js builtins (import fs from node:fs, ...), where each builtin can be individually turned on or off. We should implement this layer in C++ (or Rust), and try to bu...</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/StarlingMonkey/pull/103\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/5d1dc2ab6c0b4e65f82d1a77a6099856f0668eec/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f333239336133646334363130323033313237626232363264363836666362383030393165343161653136336437313034323433646637663239616565626466392f62797465636f6465616c6c69616e63652f537461726c696e674d6f6e6b65792f70756c6c2f313033&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/StarlingMonkey/pull/103\" title=\"Add Rust bindings for the runtime and the SpiderMonkey engines by tschneidereit · Pull Request #103 · bytecodealliance/StarlingMonkey\">Add Rust bindings for the runtime and the SpiderMonkey engines by tschneidereit · Pull Request #103 · bytecodealliance/StarlingMonkey</a></div><div class=\"message_embed_description\">This PR introduces rust-bindgen generated bindings for the StarlingMonkey runtime itself, as well as generated bindings and higher-level abstractions building on those for the SpiderMonkey engine.\n...</div></div></div>",
        "id": 528916744,
        "sender_full_name": "Kat Marchán (they/she)",
        "timestamp": 1752603178
    },
    {
        "content": "<p>cc/ <span class=\"user-mention\" data-user-id=\"763150\">@Tomasz Andrzejak</span></p>",
        "id": 528917311,
        "sender_full_name": "Yosh Wuyts",
        "timestamp": 1752603431
    },
    {
        "content": "<p>also /cc <span class=\"user-mention\" data-user-id=\"234973\">@Till Schneidereit</span></p>",
        "id": 528917329,
        "sender_full_name": "Kat Marchán (they/she)",
        "timestamp": 1752603437
    },
    {
        "content": "<p>Hey Kat! Great to hear you're planning to work on this! </p>\n<p>My strong preference would be to implement this in Rust. Beyond the obvious benefits like memory safety and better DX, I believe a significant portion of the API surface will involve streams — which currently, at least for me, has been the most common source of errors when running compatibility layers like <code>unenv</code> on top of StarlingMonkey.</p>\n<p>My instinct is that implementing streams in Rust will be much more straightforward than in C++. Till mentioned that we'll eventually need to reimplement Web Streams in StarlingMonkey, and we should do that in Rust. </p>\n<p>So yeah, having a Rust framework in place before this effort begins would be extremely valuable!</p>",
        "id": 529013104,
        "sender_full_name": "Tomasz Andrzejak",
        "timestamp": 1752656641
    },
    {
        "content": "<p>love this!</p>",
        "id": 529013409,
        "sender_full_name": "Ralph",
        "timestamp": 1752656756
    }
]