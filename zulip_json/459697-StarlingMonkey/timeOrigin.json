[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"763150\">@Tomasz Andrzejak</span> what I said about using Unix timestamp 0 as the timeOrigin in StarlingMonkey unfortunately was wrong <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span> What I didn't account for is that this could result in violations of monotonicity, for example if the system clock is changed.</p>\n<p>I think we do need to employ the kind of scheme I briefly sketched out: during wizer resumption, check if a timeOrigin was set during wizening. If so, take a \"second origin\", and subtract the delta between that and the first one from all values. The result should I think be that it seems like no time passed between wizening and resumption, and we retain monotonicity.</p>",
        "id": 536007821,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1756122404
    }
]