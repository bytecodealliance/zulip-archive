[
    {
        "content": "<p>This is quite common error that I get from wizer  for nodejs dependencies:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">           </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x89db10</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">__2</span><span class=\"p\">::</span><span class=\"n\">__throw_bad_optional_access</span><span class=\"p\">[</span><span class=\"n\">abi</span><span class=\"p\">:</span><span class=\"nc\">v160000</span><span class=\"p\">]()</span>\n<span class=\"w\">           </span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x8b0f2b</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">builtins</span><span class=\"p\">::</span><span class=\"n\">web</span><span class=\"p\">::</span><span class=\"n\">performance</span><span class=\"p\">::</span><span class=\"n\">Performance</span><span class=\"p\">::</span><span class=\"n\">timeOrigin_get</span><span class=\"p\">(</span><span class=\"n\">JSContext</span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">JS</span>\n</code></pre></div>\n<p>The way I usually go around this issue is with this, rather dirty,  StarlingMonkey patch:</p>\n<ul>\n<li>performance.cpp:</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"n\">perf_init_time_origin</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">builtins</span><span class=\"o\">::</span><span class=\"n\">web</span><span class=\"o\">::</span><span class=\"n\">performance</span><span class=\"o\">::</span><span class=\"n\">Performance</span><span class=\"o\">::</span><span class=\"n\">timeOrigin</span><span class=\"p\">.</span><span class=\"n\">emplace</span><span class=\"p\">(</span>\n<span class=\"w\">      </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">chrono</span><span class=\"o\">::</span><span class=\"n\">high_resolution_clock</span><span class=\"o\">::</span><span class=\"n\">now</span><span class=\"p\">());</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<ul>\n<li>engine.cpp:</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"c1\">// performance time origin initialization function</span>\n<span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"n\">__attribute__</span><span class=\"p\">((</span><span class=\"n\">weak</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"n\">perf_init_time_origin</span><span class=\"p\">();</span>\n\n<span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"nf\">init_js</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"p\">...</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">perf_init_time_origin</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">perf_init_time_origin</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Is there a better way of doing this? It would be great if we could land a fix for this and I'm happy to work on a patch.</p>",
        "id": 528800853,
        "sender_full_name": "Tomasz Andrzejak",
        "timestamp": 1752566459
    }
]