[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a> from <code>alexcrichton:wasmtime-lts</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This is borne out of discussion on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10074\">bytecodealliance/wasmtime#10074</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10161\">bytecodealliance/wasmtime#10161</a> and proposes adding an LTS channel for Wasmtime. The general tl;dr; is:</p>\n<ul>\n<li>Wasmtime LTS releases will be every 10th release, or 10 months apart.</li>\n<li>LTS releases are supported for 20 months.</li>\n<li>LTS releases are guaranteed to receive security fixes, and may optionally receive bug fixes. Feature backports are not supported, even if they're provided.</li>\n</ul>\n</blockquote>",
        "id": 498850540,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1739217501
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a>:</p>\n<blockquote>\n<p>This is borne out of discussion on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10074\">bytecodealliance/wasmtime#10074</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10161\">bytecodealliance/wasmtime#10161</a> and proposes adding an LTS channel for Wasmtime. The general tl;dr; is:</p>\n<ul>\n<li>Wasmtime LTS releases will be every 10th release, or 10 months apart.</li>\n<li>LTS releases are supported for 20 months.</li>\n<li>LTS releases are guaranteed to receive security fixes, and may optionally receive bug fixes. Feature backports are not supported, even if they're provided.</li>\n</ul>\n<p><a href=\"https://github.com/alexcrichton/rfcs-2/blob/wasmtime-lts/accepted/wasmtime-lts.md\">Rendered</a></p>\n</blockquote>",
        "id": 498850882,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1739217608
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a>.</p>",
        "id": 498851767,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1739217882
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a>.</p>",
        "id": 498852052,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1739217971
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#issuecomment-2649127180\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a>:</p>\n<blockquote>\n<p>Some more bits from <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10161\">https://github.com/bytecodealliance/wasmtime/issues/10161</a> I want to fill in:</p>\n<ul>\n<li>Add some wording about how we still want to avoid the \"rush in the features before LTS\" problem of feature-based releases</li>\n<li>Add some wording about how we still intend to balance such feature pressure with regular releases</li>\n<li>Add words about how users can always fork an LTS branch as a \"stable base\" and add their own features while still getting security backports from upstream</li>\n<li>Probably add a bit more wording about how this is intended to signal stability/maturity and how we're trying to proactively do this rather than waiting for a cacophony of users requesting an LTS release</li>\n</ul>\n</blockquote>",
        "id": 498852763,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1739218215
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#pullrequestreview-2645917029\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for writing this up! I am in favor.</p>\n</blockquote>",
        "id": 502144018,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1740603812
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#discussion_r1972400485\">PR review comment</a>:</p>\n<blockquote>\n<p>How about a weekly <code>cron</code> CI job for all <code>release-*</code> branches that checks if this is an LTS release and then does a full CI run if so? I'll throw out sunday mornings as a good time to schedule this.</p>\n<p>Ideally this would also file an issue on failure as well...</p>\n</blockquote>",
        "id": 502144020,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1740603813
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#discussion_r1972404578\">PR review comment</a>:</p>\n<blockquote>\n<p>I would be in favor of starting with 15 months of support (2-month overlap seems perhaps too short; half of time till the next LTS seems nice and round) and then re-evaluating whether to extend that to 20 after the first LTS goes out of support, as you suggest. (FWIW: At that time, if we extend to 20, I don't think we should need to go through the whole RFC process again.)</p>\n</blockquote>",
        "id": 502144021,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1740603813
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a>.</p>",
        "id": 502161910,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1740611312
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#pullrequestreview-2646165811\">PR review</a>.</p>",
        "id": 502161973,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1740611346
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#discussion_r1972561351\">PR review comment</a>:</p>\n<blockquote>\n<p>Makes sense yeah, I thought through some of the particulars here and I wrote up some more detailed discussion of what I think the CI will look like and why I think it's reasonable.<br>\n</p>\n</blockquote>",
        "id": 502161974,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1740611346
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#pullrequestreview-2646165955\">PR review</a>.</p>",
        "id": 502161983,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1740611353
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#discussion_r1972561475\">PR review comment</a>:</p>\n<blockquote>\n<p>Sounds good to me, updated <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 502161984,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1740611353
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#issuecomment-2722007119\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a>:</p>\n<blockquote>\n<p>One thing I thought of during the discussion of this RFC in today's Wasmtime meeting: it would be good to make a list of the docs that should be updated to describe/link to/mention the LTS releases.</p>\n<p>Off the top of my head:</p>\n<ul>\n<li>[ ] probably makes sense to have a whole new page in the guide, maybe nested under <code>Stability &gt; Release Process</code></li>\n<li>[ ] the <code>Security</code> section of the guide should be updated as well, not sure where exactly, but at minimum the vulnerability runbook should have the relevant step updated</li>\n<li>[ ] probably makes sense to mention and link to from somewhere in the top-level <code>README.md</code> (and <code>wasmtime.dev</code>, whose contents probably need to be re-synced with the top-level <code>README.md</code>)</li>\n<li>[ ] does it make sense to update the <code>wasmtime</code> crate's top-level rust docs to include a link to this?</li>\n</ul>\n</blockquote>",
        "id": 505477290,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1741885212
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#issuecomment-2722062216\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a>:</p>\n<blockquote>\n<p>After the discussion on this topic today in the Wasmtime biweekly, I thought a little more about the timeline configuration. To recap, in the meeting we discussed a potential requirement that it should be possible for a user to stay up-to-date with LTS releases by upgrading once a year at the same point in the year.</p>\n<ul>\n<li>As we noted in the meeting, the current 10-month cadence with 15-month support doesn't meet this requirement: one must upgrade at a point in time when two LTS releases are currently supported (or else this implies one was using an unsupported release); there is a 5-month window every 10 months when this is the case; that 5-month window shifts throughout the calendar over the years.</li>\n<li>\n<p>We discussed a 20-month support window instead, so there are always two LTS releases that are supported. This does mean that one could upgrade at any point during the year. However, it has another issue: one could fall behind if one only upgrades once a year. To see this, observe that with <em>only</em> two LTS releases supported at a time, one must keep up to date by always upgrading <code>n -&gt; n + 1</code>; i.e., never skipping a version (because <code>n</code> and <code>n + 2</code> are never under support simultaneously). This means that one must upgrade once for every LTS release, and LTS releases happen every 10 months.</p>\n<p>To be a little more precise: what will happen is that every 60 months (5 years, the LCM of 10 and 12 months), one will be on version <code>n</code> when the upgrade point in the year comes at the same time as the release of <code>n + 2</code>, and <code>n</code> will go out of support before one can upgrade off of it.</p>\n</li>\n<li>\n<p>I think there are two ways out if we want to support this requirement:</p>\n<ul>\n<li>Adjust to base-12: LTS versions released every 12 months, supported for 24 months. This would definitely allow a fixed-point-in-year upgrade cycle to keep up with a timeframe for the upgrade up to one year, depending on the offset between the release point and one's upgrade schedule.</li>\n<li>Adjust to a 3x multiplier: on the 10-month base, this would mean 30 months of support. This allows <code>n -&gt; n + 2</code> upgrades at arbitrary points in the year, and that is what is needed to bridge over the 4-to-5 polyrhythm (every five upgrades skips a version).</li>\n</ul>\n</li>\n</ul>\n</blockquote>",
        "id": 505481057,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1741886221
    },
    {
        "content": "<p>cfallin edited a <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#issuecomment-2722062216\">comment</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a>:</p>\n<blockquote>\n<p>After the discussion on this topic today in the Wasmtime biweekly, I thought a little more about the timeline configuration. To recap, in the meeting we discussed a potential requirement that it should be possible for a user to stay up-to-date with LTS releases by upgrading once a year at the same point in the year.</p>\n<ul>\n<li>As we noted in the meeting, the current 10-month cadence with 15-month support doesn't meet this requirement: one must upgrade at a point in time when two LTS releases are currently supported (or else this implies one was using an unsupported release); there is a 5-month window every 10 months when this is the case; that 5-month window shifts throughout the calendar over the years.</li>\n<li>\n<p>We discussed a 20-month support window instead, so there are always two LTS releases that are supported. This does mean that one could upgrade at any point during the year. However, it has another issue: one could fall behind if one only upgrades once a year. To see this, observe that with <em>only</em> two LTS releases supported at a time, one must keep up to date by always upgrading <code>n -&gt; n + 1</code>; i.e., never skipping a version (because <code>n</code> and <code>n + 2</code> are never under support simultaneously). This means that one must upgrade once for every LTS release, and LTS releases happen every 10 months.</p>\n<p>To be a little more precise: what will happen is that every 60 months (5 years, the LCM of 10 and 12 months), one will be on version <code>n</code> when the upgrade point in the year comes at the same time as the release of <code>n + 2</code>, and <code>n</code> will go out of support before one can upgrade off of it.</p>\n</li>\n<li>\n<p>I think there are two ways out if we want to support this requirement:</p>\n<ul>\n<li>Adjust to base-12: LTS versions released every 12 months, supported for 24 months. This would definitely allow a fixed-point-in-year upgrade cycle to keep up with a timeframe for the upgrade up to one year, depending on the offset between the release point and one's upgrade schedule.</li>\n<li>Adjust to a 3x multiplier: on the 10-month base, this would mean 30 months of support. This allows <code>n -&gt; n + 2</code> upgrades at arbitrary points in the year, and that is what is needed to bridge over the 5-to-6 polyrhythm (every five upgrades skips a version).</li>\n</ul>\n</li>\n</ul>\n</blockquote>",
        "id": 505503054,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1741892187
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#issuecomment-2738240093\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a>:</p>\n<blockquote>\n<p>Ideally I'd like to preserve two properties:</p>\n<ol>\n<li>Users, when starting, pick the latest LTS. From then on if the user upgrades once-per-year the user is always on a supported LTS branch.</li>\n<li>It's easy to tell which versions are an LTS.</li>\n</ol>\n<p>An LTS every 12 months supported for 24 months solves the first item, but I'm only good with multiples of 12 up to 96 (and then 120/144 are outliers). I'm hesitant of a 30 month support window (extending even further beyond 15 months) and have been thinking about the consequences of a 24 month support window for any LTS.</p>\n<p>If we release an LTS every 10 months and it's supported for 24 months we'll mostly only have 2 branches at once but sometimes we'll have 3 LTS branches. That's not too bad though and I think that this additionally preserves the property (1) as well. For users though this has an interesting property where sometimes a jump of two LTS releases is required (e.g. 30 -&gt; 50 instead of 30 -&gt; 40). That possibly adds another dimension to this problem of \"should the amount of months-of-changes in an LTS upgrade basically be the same. I'd conjecture \"yes\" probably.</p>\n<p>Given that I'm not sure it's possible to preserve (2) where it's a multiple of 10. One other idea though could be \"X.0.Y\" is a normal release,  where \"X.1.Y\" is an LTS release. We don't otherwise use the \"minor\" in semver, so it means our releases would be: 36.1.0, 37.0.0, 38.0.0, ... 47.0.0, 48.1.0, 49.0.0, ... That might serve well as easily disambiguating whether something is an LTS or not? (it's subtle though...)</p>\n</blockquote>",
        "id": 506834572,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1742421064
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#issuecomment-2738241008\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a>:</p>\n<blockquote>\n<p>Oh and if we do 12-based releases I'd say we should retroactively classify wasmtime 24.0.0 as an LTS release and go from there, keep things on multiples-of-12.</p>\n</blockquote>",
        "id": 506834653,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1742421099
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#issuecomment-2738262008\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a>:</p>\n<blockquote>\n<p>For what it's worth, Wasmtime 96 will be released in August 2030, i.e. 5.5 years away, so we have a while to get used to the numbering scheme before we get to three-digit multiples of 12 (and we only need to memorize a new one once per year) :-) We could also adopt a typographical scheme when writing out versions like Ubuntu's: \"Wasmtime 24 LTS\", etc.</p>\n<p>I also like the idea of a yearly cadence to the releases: v24 was in August, so we know that August 20th of every year (henceforth declared \"Wasmtime Day\", a Bytecode Alliance holiday?) we have a new LTS.</p>\n</blockquote>",
        "id": 506836196,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1742421751
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a>.</p>",
        "id": 506853291,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1742431003
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#issuecomment-2738668890\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a>:</p>\n<blockquote>\n<p>Ok I've now updated wording for once-a-year releases with 24 months of support. With that I think this is ready-to-go, so...</p>\n<h1>Motion to Finalize</h1>\n<p><strong>Disposition: Merge</strong></p>\n<hr>\n<p>As always, details on the RFC process can be found here: <a href=\"https://github.com/bytecodealliance/rfcs/blob/main/accepted/rfc-process.md#making-a-decision-merge-or-close\">https://github.com/bytecodealliance/rfcs/blob/main/accepted/rfc-process.md#making-a-decision-merge-or-close</a></p>\n</blockquote>",
        "id": 506853375,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1742431064
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#pullrequestreview-2700728915\">PR review</a>:</p>\n<blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 506853862,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1742431326
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#issuecomment-2738683818\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a>:</p>\n<blockquote>\n<p>As there has been signoff from representatives of two different BA stakeholder organizations, this RFC is now entering its 10-day</p>\n<h1>Final Comment Period</h1>\n<p>and the last day to raise concerns before this RFC merges is 2025-03-29.</p>\n<p>Thanks everyone!</p>\n<p>(also thanks Nick for giving me a <a href=\"https://github.com/bytecodealliance/rfcs/pull/36#issuecomment-2715733657\">copy/paste template</a>)</p>\n</blockquote>",
        "id": 506854188,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1742431511
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#pullrequestreview-2703160574\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for working through this!</p>\n</blockquote>",
        "id": 507003161,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1742483939
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#issuecomment-2759363688\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a>:</p>\n<blockquote>\n<p>Documentation in prep for this RFC merging: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10481\">https://github.com/bytecodealliance/wasmtime/pull/10481</a></p>\n</blockquote>",
        "id": 508608921,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1743106170
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/rfcs/pull/42#issuecomment-2766986439\">commented</a> on <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a>:</p>\n<blockquote>\n<p>The FCP period has now passed so I'm going to merge, thanks all!</p>\n</blockquote>",
        "id": 509268239,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1743443790
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/rfcs/pull/42\">PR #42</a>.</p>",
        "id": 509268246,
        "sender_full_name": "RFC notifications bot",
        "timestamp": 1743443794
    }
]