[
    {
        "content": "<p>Are there cases where AoT consistently runs worse (in terms of execution time) than interpreted or fast-interpreted?F<br>\nMy Wasm binary basically allocates a struct on the heap, sets some values to random values using <code>rand()</code>, and returns the memory address of the struct. </p>\n<p>The struct gets freed later on the host side. I see consistent peaks that tank performance at around every 10 invocations at a frequency of 500Hz. </p>\n<p>The boxplot looks wild compared to the interpreted version, with even the means being the same, and the 25% quantiles are also larger than interpreted.</p>\n<p>I was wondering if the memory allocation is the issue. It's probably hard to tell in general, but maybe someone has similar experiences. Thanks!</p>",
        "id": 539954298,
        "sender_full_name": "mainrs",
        "timestamp": 1758096878
    },
    {
        "content": "<p>That's interesting. Would you mind sharing more details for reproduction?</p>",
        "id": 540124262,
        "sender_full_name": "lum1n0us",
        "timestamp": 1758156042
    }
]