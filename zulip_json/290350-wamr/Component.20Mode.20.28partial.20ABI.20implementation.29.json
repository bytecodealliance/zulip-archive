[
    {
        "content": "<p>I have been working through parts of the component model ABI from a C++ hosts perspective on and off for the last year and finally got around to mocking up how it looks in a real world host example (using wamr, but should be equally agnostic for other runtimes).  <br>\nHere is my first attempt at a \"sample\" for wamr (wit generating the stubs for a guest, with a hand coded wamr host):  </p>\n<ul>\n<li>wit: <a href=\"https://github.com/GordonSmith/component-model-cpp/blob/trunk/samples/wasm/sample.wit\">https://github.com/GordonSmith/component-model-cpp/blob/trunk/samples/wasm/sample.wit</a></li>\n<li>wamr: <a href=\"https://github.com/GordonSmith/component-model-cpp/blob/trunk/samples/wamr/main.cpp#L171-L265\">https://github.com/GordonSmith/component-model-cpp/blob/trunk/samples/wamr/main.cpp#L171-L265</a></li>\n</ul>\n<p>Hopefully the usage pattern is self evident from the sample aboce and will lend itself to a future <code>wit -&gt; c++</code> host generator?</p>\n<p>FYI the output for the example is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">and_func</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"n\">and_func</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"n\">and_func</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"n\">and_func</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"n\">add_func</span><span class=\"p\">(</span><span class=\"mf\">3.1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.2</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"mf\">3.3</span>\n<span class=\"n\">reverse_string</span><span class=\"p\">(</span><span class=\"n\">Hello</span><span class=\"w\"> </span><span class=\"n\">World</span><span class=\"o\">!</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"n\">dlroW</span><span class=\"w\"> </span><span class=\"n\">olleH</span>\n<span class=\"n\">reverse_string</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">dlroW</span><span class=\"w\"> </span><span class=\"n\">olleH</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">Hello</span><span class=\"w\"> </span><span class=\"n\">World</span><span class=\"o\">!</span>\n<span class=\"n\">reverse_tuple</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Hello</span><span class=\"w\"> </span><span class=\"n\">World</span><span class=\"o\">!</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"n\">dlroW</span><span class=\"w\"> </span><span class=\"n\">olleH</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"n\">list_filter_bool</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/GordonSmith/component-model-cpp/blob/trunk/samples/wasm/sample.wit\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/9bcaad4b9316fe9be89b2bccc4a604f073f3f063/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663431646664613638663330643364373932363839356133633830313861393036663538616638663964393464623261343262373865353338653130656330662f476f72646f6e536d6974682f636f6d706f6e656e742d6d6f64656c2d637070&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/GordonSmith/component-model-cpp/blob/trunk/samples/wasm/sample.wit\" title=\"component-model-cpp/samples/wasm/sample.wit at trunk · GordonSmith/component-model-cpp\">component-model-cpp/samples/wasm/sample.wit at trunk · GordonSmith/component-model-cpp</a></div><div class=\"message_embed_description\">C++ ABI implementation of the WebAssembly Component Model - GordonSmith/component-model-cpp</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/GordonSmith/component-model-cpp/blob/trunk/samples/wamr/main.cpp#L171-L265\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/9bcaad4b9316fe9be89b2bccc4a604f073f3f063/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663431646664613638663330643364373932363839356133633830313861393036663538616638663964393464623261343262373865353338653130656330662f476f72646f6e536d6974682f636f6d706f6e656e742d6d6f64656c2d637070&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/GordonSmith/component-model-cpp/blob/trunk/samples/wamr/main.cpp#L171-L265\" title=\"component-model-cpp/samples/wamr/main.cpp at trunk · GordonSmith/component-model-cpp\">component-model-cpp/samples/wamr/main.cpp at trunk · GordonSmith/component-model-cpp</a></div><div class=\"message_embed_description\">C++ ABI implementation of the WebAssembly Component Model - GordonSmith/component-model-cpp</div></div></div>",
        "id": 506945363,
        "sender_full_name": "Gordon Smith",
        "timestamp": 1742470019
    }
]