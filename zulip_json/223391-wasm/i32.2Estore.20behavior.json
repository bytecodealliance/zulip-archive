[
    {
        "content": "<p>Hi,</p>\n<p>I am handwriting wit at the moment, and I found that store instructions write more than the value I want to store. E.g.,</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">956301312</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">87621632</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">342272</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">1337</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">5</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n</code></pre></div>\n<p>Is the result of this program</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">module</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"s\">\"console\"</span><span class=\"w\"> </span><span class=\"s\">\"log\"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"cp\">$log</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">param</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)))</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"cp\">$main</span>\n<span class=\"w\">    </span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">4</span>\n<span class=\"w\">    </span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">1337</span>\n\n<span class=\"w\">    </span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">store</span>\n\n<span class=\"w\">    </span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">load</span>\n<span class=\"w\">    </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"cp\">$log</span>\n<span class=\"w\">    </span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">load</span>\n<span class=\"w\">    </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"cp\">$log</span>\n<span class=\"w\">    </span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">2</span>\n<span class=\"w\">    </span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">load</span>\n<span class=\"w\">    </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"cp\">$log</span>\n<span class=\"w\">    </span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">3</span>\n<span class=\"w\">    </span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">load</span>\n<span class=\"w\">    </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"cp\">$log</span>\n<span class=\"w\">    </span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">4</span>\n<span class=\"w\">    </span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">load</span>\n<span class=\"w\">    </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"cp\">$log</span>\n<span class=\"w\">    </span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">5</span>\n<span class=\"w\">    </span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">load</span>\n<span class=\"w\">    </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"cp\">$log</span>\n<span class=\"w\">    </span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">6</span>\n<span class=\"w\">    </span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">load</span>\n<span class=\"w\">    </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"cp\">$log</span>\n\n<span class=\"w\">  </span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"w\"> </span><span class=\"cp\">$main</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<p>(run on <a href=\"https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Size\">https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Size</a>)</p>\n<p>I haven't found any explanation for this behaviour. Is there any documentation for this?</p>\n<p>Also, bonus question: given a memory dump, how can I restore the memory from scratch without knowing which stores/memory.fills were used? Because how could I be sure the number is intended and not one of those \"additional\" ones?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">1476406020</span>\n<span class=\"mi\">22544427</span>\n<span class=\"mi\">956389376</span>\n<span class=\"mi\">20513112</span>\n<span class=\"o\">-</span><span class=\"mi\">1845413631</span>\n<span class=\"mi\">9568569</span>\n<span class=\"o\">-</span><span class=\"mi\">1040150015</span>\n<span class=\"mi\">96600210</span>\n<span class=\"o\">-</span><span class=\"mi\">1694121472</span>\n<span class=\"mi\">26936770</span>\n<span class=\"mi\">1124178693</span>\n<span class=\"mi\">37945755</span>\n<span class=\"mi\">1174553345</span>\n<span class=\"mi\">21365315</span>\n<span class=\"o\">-</span><span class=\"mi\">167688702</span>\n<span class=\"mi\">100008262</span>\n<span class=\"mi\">390657</span>\n<span class=\"mi\">1526</span>\n<span class=\"mi\">5</span>\n<span class=\"mi\">0</span>\n<span class=\"mi\">0</span>\n<span class=\"mi\">0</span>\n<span class=\"mi\">385875968</span>\n<span class=\"mi\">1507328</span>\n<span class=\"mi\">5888</span>\n<span class=\"mi\">23</span>\n<span class=\"mi\">134217728</span>\n<span class=\"mi\">524288</span>\n<span class=\"mi\">2048</span>\n<span class=\"mi\">8</span>\n<span class=\"mi\">67108864</span>\n<span class=\"mi\">262144</span>\n<span class=\"mi\">1024</span>\n<span class=\"mi\">4</span>\n<span class=\"mi\">402653184</span>\n<span class=\"mi\">1572864</span>\n<span class=\"mi\">6144</span>\n<span class=\"mi\">24</span>\n<span class=\"mi\">0</span>\n<span class=\"mi\">0</span>\n<span class=\"mi\">268435456</span>\n<span class=\"mi\">1048576</span>\n<span class=\"mi\">100667392</span>\n<span class=\"mi\">393232</span>\n<span class=\"mi\">1536</span>\n<span class=\"mi\">6</span>\n<span class=\"mi\">318767104</span>\n<span class=\"mi\">1245184</span>\n<span class=\"mi\">268440320</span>\n<span class=\"mi\">1048595</span>\n<span class=\"mi\">184553472</span>\n<span class=\"mi\">720912</span>\n<span class=\"mi\">2816</span>\n<span class=\"mi\">11</span>\n</code></pre></div>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Size\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/995c0c58fb542e2180e01753cfa3c88c39d0272c/68747470733a2f2f646576656c6f7065722e6d6f7a696c6c612e6f72672f6d646e2d736f6369616c2d73686172652e64383933353235613466623566623166363761322e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Size\" title=\"size: Wasm text instruction - WebAssembly | MDN\">size: Wasm text instruction - WebAssembly | MDN</a></div><div class=\"message_embed_description\">The size memory instruction is used to get the current number of pages in a memory.</div></div></div>",
        "id": 500323293,
        "sender_full_name": "Arne Vogel",
        "timestamp": 1739857711
    },
    {
        "content": "<p>This program only stores the 1337 value, at byte offset 4. <code>i32.load</code>'s operand is a byte offset, and not an index into an <code>i32</code> array. Those loads are 4-byte loads at byte offsets 0, 1, 2, 3, etc. are seeing the bytes of the stored 1337 effectively shifted into different positions.</p>",
        "id": 500414207,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1739888933
    }
]