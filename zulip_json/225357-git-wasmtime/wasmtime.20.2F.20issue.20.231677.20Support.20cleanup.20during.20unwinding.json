[
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677#issuecomment-873373778\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677\">issue #1677</a>:</p>\n<blockquote>\n<p>Original pdf no longer exists. See <a href=\"https://itanium-cxx-abi.github.io/cxx-abi/abi-eh.html\">https://itanium-cxx-abi.github.io/cxx-abi/abi-eh.html</a> instead.</p>\n</blockquote>",
        "id": 244792591,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625303034
    },
    {
        "content": "<p>bayedieng <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677#issuecomment-1445332741\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677\">issue #1677</a>:</p>\n<blockquote>\n<p>Could this issue be solved independently using the aforementioned solution in the OP's comment or would #3427 be needed to be resolved first?</p>\n</blockquote>",
        "id": 338130784,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677409935
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677#issuecomment-1445334653\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677\">issue #1677</a>:</p>\n<blockquote>\n<p>I'm working on this.</p>\n</blockquote>",
        "id": 338131830,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677410411
    },
    {
        "content": "<p>noverby <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677#issuecomment-2191363114\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677\">issue #1677</a>:</p>\n<blockquote>\n<p>@bjorn3 Any PR or branch where it is possible to follow progress?</p>\n</blockquote>",
        "id": 447181252,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1719398044
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677#issuecomment-2191384907\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677\">issue #1677</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bjorn3/wasmtime/tree/bsc-unwinding-simple-invoke3\">https://github.com/bjorn3/wasmtime/tree/bsc-unwinding-simple-invoke3</a> is the latest version I have. I will rebase it and work on upstreaming when I finish my thesis about it.</p>\n</blockquote>",
        "id": 447183418,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1719398733
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677\">issue #1677</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Currently the generated unwinding information only restores registers. This issue proposes to make it possible to also run cleanup actions like running destructors during unwinding.</p>\n<h4>Benefit</h4>\n<p>This is necessary to support unwinding after a panic in rustc_codegen_cranelift.</p>\n<h4>Implementation</h4>\n<p>Add a new <code>invoke</code> terminator that is similar to the <code>call</code> instruction, but has an additional cleanup edge. This cleanup edge will be ignored when emitting actual machine instructions, but it will take part in the regalloc. Next add a way to mark a block as \"landing pad\". Only \"landing pad\" blocks can be used as cleanup edge of an <code>invoke</code> terminator. At the start of a \"cleanup\" block all values are stored either on stack or in any of the registers restored by the system unwinder. The \"landing pad\" block can also take several arguments. Those will be the values stored in the registers that are allowed for arguments to the landing pad received from the personality function. After codegen the location of every \"landing pad\" block will be stored in a variable. This will allow the embedder to generate the appropriate LSDA (language specific data area) to reference from the unwinding table.</p>\n<h4>Alternatives</h4>\n<p>It is basically impossible to implement cleanup during unwinding without Cranelift support.</p>\n<h4>References</h4>\n<p>The \"Transferring Control to a Landing Pad\" section of <a href=\"https://software.intel.com/sites/default/files/article/402129/mpx-linux64-abi.pdf\">https://software.intel.com/sites/default/files/article/402129/mpx-linux64-abi.pdf</a></p>\n</blockquote>",
        "id": 513978469,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745449642
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677#issuecomment-2825724575\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677\">issue #1677</a>:</p>\n<blockquote>\n<p>Cleaning up old issues and I believe this is covered now by the exceptions support we landed recently (#10510). Thanks all (and thanks bjorn3 for the experimental work that helped us develop our current design).</p>\n</blockquote>",
        "id": 513978470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745449643
    },
    {
        "content": "<p>whitequark <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677#issuecomment-2827125338\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677\">issue #1677</a>:</p>\n<blockquote>\n<p>Oh, does wasmtime support exceptions now? This is incredibly exciting, is there anything I can read on that?</p>\n</blockquote>",
        "id": 514082114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745490576
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677#issuecomment-2827482734\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677\">issue #1677</a>:</p>\n<blockquote>\n<p>This isn't implemented on the Wasmtime side yet.</p>\n</blockquote>",
        "id": 514114815,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745498541
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677#issuecomment-2827482734\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677\">issue #1677</a>:</p>\n<blockquote>\n<p>This isn't implemented on the Wasmtime side yet.</p>\n<p>Edit: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2049\">https://github.com/bytecodealliance/wasmtime/issues/2049</a>, <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3427\">https://github.com/bytecodealliance/wasmtime/issues/3427</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10252\">https://github.com/bytecodealliance/wasmtime/issues/10252</a> are still open.</p>\n</blockquote>",
        "id": 514115358,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745498671
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677#issuecomment-2828119761\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677\">issue #1677</a>:</p>\n<blockquote>\n<p>Right, this issue was specifically about Cranelift exceptions, @whitequark -- I will hopefully get time to do the Wasmtime side soon (next few months-ish)...</p>\n</blockquote>",
        "id": 514163346,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745509944
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677#issuecomment-2828257322\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677\">issue #1677</a>:</p>\n<blockquote>\n<p>And if you'd like to learn more, here is the RFC: <a href=\"https://github.com/bytecodealliance/rfcs/pull/36\">https://github.com/bytecodealliance/rfcs/pull/36</a></p>\n</blockquote>",
        "id": 514175277,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745513284
    },
    {
        "content": "<p>whitequark <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677#issuecomment-2828266402\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677\">issue #1677</a>:</p>\n<blockquote>\n<p>Thanks all!</p>\n</blockquote>",
        "id": 514175795,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745513493
    }
]