[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a> from <code>cfallin:lets-kick-back-and-unwind-a-bit</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit introduces the next major piece of machinery (after the previously-landed <code>try_call</code> support) that we will eventually use to implement Wasm exceptions in Wasmtime. In particular, it implements a generic unwinder as a new crate that supports (i) walking a stack produced by Cranelift code, (ii) serializing Cranelift exception metadata to compact tables (in a way very similar to address maps in Wasmtime, so they will be mappable directly from disk), (iii) using these serialized tables to find handlers during a stack-walk, and (iv) jumping to handlers (i.e., actually unwinding). This crate is currently used in the filetests runner, and will next be used in Wasmtime.</p>\n<p>The commit first performs code-motion: it moves stack-walking code from Wasmtime to <code>cranelift-unwinder</code>. This itself has no functional effect, but isolates the code that understands contiguous sequences of Cranelift frames (\"activations\") from that which is specific to Wasmtime's activation delimiters and metadata.</p>\n<p>It then implements a compact exception-table format. This format uses the <code>object</code> crate's mechanisms for directly referencing in-memory arrays of little-endian <code>u32</code>s in a way that will allow us to find handlers when mapping exception metadata directly from an ELF section in a <code>.cwasm</code> (for example). The format consists of four sorted <code>u32</code> arrays in a way that allows us to look up a callsite first, then search its sorted array of handler offsets by tags.</p>\n<p>It next implements the actual unwind control flow: it contains an assembly stub for each supported architecture that transfers control to a PC, SP, and FP value \"up the stack\", with payload values placed in the payload registers we have defined per our exception ABI in Cranelift.</p>\n<p>Finally, it puts these pieces together in the filetest runner. Note that the runtest does a lot \"by hand\": we don't have entry and exit trampolines as we do in Wasmtime, so the filetest contains three functions, with the middle one invoking the \"throw hostcall\" and entry and exit trampolines around it grabbing the appropriate entry/exit FPs and exit PC. The dance to call back to host code is also somewhat delicate, as we haven't done this before. The <code>JITModule</code>'s linking + relocation support does not seem sufficient to properly define a symbol, so instead we scan for <code>func_addr</code> instructions referencing a well-known name (<code>__cranelift_throw</code>) and replace them with <code>iconst</code>s with the function address at runtime, baking it in. This is somewhat ugly, but it works. All of these filetest-specific details will be handled much more nicely in the Wasmtime version of this functionality, as we have proper abstractions for entry/exit trampolines and hostcalls.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 522270020,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749016248
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522270021,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749016249
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522270022,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749016249
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/dicej\">dicej</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522270023,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749016250
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522270026,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749016250
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522270027,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749016250
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522270080,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749016279
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522270378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749016440
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2895983078\">PR review</a>.</p>",
        "id": 522309501,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749029176
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2126130449\">PR review comment</a>:</p>\n<blockquote>\n<p>Making this a <code>return_call_indirect</code> would avoid the need to get any frame pointer, right? You only need to change the return address before returning from <code>__cranelift_throw</code>, not unwind the stack back to the caller of <code>%throw</code>.</p>\n</blockquote>",
        "id": 522309503,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749029176
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2895983434\">PR review</a>.</p>",
        "id": 522309528,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749029183
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2126130760\">PR review comment</a>:</p>\n<blockquote>\n<p>nit: missing trailing newline</p>\n</blockquote>",
        "id": 522309529,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749029183
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2895993832\">PR review</a>.</p>",
        "id": 522310005,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749029346
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2126137327\">PR review comment</a>:</p>\n<blockquote>\n<p><code>extern \"C-unwind\"</code> otherwise unwinding out of this is UB (you are skipping past the aborting landingpad due to using a different unwinding mechanism).</p>\n</blockquote>",
        "id": 522310006,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749029347
    },
    {
        "content": "<p>bjorn3 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2126130449\">PR review comment</a>.</p>",
        "id": 522310886,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749029602
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#issuecomment-2939384783\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>:</p>\n<blockquote>\n<p>By the way why is the unwind info format defined in the cranelift-unwinder crate? It is Wasmtime specific and I would assume that Winch and Pulley will reuse the same format.</p>\n</blockquote>",
        "id": 522315257,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749030956
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2897179445\">PR review</a>.</p>",
        "id": 522389578,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749051133
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2126872259\">PR review comment</a>:</p>\n<blockquote>\n<p>Not necessarily required for this PR, but could this be moved back to Wasmtime? It feels a bit odd to define it all the way over here when Pulley is defined somewhere else.</p>\n<p>Placement-wise the only use of <code>UnwindPulley</code> is <a href=\"https://github.com/bytecodealliance/wasmtime/blob/5603ee7b099c837aa7194f1052e7c73cf4c36750/crates/wasmtime/src/runtime/store.rs#L1854\">here</a> so it might make sense to add an <code>unwinder</code> method on <code>struct Interpreter</code> which would enable moving all of this to <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasmtime/src/runtime/vm/interpreter.rs\">this file</a> (and a stub in <a href=\"https://github.com/bytecodealliance/wasmtime/blob/5603ee7b099c837aa7194f1052e7c73cf4c36750/crates/wasmtime/src/runtime/vm/interpreter_disabled.rs\">this file</a>)</p>\n</blockquote>",
        "id": 522389580,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749051133
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2126880205\">PR review comment</a>:</p>\n<blockquote>\n<p>Ideally I'd prefer to not duplicate this with the main Wasmtime crate as I suspect the two will diverge over time. For example on iOS we should probably disable cranelift by default despite having a backend for aarch64. Now that doesn't actually matter for this crate though since it'll still all compile just fine on iOS (in theory), it just wouldn't be useful to have at runtime.</p>\n<p>Would it be possible to actually drop this build script entirely? For example the <code>arch</code> module would become naturally empty on unsupported architectures and structures like <code>UnwindHost</code> would only appear for supported architectures. That'd mean that this build script would basically fall out of the <code>cfg-if</code> if/else branches for the arch support</p>\n</blockquote>",
        "id": 522389581,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749051133
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2126883766\">PR review comment</a>:</p>\n<blockquote>\n<p>FWIW you can use <code>&amp;*</code> to translate <code>*const T</code> to <code>&amp;T</code>, no <code>transmute</code> necessary</p>\n</blockquote>",
        "id": 522389582,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749051133
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2126888301\">PR review comment</a>:</p>\n<blockquote>\n<p>It should be ok to skip this comment since the type system basically all guarantees that for us (or perhaps move this beforehand as a lead-in explanation for what the function's doing?)</p>\n</blockquote>",
        "id": 522389583,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749051133
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2126897676\">PR review comment</a>:</p>\n<blockquote>\n<p>FWIW if you're feeling enterprising IIRC the only reason we have this is <code>get_stack_pointer</code> on s390x where inline assembly wasn't supported originally, but it is supported now, so a small inline assembly snippet would probably suffice for removing this crate dependency.</p>\n</blockquote>",
        "id": 522389585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749051133
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2126886678\">PR review comment</a>:</p>\n<blockquote>\n<p>Could you elaborate on this? I was under the impression that <code>C-unwind</code> had to do with the system unwinder, or whatever the default is for the platform. For this unwinder landing pads aren't invoked no matter what, so by the same logic <code>C-unwind</code> is also UB because landing pads still aren't executed. </p>\n<p>To me it seems that the soundness of this function relies on there not actually being any landing pads, which is something we'd have to uphold?</p>\n</blockquote>",
        "id": 522389586,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749051133
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2126896453\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm hesitating with this in that this feels like a new significant dependency edge that didn't exist prior, but I can't really articulate what exactly it is. Currently in all other locations though <code>cranelift-codegen</code> is isolated to <code>wasmtime-cranelift</code>/Winch and nowhere else. My assumption is that the <code>wasmtime</code> crate will depend on <code>cranelift-unwinder</code> (and maybe also the <code>wasmtime-cranelift</code> crate to pass in the cranelift data structures?). I realize that <code>wasmtime</code> itself won't enable this dependency, but WDYT about making this built-in to cranelift-codegen directly? Or maybe a separate crate?</p>\n<p>I don't feel too too strong about this, but I think it sort of depends on how exactly this'll get integrated in to Wasmtime as well.</p>\n</blockquote>",
        "id": 522389587,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749051134
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127108780\">PR review comment</a>:</p>\n<blockquote>\n<p>I've written up more thoughts on this in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10923\">https://github.com/bytecodealliance/wasmtime/issues/10923</a></p>\n</blockquote>",
        "id": 522415291,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749058441
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2897563783\">PR review</a>.</p>",
        "id": 522415295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749058441
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2126849943\">PR review comment</a>:</p>\n<blockquote>\n<p>Maybe add an olive branch of documentation about the safety requirements here? We've been trying to improve this stuff in the core VM.</p>\n</blockquote>",
        "id": 522423800,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749061246
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2126840256\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't care too much what we name this crate, in some sense it could be either <code>wasmtime-unwinder</code> or <code>cranelift-unwinder</code> because the dependency graph is a little convoluted here, but I think this description is a bit misleading. People who are writing a random Cranelift project could see this and think it is a solution to their unwinding issues -- especially since using Cranelift means pulling in a bunch of <code>cranelift-foo</code> deps -- and <em>mayyyybe</em> it could be, but it is really tailored for Wasmtime's usage and isn't going to be very flexible to other use cases.</p>\n<p>We should probably make it clear in this description that this is an internal implementation detail of Wasmtime and Cranelift's unit testing.</p>\n</blockquote>",
        "id": 522423801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749061246
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127179408\">PR review comment</a>:</p>\n<blockquote>\n<p>If this function is already monomorphized over <code>R</code>, we might as well use an <code>&amp;impl Unwind</code> instead of a <code>&amp;dyn Unwind</code></p>\n</blockquote>",
        "id": 522423802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749061246
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2126894563\">PR review comment</a>:</p>\n<blockquote>\n<p>I had to read this pretty closely to understand how the below \"expanded\" representation corresponds to the above encoding example. I think what would have allowed me to understand at a relatively light skim would have been inline comments in the <code>ranges</code> array expanding what actual <code>tags</code>/<code>handlers</code> ranges they represent, as well as having links the other way for the <code>tags</code> and <code>handlers</code>, something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">callsites</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x50</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0xf0</span><span class=\"p\">],</span>\n<span class=\"n\">ranges</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">  </span><span class=\"c1\">// tag/handlers range for callsite 0x10: 0..2</span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"c1\">// tag/handlers range for callsite 0x50: 2..4</span>\n<span class=\"w\">  </span><span class=\"mi\">4</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"c1\">// tag/handlers range for callsite 0xf0: 4..5</span>\n<span class=\"w\">  </span><span class=\"mi\">5</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n<span class=\"n\">tags</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">  </span><span class=\"c1\">// Tags for callsite 0x10</span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"mi\">5</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"c1\">// Tags for callsite 0x50</span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"c1\">// Tags for callsite 0xf0</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"mi\">1</span>\n<span class=\"p\">],</span>\n<span class=\"n\">handlers</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">  </span><span class=\"c1\">// Handlers for callsite 0x10</span>\n<span class=\"w\">  </span><span class=\"mh\">0x40</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"mh\">0x42</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"c1\">// Handlers for callsite 0x50</span>\n<span class=\"w\">  </span><span class=\"mh\">0x6f</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"mh\">0x71</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"c1\">// Handlers for callsite 0xf0</span>\n<span class=\"w\">  </span><span class=\"mh\">0xf5</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</code></pre></div>\n<p>Basically, it wasn't immediately clear to me at a glance which arrays were part of the \"same struct\" (in a struct-of-arrays vs array-of-structs isomorphism) and for the ones which had separate indexing, how that indexing worked, and I ended up having to read this comment closely a couple times.</p>\n</blockquote>",
        "id": 522423803,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749061246
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2897130524\">PR review</a>:</p>\n<blockquote>\n<p>r=me with things we discussed in the cranelift meeting</p>\n</blockquote>",
        "id": 522423804,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749061246
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522435190,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749065153
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522443398,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749068143
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522443564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749068210
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522443715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749068266
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2897995465\">PR review</a>.</p>",
        "id": 522443746,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749068277
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127370661\">PR review comment</a>:</p>\n<blockquote>\n<p>Fixed, thanks!</p>\n</blockquote>",
        "id": 522443747,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749068277
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522443835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749068308
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2897996959\">PR review</a>.</p>",
        "id": 522443858,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749068319
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127371587\">PR review comment</a>:</p>\n<blockquote>\n<p>Updated to use <code>C-unwind</code> -- thanks for catching this.</p>\n</blockquote>",
        "id": 522443860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749068319
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522444227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749068451
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2898004501\">PR review</a>.</p>",
        "id": 522444440,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749068531
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127376721\">PR review comment</a>:</p>\n<blockquote>\n<p>Done as suggested in Cranelift meeting today -- there are now <code>pub use</code>s to re-export with doc-comments attached. <code>cfg</code>s minimized and put right next to each other -- only the one <code>cfg_if</code> chain for the implementations and one with <code>cfg(any(...))</code> to wrap all the <code>pub use</code>s and the <code>UnwindHost</code> impl.</p>\n<p>I've verified that <code>wasmtime-unwinder</code> checks on <code>i686-unknown-linux-gnu</code>.</p>\n</blockquote>",
        "id": 522444443,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749068532
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127377604\">PR review comment</a>:</p>\n<blockquote>\n<p>Yep, renamed to <code>wasmtime-unwinder</code> -- thanks all for the feedback on this!</p>\n</blockquote>",
        "id": 522444547,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749068567
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2898005761\">PR review</a>.</p>",
        "id": 522444548,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749068567
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2898014271\">PR review</a>.</p>",
        "id": 522445260,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749068804
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127383217\">PR review comment</a>:</p>\n<blockquote>\n<p>Interestingly, this ends up propagating all the way up to e.g. <code>store.unwinder()</code> -- the <code>dyn</code> is infectious and we'd have a monomorphize a bunch more to make this work (or build a proxy-to-dyn impl to monomorphize on). Since this seems like just an opportunistic thing, I'll leave it as <code>dyn Unwind</code> for now...</p>\n</blockquote>",
        "id": 522445262,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749068804
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2898015162\">PR review</a>.</p>",
        "id": 522445296,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749068815
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127383692\">PR review comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 522445299,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749068816
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2898031380\">PR review</a>.</p>",
        "id": 522446373,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749069210
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127393499\">PR review comment</a>:</p>\n<blockquote>\n<p>Please make this an optional dependency. I don't want to pull this in for cg_clif.</p>\n</blockquote>",
        "id": 522446376,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749069210
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2898033771\">PR review</a>.</p>",
        "id": 522446534,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749069278
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127394970\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    pub fn lookup_wasmtime_exception_data&lt;'a&gt;(\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 522446536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749069278
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2898042316\">PR review</a>.</p>",
        "id": 522447070,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749069473
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127400177\">PR review comment</a>:</p>\n<blockquote>\n<p>Perhaps, but one of my goals here was to closely mirror how the trampolines work in Wasmtime, and also I don't know if we really need to optimize the testing infrastructure like this.</p>\n</blockquote>",
        "id": 522447071,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749069473
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522448140,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749069867
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2898055952\">PR review</a>.</p>",
        "id": 522448142,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749069868
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127409223\">PR review comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 522448143,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749069868
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2898079560\">PR review</a>.</p>",
        "id": 522449718,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749070522
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127424270\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah changing this away from <code>dyn Unwind</code>, while possible, I think is best to defer to later.</p>\n</blockquote>",
        "id": 522449719,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749070522
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522450346,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749070732
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522450463,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749070774
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2898088978\">PR review</a>.</p>",
        "id": 522450477,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749070778
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127430457\">PR review comment</a>:</p>\n<blockquote>\n<p>Sorry about that, didn't think through all the use-cases -- done!</p>\n</blockquote>",
        "id": 522450479,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749070778
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2898089358\">PR review</a>.</p>",
        "id": 522450511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749070789
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127430703\">PR review comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 522450512,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749070790
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2898090168\">PR review</a>.</p>",
        "id": 522450534,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749070798
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127430956\">PR review comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 522450537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749070798
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2898090747\">PR review</a>.</p>",
        "id": 522450570,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749070806
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127431273\">PR review comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 522450572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749070807
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2898090979\">PR review</a>.</p>",
        "id": 522450595,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749070812
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127431392\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, right, much simpler -- done!</p>\n</blockquote>",
        "id": 522450598,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749070812
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2898095926\">PR review</a>.</p>",
        "id": 522450883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749070921
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127434287\">PR review comment</a>:</p>\n<blockquote>\n<p>Now that the crate is called <code>wasmtime-unwinder</code> I hesitate to put it as a dependency (even optional) of <code>cranelift-codegen</code>; I suppose in the fullness of time we could have a <code>wasmtime-unwinder-cranelift</code> to split off the translation-from-Cranelift-metadata functionality but I also don't feel too strongly about it. For now at least it's under a feature and optional. Happy to see this refactored later if we want to go that way or have other ideas.</p>\n</blockquote>",
        "id": 522450884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749070921
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522452059,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749071318
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#pullrequestreview-2898113457\">PR review</a>.</p>",
        "id": 522452091,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749071330
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#discussion_r2127444827\">PR review comment</a>:</p>\n<blockquote>\n<p>Updated, thanks -- I like this way of writing it out a lot better.</p>\n</blockquote>",
        "id": 522452092,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749071330
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522452320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749071422
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522454113,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749072214
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522454114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749072214
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522454115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749072214
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522459385,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749074612
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522459406,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749074625
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522464501,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749077383
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522464521,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749077394
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#issuecomment-2941885405\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>:</p>\n<blockquote>\n<p>This appears to have bounced off the merge queue because it raced with #10388 and lost; and that PR heavily modified backtracing as well...</p>\n</blockquote>",
        "id": 522466767,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749078758
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522468055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749079436
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522468697,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749079836
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#issuecomment-2942047830\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>:</p>\n<blockquote>\n<p>github's not great about rendering all the time, but the failure was <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/15455099518/job/43505743615#step:19:313\">here</a> (32-bit build)</p>\n</blockquote>",
        "id": 522471321,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749081649
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522474206,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749083657
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522474226,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749083667
    },
    {
        "content": "<p>cfallin has disabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522475273,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749084374
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#issuecomment-2942260950\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>:</p>\n<blockquote>\n<p>Grr, now there's another merge conflict because the version bump went in ahead of this one.</p>\n</blockquote>",
        "id": 522475332,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749084410
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522475482,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749084503
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522475506,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749084512
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919#issuecomment-2942419525\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>:</p>\n<blockquote>\n<p>Wow, CI <em>really</em> does not like this PR -- network error <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/15456051175/job/43508497144\">here</a> downloading CMake.</p>\n</blockquote>",
        "id": 522480359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749087562
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10919\">PR #10919</a>.</p>",
        "id": 522482280,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749088804
    }
]