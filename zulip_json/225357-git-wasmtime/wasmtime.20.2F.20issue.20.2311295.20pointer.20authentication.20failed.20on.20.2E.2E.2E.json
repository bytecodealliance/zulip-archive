[
    {
        "content": "<p>brian14708 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11295\">issue #11295</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"o\">*</span><span class=\"p\">;</span>\n\n<span class=\"cp\">#[tokio::main]</span>\n<span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"k\">dyn</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">error</span><span class=\"p\">::</span><span class=\"n\">Error</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">tasks</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tokio</span><span class=\"p\">::</span><span class=\"n\">task</span><span class=\"p\">::</span><span class=\"n\">JoinSet</span><span class=\"p\">::</span><span class=\"o\">&lt;</span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Config</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">().</span><span class=\"n\">async_support</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">))</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wasm_bytes</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">wat</span><span class=\"p\">::</span><span class=\"n\">parse_str</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"s\">r#\"</span>\n<span class=\"s\">            (module</span>\n<span class=\"s\">                (func $hello (import \"host\" \"hello\"))</span>\n<span class=\"s\">                (func (export \"run\") (call $hello))</span>\n<span class=\"s\">            )</span>\n<span class=\"s\">        \"#</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">..</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasm_bytes</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">hello_func</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Func</span><span class=\"p\">::</span><span class=\"n\">wrap_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">_caller</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Caller</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_args</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nb\">Box</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Instance {i}: Hello from async WASM!\"</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"n\">tokio</span><span class=\"p\">::</span><span class=\"n\">time</span><span class=\"p\">::</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">tokio</span><span class=\"p\">::</span><span class=\"n\">time</span><span class=\"p\">::</span><span class=\"n\">Duration</span><span class=\"p\">::</span><span class=\"n\">from_millis</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)).</span><span class=\"k\">await</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Instance {i}: After 1 ms sleep\"</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"w\">            </span><span class=\"p\">})</span>\n<span class=\"w\">        </span><span class=\"p\">});</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instance</span><span class=\"p\">::</span><span class=\"n\">new_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">hello_func</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">()]).</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">get_typed_func</span><span class=\"p\">::</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"run\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"n\">tasks</span><span class=\"p\">.</span><span class=\"n\">spawn</span><span class=\"p\">(</span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">_i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">..</span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">run</span><span class=\"p\">.</span><span class=\"n\">call_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()).</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"w\">        </span><span class=\"p\">});</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tasks</span><span class=\"p\">.</span><span class=\"n\">join_next</span><span class=\"p\">().</span><span class=\"k\">await</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">result</span><span class=\"o\">??</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">android</span>\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">android</span><span class=\"w\"> </span><span class=\"n\">device</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Instance</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Hello</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"n\">WASM</span><span class=\"o\">!</span>\n<span class=\"n\">Instance</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Hello</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"n\">WASM</span><span class=\"o\">!</span>\n<span class=\"n\">Instance</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">After</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"n\">sleep</span>\n<span class=\"n\">Instance</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Hello</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"n\">WASM</span><span class=\"o\">!</span>\n<span class=\"n\">Instance</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">After</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"n\">sleep</span>\n<span class=\"o\">..</span><span class=\"p\">.</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Instance</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Hello</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"n\">WASM</span><span class=\"o\">!</span>\n<span class=\"n\">Instance</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Hello</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"n\">WASM</span><span class=\"o\">!</span>\n<span class=\"n\">Illegal</span><span class=\"w\"> </span><span class=\"n\">instruction</span>\n</code></pre></div>\n<p>with lldb</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Instance</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Hello</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"n\">WASM</span><span class=\"o\">!</span>\n<span class=\"n\">Instance</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Hello</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"n\">WASM</span><span class=\"o\">!</span>\n<span class=\"n\">Process</span><span class=\"w\"> </span><span class=\"mi\">14726</span><span class=\"w\"> </span><span class=\"n\">stopped</span>\n<span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">tokio</span><span class=\"o\">-</span><span class=\"n\">runtime</span><span class=\"o\">-</span><span class=\"n\">w</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">stop</span><span class=\"w\"> </span><span class=\"n\">reason</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">signal</span><span class=\"w\"> </span><span class=\"n\">SIGILL</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">illegal</span><span class=\"w\"> </span><span class=\"n\">operand</span>\n<span class=\"w\">    </span><span class=\"n\">frame</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x00000055567db894</span><span class=\"w\"> </span><span class=\"n\">fiber</span><span class=\"o\">-</span><span class=\"n\">test</span><span class=\"err\">`</span><span class=\"n\">wasmtime_fiber_switch_34_0_2</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">100</span>\n<span class=\"n\">fiber</span><span class=\"o\">-</span><span class=\"n\">test</span><span class=\"err\">`</span><span class=\"n\">wasmtime_fiber_switch_34_0_2</span><span class=\"p\">:</span>\n<span class=\"p\">-&gt;</span><span class=\"w\">  </span><span class=\"mh\">0x55567db894</span><span class=\"w\"> </span><span class=\"o\">&lt;+</span><span class=\"mi\">100</span><span class=\"o\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">autiasp</span>\n<span class=\"w\">    </span><span class=\"mh\">0x55567db898</span><span class=\"w\"> </span><span class=\"o\">&lt;+</span><span class=\"mi\">104</span><span class=\"o\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">ret</span>\n\n<span class=\"n\">fiber</span><span class=\"o\">-</span><span class=\"n\">test</span><span class=\"err\">`</span><span class=\"n\">_</span><span class=\"cp\">$LT$core</span><span class=\"o\">..</span><span class=\"n\">result</span><span class=\"o\">..</span><span class=\"nb\">Result</span><span class=\"cp\">$LT$T$C$F$GT$$u20$as$u20$core</span><span class=\"o\">..</span><span class=\"n\">ops</span><span class=\"o\">..</span><span class=\"n\">try_trait</span><span class=\"o\">..</span><span class=\"n\">FromResidual</span><span class=\"cp\">$LT$core</span><span class=\"o\">..</span><span class=\"n\">result</span><span class=\"o\">..</span><span class=\"nb\">Result</span><span class=\"cp\">$LT$core</span><span class=\"o\">..</span><span class=\"n\">convert</span><span class=\"o\">..</span><span class=\"n\">Infallible</span><span class=\"cp\">$C$E$GT$$GT$$GT$</span><span class=\"p\">::</span><span class=\"n\">from_residual</span><span class=\"p\">::</span><span class=\"n\">h0eebfda855441d32</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mh\">0x55567db89c</span><span class=\"w\"> </span><span class=\"o\">&lt;+</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"nc\">sub</span><span class=\"w\">    </span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mh\">0x20</span>\n<span class=\"w\">    </span><span class=\"mh\">0x55567db8a0</span><span class=\"w\"> </span><span class=\"o\">&lt;+</span><span class=\"mi\">4</span><span class=\"o\">&gt;</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"nc\">mov</span><span class=\"w\">    </span><span class=\"n\">x9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x8</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 34.0.2</p>\n<p>Operating system: Android 14</p>\n<p>Architecture: aarch64</p>\n</blockquote>",
        "id": 530118238,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753181639
    },
    {
        "content": "<p><a href=\"https://github.com/brian14708\">brian14708</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11295\">Issue #11295</a>.</p>",
        "id": 530118241,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753181639
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11295#issuecomment-3103585890\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11295\">issue #11295</a>:</p>\n<blockquote>\n<p>Thanks for the report! I'll note that aarch64-linux-android is a <a href=\"https://docs.wasmtime.dev/stability-tiers.html#tier-3\">Tier 3 target</a> for Wasmtime of which we have no maintainer of. While Wasmtime builds there we don't have an expert who's around to answer questions like this, so debugging this with the help of others would be greatly appreciated!  </p>\n</blockquote>",
        "id": 530178584,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753200176
    },
    {
        "content": "<p><a href=\"https://github.com/fitzgen\">fitzgen</a> added the cranelift:area:aarch64 label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11295\">Issue #11295</a>.</p>",
        "id": 532122887,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753980385
    },
    {
        "content": "<p><a href=\"https://github.com/fitzgen\">fitzgen</a> added the wasmtime:platform-support label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11295\">Issue #11295</a>.</p>",
        "id": 532122888,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753980385
    }
]