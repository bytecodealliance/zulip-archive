[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a> from <code>alexcrichton:winch-ratchet</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit moves all \"ignore these outright\" tests for Winch and AArch64 to \"run the test and expect failure\" after the fix in #10826 seems to have fixed many of them. Two failures remained which were easy enough to fix here:</p>\n<ul>\n<li>\n<p>The <code>cmov</code> implementation only worked on integer registers, not floating-point registers, leading to a panic. Some small instruction helpers were added for floating-point selects to resolve this panic and get some tests passing.</p>\n</li>\n<li>\n<p>More subtly the calculation of a table's function address was calculating the wrong value on AArch64. This happened because the <code>mul</code> low-level helper on AArch64 required use of the <code>scratch</code> register when an immediate was an operand, unlike on x86_64. The table address helper was also using the <code>scratch</code> register for other data, however, which meant that loading an immediate into <code>scratch</code> clobbered the previous data. The fix here was to allocate a temporary register in the function address routine.</p>\n</li>\n</ul>\n<p>After these fixes the <code>ignore</code> method is no longer necessary as all tests can be run and be flagged as either pass or fail. This additionally adds assertions in the <code>asm.rs</code> layer that any usage of <code>regs::scratch()</code> has an assertion that the other operand isn't also the scratch register to help prevent this issue from cropping back up. This identified one other location in fuel handling where the scratch register collided.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 519941427,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1747959926
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a>.</p>",
        "id": 519941429,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1747959926
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a>.</p>",
        "id": 519941430,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1747959926
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/dicej\">dicej</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a>.</p>",
        "id": 519941431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1747959927
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a>.</p>",
        "id": 519941432,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1747959927
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/saulecabrera\">saulecabrera</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a>.</p>",
        "id": 519941458,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1747959936
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a>.</p>",
        "id": 519942825,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1747960613
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#issuecomment-2903068195\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @saulecabrera</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"winch\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>saulecabrera: winch</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 519953232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1747966790
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#pullrequestreview-2864519044\">PR review</a>:</p>\n<blockquote>\n<p>Glad that we can avoid ignoring tests. Thanks for this! Left one small comment inline. </p>\n</blockquote>",
        "id": 520060121,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748008563
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#discussion_r2104650941\">PR review comment</a>:</p>\n<blockquote>\n<p>One thing to note here is that this will potentially increase register pressure for x64, but in reality we're trying to fix an Aarch64 issue with immediate value handling. I don't think this is a blocker, but wanted to point this out since this will likely change in the near-future since I have a work-in-progress branch which fixes the scratch register handling more broadly and will hopefully allow us to keep the previous implementation for x64. </p>\n</blockquote>",
        "id": 520060123,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748008563
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#pullrequestreview-2864534935\">PR review</a>.</p>",
        "id": 520060692,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748008733
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#discussion_r2104660701\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh nice! Would you prefer to hold off on landing this until said refactoring has landed?</p>\n</blockquote>",
        "id": 520060693,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748008733
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#pullrequestreview-2864701536\">PR review</a>.</p>",
        "id": 520073571,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748012409
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#discussion_r2104765610\">PR review comment</a>:</p>\n<blockquote>\n<p>Sounds good to me, yeah. </p>\n</blockquote>",
        "id": 520073573,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748012409
    },
    {
        "content": "<p>bank8641 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#pullrequestreview-2890120405\">PR review</a>.</p>",
        "id": 521856640,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748903849
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#pullrequestreview-2910974078\">PR review</a>.</p>",
        "id": 523148767,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749494629
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#discussion_r2136266747\">PR review comment</a>:</p>\n<blockquote>\n<p>I have part 2/N here <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10989\">https://github.com/bytecodealliance/wasmtime/pull/10989</a>, once that one lands, I think the only remaining piece is to ensure that any scratch register usage in ISA-agnostic goes through the proper path to allocate scratch registers and then we could land this one. Said differently, I think we're 1 change away from unblocking this. </p>\n</blockquote>",
        "id": 523148768,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749494629
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#discussion_r2136266747\">PR review comment</a>.</p>",
        "id": 523148817,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749494649
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a>.</p>",
        "id": 523309987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749566886
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#discussion_r2138110296\">PR review comment</a>:</p>\n<blockquote>\n<p>I've split out <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10997\">a refactoring</a> from this PR but otherwise the final commit here updates the scratch usage in <code>emit_compute_table_elem_addr</code> which is then will unlock running more tests (yay!)</p>\n</blockquote>",
        "id": 523310416,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749566995
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#pullrequestreview-2913932894\">PR review</a>.</p>",
        "id": 523310417,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749566995
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#pullrequestreview-2914082496\">PR review</a>.</p>",
        "id": 523317628,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749569028
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#discussion_r2138200151\">PR review comment</a>:</p>\n<blockquote>\n<p>I've opened the full migration here <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10998\">https://github.com/bytecodealliance/wasmtime/pull/10998</a>, I opened it as draft for now since I still need to amend it to use the newer version of <code>with_scratch</code> and investigate why a disassembly test is failing to compile. I think it should be good after that! I had migrated <code>emit_compute_table_elem_addr</code> as well in that PR, before reading your message here, sorry about that! But the <code>csel</code> changes are still valuable though. </p>\n</blockquote>",
        "id": 523317631,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749569028
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#pullrequestreview-2914089775\">PR review</a>.</p>",
        "id": 523317919,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749569111
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#discussion_r2138204411\">PR review comment</a>:</p>\n<blockquote>\n<p>Nice! And no please use your version, I was just curious to get a feel for things here, I'm not wed to these changes at all</p>\n</blockquote>",
        "id": 523317920,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749569111
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a>.</p>",
        "id": 523356295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749583373
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a>:</p>\n<blockquote>\n<p>This commit moves all \"ignore these outright\" tests for Winch and<br>\nAArch64 to \"run the test and expect failure\" after recent PRs which<br>\nremoved most of the segfaults/etc which prevented running these tests.<br>\nOne failure remained which was easy enough to fix here: the <code>cmov</code><br>\nimplementation only worked on integer registers, not floating-point<br>\nregisters, leading to a panic. A helper was added for floating-point selects to<br>\nresolve this panic and get some tests passing.</p>\n<p>After this fix the <code>ignore</code> method is no longer necessary as all tests<br>\ncan be run and be flagged as either pass or fail.</p>\n</blockquote>",
        "id": 523356321,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749583385
    },
    {
        "content": "<p><strong>alexcrichton</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a> as ready for review.</p>",
        "id": 523356351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749583393
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#issuecomment-2960359183\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a>:</p>\n<blockquote>\n<p>Ok now a much smaller PR with all the previous fixes, thanks @saulecabrera! Now this just has a change for <code>fpu_csel</code> plus removing the <code>ignore</code> method, meaning all tests are run in aarch64 right now (although many are still expected to fail)</p>\n</blockquote>",
        "id": 523356433,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749583436
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#pullrequestreview-2915256639\">PR review</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 523387116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749598201
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#issuecomment-2960807930\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a>:</p>\n<blockquote>\n<blockquote>\n<p>all tests are run in aarch64 right now (although many are still expected to fail)</p>\n</blockquote>\n<p>I'm currently looking into it. </p>\n</blockquote>",
        "id": 523387190,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749598244
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a>.</p>",
        "id": 523393225,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749602507
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829#issuecomment-2960899309\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a>:</p>\n<blockquote>\n<p>Reproduced that failure locally and it required a new <code>self.with_aligned_sp</code> during codegen for the wasm <code>unreachable</code> instruction.</p>\n</blockquote>",
        "id": 523393256,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749602531
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a>.</p>",
        "id": 523393261,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749602535
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a>.</p>",
        "id": 523394201,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749603425
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10829\">PR #10829</a>.</p>",
        "id": 523397346,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749605480
    }
]