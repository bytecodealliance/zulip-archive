[
    {
        "content": "<p><a href=\"https://github.com/tschneidereit\">tschneidereit</a> added the enhancement label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10122\">Issue #10122</a>.</p>",
        "id": 496162866,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737994971
    },
    {
        "content": "<p>tschneidereit opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10122\">issue #10122</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Currently, Wasmtime doesn't always print anything to <code>stderr</code> when the guest panics: e.g. when serving incoming HTTP requests, panics are only printed if they happen before a response is sent. If the panic happens after the response headers have been sent, the panic is silently swallowed, and will only show up with the right <code>WASMTIME_LOG</code> incantation.</p>\n<h4>Benefit</h4>\n<p>Make guest panics easier to identify and debug.</p>\n<h4>Implementation</h4>\n<p>I'm not sure where this needs to be added, unfortunately.</p>\n<h4>Alternatives</h4>\n<p>Do nothing.<br>\n</p>\n</blockquote>",
        "id": 496162872,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737994972
    },
    {
        "content": "<p><a href=\"https://github.com/tschneidereit\">tschneidereit</a> added the wasmtime label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10122\">Issue #10122</a>.</p>",
        "id": 496162920,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737994980
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10122#issuecomment-2616540780\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10122\">issue #10122</a>:</p>\n<blockquote>\n<p>Do you have an example to run? Glancing at the logging in <code>wasmtime serve</code> it looks like it's writing everything to stdout/stderr as soon as it gets it, so I'm not immediately sure where the issue might lie. </p>\n</blockquote>",
        "id": 496183826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738001243
    },
    {
        "content": "<p>primoly <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10122#issuecomment-2676232097\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10122\">issue #10122</a>:</p>\n<blockquote>\n<p>When a component traps before calling <code>set</code>, <code>receiver.await</code> has an error and this code is invoked<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/2e48fbc9279f89d89f4dd99c48da48e2735e18cc/src/commands/serve.rs#L537\">https://github.com/bytecodealliance/wasmtime/blob/2e48fbc9279f89d89f4dd99c48da48e2735e18cc/src/commands/serve.rs#L537</a><br>\nand the underlying cause of the failure of the <code>task</code> is retrieved.</p>\n<p>But when it traps afterwards, <code>receiver.await</code> returns <code>Ok</code>, this code is executed<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/2e48fbc9279f89d89f4dd99c48da48e2735e18cc/src/commands/serve.rs#L526\">https://github.com/bytecodealliance/wasmtime/blob/2e48fbc9279f89d89f4dd99c48da48e2735e18cc/src/commands/serve.rs#L526</a><br>\ncausing the error from the <code>task</code> to get discarded.</p>\n<p>The code currently makes two wrong assumptions:</p>\n<ol>\n<li>An error in <code>receiver</code> means an error in <code>task</code>.</li>\n<li>Success in <code>receiver</code> means success in <code>task</code>.</li>\n</ol>\n<p>(1) has been fixed in #10256, but @tschneidereit’s problem (2) hasn’t yet.</p>\n<p>Here a proxy component to try at home. It traps <em>after</em> calling <code>set</code> (line 117). To see the difference of trapping <em>before</em>, uncomment <code>;; unreachable</code> on line 91.</p>\n<p>&lt;details&gt;&lt;summary&gt;proxy.wat&lt;/summary&gt;</p>\n<p><div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"err\">component</span>\n  <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;0;)</span>\n    <span class=\"p\">(</span><span class=\"err\">instance</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;0;)</span> <span class=\"s2\">\"error\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">sub</span> <span class=\"err\">resource</span><span class=\"p\">)))</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"wasi:io/error@0.2.0\"</span> <span class=\"p\">(</span><span class=\"err\">instance</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"k\">export</span> <span class=\"mi\">0</span> <span class=\"s2\">\"error\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;1;)</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;2;)</span>\n    <span class=\"p\">(</span><span class=\"err\">instance</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;0;)</span> <span class=\"s2\">\"output-stream\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">sub</span> <span class=\"err\">resource</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"err\">outer</span> <span class=\"mf\">1 1</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;1;)</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;2;)</span> <span class=\"s2\">\"error\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"mi\">1</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;3;)</span> <span class=\"p\">(</span><span class=\"err\">own</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;4;)</span> <span class=\"p\">(</span><span class=\"err\">variant</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"last-operation-failed\"</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"closed\"</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;5;)</span> <span class=\"s2\">\"stream-error\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"mi\">4</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;6;)</span> <span class=\"p\">(</span><span class=\"err\">borrow</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;7;)</span> <span class=\"p\">(</span><span class=\"err\">list</span> <span class=\"err\">u</span><span class=\"mi\">8</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;8;)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"p\">(</span><span class=\"err\">error</span> <span class=\"mi\">5</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;9;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"s2\">\"self\"</span> <span class=\"mi\">6</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"s2\">\"contents\"</span> <span class=\"mi\">7</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"mi\">8</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;0;)</span> <span class=\"s2\">\"[method]output-stream.blocking-write-and-flush\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">9</span><span class=\"p\">)))</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"wasi:io/streams@0.2.0\"</span> <span class=\"p\">(</span><span class=\"err\">instance</span> <span class=\"cm\">(;1;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"k\">export</span> <span class=\"mi\">1</span> <span class=\"s2\">\"output-stream\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;3;)</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;4;)</span>\n    <span class=\"p\">(</span><span class=\"err\">instance</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;0;)</span> <span class=\"s2\">\"fields\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">sub</span> <span class=\"err\">resource</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;1;)</span> <span class=\"s2\">\"response-outparam\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">sub</span> <span class=\"err\">resource</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;2;)</span> <span class=\"s2\">\"outgoing-response\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">sub</span> <span class=\"err\">resource</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;3;)</span> <span class=\"p\">(</span><span class=\"err\">option</span> <span class=\"err\">string</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;4;)</span> <span class=\"p\">(</span><span class=\"err\">option</span> <span class=\"err\">u</span><span class=\"mi\">16</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;5;)</span> <span class=\"p\">(</span><span class=\"err\">record</span> <span class=\"p\">(</span><span class=\"err\">field</span> <span class=\"s2\">\"rcode\"</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">field</span> <span class=\"s2\">\"info-code\"</span> <span class=\"mi\">4</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;6;)</span> <span class=\"s2\">\"DNS-error-payload\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"mi\">5</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;7;)</span> <span class=\"p\">(</span><span class=\"err\">option</span> <span class=\"err\">u</span><span class=\"mi\">8</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;8;)</span> <span class=\"p\">(</span><span class=\"err\">record</span> <span class=\"p\">(</span><span class=\"err\">field</span> <span class=\"s2\">\"alert-id\"</span> <span class=\"mi\">7</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">field</span> <span class=\"s2\">\"alert-message\"</span> <span class=\"mi\">3</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;9;)</span> <span class=\"s2\">\"TLS-alert-received-payload\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"mi\">8</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;10;)</span> <span class=\"p\">(</span><span class=\"err\">option</span> <span class=\"err\">u</span><span class=\"mi\">32</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;11;)</span> <span class=\"p\">(</span><span class=\"err\">record</span> <span class=\"p\">(</span><span class=\"err\">field</span> <span class=\"s2\">\"field-name\"</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">field</span> <span class=\"s2\">\"field-size\"</span> <span class=\"mi\">10</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;12;)</span> <span class=\"s2\">\"field-size-payload\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"mi\">11</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;13;)</span> <span class=\"p\">(</span><span class=\"err\">option</span> <span class=\"err\">u</span><span class=\"mi\">64</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;14;)</span> <span class=\"p\">(</span><span class=\"err\">option</span> <span class=\"mi\">12</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;15;)</span> <span class=\"p\">(</span><span class=\"err\">variant</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"DNS-timeout\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"DNS-error\"</span> <span class=\"mi\">6</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"destination-not-found\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"destination-unavailable\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"destination-IP-prohibited\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"destination-IP-unroutable\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"connection-refused\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"connection-terminated\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"connection-timeout\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"connection-read-timeout\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"connection-write-timeout\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"connection-limit-reached\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"TLS-protocol-error\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"TLS-certificate-error\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"TLS-alert-received\"</span> <span class=\"mi\">9</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-denied\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-length-required\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-body-size\"</span> <span class=\"mi\">13</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-method-invalid\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-URI-invalid\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-URI-too-long\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-header-section-size\"</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-header-size\"</span> <span class=\"mi\">14</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-trailer-section-size\"</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-trailer-size\"</span> <span class=\"mi\">12</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-incomplete\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-header-section-size\"</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-header-size\"</span> <span class=\"mi\">12</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-body-size\"</span> <span class=\"mi\">13</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-trailer-section-size\"</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-trailer-size\"</span> <span class=\"mi\">12</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-transfer-coding\"</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-content-coding\"</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-timeout\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-upgrade-failed\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-protocol-error\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"loop-detected\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"configuration-error\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"internal-error\"</span> <span class=\"mi\">3</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;16;)</span> <span class=\"s2\">\"error-code\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"mi\">15</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;17;)</span> <span class=\"s2\">\"headers\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;18;)</span> <span class=\"s2\">\"outgoing-body\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">sub</span> <span class=\"err\">resource</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"err\">outer</span> <span class=\"mf\">1 3</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;19;)</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;20;)</span> <span class=\"s2\">\"output-stream\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"mi\">19</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;21;)</span> <span class=\"s2\">\"incoming-request\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">sub</span> <span class=\"err\">resource</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;22;)</span> <span class=\"p\">(</span><span class=\"err\">own</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;23;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"mi\">22</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;0;)</span> <span class=\"s2\">\"[constructor]fields\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">23</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;24;)</span> <span class=\"p\">(</span><span class=\"err\">own</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;25;)</span> <span class=\"p\">(</span><span class=\"err\">own</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;26;)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"mi\">25</span> <span class=\"p\">(</span><span class=\"err\">error</span> <span class=\"mi\">16</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;27;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"s2\">\"param\"</span> <span class=\"mi\">24</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"s2\">\"response\"</span> <span class=\"mi\">26</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;1;)</span> <span class=\"s2\">\"[static]response-outparam.set\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">27</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;28;)</span> <span class=\"p\">(</span><span class=\"err\">own</span> <span class=\"mi\">17</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;29;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"s2\">\"headers\"</span> <span class=\"mi\">28</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"mi\">25</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;2;)</span> <span class=\"s2\">\"[constructor]outgoing-response\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">29</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;30;)</span> <span class=\"p\">(</span><span class=\"err\">borrow</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;31;)</span> <span class=\"p\">(</span><span class=\"err\">own</span> <span class=\"mi\">18</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;32;)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"mi\">31</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;33;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"s2\">\"self\"</span> <span class=\"mi\">30</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"mi\">32</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;3;)</span> <span class=\"s2\">\"[method]outgoing-response.body\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">33</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;34;)</span> <span class=\"p\">(</span><span class=\"err\">borrow</span> <span class=\"mi\">18</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;35;)</span> <span class=\"p\">(</span><span class=\"err\">own</span> <span class=\"mi\">20</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;36;)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"mi\">35</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;37;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"s2\">\"self\"</span> <span class=\"mi\">34</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"mi\">36</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;4;)</span> <span class=\"s2\">\"[method]outgoing-body.write\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">37</span><span class=\"p\">)))</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"wasi:http/types@0.2.0\"</span> <span class=\"p\">(</span><span class=\"err\">instance</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">4</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"k\">module</span> <span class=\"cm\">(;0;)</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;1;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i64</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;3;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;4;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"cm32p2|wasi:io/streams@0.2\"</span> <span class=\"s2\">\"[method]output-stream.blocking-write-and-flush\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$write</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"cm32p2|wasi:http/types@0.2\"</span> <span class=\"s2\">\"[static]response-outparam.set\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$set</span> <span class=\"cm\">(;1;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">1</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"cm32p2|wasi:http/types@0.2\"</span> <span class=\"s2\">\"[constructor]fields\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$headers</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"cm32p2|wasi:http/types@0.2\"</span> <span class=\"s2\">\"[constructor]outgoing-response\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$out-res</span> <span class=\"cm\">(;3;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">3</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"cm32p2|wasi:http/types@0.2\"</span> <span class=\"s2\">\"[method]outgoing-response.body\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$body</span> <span class=\"cm\">(;4;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">4</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"cm32p2|wasi:http/types@0.2\"</span> <span class=\"s2\">\"[method]outgoing-body.write\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$body-write</span> <span class=\"cm\">(;5;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">4</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">memory</span> <span class=\"cm\">(;0;)</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"cm32p2_memory\"</span> <span class=\"p\">(</span><span class=\"k\">memory</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"cm32p2|wasi:http/incoming-handler@0.2|handle\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"mi\">6</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"cm\">(;6;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">4</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"nv\">$out-param</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n      <span class=\"p\">(</span><span class=\"k\">local</span> <span class=\"nv\">$res</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n      <span class=\"c1\">;; unreachable</span>\n      <span class=\"nb\">call</span> <span class=\"nv\">$headers</span>\n      <span class=\"nb\">call</span> <span class=\"nv\">$out-res</span>\n      <span class=\"nb\">local.tee</span> <span class=\"nv\">$res</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mf\">256</span>\n      <span class=\"nb\">call</span> <span class=\"nv\">$body</span>\n      <span class=\"nb\">local.get</span> <span class=\"nv\">$out-param</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">local.get</span> <span class=\"nv\">$res</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i64.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">call</span> <span class=\"nv\">$set</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mf\">260</span>\n      <span class=\"nb\">i32.load</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mf\">256</span>\n      <span class=\"nb\">call</span> <span class=\"nv\">$body-write</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mf\">260</span>\n      <span class=\"nb\">i32.load</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">16</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">25</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mf\">512</span>\n      <span class=\"nb\">call</span> <span class=\"nv\">$write</span>\n      <span class=\"nb\">unreachable</span>\n    <span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">data</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mi\">16</span><span class=\"p\">)</span> <span class=\"s2\">\"Hello from the other side.</span><span class=\"se\">\\0a</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"err\">@producers</span>\n      <span class=\"p\">(</span><span class=\"err\">processed-by</span> <span class=\"s2\">\"wit-component\"</span> <span class=\"s2\">\"0.225.0\"</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"k\">module</span> <span class=\"cm\">(;1;)</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;1;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i64</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">table</span> <span class=\"cm\">(;0;)</span> <span class=\"mf\">4 4</span> <span class=\"k\">funcref</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"0\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"err\">$</span><span class=\"s2\">\"indirect-cm32p2|wasi:io/streams@0.2-[method]output-stream.blocking-write-and-flush\"</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"1\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"err\">$</span><span class=\"s2\">\"indirect-cm32p2|wasi:http/types@0.2-[static]response-outparam.set\"</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"2\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"err\">$</span><span class=\"s2\">\"indirect-cm32p2|wasi:http/types@0.2-[method]outgoing-response.body\"</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"3\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"err\">$</span><span class=\"s2\">\"indirect-cm32p2|wasi:http/types@0.2-[method]outgoing-body.write\"</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"$imports\"</span> <span class=\"p\">(</span><span class=\"k\">table</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"err\">$</span><span class=\"s2\">\"indirect-cm32p2|wasi:io/streams@0.2-[method]output-stream.blocking-write-and-flush\"</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">2</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">3</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">call_indirect</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"err\">$</span><span class=\"s2\">\"indirect-cm32p2|wasi:http/types@0.2-[static]response-outparam.set\"</span> <span class=\"cm\">(;1;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i64</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">2</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">3</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">4</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">5</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">6</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">7</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">8</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">call_indirect</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"err\">$</span><span class=\"s2\">\"indirect-cm32p2|wasi:http/types@0.2-[method]outgoing-response.body\"</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">2</span>\n      <span class=\"nb\">call_indirect</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"err\">$</span><span class=\"s2\">\"indirect-cm32p2|wasi:http/types@0.2-[method]outgoing-body.write\"</span> <span class=\"cm\">(;3;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">3</span>\n      <span class=\"nb\">call_indirect</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"err\">@producers</span>\n      <span class=\"p\">(</span><span class=\"err\">processed-by</span> <span class=\"s2\">\"wit-component\"</span> <span class=\"s2\">\"0.225.0\"</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"k\">module</span> <span class=\"cm\">(;2;)</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;1;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i64</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"\"</span> <span class=\"s2\">\"0\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"\"</span> <span class=\"s2\">\"1\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"cm\">(;1;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">1</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"\"</span> <span class=\"s2\">\"2\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"\"</span> <span class=\"s2\">\"3\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"cm\">(;3;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"\"</span> <span class=\"s2\">\"$imports\"</span> <span class=\"p\">(</span><span class=\"k\">table</span> <span class=\"cm\">(;0;)</span> <span class=\"mf\">4 4</span> <span class=\"k\">funcref</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"k\">elem</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"k\">func</span> <span class=\"mf\">0 1</span> <span class=\"mf\">2 3</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"err\">@producers</span>\n      <span class=\"p\">(</span><span class=\"err\">processed-by</span> <span class=\"s2\">\"wit-component\"</span> <span class=\"s2\">\"0.225.0\"</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"err\">instance</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"err\">instantiate</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"err\">core</span> <span class=\"k\">export</span> <span class=\"mi\">0</span> <span class=\"s2\">\"0\"</span> <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"k\">func</span> <span class=\"cm\">(;0;)</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"err\">instance</span> <span class=\"cm\">(;1;)</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"[method]output-stream.blocking-write-and-flush\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"err\">core</span> <span class=\"k\">export</span> <span class=\"mi\">0</span> <span class=\"s2\">\"1\"</span> <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"k\">func</span> <span class=\"cm\">(;1;)</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"k\">export</span> <span class=\"mi\">2</span> <span class=\"s2\">\"[constructor]fields\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"cm\">(;0;)</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"k\">func</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"err\">canon</span> <span class=\"err\">lower</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"k\">export</span> <span class=\"mi\">2</span> <span class=\"s2\">\"[constructor]outgoing-response\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"cm\">(;1;)</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"k\">func</span> <span class=\"cm\">(;3;)</span> <span class=\"p\">(</span><span class=\"err\">canon</span> <span class=\"err\">lower</span> <span class=\"p\">(</span><span class=\"k\">func</span>\n<span class=\"err\">[message</span> <span class=\"err\">truncated]</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 501270976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740233819
    },
    {
        "content": "<p>primoly edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10122#issuecomment-2676232097\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10122\">issue #10122</a>:</p>\n<blockquote>\n<p>When a component traps before calling <code>set</code>, <code>receiver.await</code> has an error and this code is invoked<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/2e48fbc9279f89d89f4dd99c48da48e2735e18cc/src/commands/serve.rs#L537\">https://github.com/bytecodealliance/wasmtime/blob/2e48fbc9279f89d89f4dd99c48da48e2735e18cc/src/commands/serve.rs#L537</a><br>\nand the underlying cause of the failure of the <code>task</code> is retrieved.</p>\n<p>But when it traps afterwards, <code>receiver.await</code> returns <code>Ok</code>, this code is executed<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/2e48fbc9279f89d89f4dd99c48da48e2735e18cc/src/commands/serve.rs#L526\">https://github.com/bytecodealliance/wasmtime/blob/2e48fbc9279f89d89f4dd99c48da48e2735e18cc/src/commands/serve.rs#L526</a><br>\ncausing the error from the <code>task</code> to get discarded.</p>\n<p>The code currently makes two wrong assumptions:</p>\n<ol>\n<li>An error in <code>receiver</code> means an error in <code>task</code>.</li>\n<li>Success in <code>receiver</code> means success in <code>task</code>.</li>\n</ol>\n<p>(1) has been fixed in #10256, but @tschneidereit’s problem (2) hasn’t yet.</p>\n<p>Here a proxy component to try at home. It traps <em>after</em> calling <code>set</code> (line 117). To see the difference of trapping <em>before</em>, uncomment <code>;; unreachable</code> on line 91.</p>\n<p>&lt;details&gt;&lt;summary&gt;proxy.wat&lt;/summary&gt;</p>\n<p><div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"err\">component</span>\n  <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;0;)</span>\n    <span class=\"p\">(</span><span class=\"err\">instance</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;0;)</span> <span class=\"s2\">\"error\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">sub</span> <span class=\"err\">resource</span><span class=\"p\">)))</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"wasi:io/error@0.2.0\"</span> <span class=\"p\">(</span><span class=\"err\">instance</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"k\">export</span> <span class=\"mi\">0</span> <span class=\"s2\">\"error\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;1;)</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;2;)</span>\n    <span class=\"p\">(</span><span class=\"err\">instance</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;0;)</span> <span class=\"s2\">\"output-stream\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">sub</span> <span class=\"err\">resource</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"err\">outer</span> <span class=\"mf\">1 1</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;1;)</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;2;)</span> <span class=\"s2\">\"error\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"mi\">1</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;3;)</span> <span class=\"p\">(</span><span class=\"err\">own</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;4;)</span> <span class=\"p\">(</span><span class=\"err\">variant</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"last-operation-failed\"</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"closed\"</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;5;)</span> <span class=\"s2\">\"stream-error\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"mi\">4</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;6;)</span> <span class=\"p\">(</span><span class=\"err\">borrow</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;7;)</span> <span class=\"p\">(</span><span class=\"err\">list</span> <span class=\"err\">u</span><span class=\"mi\">8</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;8;)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"p\">(</span><span class=\"err\">error</span> <span class=\"mi\">5</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;9;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"s2\">\"self\"</span> <span class=\"mi\">6</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"s2\">\"contents\"</span> <span class=\"mi\">7</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"mi\">8</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;0;)</span> <span class=\"s2\">\"[method]output-stream.blocking-write-and-flush\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">9</span><span class=\"p\">)))</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"wasi:io/streams@0.2.0\"</span> <span class=\"p\">(</span><span class=\"err\">instance</span> <span class=\"cm\">(;1;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"k\">export</span> <span class=\"mi\">1</span> <span class=\"s2\">\"output-stream\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;3;)</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;4;)</span>\n    <span class=\"p\">(</span><span class=\"err\">instance</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;0;)</span> <span class=\"s2\">\"fields\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">sub</span> <span class=\"err\">resource</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;1;)</span> <span class=\"s2\">\"response-outparam\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">sub</span> <span class=\"err\">resource</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;2;)</span> <span class=\"s2\">\"outgoing-response\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">sub</span> <span class=\"err\">resource</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;3;)</span> <span class=\"p\">(</span><span class=\"err\">option</span> <span class=\"err\">string</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;4;)</span> <span class=\"p\">(</span><span class=\"err\">option</span> <span class=\"err\">u</span><span class=\"mi\">16</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;5;)</span> <span class=\"p\">(</span><span class=\"err\">record</span> <span class=\"p\">(</span><span class=\"err\">field</span> <span class=\"s2\">\"rcode\"</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">field</span> <span class=\"s2\">\"info-code\"</span> <span class=\"mi\">4</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;6;)</span> <span class=\"s2\">\"DNS-error-payload\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"mi\">5</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;7;)</span> <span class=\"p\">(</span><span class=\"err\">option</span> <span class=\"err\">u</span><span class=\"mi\">8</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;8;)</span> <span class=\"p\">(</span><span class=\"err\">record</span> <span class=\"p\">(</span><span class=\"err\">field</span> <span class=\"s2\">\"alert-id\"</span> <span class=\"mi\">7</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">field</span> <span class=\"s2\">\"alert-message\"</span> <span class=\"mi\">3</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;9;)</span> <span class=\"s2\">\"TLS-alert-received-payload\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"mi\">8</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;10;)</span> <span class=\"p\">(</span><span class=\"err\">option</span> <span class=\"err\">u</span><span class=\"mi\">32</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;11;)</span> <span class=\"p\">(</span><span class=\"err\">record</span> <span class=\"p\">(</span><span class=\"err\">field</span> <span class=\"s2\">\"field-name\"</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">field</span> <span class=\"s2\">\"field-size\"</span> <span class=\"mi\">10</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;12;)</span> <span class=\"s2\">\"field-size-payload\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"mi\">11</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;13;)</span> <span class=\"p\">(</span><span class=\"err\">option</span> <span class=\"err\">u</span><span class=\"mi\">64</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;14;)</span> <span class=\"p\">(</span><span class=\"err\">option</span> <span class=\"mi\">12</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;15;)</span> <span class=\"p\">(</span><span class=\"err\">variant</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"DNS-timeout\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"DNS-error\"</span> <span class=\"mi\">6</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"destination-not-found\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"destination-unavailable\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"destination-IP-prohibited\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"destination-IP-unroutable\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"connection-refused\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"connection-terminated\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"connection-timeout\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"connection-read-timeout\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"connection-write-timeout\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"connection-limit-reached\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"TLS-protocol-error\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"TLS-certificate-error\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"TLS-alert-received\"</span> <span class=\"mi\">9</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-denied\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-length-required\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-body-size\"</span> <span class=\"mi\">13</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-method-invalid\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-URI-invalid\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-URI-too-long\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-header-section-size\"</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-header-size\"</span> <span class=\"mi\">14</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-trailer-section-size\"</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-request-trailer-size\"</span> <span class=\"mi\">12</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-incomplete\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-header-section-size\"</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-header-size\"</span> <span class=\"mi\">12</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-body-size\"</span> <span class=\"mi\">13</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-trailer-section-size\"</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-trailer-size\"</span> <span class=\"mi\">12</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-transfer-coding\"</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-content-coding\"</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-response-timeout\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-upgrade-failed\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"HTTP-protocol-error\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"loop-detected\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"configuration-error\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"err\">case</span> <span class=\"s2\">\"internal-error\"</span> <span class=\"mi\">3</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;16;)</span> <span class=\"s2\">\"error-code\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"mi\">15</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;17;)</span> <span class=\"s2\">\"headers\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;18;)</span> <span class=\"s2\">\"outgoing-body\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">sub</span> <span class=\"err\">resource</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"err\">outer</span> <span class=\"mf\">1 3</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;19;)</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;20;)</span> <span class=\"s2\">\"output-stream\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">eq</span> <span class=\"mi\">19</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;21;)</span> <span class=\"s2\">\"incoming-request\"</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"p\">(</span><span class=\"err\">sub</span> <span class=\"err\">resource</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;22;)</span> <span class=\"p\">(</span><span class=\"err\">own</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;23;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"mi\">22</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;0;)</span> <span class=\"s2\">\"[constructor]fields\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">23</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;24;)</span> <span class=\"p\">(</span><span class=\"err\">own</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;25;)</span> <span class=\"p\">(</span><span class=\"err\">own</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;26;)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"mi\">25</span> <span class=\"p\">(</span><span class=\"err\">error</span> <span class=\"mi\">16</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;27;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"s2\">\"param\"</span> <span class=\"mi\">24</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"s2\">\"response\"</span> <span class=\"mi\">26</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;1;)</span> <span class=\"s2\">\"[static]response-outparam.set\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">27</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;28;)</span> <span class=\"p\">(</span><span class=\"err\">own</span> <span class=\"mi\">17</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;29;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"s2\">\"headers\"</span> <span class=\"mi\">28</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"mi\">25</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;2;)</span> <span class=\"s2\">\"[constructor]outgoing-response\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">29</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;30;)</span> <span class=\"p\">(</span><span class=\"err\">borrow</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;31;)</span> <span class=\"p\">(</span><span class=\"err\">own</span> <span class=\"mi\">18</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;32;)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"mi\">31</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;33;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"s2\">\"self\"</span> <span class=\"mi\">30</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"mi\">32</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;3;)</span> <span class=\"s2\">\"[method]outgoing-response.body\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">33</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;34;)</span> <span class=\"p\">(</span><span class=\"err\">borrow</span> <span class=\"mi\">18</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;35;)</span> <span class=\"p\">(</span><span class=\"err\">own</span> <span class=\"mi\">20</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;36;)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"mi\">35</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;37;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"s2\">\"self\"</span> <span class=\"mi\">34</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"mi\">36</span><span class=\"p\">)))</span>\n      <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"cm\">(;4;)</span> <span class=\"s2\">\"[method]outgoing-body.write\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">37</span><span class=\"p\">)))</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"wasi:http/types@0.2.0\"</span> <span class=\"p\">(</span><span class=\"err\">instance</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">4</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"k\">module</span> <span class=\"cm\">(;0;)</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;1;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i64</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;3;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;4;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"cm32p2|wasi:io/streams@0.2\"</span> <span class=\"s2\">\"[method]output-stream.blocking-write-and-flush\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$write</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"cm32p2|wasi:http/types@0.2\"</span> <span class=\"s2\">\"[static]response-outparam.set\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$set</span> <span class=\"cm\">(;1;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">1</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"cm32p2|wasi:http/types@0.2\"</span> <span class=\"s2\">\"[constructor]fields\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$headers</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"cm32p2|wasi:http/types@0.2\"</span> <span class=\"s2\">\"[constructor]outgoing-response\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$out-res</span> <span class=\"cm\">(;3;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">3</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"cm32p2|wasi:http/types@0.2\"</span> <span class=\"s2\">\"[method]outgoing-response.body\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$body</span> <span class=\"cm\">(;4;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">4</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"cm32p2|wasi:http/types@0.2\"</span> <span class=\"s2\">\"[method]outgoing-body.write\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$body-write</span> <span class=\"cm\">(;5;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">4</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">memory</span> <span class=\"cm\">(;0;)</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"cm32p2_memory\"</span> <span class=\"p\">(</span><span class=\"k\">memory</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"cm32p2|wasi:http/incoming-handler@0.2|handle\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"mi\">6</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"cm\">(;6;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">4</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"nv\">$out-param</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n      <span class=\"p\">(</span><span class=\"k\">local</span> <span class=\"nv\">$res</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n      <span class=\"c1\">;; unreachable</span>\n      <span class=\"nb\">call</span> <span class=\"nv\">$headers</span>\n      <span class=\"nb\">call</span> <span class=\"nv\">$out-res</span>\n      <span class=\"nb\">local.tee</span> <span class=\"nv\">$res</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mf\">256</span>\n      <span class=\"nb\">call</span> <span class=\"nv\">$body</span>\n      <span class=\"nb\">local.get</span> <span class=\"nv\">$out-param</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">local.get</span> <span class=\"nv\">$res</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i64.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">call</span> <span class=\"nv\">$set</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mf\">260</span>\n      <span class=\"nb\">i32.load</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mf\">256</span>\n      <span class=\"nb\">call</span> <span class=\"nv\">$body-write</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mf\">260</span>\n      <span class=\"nb\">i32.load</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">16</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">27</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mf\">512</span>\n      <span class=\"nb\">call</span> <span class=\"nv\">$write</span>\n      <span class=\"nb\">unreachable</span>\n    <span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">data</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mi\">16</span><span class=\"p\">)</span> <span class=\"s2\">\"Hello from the other side.</span><span class=\"se\">\\0a</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"k\">module</span> <span class=\"cm\">(;1;)</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;1;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i64</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">table</span> <span class=\"cm\">(;0;)</span> <span class=\"mf\">4 4</span> <span class=\"k\">funcref</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"0\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"err\">$</span><span class=\"s2\">\"indirect-cm32p2|wasi:io/streams@0.2-[method]output-stream.blocking-write-and-flush\"</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"1\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"err\">$</span><span class=\"s2\">\"indirect-cm32p2|wasi:http/types@0.2-[static]response-outparam.set\"</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"2\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"err\">$</span><span class=\"s2\">\"indirect-cm32p2|wasi:http/types@0.2-[method]outgoing-response.body\"</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"3\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"err\">$</span><span class=\"s2\">\"indirect-cm32p2|wasi:http/types@0.2-[method]outgoing-body.write\"</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"$imports\"</span> <span class=\"p\">(</span><span class=\"k\">table</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"err\">$</span><span class=\"s2\">\"indirect-cm32p2|wasi:io/streams@0.2-[method]output-stream.blocking-write-and-flush\"</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">2</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">3</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">call_indirect</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"err\">$</span><span class=\"s2\">\"indirect-cm32p2|wasi:http/types@0.2-[static]response-outparam.set\"</span> <span class=\"cm\">(;1;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i64</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">2</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">3</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">4</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">5</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">6</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">7</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">8</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">call_indirect</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"err\">$</span><span class=\"s2\">\"indirect-cm32p2|wasi:http/types@0.2-[method]outgoing-response.body\"</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">2</span>\n      <span class=\"nb\">call_indirect</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"err\">$</span><span class=\"s2\">\"indirect-cm32p2|wasi:http/types@0.2-[method]outgoing-body.write\"</span> <span class=\"cm\">(;3;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">3</span>\n      <span class=\"nb\">call_indirect</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"k\">module</span> <span class=\"cm\">(;2;)</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;1;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i64</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"\"</span> <span class=\"s2\">\"0\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"\"</span> <span class=\"s2\">\"1\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"cm\">(;1;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">1</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"\"</span> <span class=\"s2\">\"2\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"\"</span> <span class=\"s2\">\"3\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"cm\">(;3;)</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)))</span>\n    <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"\"</span> <span class=\"s2\">\"$imports\"</span> <span class=\"p\">(</span><span class=\"k\">table</span> <span class=\"cm\">(;0;)</span> <span class=\"mf\">4 4</span> <span class=\"k\">funcref</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"k\">elem</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"k\">func</span> <span class=\"mf\">0 1</span> <span class=\"mf\">2 3</span><span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"err\">instance</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"err\">instantiate</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"err\">core</span> <span class=\"k\">export</span> <span class=\"mi\">0</span> <span class=\"s2\">\"0\"</span> <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"k\">func</span> <span class=\"cm\">(;0;)</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"err\">instance</span> <span class=\"cm\">(;1;)</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"[method]output-stream.blocking-write-and-flush\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"err\">core</span> <span class=\"k\">export</span> <span class=\"mi\">0</span> <span class=\"s2\">\"1\"</span> <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"k\">func</span> <span class=\"cm\">(;1;)</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"k\">export</span> <span class=\"mi\">2</span> <span class=\"s2\">\"[constructor]fields\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"cm\">(;0;)</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"k\">func</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"err\">canon</span> <span class=\"err\">lower</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"k\">export</span> <span class=\"mi\">2</span> <span class=\"s2\">\"[constructor]outgoing-response\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"cm\">(;1;)</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"k\">func</span> <span class=\"cm\">(;3;)</span> <span class=\"p\">(</span><span class=\"err\">canon</span> <span class=\"err\">lower</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"mi\">1</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"err\">core</span> <span class=\"k\">export</span> <span class=\"mi\">0</span> <span class=\"s2\">\"2\"</span> <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"k\">func</span> <span class=\"cm\">(;4;)</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"err\">alias</span> <span class=\"err\">core</span> <span class=\"k\">export</span> <span class=\"mi\">0</span> <span class=\"s2\">\"3\"</span> <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"k\">func</span> <span class=\"cm\">(;5;)</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"err\">core</span> <span class=\"err\">instance</span> <span class=\"cm\">(;2;)</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"[static]response-outparam.set\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"[constructor]</span>\n<span class=\"s2\">[message truncated]</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 501276388,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740237908
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10122#issuecomment-2678901666\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10122\">issue #10122</a>:</p>\n<blockquote>\n<p>I think I'm still not quite following. I tried this test in Wasmtime's repository:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">proxy</span><span class=\"p\">::</span><span class=\"n\">exports</span><span class=\"p\">::</span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">http</span><span class=\"p\">::</span><span class=\"n\">incoming_handler</span><span class=\"p\">::</span><span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">handle</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">IncomingRequest</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">outparam</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">ResponseOutparam</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fields</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Fields</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">resp</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">OutgoingResponse</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">);</span>\n\n<span class=\"w\">        </span><span class=\"n\">ResponseOutparam</span><span class=\"p\">::</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">outparam</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">));</span>\n\n<span class=\"w\">        </span><span class=\"fm\">panic!</span><span class=\"p\">(</span><span class=\"s\">\"what\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>and I got:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Serving</span><span class=\"w\"> </span><span class=\"n\">HTTP</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//0.0.0.0:8080/</span>\n<span class=\"n\">stderr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">::</span>\n<span class=\"nc\">stderr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"nc\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">-</span><span class=\"n\">programs</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">cli_serve_panic_after_set</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">18</span><span class=\"p\">:</span><span class=\"mi\">9</span><span class=\"p\">:</span>\n<span class=\"nc\">stderr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"nc\">what</span>\n<span class=\"n\">stderr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"nc\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n<span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">02</span><span class=\"o\">-</span><span class=\"mi\">24</span><span class=\"n\">T15</span><span class=\"p\">:</span><span class=\"mi\">50</span><span class=\"p\">:</span><span class=\"mf\">45.303636</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">wasmtime_cli</span><span class=\"p\">::</span><span class=\"n\">commands</span><span class=\"p\">::</span><span class=\"n\">serve</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xa177</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">cli_serve_panic_after_set</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"n\">a3657b6bedfd56f</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">__rust_start_panic</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xa0c9</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">cli_serve_panic_after_set</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"n\">a3657b6bedfd56f</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">rust_panic</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xa09c</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">cli_serve_panic_after_set</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"n\">a3657b6bedfd56f</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">panicking</span><span class=\"p\">::</span><span class=\"n\">rust_panic_with_hook</span><span class=\"p\">::</span><span class=\"n\">he1beb51ce54153b5</span>\n<span class=\"w\">    </span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x93c6</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">cli_serve_panic_after_set</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"n\">a3657b6bedfd56f</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">panicking</span><span class=\"p\">::</span><span class=\"n\">begin_panic_handler</span><span class=\"p\">::{{</span><span class=\"n\">closure</span><span class=\"p\">}}::</span><span class=\"n\">hdbff82bd9d56f6f9</span>\n<span class=\"w\">    </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x9300</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">cli_serve_panic_after_set</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"n\">a3657b6bedfd56f</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">sys</span><span class=\"p\">::</span><span class=\"n\">backtrace</span><span class=\"p\">::</span><span class=\"n\">__rust_end_short_backtrace</span><span class=\"p\">::</span><span class=\"n\">h5bb26fcae04a79f5</span>\n<span class=\"w\">    </span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x9a30</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">cli_serve_panic_after_set</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"n\">a3657b6bedfd56f</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">rust_begin_unwind</span>\n<span class=\"w\">    </span><span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xe8e8</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">cli_serve_panic_after_set</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"n\">a3657b6bedfd56f</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">panicking</span><span class=\"p\">::</span><span class=\"n\">panic_fmt</span><span class=\"p\">::</span><span class=\"n\">h2781e55e5f70e742</span>\n<span class=\"w\">    </span><span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x1722</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">cli_serve_panic_after_set</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"n\">a3657b6bedfd56f</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!&lt;</span><span class=\"n\">cli_serve_panic_after_set</span><span class=\"p\">::</span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">test_programs</span><span class=\"p\">::</span><span class=\"n\">proxy</span><span class=\"p\">::</span><span class=\"n\">exports</span><span class=\"p\">::</span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">http</span><span class=\"p\">::</span><span class=\"n\">incoming_handler</span><span class=\"p\">::</span><span class=\"n\">Guest</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"n\">handle</span><span class=\"p\">::</span><span class=\"n\">h92d89fc0d302a262</span>\n<span class=\"w\">    </span><span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x15ce</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">cli_serve_panic_after_set</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"n\">a3657b6bedfd56f</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">test_programs</span><span class=\"p\">::</span><span class=\"n\">proxy</span><span class=\"p\">::</span><span class=\"n\">exports</span><span class=\"p\">::</span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">http</span><span class=\"p\">::</span><span class=\"n\">incoming_handler</span><span class=\"p\">::</span><span class=\"n\">_export_handle_cabi</span><span class=\"p\">::</span><span class=\"n\">hb366510da1a4a724</span>\n<span class=\"w\">    </span><span class=\"mi\">9</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x175f</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">cli_serve_panic_after_set</span><span class=\"o\">-</span><span class=\"mi\">0</span><span class=\"n\">a3657b6bedfd56f</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">http</span><span class=\"o\">/</span><span class=\"n\">incoming</span><span class=\"o\">-</span><span class=\"n\">handler</span><span class=\"o\">@</span><span class=\"mf\">0.2.3</span><span class=\"p\">#</span><span class=\"n\">handle</span>\n<span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">WASMTIME_BACKTRACE_DETAILS</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">show</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">debugging</span><span class=\"w\"> </span><span class=\"n\">information</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">unreachable</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">executed</span>\n</code></pre></div>\n<p>where both the <code>stderr</code> of the guest itself (the Rust-printed panic) as well as the trap (via <code>ERROR</code>) is printed by default.  I think the <code>ERROR</code> can theoretically be suppressed with a different <code>WASMTIME_LOG=...</code> so we should perhaps fix that, but it's printed by default.</p>\n<blockquote>\n<p>Here a proxy component to try at home. It traps after calling set (line 117). To see the difference of trapping before, uncomment ;; unreachable on line 91.</p>\n</blockquote>\n<p>Could you clarify the expected behavior here? As-is I see the program prints that it traps and additionally returns the body, which is what I'd expect. If I uncomment the <code>unreachable</code> then I get nothing from <code>curl</code> (what I'd expect) and the console shows both the trap message and the message about not calling <code>response-outparam::set</code></p>\n</blockquote>",
        "id": 501580196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740412456
    },
    {
        "content": "<p>primoly <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10122#issuecomment-2679298919\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10122\">issue #10122</a>:</p>\n<blockquote>\n<p>In the trap before <code>set</code> case, you see the trap of the component reported twice:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Serving</span><span class=\"w\"> </span><span class=\"n\">HTTP</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//0.0.0.0:8080/</span>\n<span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">02</span><span class=\"o\">-</span><span class=\"mi\">24</span><span class=\"n\">T18</span><span class=\"p\">:</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mf\">00.873347</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">wasmtime_cli</span><span class=\"p\">::</span><span class=\"n\">commands</span><span class=\"p\">::</span><span class=\"n\">serve</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"nc\">Error</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">context</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"error while executing at wasm backtrace:</span><span class=\"se\">\\n</span><span class=\"s\">    0:  0x975 - &lt;unknown&gt;!&lt;wasm function 6&gt;\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">source</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">UnreachableCodeReached</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">hyper</span><span class=\"p\">::</span><span class=\"n\">Error</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">(</span><span class=\"n\">Service</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">guest</span><span class=\"w\"> </span><span class=\"n\">never</span><span class=\"w\"> </span><span class=\"n\">invoked</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">response</span><span class=\"o\">-</span><span class=\"n\">outparam</span><span class=\"p\">::</span><span class=\"n\">set</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">method</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"mh\">0x975</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">unreachable</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">executed</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>The first is the <code>ERROR …</code>, which is triggered by</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/3fb6dc72da1ae0237848beb3ed7619771cc705d4/src/commands/serve.rs#L518\">https://github.com/bytecodealliance/wasmtime/blob/3fb6dc72da1ae0237848beb3ed7619771cc705d4/src/commands/serve.rs#L518</a></p>\n<p>while the second, <code>error: …</code> is caused by</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/3fb6dc72da1ae0237848beb3ed7619771cc705d4/src/commands/serve.rs#L540\">https://github.com/bytecodealliance/wasmtime/blob/3fb6dc72da1ae0237848beb3ed7619771cc705d4/src/commands/serve.rs#L540</a></p>\n<p>which reports both the error in <code>hyper</code> as well as the underlying <code>unreachable</code> in the component (<code>Caused by: …</code>).</p>\n<p>When trapping after calling <code>set</code>, you get this output instead:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Serving</span><span class=\"w\"> </span><span class=\"n\">HTTP</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//0.0.0.0:8080/</span>\n<span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">02</span><span class=\"o\">-</span><span class=\"mi\">24</span><span class=\"n\">T18</span><span class=\"p\">:</span><span class=\"mi\">13</span><span class=\"p\">:</span><span class=\"mf\">53.563983</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">wasmtime_cli</span><span class=\"p\">::</span><span class=\"n\">commands</span><span class=\"p\">::</span><span class=\"n\">serve</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"nc\">Error</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">context</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"error while executing at wasm backtrace:</span><span class=\"se\">\\n</span><span class=\"s\">    0:  0x9ae - &lt;unknown&gt;!&lt;wasm function 6&gt;\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">source</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">UnreachableCodeReached</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Notice how the trap is reported just once, this time only by <code>log::error</code>.</p>\n<p>And to get back to @tschneidereit’s original issue, you can use <code>WASMTIME_LOG</code> to enable or suppress that log, while the error is printed regardless.<br>\n</p>\n</blockquote>",
        "id": 501617718,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740421272
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10122#issuecomment-2679690106\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10122\">issue #10122</a>:</p>\n<blockquote>\n<p>That all makes sense to me yeah and matches what I'm seeing, but I feel like I'm still missing the connection from what's here to what the desired state of things is.</p>\n<p>For example I don't think it's great that the trap is sometimes reported twice and sometimes once, but that seems like an orthogonal issue from @tschneidereit's issue which is about panics and stderr. In all cases so far stderr has never been swallowed and it's always been emitted.</p>\n<p>I also think it's not great that you could set <code>WASMTIME_LOG=off</code> and have these traps entirely hidden, but that again seems orthogonal from the original issue.</p>\n<p>@primoly are you perhaps saying that the trap should be reported once, and only once, and it shouldn't use <code>log::error!</code> and should instead us something like <code>eprintln!</code>?</p>\n</blockquote>",
        "id": 501651831,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740432497
    }
]