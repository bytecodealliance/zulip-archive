[
    {
        "content": "<p>rahulchaphalkar opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316\">PR #10316</a> from <code>rahulchaphalkar:sse-alu-instructions</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Implement the following SSE instructions:</p>\n<ul>\n<li><code>xorpd</code></li>\n<li><code>xorps</code></li>\n<li><code>andpd</code></li>\n<li><code>andps</code></li>\n<li><code>addpd</code></li>\n<li><code>addps</code></li>\n<li><code>subpd</code></li>\n<li><code>subps</code></li>\n<li><code>orps</code></li>\n</ul>\n<p>The opcode for <code>*ps</code> variants of these instructions is <code>NP 0F xx</code>. NP has the following explanation in manual:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">NP</span><span class=\"w\"> </span><span class=\"err\">â€”</span><span class=\"w\"> </span><span class=\"n\">Indicates</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"mi\">66</span><span class=\"o\">/</span><span class=\"n\">F2</span><span class=\"o\">/</span><span class=\"n\">F3</span><span class=\"w\"> </span><span class=\"n\">prefixes</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">beyond</span><span class=\"w\"> </span><span class=\"n\">those</span><span class=\"w\"> </span><span class=\"n\">already</span><span class=\"w\"> </span><span class=\"n\">part</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">instructions</span><span class=\"w\"> </span><span class=\"n\">opcode</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">not</span>\n<span class=\"n\">allowed</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">instruction</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">Such</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">will</span><span class=\"w\"> </span><span class=\"n\">either</span><span class=\"w\"> </span><span class=\"n\">cause</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">invalid</span><span class=\"o\">-</span><span class=\"n\">opcode</span><span class=\"w\"> </span><span class=\"n\">exception</span><span class=\"w\"> </span><span class=\"p\">(#</span><span class=\"n\">UD</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span>\n<span class=\"n\">encoding</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">different</span><span class=\"w\"> </span><span class=\"n\">instruction</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>There is an existing <code>NoPrefix</code> prefix, but I have not reused that to serve above <code>NP</code> as there might be some difference in the intended meaning. Also, <code>NP</code> doesn't classify as a prefix technically. I am thinking to address this in a later patch which would deal with prefix parsing. Any thoughts or feedback on this is welcome. <br>\nMy thinking is <code>NP</code> doesn't functionally do anything, so it is fine to ignore it. We just need a way for <code>validate</code> function to check this.</p>\n</blockquote>",
        "id": 502780489,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740858370
    },
    {
        "content": "<p><strong>rahulchaphalkar</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316\">PR #10316</a>.</p>",
        "id": 502780492,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740858370
    },
    {
        "content": "<p><strong>rahulchaphalkar</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316\">PR #10316</a>.</p>",
        "id": 502780493,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740858370
    },
    {
        "content": "<p>rahulchaphalkar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316\">PR #10316</a>.</p>",
        "id": 502822399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740891846
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316\">PR #10316</a>.</p>",
        "id": 503106822,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741030100
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316#pullrequestreview-2662294464\">PR review</a>:</p>\n<blockquote>\n<p>Had a couple of code movement comments but overall this all makes sense to me. Thanks!</p>\n</blockquote>",
        "id": 503616476,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741203545
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316#discussion_r1982072863\">PR review comment</a>:</p>\n<blockquote>\n<p>Let's remove the old emission. In a recent PR I began removing these for scalar instructions. It ensures that our <code>is_xmm_mem</code> is operating as expected.</p>\n</blockquote>",
        "id": 503616478,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741203545
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316#discussion_r1982080034\">PR review comment</a>:</p>\n<blockquote>\n<p>Some minor nits about organizing these new instructions:</p>\n<ul>\n<li>let's put them at the bottom of the file with their own comment header, e.g., <code>// SSE vector addition.</code> or the like</li>\n<li>can we order them from smallest to largest? I.e., packed single-precision (<code>ps = f32x4</code>) first and then packed double-precision (<code>pd = f64x2</code>).</li>\n</ul>\n</blockquote>",
        "id": 503616479,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741203545
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316#discussion_r1982074818\">PR review comment</a>:</p>\n<blockquote>\n<p>And on that note, I believe that the ISLE we generate already has the signature <code>(... (Xmm XmmMem) Xmm)</code> which is what we need here. We can drop the <code>is_xmm_mem</code> extractor for these instructions.</p>\n</blockquote>",
        "id": 503616480,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741203545
    },
    {
        "content": "<p>rahulchaphalkar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316\">PR #10316</a>.</p>",
        "id": 503876883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741290313
    },
    {
        "content": "<p>rahulchaphalkar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316#pullrequestreview-2665473069\">PR review</a>.</p>",
        "id": 503877827,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741290653
    },
    {
        "content": "<p>rahulchaphalkar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316#discussion_r1983964987\">PR review comment</a>:</p>\n<blockquote>\n<p>Done</p>\n</blockquote>",
        "id": 503877830,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741290653
    },
    {
        "content": "<p>rahulchaphalkar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316#pullrequestreview-2665473382\">PR review</a>.</p>",
        "id": 503877849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741290663
    },
    {
        "content": "<p>rahulchaphalkar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316#discussion_r1983965157\">PR review comment</a>:</p>\n<blockquote>\n<p>Done</p>\n</blockquote>",
        "id": 503877850,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741290663
    },
    {
        "content": "<p>rahulchaphalkar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316#pullrequestreview-2665473619\">PR review</a>.</p>",
        "id": 503877873,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741290671
    },
    {
        "content": "<p>rahulchaphalkar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316#discussion_r1983965294\">PR review comment</a>:</p>\n<blockquote>\n<p>Done</p>\n</blockquote>",
        "id": 503877875,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741290671
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316#pullrequestreview-2665593297\">PR review</a>.</p>",
        "id": 503887480,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741294127
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10316\">PR #10316</a>.</p>",
        "id": 503891169,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741295502
    }
]