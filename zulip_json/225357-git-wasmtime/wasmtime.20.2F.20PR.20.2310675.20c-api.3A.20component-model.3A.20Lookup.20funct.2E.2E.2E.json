[
    {
        "content": "<p>MangoPeachGrape opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675\">PR #10675</a> from <code>MangoPeachGrape:c-api/component-model/get-func</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Only <code>get_func()</code> as of now, should <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9812#discussion_r1884473950\">https://github.com/bytecodealliance/wasmtime/pull/9812#discussion_r1884473950</a> come in a later PR?</p>\n<p>One thing of note, if name isn't UTF-8, it returns false instead of returning an error, is that fine?</p>\n</blockquote>",
        "id": 514452368,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745611201
    },
    {
        "content": "<p><strong>MangoPeachGrape</strong> requested <a href=\"https://github.com/dicej\">dicej</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675\">PR #10675</a>.</p>",
        "id": 514452369,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745611201
    },
    {
        "content": "<p><strong>MangoPeachGrape</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675\">PR #10675</a>.</p>",
        "id": 514452371,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745611202
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675\">PR #10675</a>.</p>",
        "id": 514459638,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745613900
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675#issuecomment-2831409890\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675\">PR #10675</a>:</p>\n<blockquote>\n<p>Thanks! This has triggered some further thoughts which are both preexisting and related to this PR as well:</p>\n<ul>\n<li>For names I realize now we shouldn't use <code>const char*</code>, but instead we should be using <code>wasm_name_t*</code>. Unicode can't be represented as <code>const char*</code> due to the lack of ability to support interior nul characters, so we'll want to change this and other APIs to use <code>wasm_name_t</code> instead.</li>\n<li>For this I think we'll want to base lookup of an item on an <code>ComponentExportIndex</code> instead of a string, although a string can be used to acquire an <code>ComponentExportIndex</code>. Effectively I think we should bind <code>{Instance,Component}::get_export_index</code> and then an export index is used to lookup a function. That'll handle nested instances as well as top-level exports in the same manner.</li>\n</ul>\n</blockquote>",
        "id": 514460578,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745614318
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675#issuecomment-2831411972\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675\">PR #10675</a>:</p>\n<blockquote>\n<p>Er, sent too soon:</p>\n<blockquote>\n<p>One thing of note, if name isn't UTF-8, it returns false instead of returning an error, is that fine?</p>\n</blockquote>\n<p>Yeah sounds good!</p>\n<hr>\n<p>One other slightly orthogonal thing, I think it'd be nice to help clean up the C tests a bit. If you'd like I think it'd be reasonable to export the C API implementation  pointer from C++ structures, that way you could sort of intermix C++ and C where the C++ APIs could be used to handle auto-destruction and such. That might also make it easier to bind optional errors and assert that errors don't happen. Otherwise could the <code>CHECK</code> macro be deduplicated in a header instead of duplicated between files?</p>\n</blockquote>",
        "id": 514460781,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745614403
    },
    {
        "content": "<p>MangoPeachGrape updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675\">PR #10675</a>.</p>",
        "id": 514651215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745764117
    },
    {
        "content": "<p>MangoPeachGrape updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675\">PR #10675</a>.</p>",
        "id": 514651644,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745764418
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675#pullrequestreview-2799598303\">PR review</a>.</p>",
        "id": 514835888,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745852075
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675#discussion_r2063839163\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this function return the nullable pointer directly perhaps?</p>\n</blockquote>",
        "id": 514835889,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745852075
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675#discussion_r2063844984\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh for this I think we'll want to have this be <code>const wasm_name_t*</code> in C and not take ownership here.</p>\n<p>Also I apologize again for yet more whiplash... Looking at <code>wasmtime_linker_t</code> it looks like the functions there idiomatically take a pointer/length instead of <code>&amp;wasm_name_t</code> (e.g. <a href=\"https://github.com/bytecodealliance/wasmtime/blob/5614b80b58d946a9a5270b1c56934fec99f097d9/crates/c-api/src/linker.rs#L51-L66\"><code>wasmtime_linker_define</code></a>). I had forgotten about that where <code>wasm_name_t</code> I think is mostly used for return values as opposed to arguments. In light of that could the idioms of the component linker be similar where a pointer/length is given? (sorry I should have checked this earlier)</p>\n</blockquote>",
        "id": 514835890,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745852075
    },
    {
        "content": "<p>MangoPeachGrape updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675\">PR #10675</a>.</p>",
        "id": 514867662,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745861092
    },
    {
        "content": "<p>MangoPeachGrape updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675\">PR #10675</a>.</p>",
        "id": 514867868,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745861154
    },
    {
        "content": "<p>MangoPeachGrape updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675\">PR #10675</a>.</p>",
        "id": 514870019,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745861923
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675#pullrequestreview-2800398055\">PR review</a>.</p>",
        "id": 514884029,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745866668
    },
    {
        "content": "<p>MangoPeachGrape updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675\">PR #10675</a>.</p>",
        "id": 514885585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745867182
    },
    {
        "content": "<p>MangoPeachGrape <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675#issuecomment-2836248545\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675\">PR #10675</a>:</p>\n<blockquote>\n<p>Next up values, which are required for function invocation?</p>\n</blockquote>",
        "id": 514886695,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745867580
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675\">PR #10675</a>.</p>",
        "id": 514887920,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745868042
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675#issuecomment-2836275348\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675\">PR #10675</a>:</p>\n<blockquote>\n<p>Yeah that seems reasonable. I'll be honest though in that I don't really know how to do values. Everything I've thought of historically is either extremely chatty over the C API boundary or extremely allocation-heavy, neither of which I feel is great... If you've got ideas though please dive in!</p>\n</blockquote>",
        "id": 514888044,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745868105
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10675\">PR #10675</a>.</p>",
        "id": 514891721,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745869502
    }
]