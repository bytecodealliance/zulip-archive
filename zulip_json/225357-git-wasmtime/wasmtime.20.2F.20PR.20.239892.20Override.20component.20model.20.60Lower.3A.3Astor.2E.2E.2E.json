[
    {
        "content": "<p>kaivol opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892\">PR #9892</a> from <code>kaivol:optimize-component-model-fp-performance</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Added overrides for <code>Lower::store_list</code> and <code>Lift::load_list</code> for floating point numbers to reduce overhead when passing or returning <code>list&lt;f32&gt;</code> and <code>list&lt;f64&gt;</code> to/from components. </p>\n<p>I based this on the respective implementation for integers. </p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 490429469,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734912164
    },
    {
        "content": "<p>dicej assigned dicej to <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892\">PR #9892</a>.</p>",
        "id": 491638965,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735837569
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892#pullrequestreview-2527952733\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for this!  Looks reasonable to me overall; see my comments inline regarding the details.</p>\n</blockquote>",
        "id": 491642394,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735839235
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892#discussion_r1901103838\">PR review comment</a>:</p>\n<blockquote>\n<p>Again, these comments should be updated to discuss floating point types rather than integer types.</p>\n</blockquote>",
        "id": 491642395,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735839236
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892#discussion_r1901102689\">PR review comment</a>:</p>\n<blockquote>\n<p>This paragraph (and the code that follows) refers to <code>$integer</code>, but we really care about <code>$float</code>, right?  We should rewrite this to talk about floating point numbers instead of integers, e.g. \"all <code>u8</code> patterns are valid <code>$float</code> patterns since <code>$float</code> is a IEEE 754 floating point type.\"</p>\n</blockquote>",
        "id": 491642396,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735839236
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892#discussion_r1901105235\">PR review comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                let (before, middle, end) = unsafe { dst.align_to_mut::&lt;$float&gt;() };\n</code></pre></div>\n<p>Presumably the alignment of e.g. <code>f32</code> and <code>u32</code> should be the same, but we might as well be precise here (and in similar code below).</p>\n</blockquote>",
        "id": 491642397,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735839236
    },
    {
        "content": "<p>kaivol <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892#issuecomment-2585935152\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892\">PR #9892</a>:</p>\n<blockquote>\n<p>Thanks for the review!<br>\nI'm a bit busy at the moment but I'll look into it when i find some time.</p>\n</blockquote>",
        "id": 493226182,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736719643
    },
    {
        "content": "<p>kaivol submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892#pullrequestreview-2717195342\">PR review</a>.</p>",
        "id": 508276895,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742995991
    },
    {
        "content": "<p>kaivol created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892#discussion_r2014156651\">PR review comment</a>:</p>\n<blockquote>\n<p>The reason I used integer types and <code>align_to[_mut]::&lt;$integer&gt;</code> was to handle endianness correctly.<br>\nI felt like using <code>align_to[_mut]::&lt;$float&gt;</code> and thereby transmuting the component's memory to <code>$float</code> is incorrect, because (in my understanding) <code>$float</code> represents floating point numbers in native endianness, while <code>dst</code> is a slice of floating point numbers with little-endian byte-order. </p>\n<p>Therefore, I thought using <code>$float</code> for floating point numbers with different endianess would also cause confusion, in particular when converting endianess. </p>\n<p>I also considered using only accordingly aligned bytes (e.g. <code>[u8; 4]</code>) for the memory of the component, but I was unsure if that would enable the same optimizations. <br>\nIs there any easy (built-in) way to benchmark Wasmtime in specific scenarios?</p>\n<p>Let me know what you think.</p>\n</blockquote>",
        "id": 508276897,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742995992
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892#pullrequestreview-2717231864\">PR review</a>.</p>",
        "id": 508279927,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742996597
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892#discussion_r2014177134\">PR review comment</a>:</p>\n<blockquote>\n<p>Good point; I hadn't considered what <code>align_to_mut</code> was actually doing.  I agree we should leave it as you have it.</p>\n<blockquote>\n<p>Is there any easy (built-in) way to benchmark Wasmtime in specific scenarios?</p>\n</blockquote>\n<p>You can look under the <code>benches</code> directory in this repo to see if the scenario you're interested in is already covered; if not, you'd need to add a new benchmark to that suite.</p>\n</blockquote>",
        "id": 508279928,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742996597
    },
    {
        "content": "<p>kaivol updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892\">PR #9892</a> (assigned to dicej).</p>",
        "id": 508531229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743085146
    },
    {
        "content": "<p>kaivol updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892\">PR #9892</a> (assigned to dicej).</p>",
        "id": 508531349,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743085172
    },
    {
        "content": "<p>kaivol <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892#issuecomment-2758288452\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892\">PR #9892</a>:</p>\n<blockquote>\n<p>I modified the code to work with byte slices (<code>[u8]</code>) when referring to the component's memory. I think this is the best way to show which variables are host and which are component memory. </p>\n<p>I also got rid of the <code>unsafe</code> blocks, without compromising on performance (at least in my experiments).</p>\n<p>Let me know if the code looks good, and if further comments would help clarify it. <br>\n</p>\n</blockquote>",
        "id": 508535566,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743086078
    },
    {
        "content": "<p><strong>kaivol</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892\">PR #9892</a> as ready for review.</p>",
        "id": 508535585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743086084
    },
    {
        "content": "<p><strong>kaivol</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892\">PR #9892</a>.</p>",
        "id": 508535588,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743086085
    },
    {
        "content": "<p><strong>kaivol</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892\">PR #9892</a>.</p>",
        "id": 508535590,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743086085
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892#pullrequestreview-2722636273\">PR review</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 508570862,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743094059
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892#pullrequestreview-2722677374\">PR review</a>.</p>",
        "id": 508573031,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743094596
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892#discussion_r2017152440\">PR review comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>use core::iter;\n</code></pre></div>\n<p>That should fix <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/14112166505/job/39533533593\">https://github.com/bytecodealliance/wasmtime/actions/runs/14112166505/job/39533533593</a></p>\n</blockquote>",
        "id": 508573037,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743094597
    },
    {
        "content": "<p>kaivol updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892\">PR #9892</a> (assigned to dicej).</p>",
        "id": 508621049,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743110870
    },
    {
        "content": "<p>dicej <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892#issuecomment-2759529736\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892\">PR #9892</a>:</p>\n<blockquote>\n<p>One last thing to make CI happy (I hope): please run <code>cargo fmt</code> and push the result.</p>\n</blockquote>",
        "id": 508622683,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743111444
    },
    {
        "content": "<p>kaivol updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892\">PR #9892</a> (assigned to dicej).</p>",
        "id": 508623080,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743111602
    },
    {
        "content": "<p>dicej merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9892\">PR #9892</a>.</p>",
        "id": 508631713,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743115558
    }
]