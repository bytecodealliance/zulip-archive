[
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the cranelift:area:aarch64 label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10373\">Issue #10373</a>.</p>",
        "id": 504936154,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741721794
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the fuzz-bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10373\">Issue #10373</a>.</p>",
        "id": 504936156,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741721794
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10373\">issue #10373</a>:</p>\n<blockquote>\n<p>Given this input:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (memory (;5;) i64 8104456 13264701562210869 (pagesize 0x1))\n  (func (param i64) (result i64)\n    (i64.load16_s offset=5909452\n      (i64.shl\n        local.get 0\n        (i64.const -3038287259199220438)))))\n</code></pre></div>\n<p>This fails with:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"o\">-</span><span class=\"n\">arch</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">bar</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"n\">cache</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wcustom</span><span class=\"o\">-</span><span class=\"n\">page</span><span class=\"o\">-</span><span class=\"n\">sizes</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">emit</span><span class=\"o\">-</span><span class=\"n\">clif</span><span class=\"w\"> </span><span class=\"n\">clif</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">O</span><span class=\"w\"> </span><span class=\"n\">signals</span><span class=\"o\">-</span><span class=\"n\">based</span><span class=\"o\">-</span><span class=\"n\">traps</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">O</span><span class=\"w\"> </span><span class=\"n\">opt</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">/</span><span class=\"n\">lower</span><span class=\"o\">/</span><span class=\"n\">isle</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">76</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">:</span>\n<span class=\"nc\">attempt</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">shift</span><span class=\"w\"> </span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">overflow</span>\n<span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n</code></pre></div>\n<p>The buggy shifts are <code>u64_shl</code> <a href=\"https://github.com/bytecodealliance/wasmtime/blob/696726f2097240a9ad07ab1a583eff6964e63c54/cranelift/codegen/src/isa/aarch64/inst.isle#L3886-L3891\">here</a> where we need to mask <code>n</code> as here it's much different than the max of 63.</p>\n<p>The various wasm features/proposal/flags/etc are just necessary to trigger the right pattern, and the CLIF that reproduces this is much simpler:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">):</span>\n<span class=\"w\">  </span><span class=\"nc\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ishl_imm</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">100</span>\n<span class=\"w\">  </span><span class=\"n\">v9</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v8</span>\n<span class=\"w\">  </span><span class=\"n\">v10</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v9</span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v10</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>that panics with the same assertion failure.</p>\n</blockquote>",
        "id": 504936161,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741721795
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10373\">issue #10373</a>:</p>\n<blockquote>\n<p>Given this input:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (memory (;5;) i64 8104456 13264701562210869 (pagesize 0x1))\n  (func (param i64) (result i64)\n    (i64.load16_s offset=5909452\n      (i64.shl\n        local.get 0\n        (i64.const -3038287259199220438)))))\n</code></pre></div>\n<p>This fails with:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"o\">-</span><span class=\"n\">arch</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">bar</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"n\">cache</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wcustom</span><span class=\"o\">-</span><span class=\"n\">page</span><span class=\"o\">-</span><span class=\"n\">sizes</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">emit</span><span class=\"o\">-</span><span class=\"n\">clif</span><span class=\"w\"> </span><span class=\"n\">clif</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">O</span><span class=\"w\"> </span><span class=\"n\">signals</span><span class=\"o\">-</span><span class=\"n\">based</span><span class=\"o\">-</span><span class=\"n\">traps</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">O</span><span class=\"w\"> </span><span class=\"n\">opt</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">/</span><span class=\"n\">lower</span><span class=\"o\">/</span><span class=\"n\">isle</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">76</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">:</span>\n<span class=\"nc\">attempt</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">shift</span><span class=\"w\"> </span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">overflow</span>\n<span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n</code></pre></div>\n<p>The buggy shifts are <code>u64_shl</code> <a href=\"https://github.com/bytecodealliance/wasmtime/blob/696726f2097240a9ad07ab1a583eff6964e63c54/cranelift/codegen/src/isa/aarch64/inst.isle#L3886-L3891\">here</a> where we need to mask <code>n</code> as here it's much different than the max of 63.</p>\n<p>The various wasm features/proposal/flags/etc are just necessary to trigger the right pattern, and the CLIF that reproduces this is much simpler:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">):</span>\n<span class=\"w\">  </span><span class=\"nc\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ishl_imm</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">100</span>\n<span class=\"w\">  </span><span class=\"n\">v9</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v8</span>\n<span class=\"w\">  </span><span class=\"n\">v10</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v9</span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v10</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>that panics with the same assertion failure.</p>\n</blockquote>",
        "id": 505172939,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741794142
    }
]