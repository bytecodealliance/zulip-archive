[
    {
        "content": "<p><a href=\"https://github.com/bjorn3\">bjorn3</a> added the cranelift label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10585\">Issue #10585</a>.</p>",
        "id": 512346356,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744729629
    },
    {
        "content": "<p><a href=\"https://github.com/bjorn3\">bjorn3</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10585\">Issue #10585</a>.</p>",
        "id": 512346357,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744729629
    },
    {
        "content": "<p>bjorn3 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10585\">issue #10585</a>:</p>\n<blockquote>\n<p>Thanks for filing an issue! Please fill out the TODOs below.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">compile</span>\n<span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">regalloc_checker</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"nc\">tail</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"nc\">tail</span>\n<span class=\"w\">    </span><span class=\"n\">fn0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">u0</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">sig0</span>\n\n<span class=\"n\">block0</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">try_call</span><span class=\"w\"> </span><span class=\"n\">fn0</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">sig0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">(</span><span class=\"n\">ret0</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n\n<span class=\"n\">block1</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li><code>cargo run -- test crash.clif</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>Compiles</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">cranelift_codegen</span><span class=\"p\">::</span><span class=\"n\">machinst</span><span class=\"p\">::</span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Register</span><span class=\"w\"> </span><span class=\"n\">allocation</span><span class=\"w\"> </span><span class=\"n\">checker</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"p\">:</span>\n<span class=\"nc\">CheckerErrors</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">UnknownValueInAllocation</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">inst</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Inst</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">op</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Use</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">v195i</span><span class=\"w\"> </span><span class=\"n\">fixed</span><span class=\"p\">(</span><span class=\"n\">p0i</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">p0i</span><span class=\"w\"> </span><span class=\"p\">}]</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">vcode</span><span class=\"p\">:</span>\n<span class=\"nc\">VCode</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">Entry</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"n\">Block</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">([]):</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">original</span><span class=\"w\"> </span><span class=\"n\">IR</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">block0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">successor</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Block</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">([</span><span class=\"n\">VReg</span><span class=\"p\">(</span><span class=\"n\">vreg</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">196</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">class</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Int</span><span class=\"p\">)]))</span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">load_ext_name</span><span class=\"w\"> </span><span class=\"n\">userextname0</span><span class=\"o\">+</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v197</span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">call</span><span class=\"w\">    </span><span class=\"o\">*%</span><span class=\"n\">v197</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">jmp</span><span class=\"w\"> </span><span class=\"n\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"n\">catch</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n<span class=\"n\">Block</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">([</span><span class=\"n\">VReg</span><span class=\"p\">(</span><span class=\"n\">vreg</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">195</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">class</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Int</span><span class=\"p\">)]):</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">original</span><span class=\"w\"> </span><span class=\"n\">IR</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">block1</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">rets</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v195</span><span class=\"o\">=%</span><span class=\"n\">rax</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: d69ef83e813c9d49ae98796480a6c829d5fdc5bf (current main)</p>\n<p>Operating system: N/A</p>\n<p>Architecture: x86_64 and arm64<br>\n</p>\n</blockquote>",
        "id": 512346363,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744729630
    },
    {
        "content": "<p>bjorn3 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10585\">issue #10585</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">compile</span>\n<span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">regalloc_checker</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"nc\">tail</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"nc\">tail</span>\n<span class=\"w\">    </span><span class=\"n\">fn0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">u0</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">sig0</span>\n\n<span class=\"n\">block0</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">try_call</span><span class=\"w\"> </span><span class=\"n\">fn0</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">sig0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">(</span><span class=\"n\">ret0</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n\n<span class=\"n\">block1</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li><code>cargo run -- test crash.clif</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>Compiles</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">cranelift_codegen</span><span class=\"p\">::</span><span class=\"n\">machinst</span><span class=\"p\">::</span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Register</span><span class=\"w\"> </span><span class=\"n\">allocation</span><span class=\"w\"> </span><span class=\"n\">checker</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"p\">:</span>\n<span class=\"nc\">CheckerErrors</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">UnknownValueInAllocation</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">inst</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Inst</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">op</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Use</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">v195i</span><span class=\"w\"> </span><span class=\"n\">fixed</span><span class=\"p\">(</span><span class=\"n\">p0i</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">p0i</span><span class=\"w\"> </span><span class=\"p\">}]</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">vcode</span><span class=\"p\">:</span>\n<span class=\"nc\">VCode</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">Entry</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"n\">Block</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">([]):</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">original</span><span class=\"w\"> </span><span class=\"n\">IR</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">block0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">successor</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Block</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">([</span><span class=\"n\">VReg</span><span class=\"p\">(</span><span class=\"n\">vreg</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">196</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">class</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Int</span><span class=\"p\">)]))</span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">load_ext_name</span><span class=\"w\"> </span><span class=\"n\">userextname0</span><span class=\"o\">+</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v197</span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">call</span><span class=\"w\">    </span><span class=\"o\">*%</span><span class=\"n\">v197</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">jmp</span><span class=\"w\"> </span><span class=\"n\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"n\">catch</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n<span class=\"n\">Block</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">([</span><span class=\"n\">VReg</span><span class=\"p\">(</span><span class=\"n\">vreg</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">195</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">class</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Int</span><span class=\"p\">)]):</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">original</span><span class=\"w\"> </span><span class=\"n\">IR</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">block1</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">rets</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v195</span><span class=\"o\">=%</span><span class=\"n\">rax</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: d69ef83e813c9d49ae98796480a6c829d5fdc5bf (current main)</p>\n<p>Operating system: N/A</p>\n<p>Architecture: x86_64 and arm64<br>\n</p>\n</blockquote>",
        "id": 512346414,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744729642
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10585#issuecomment-2806482034\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10585\">issue #10585</a>:</p>\n<blockquote>\n<p>Taking a look!</p>\n</blockquote>",
        "id": 512356735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744732137
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10585#issuecomment-2806836375\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10585\">issue #10585</a>:</p>\n<blockquote>\n<p>Addressed by <a href=\"https://github.com/bytecodealliance/regalloc/issues/224\">bytecodealliance/regalloc#224</a> (and then a release and an update here). The checker basically wasn't considering uses/defs/clobbers on branches but try-calls make this newly relevant. Thanks for the report!</p>\n</blockquote>",
        "id": 512369668,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744735716
    },
    {
        "content": "<p>cfallin edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10585#issuecomment-2806836375\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10585\">issue #10585</a>:</p>\n<blockquote>\n<p>Addressed by <a href=\"https://github.com/bytecodealliance/regalloc2/issues/224\">bytecodealliance/regalloc2#224</a> (and then a release and an update here). The checker basically wasn't considering uses/defs/clobbers on branches but try-calls make this newly relevant. Thanks for the report!</p>\n</blockquote>",
        "id": 512369695,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744735724
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10585\">issue #10585</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">compile</span>\n<span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">regalloc_checker</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"nc\">tail</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"nc\">tail</span>\n<span class=\"w\">    </span><span class=\"n\">fn0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">u0</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">sig0</span>\n\n<span class=\"n\">block0</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">try_call</span><span class=\"w\"> </span><span class=\"n\">fn0</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">sig0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">(</span><span class=\"n\">ret0</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n\n<span class=\"n\">block1</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li><code>cargo run -- test crash.clif</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>Compiles</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">cranelift_codegen</span><span class=\"p\">::</span><span class=\"n\">machinst</span><span class=\"p\">::</span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Register</span><span class=\"w\"> </span><span class=\"n\">allocation</span><span class=\"w\"> </span><span class=\"n\">checker</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"p\">:</span>\n<span class=\"nc\">CheckerErrors</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">UnknownValueInAllocation</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">inst</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Inst</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">op</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Use</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">v195i</span><span class=\"w\"> </span><span class=\"n\">fixed</span><span class=\"p\">(</span><span class=\"n\">p0i</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">p0i</span><span class=\"w\"> </span><span class=\"p\">}]</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">vcode</span><span class=\"p\">:</span>\n<span class=\"nc\">VCode</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">Entry</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"n\">Block</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">([]):</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">original</span><span class=\"w\"> </span><span class=\"n\">IR</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">block0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">successor</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Block</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">([</span><span class=\"n\">VReg</span><span class=\"p\">(</span><span class=\"n\">vreg</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">196</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">class</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Int</span><span class=\"p\">)]))</span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">load_ext_name</span><span class=\"w\"> </span><span class=\"n\">userextname0</span><span class=\"o\">+</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v197</span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">call</span><span class=\"w\">    </span><span class=\"o\">*%</span><span class=\"n\">v197</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">jmp</span><span class=\"w\"> </span><span class=\"n\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"n\">catch</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n<span class=\"n\">Block</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">([</span><span class=\"n\">VReg</span><span class=\"p\">(</span><span class=\"n\">vreg</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">195</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">class</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Int</span><span class=\"p\">)]):</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">original</span><span class=\"w\"> </span><span class=\"n\">IR</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">block1</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">rets</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v195</span><span class=\"o\">=%</span><span class=\"n\">rax</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: d69ef83e813c9d49ae98796480a6c829d5fdc5bf (current main)</p>\n<p>Operating system: N/A</p>\n<p>Architecture: x86_64 and arm64<br>\n</p>\n</blockquote>",
        "id": 512414450,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744751586
    }
]