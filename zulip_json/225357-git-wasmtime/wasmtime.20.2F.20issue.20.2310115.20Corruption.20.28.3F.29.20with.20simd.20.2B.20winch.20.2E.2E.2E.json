[
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the fuzz-bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10115\">Issue #10115</a>.</p>",
        "id": 495916455,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737850140
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasm-proposal:simd label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10115\">Issue #10115</a>.</p>",
        "id": 495916456,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737850140
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the winch label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10115\">Issue #10115</a>.</p>",
        "id": 495916457,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737850140
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10115\">issue #10115</a>:</p>\n<blockquote>\n<p>Found via OSS-Fuzz this fails locally:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"n\">compiler</span><span class=\"o\">=</span><span class=\"n\">winch</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">simd_load_extend</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"w\"> </span><span class=\"n\">fuel</span><span class=\"o\">=</span><span class=\"cp\">$(</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">&lt;&lt;</span><span class=\"mi\">62</span><span class=\"p\">))</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">script</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">simd_load_extend</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"o\">'</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">directive</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">simd_load_extend</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"p\">:</span><span class=\"mi\">163</span><span class=\"p\">:</span><span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">           </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">&gt;</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">all</span><span class=\"w\"> </span><span class=\"n\">fuel</span><span class=\"w\"> </span><span class=\"n\">consumed</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">WebAssembly</span>\n</code></pre></div>\n<p>while this passes:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"n\">compiler</span><span class=\"o\">=</span><span class=\"n\">winch</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">simd_load_extend</span><span class=\"p\">.</span><span class=\"n\">wast</span>\n</code></pre></div>\n<p>Bisection points at <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">https://github.com/bytecodealliance/wasmtime/pull/9950</a> so I think this isn't a regression and it was just discovered via fuzzing recently. (cc @jeffcharles)</p>\n</blockquote>",
        "id": 495916458,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737850141
    },
    {
        "content": "<p>jeffcharles <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10115#issuecomment-2616025935\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10115\">issue #10115</a>:</p>\n<blockquote>\n<p>Interesting! For another data point, I tried running <code>cargo run -q wast -C compiler=cranelift ./tests/spec_testsuite/simd_load_extend.wast -W fuel=$((1&lt;&lt;62))</code> and that command seems to have the same output of a wasm trap with all fuel consumed by WebAssembly.</p>\n</blockquote>",
        "id": 496145736,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737990714
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10115#issuecomment-2616090724\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10115\">issue #10115</a>:</p>\n<blockquote>\n<p>Oops, definitely looks like a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10121\">bisection gone wrong</a>! I'll restart again from the fuzz bug and see what happens.</p>\n</blockquote>",
        "id": 496151603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737992166
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10115#issuecomment-2616409086\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10115\">issue #10115</a>:</p>\n<blockquote>\n<p>Ok now with <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10123\">https://github.com/bytecodealliance/wasmtime/pull/10123</a> it's much easier to reproduce and now I get:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">simd_load_extend</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Ccompiler</span><span class=\"o\">=</span><span class=\"n\">winch</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Omemory</span><span class=\"o\">-</span><span class=\"n\">reservation</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Omemory</span><span class=\"o\">-</span><span class=\"n\">reservation</span><span class=\"o\">-</span><span class=\"k\">for</span><span class=\"o\">-</span><span class=\"n\">growth</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Omemory</span><span class=\"o\">-</span><span class=\"n\">guard</span><span class=\"o\">-</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">script</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">simd_load_extend</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"o\">'</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">directive</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">simd_load_extend</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"p\">:</span><span class=\"mi\">230</span><span class=\"p\">:</span><span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">got</span><span class=\"w\"> </span><span class=\"n\">Core</span><span class=\"p\">([</span><span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mi\">39470863835196892219191952515</span><span class=\"p\">)])</span>\n</code></pre></div>\n<p>where this matches the actual OSS-Fuzz test case too (I mistakenly thought the fuel error was what oss-fuzz uncovered).</p>\n<p>I'll note that I haven't re-bisected, though.</p>\n</blockquote>",
        "id": 496173861,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737998090
    },
    {
        "content": "<p>saulecabrera closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10115\">issue #10115</a>:</p>\n<blockquote>\n<p>Found via OSS-Fuzz this fails locally:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"n\">compiler</span><span class=\"o\">=</span><span class=\"n\">winch</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">simd_load_extend</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"w\"> </span><span class=\"n\">fuel</span><span class=\"o\">=</span><span class=\"cp\">$(</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">&lt;&lt;</span><span class=\"mi\">62</span><span class=\"p\">))</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">script</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">simd_load_extend</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"o\">'</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">directive</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">simd_load_extend</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"p\">:</span><span class=\"mi\">163</span><span class=\"p\">:</span><span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">           </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">&gt;</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">all</span><span class=\"w\"> </span><span class=\"n\">fuel</span><span class=\"w\"> </span><span class=\"n\">consumed</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">WebAssembly</span>\n</code></pre></div>\n<p>while this passes:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"n\">compiler</span><span class=\"o\">=</span><span class=\"n\">winch</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">simd_load_extend</span><span class=\"p\">.</span><span class=\"n\">wast</span>\n</code></pre></div>\n<p>Bisection points at <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">https://github.com/bytecodealliance/wasmtime/pull/9950</a> so I think this isn't a regression and it was just discovered via fuzzing recently. (cc @jeffcharles)</p>\n</blockquote>",
        "id": 496206572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738009780
    }
]