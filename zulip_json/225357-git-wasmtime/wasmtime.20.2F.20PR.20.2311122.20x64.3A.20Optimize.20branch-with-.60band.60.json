[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11122\">PR #11122</a> from <code>alexcrichton:x64-branch-with-band</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit adds new lowering patterns for the x64 backend to optimize conditional branches with <code>band</code> patterns as the conditional. This builds on the infrastructure in the previous commit to funnel <code>icmp</code>-equals-zero back up to the top-level <code>is_nonzero_cmp</code> and then adding rules to <code>is_nonzero_cmp</code> for <code>band</code> to convert that to a <code>test</code> instruction which performs the <code>band</code> and sets the ZF which is what we're interested in.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 525544075,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750778845
    },
    {
        "content": "<p><strong>alexcrichton</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11122\">PR #11122</a> as ready for review.</p>",
        "id": 525544094,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750778848
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11122\">PR #11122</a>.</p>",
        "id": 525544100,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750778849
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11122\">PR #11122</a>.</p>",
        "id": 525544101,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750778850
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11122\">PR #11122</a>.</p>",
        "id": 525544104,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750778850
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11122\">PR #11122</a>.</p>",
        "id": 525544106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750778850
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11122#pullrequestreview-2954413148\">PR review</a>:</p>\n<blockquote>\n<p>Does it make sense to enumerate all <code>br_if(op(a, b))</code> in a similar way? I think we can probably have similar-ish patterns for <code>a | b</code>, <code>a ^ b</code>, <code>a + b</code>, and <code>a - b</code> if we aren't already doing only a test/compare and are actually unnecessarily explicitly checking for non-zero before the jumps.</p>\n</blockquote>",
        "id": 525547339,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750779769
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11122#issuecomment-3001046035\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11122\">PR #11122</a>:</p>\n<blockquote>\n<p>Yeah, for example given</p>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code>    <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n    <span class=\"nb\">local.get</span> <span class=\"mi\">1</span>\n    <span class=\"nb\">i32.or</span>\n    <span class=\"k\">if</span> <span class=\"c1\">;; label = @1</span>\n      <span class=\"nb\">call</span> <span class=\"mi\">0</span>\n    <span class=\"k\">else</span>\n      <span class=\"nb\">call</span> <span class=\"mi\">1</span>\n    <span class=\"k\">end</span>\n</code></pre></div>\n<p>we currently emit the comparison as</p>\n<div class=\"codehilite\" data-code-language=\"disassembly\"><pre><span></span><code>00000019    0b d1                             or edx, ecx\n0000001b    85 d2                             test edx, edx\n0000001d    0f 85 15 00 00 00                 jne 0x38\n</code></pre></div>\n<p>but we should be able to do something like</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">or</span><span class=\"w\"> </span><span class=\"no\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">ecx</span>\n<span class=\"nf\">je</span><span class=\"w\"> </span><span class=\"mi\">0x38</span>\n<span class=\"na\">...</span>\n</code></pre></div>\n</blockquote>",
        "id": 525549498,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750780442
    },
    {
        "content": "<p>fitzgen edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11122#issuecomment-3001046035\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11122\">PR #11122</a>:</p>\n<blockquote>\n<p>Yeah, for example given</p>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code>    <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n    <span class=\"nb\">local.get</span> <span class=\"mi\">1</span>\n    <span class=\"nb\">i32.or</span>\n    <span class=\"k\">if</span> <span class=\"c1\">;; label = @1</span>\n      <span class=\"nb\">call</span> <span class=\"mi\">0</span>\n    <span class=\"k\">else</span>\n      <span class=\"nb\">call</span> <span class=\"mi\">1</span>\n    <span class=\"k\">end</span>\n</code></pre></div>\n<p>we currently emit the comparison as</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"err\">00000019</span><span class=\"w\">    </span><span class=\"err\">0</span><span class=\"nf\">b</span><span class=\"w\"> </span><span class=\"no\">d1</span><span class=\"w\">                             </span><span class=\"no\">or</span><span class=\"w\"> </span><span class=\"no\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">ecx</span>\n<span class=\"err\">0000001</span><span class=\"nf\">b</span><span class=\"w\">    </span><span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"no\">d2</span><span class=\"w\">                             </span><span class=\"no\">test</span><span class=\"w\"> </span><span class=\"no\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">edx</span>\n<span class=\"err\">0000001</span><span class=\"nf\">d</span><span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"no\">f</span><span class=\"w\"> </span><span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">                 </span><span class=\"no\">jne</span><span class=\"w\"> </span><span class=\"mi\">0x38</span>\n</code></pre></div>\n<p>but we should be able to do something like</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">or</span><span class=\"w\"> </span><span class=\"no\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">ecx</span>\n<span class=\"nf\">je</span><span class=\"w\"> </span><span class=\"mi\">0x38</span>\n<span class=\"na\">...</span>\n</code></pre></div>\n</blockquote>",
        "id": 525549594,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750780477
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11122#issuecomment-3001204011\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11122\">PR #11122</a>:</p>\n<blockquote>\n<p>I think that makes sense to do yeah and was something I was curious about, but doing this robustly I think will require deeper refactorings of ISLE integration with the new assembler to, for example, auto-generate constructors which return <code>ProducesFlags</code> instead of <code>Gpr</code> as they do today. Instruction-selection for mem/imm/etc then also gets a bit tricky if we don't want to have too too much duplication. Basically <code>band</code> turned out to be easy because <code>test</code> has the exact semantics of <code>and</code> with the main benefit of a register isn't written, only flags.</p>\n<p>So given the amount of refactoring/infrastructure I think the other patterns are going to need I'll defer that for a future change.</p>\n</blockquote>",
        "id": 525559636,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750784023
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11122#issuecomment-3001214755\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11122\">PR #11122</a>:</p>\n<blockquote>\n<p>I'll make a follow up issue to track this then</p>\n</blockquote>",
        "id": 525560286,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750784263
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11122\">PR #11122</a>.</p>",
        "id": 525562878,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750785304
    }
]