[
    {
        "content": "<p>tbrockman opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a> from <code>ezdevlol:req_into_http</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Discussion: <a href=\"#narrow/channel/219900-wasi/topic/wasi-http.20Request.20and.20pub.28crate.29.20Body/near/543630937\">#wasi &gt; wasi-http Request and pub(crate) Body @ ðŸ’¬</a></p>\n<p>Largely copies the implementation from <code>Response::into_http</code> as suggested, contains one basic test asserting it works in the happy path.</p>\n</blockquote>",
        "id": 544449342,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760326565
    },
    {
        "content": "<p><strong>tbrockman</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-wasi-reviewers\">wasmtime-wasi-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>.</p>",
        "id": 544449343,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760326565
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#pullrequestreview-3331880196\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for doing this; LGTM.</p>\n<p>Please run <code>cargo fmt</code> when you have a chance, which should address the CI failure.</p>\n</blockquote>",
        "id": 544568400,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760365928
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#issuecomment-3397801907\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>:</p>\n<blockquote>\n<p>Would it also be possible to update the <code>default_send_request</code> to use this new code path as well? I would naively expect the two to be pretty similar in what they're doing.</p>\n</blockquote>",
        "id": 544569646,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760366282
    },
    {
        "content": "<p>tbrockman updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>.</p>",
        "id": 544583122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760370505
    },
    {
        "content": "<p>tbrockman <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#issuecomment-3398132744\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>:</p>\n<blockquote>\n<blockquote>\n<p>Thanks for doing this; LGTM.</p>\n<p>Please run cargo fmt when you have a chance, which should address the CI failure.</p>\n</blockquote>\n<p>No problem! Seems a fair exchange for the past/future questions I'll have about <code>wasmtime</code> <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span> </p>\n<blockquote>\n<p>Would it also be possible to update the default_send_request to use this new code path as well? I would naively expect the two to be pretty similar in what they're doing.</p>\n</blockquote>\n<p>I looked into this, but I think I might not quite understand the ask as the <code>req</code> parameter already appears to be an <code>http::Request</code>?</p>\n</blockquote>",
        "id": 544585970,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760371540
    },
    {
        "content": "<p>tbrockman edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#issuecomment-3398132744\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>:</p>\n<blockquote>\n<blockquote>\n<p>Thanks for doing this; LGTM.</p>\n<p>Please run cargo fmt when you have a chance, which should address the CI failure.</p>\n</blockquote>\n<p>No problem! Seems a fair exchange for the past/future questions I'll have about <code>wasmtime</code> <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span> </p>\n<blockquote>\n<p>Would it also be possible to update the default_send_request to use this new code path as well? I would naively expect the two to be pretty similar in what they're doing.</p>\n</blockquote>\n<p>I looked into this, but I think I might not quite understand the ask as the <code>req</code> parameter to <code>default_send_request</code> already appears to be an <code>http::Request</code>?</p>\n</blockquote>",
        "id": 544586047,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760371567
    },
    {
        "content": "<p>tbrockman edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#issuecomment-3398132744\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>:</p>\n<blockquote>\n<blockquote>\n<p>Thanks for doing this; LGTM.</p>\n<p>Please run cargo fmt when you have a chance, which should address the CI failure.</p>\n</blockquote>\n<p>No problem! Seems a fair exchange for the past/future questions I'll have about <code>wasmtime</code> <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span> </p>\n<blockquote>\n<p>Would it also be possible to update the default_send_request to use this new code path as well? I would naively expect the two to be pretty similar in what they're doing.</p>\n</blockquote>\n<p>I looked into this, but I think I might not quite understand the ask as the <code>req</code> parameter to <code>default_send_request</code> already appears to be an <code>http::Request</code>?</p>\n<p>Edit: Ah, guessing you meant <a href=\"https://github.com/bytecodealliance/wasmtime/blob/557cc2d60c562a07203fe91e078b6aa837588c7d/crates/wasi-http/src/p3/host/handler.rs#L188\">this code</a> which eventually calls <code>default_send_request</code>, which does indeed have some overlap here.</p>\n</blockquote>",
        "id": 544586963,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760371949
    },
    {
        "content": "<p>tbrockman edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#issuecomment-3398132744\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>:</p>\n<blockquote>\n<blockquote>\n<p>Thanks for doing this; LGTM.</p>\n<p>Please run cargo fmt when you have a chance, which should address the CI failure.</p>\n</blockquote>\n<p>No problem! Seems a fair exchange for the past/future questions I'll have about <code>wasmtime</code> <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span> </p>\n<blockquote>\n<p>Would it also be possible to update the default_send_request to use this new code path as well? I would naively expect the two to be pretty similar in what they're doing.</p>\n</blockquote>\n<p>I looked into this, but I think I might not quite understand the ask as the <code>req</code> parameter to <code>default_send_request</code> already appears to be an <code>http::Request</code>?</p>\n<p>Edit: Ah, guessing you meant <a href=\"https://github.com/bytecodealliance/wasmtime/blob/557cc2d60c562a07203fe91e078b6aa837588c7d/crates/wasi-http/src/p3/host/handler.rs#L188\">this code</a> which eventually calls <code>default_send_request</code>, which does indeed have some overlap here (if you can confirm that this is what you meant I can dig more into it).</p>\n</blockquote>",
        "id": 544587021,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760371984
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#issuecomment-3398220496\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>:</p>\n<blockquote>\n<p>Ah yes indeed! That eventually bottoms out <a href=\"https://github.com/bytecodealliance/wasmtime/blob/557cc2d60c562a07203fe91e078b6aa837588c7d/crates/wasi-http/src/p3/mod.rs#L95-L119\">here</a> and I think yeah you're right that what you've added here is more suitable for replacing/augmenting the implementation of <code>handle</code> as opposed to <code>default_send_request</code> itself (which is already working at the abstraction level of Hyper types)</p>\n</blockquote>",
        "id": 544589871,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760373104
    },
    {
        "content": "<p>tbrockman <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#issuecomment-3398882215\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>:</p>\n<blockquote>\n<p>@alexcrichton So I looked into it a bit, and given my limited understanding of <code>handle</code> and how it uses various channels (and perhaps channels, pinning, and tasks in Rust in general), it's not immediately straightforward to me how to integrate <code>Request::into_http</code> in a way that doesn't require adding too much complexity to <code>Request::into_http</code>, without prompting workarounds/redundant code to preserve existing functionality in <code>handle</code> <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> </p>\n<p>Might need a bit of hand holding here <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> </p>\n</blockquote>",
        "id": 544614010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760385433
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#issuecomment-3402302471\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>:</p>\n<blockquote>\n<p>Ah ok no worries, I can try to take a look after this merges</p>\n</blockquote>",
        "id": 544773181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760454016
    },
    {
        "content": "<p>tbrockman <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#issuecomment-3403000501\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>:</p>\n<blockquote>\n<p>Looks like it <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/18500866441/job/52717116202#step:22:756\">leaked some memory</a> during testing as well? <span aria-label=\"disappointed\" class=\"emoji emoji-1f61e\" role=\"img\" title=\"disappointed\">:disappointed:</span></p>\n<p><div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"o\">=================================================================</span>\n<span class=\"o\">==</span><span class=\"nv\">18584</span><span class=\"o\">==</span>ERROR:<span class=\"w\"> </span>LeakSanitizer:<span class=\"w\"> </span>detected<span class=\"w\"> </span>memory<span class=\"w\"> </span>leaks\n\nIndirect<span class=\"w\"> </span>leak<span class=\"w\"> </span>of<span class=\"w\"> </span><span class=\"m\">72</span><span class=\"w\"> </span>byte<span class=\"o\">(</span>s<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>object<span class=\"o\">(</span>s<span class=\"o\">)</span><span class=\"w\"> </span>allocated<span class=\"w\"> </span>from:\n<span class=\"w\">    </span><span class=\"c1\">#0 0x563417655224  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x14cb224) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#1 0x563417756761  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x15cc761) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#2 0x5634176fc8f9  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x15728f9) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#3 0x5634177a923d  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x161f23d) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#4 0x5634176ae4da  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x15244da) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#5 0x56341771965c  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x158f65c) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#6 0x56341775d61d  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x15d361d) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#7 0x5634176ad96d  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x152396d) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#8 0x5634177a894d  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x161e94d) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#9 0x5634177c1c98  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x1637c98) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#10 0x5634177ffef4  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x1675ef4) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#11 0x5634177d68e3  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x164c8e3) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#12 0x5634177da219  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x1650219) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#13 0x563419c47c6e  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x3abdc6e) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#14 0x563417652b96  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x14c8b96) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n\nIndirect<span class=\"w\"> </span>leak<span class=\"w\"> </span>of<span class=\"w\"> </span><span class=\"m\">32</span><span class=\"w\"> </span>byte<span class=\"o\">(</span>s<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>object<span class=\"o\">(</span>s<span class=\"o\">)</span><span class=\"w\"> </span>allocated<span class=\"w\"> </span>from:\n<span class=\"w\">    </span><span class=\"c1\">#0 0x563417655224  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x14cb224) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#1 0x5634176fdb34  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x1573b34) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#2 0x5634177a95f7  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x161f5f7) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#3 0x5634176ae4da  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x15244da) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#4 0x56341771965c  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x158f65c) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#5 0x56341775d61d  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x15d361d) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#6 0x5634176ad96d  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x152396d) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#7 0x5634177a894d  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x161e94d) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#8 0x5634177c1c98  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x1637c98) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#9 0x5634177ffef4  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x1675ef4) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#10 0x5634177d68e3  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x164c8e3) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#11 0x5634177da219  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x1650219) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#12 0x563419c47c6e  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x3abdc6e) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n<span class=\"w\">    </span><span class=\"c1\">#13 0x563417652b96  (/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521+0x14c8b96) (BuildId: ebb66c38ee1e4fe09240bde1dc91b9090cdf87d4)</span>\n\nSUMMARY:<span class=\"w\"> </span>AddressSanitizer:<span class=\"w\"> </span><span class=\"m\">104</span><span class=\"w\"> </span>byte<span class=\"o\">(</span>s<span class=\"o\">)</span><span class=\"w\"> </span>leaked<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"m\">2</span><span class=\"w\"> </span>allocation<span class=\"o\">(</span>s<span class=\"o\">)</span>.\nerror:<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>failed,<span class=\"w\"> </span>to<span class=\"w\"> </span>rerun<span class=\"w\"> </span>pass<span class=\"w\"> </span><span class=\"sb\">`</span>-p<span class=\"w\"> </span>wasmtime-wasi-http<span class=\"w\"> </span>--lib<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">  </span>process<span class=\"w\"> </span>didn<span class=\"err\">'</span>t<span class=\"w\"> </span><span class=\"nb\">exit</span><span class=\"w\"> </span>successfully:<span class=\"w\"> </span><span class=\"sb\">`</span>/home/runner/work/wasmtime/wasmtime/target/x86_64-unknown-linux-gnu/debug/deps/wasmtime_wasi_http-e2c9f65d23950521<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"nb\">exit</span><span class=\"w\"> </span>status:<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"o\">)</span>\nnote:<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>exited<span class=\"w\"> </span>abnormally<span class=\"p\">;</span><span class=\"w\"> </span>to<span class=\"w\"> </span>see<span class=\"w\"> </span>the<span class=\"w\"> </span>full<span class=\"w\"> </span>output<span class=\"w\"> </span>pass<span class=\"w\"> </span>--no-capture<span class=\"w\"> </span>to<span class=\"w\"> </span>the<span class=\"w\"> </span>harness.\nError:<span class=\"w\"> </span>Process<span class=\"w\"> </span>completed<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"nb\">exit</span><span class=\"w\"> </span>code<span class=\"w\"> </span><span class=\"m\">1</span>.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 544808227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760464415
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2430068391\">PR review comment</a>:</p>\n<blockquote>\n<p>This should either error or just panic, see <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ab2486b449d9b8377ffaa2e7a224da390c94a810/crates/wasi-http/src/p3/host/handler.rs#L277-L294\">https://github.com/bytecodealliance/wasmtime/blob/ab2486b449d9b8377ffaa2e7a224da390c94a810/crates/wasi-http/src/p3/host/handler.rs#L277-L294</a></p>\n</blockquote>",
        "id": 544812928,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760466232
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#pullrequestreview-3336933341\">PR review</a>.</p>",
        "id": 544812929,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760466233
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#pullrequestreview-3336942747\">PR review</a>.</p>",
        "id": 544813699,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760466566
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2430074955\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not sure we can actually implement such conversion even without \"unwrapping\" the body, since e.g. <code>scheme</code> may end up unset, while the <code>wasi-http</code> implementation defaults to <code>ctx.default_scheme()</code>. See also <code>wasi-http</code> docs <a href=\"https://github.com/WebAssembly/wasi-http/blob/14a19b388f4828604a08ede2af8ee1285c020113/wit-0.3.0-draft/types.wit#L278-L284\">https://github.com/WebAssembly/wasi-http/blob/14a19b388f4828604a08ede2af8ee1285c020113/wit-0.3.0-draft/types.wit#L278-L284</a></p>\n</blockquote>",
        "id": 544813702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760466567
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2430080498\">PR review comment</a>:</p>\n<blockquote>\n<p>We should also test this conversion with scheme unset</p>\n</blockquote>",
        "id": 544813704,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760466567
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2430076603\">PR review comment</a>:</p>\n<blockquote>\n<p>Like I pointed out above, I'd expect the scheme to be set here using the context, like in the <code>handle</code> implementation</p>\n</blockquote>",
        "id": 544813705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760466567
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#pullrequestreview-3336967774\">PR review</a>.</p>",
        "id": 544814588,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760466911
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2430093770\">PR review comment</a>:</p>\n<blockquote>\n<p>nit; we've been using this pattern in the p3 implementation so far</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                .map_err(|x| match x {})\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 544814590,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760466912
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#pullrequestreview-3336980206\">PR review</a>.</p>",
        "id": 544815242,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760467166
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2430103491\">PR review comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        let http_req = req.into_http(&amp;mut store, async { Ok(()) } ).unwrap();\n</code></pre></div>\n<p>I don't think passing <code>fut</code> you received from the implementation here is valid, in fact that may be the cause for the memory leak</p>\n</blockquote>",
        "id": 544815243,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760467166
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#pullrequestreview-3336983952\">PR review</a>.</p>",
        "id": 544815418,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760467250
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2430106374\">PR review comment</a>:</p>\n<blockquote>\n<p>After consuming the body, we should probably also verify that <code>fut</code> resolves to success by polling it once using <a href=\"https://doc.rust-lang.org/std/task/struct.Waker.html#method.noop\">https://doc.rust-lang.org/std/task/struct.Waker.html#method.noop</a></p>\n</blockquote>",
        "id": 544815419,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760467250
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2430074955\">PR review comment</a>.</p>",
        "id": 544815883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760467458
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#issuecomment-3403391716\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>:</p>\n<blockquote>\n<p>As for the leak, it looks like that's caused by the test added here so I don't think it's spurious. The error message isn't great, however, but if you try running locally it might provide a better error message when <code>llvm-symbolizer</code> is in your <code>$PATH</code></p>\n</blockquote>",
        "id": 544826170,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760471641
    },
    {
        "content": "<p>tbrockman <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#issuecomment-3403615975\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>:</p>\n<blockquote>\n<p>Thanks for the detailed review and guidance @rvolosatovs! I'll incorporate the changes when I get a chance.</p>\n</blockquote>",
        "id": 544836766,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760475966
    },
    {
        "content": "<p>tbrockman updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>.</p>",
        "id": 545355869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760626301
    },
    {
        "content": "<p>tbrockman updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>.</p>",
        "id": 545357183,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760626437
    },
    {
        "content": "<p>tbrockman updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>.</p>",
        "id": 545358273,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760626556
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#pullrequestreview-3350343799\">PR review</a>.</p>",
        "id": 545569831,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760707971
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2440008028\">PR review comment</a>:</p>\n<blockquote>\n<p>why not use <code>Empty</code> instead? <a href=\"https://docs.rs/http-body-util/latest/http_body_util/struct.Empty.html\">https://docs.rs/http-body-util/latest/http_body_util/struct.Empty.html</a></p>\n</blockquote>",
        "id": 545569833,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760707972
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2440048342\">PR review comment</a>:</p>\n<blockquote>\n<p>If I understand correctly, <code>into_http</code> fails before it converts the body, which causes this - that makes sense to me, but I think converting the body should be one of the very first things the function should do, which would maybe fix the issue? (see also comments above as to why the order matters)</p>\n</blockquote>",
        "id": 545569835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760707972
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2440025256\">PR review comment</a>:</p>\n<blockquote>\n<p>If this would error, it would leak memory with no way for the user to fix that.<br>\nI still don't think we should implement <code>TryFrom</code> for this conversion</p>\n</blockquote>",
        "id": 545569836,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760707972
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2440037683\">PR review comment</a>:</p>\n<blockquote>\n<p>All of these error cases could leak, since the body handles may not be disposed of correctly, in <code>handle</code> implementation we prevent that by careful ordering of operations - first converting the body (ensuring it will be correctly disposed of on <code>Drop</code>) and then constructing the request <a href=\"https://github.com/bytecodealliance/wasmtime/blob/6b156f234249eb697b6749f369bd36fb5d219d5b/crates/wasi-http/src/p3/host/handler.rs#L219-L299\">https://github.com/bytecodealliance/wasmtime/blob/6b156f234249eb697b6749f369bd36fb5d219d5b/crates/wasi-http/src/p3/host/handler.rs#L219-L299</a></p>\n</blockquote>",
        "id": 545569837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760707972
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#pullrequestreview-3350405899\">PR review</a>.</p>",
        "id": 545570316,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760708118
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2440055899\">PR review comment</a>:</p>\n<blockquote>\n<p>refs <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11440#discussion_r2326139381\">https://github.com/bytecodealliance/wasmtime/pull/11440#discussion_r2326139381</a></p>\n</blockquote>",
        "id": 545570321,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760708118
    },
    {
        "content": "<p>tbrockman submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#pullrequestreview-3352327902\">PR review</a>.</p>",
        "id": 545710976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760741764
    },
    {
        "content": "<p>tbrockman created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2441414338\">PR review comment</a>:</p>\n<blockquote>\n<p>Woops! Think I forgot to remove this (or failed to commit it), it's no longer called, wasn't insisting on keeping it.</p>\n</blockquote>",
        "id": 545710977,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760741765
    },
    {
        "content": "<p>tbrockman submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#pullrequestreview-3352403806\">PR review</a>.</p>",
        "id": 545715368,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760745846
    },
    {
        "content": "<p>tbrockman created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2441464274\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks for the context (and direct link to the PR discussion!), that makes sense, I'll revert the changes in ordering.</p>\n</blockquote>",
        "id": 545715369,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760745847
    },
    {
        "content": "<p>tbrockman submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#pullrequestreview-3357993727\">PR review</a>.</p>",
        "id": 546099427,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760995803
    },
    {
        "content": "<p>tbrockman created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2446171482\">PR review comment</a>:</p>\n<blockquote>\n<p><strong>First, some context:</strong></p>\n<p>So (apologies if this explanation is unnecessary) this is due to the one section that did mirror what <code>HostWithStore::handle&lt;T&gt;</code> currently does, which returns an error if the content length is invalid first (which is used to determine whether to produce a <code>Limited</code>/<code>UnlimitedGuestBodyConsumer</code>), which is then matched and used to explicitly drop the body:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/278656ce3be0c0a889fac1d174ba6ffe96dc268e/crates/wasi-http/src/p3/host/handler.rs#L219-L225\">https://github.com/bytecodealliance/wasmtime/blob/278656ce3be0c0a889fac1d174ba6ffe96dc268e/crates/wasi-http/src/p3/host/handler.rs#L219-L225</a></p>\n<p>This drops the sender side of the channel, which results in the <code>else</code> clause here to be evaluated:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/278656ce3be0c0a889fac1d174ba6ffe96dc268e/crates/wasi-http/src/p3/request.rs#L75\">https://github.com/bytecodealliance/wasmtime/blob/278656ce3be0c0a889fac1d174ba6ffe96dc268e/crates/wasi-http/src/p3/request.rs#L75</a></p>\n<p><strong>Then, the question:</strong></p>\n<p>Is this how we want things to be handled? A valid content length header is not strictly necessary (so an error could result in setting <code>content_length = None</code>, and the rest of the code could happily proceed), but it does also make sense that creating a <code>Request</code> with an invalid <code>Content-Length</code> header would result in an error, but if so I think I would expect to learn of that error in <code>fut</code> ...that is, if there weren't also this docstring on <code>Request::new</code>:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/278656ce3be0c0a889fac1d174ba6ffe96dc268e/crates/wasi-http/src/p3/request.rs#L47\">https://github.com/bytecodealliance/wasmtime/blob/278656ce3be0c0a889fac1d174ba6ffe96dc268e/crates/wasi-http/src/p3/request.rs#L47</a></p>\n</blockquote>",
        "id": 546099430,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760995803
    },
    {
        "content": "<p>tbrockman edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2446171482\">PR review comment</a>.</p>",
        "id": 546099486,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760995823
    },
    {
        "content": "<p>tbrockman edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2446171482\">PR review comment</a>.</p>",
        "id": 546099534,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760995844
    },
    {
        "content": "<p>tbrockman edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2446171482\">PR review comment</a>.</p>",
        "id": 546099557,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760995857
    },
    {
        "content": "<p>tbrockman edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2446171482\">PR review comment</a>.</p>",
        "id": 546100650,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760996350
    },
    {
        "content": "<p>tbrockman updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>.</p>",
        "id": 546100991,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760996512
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#pullrequestreview-3358025783\">PR review</a>.</p>",
        "id": 546101119,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760996567
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2446198830\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think this is valid. The <code>Request::new</code> assumes that the host has performed the validation if the request is of foreign origin. For example, if request was received using <code>hyper</code>, it would have to be a valid HTTP request (e.g. with compliant <code>content-length</code>)</p>\n<p>This is not a valid <code>content-length</code> header value though, so <code>Request::new</code> should not be called with it</p>\n</blockquote>",
        "id": 546101120,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760996568
    },
    {
        "content": "<p>tbrockman updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843\">PR #11843</a>.</p>",
        "id": 546137971,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761018084
    },
    {
        "content": "<p>tbrockman edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2446171482\">PR review comment</a>.</p>",
        "id": 546138171,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761018292
    },
    {
        "content": "<p>tbrockman submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#pullrequestreview-3358676925\">PR review</a>.</p>",
        "id": 546138609,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761018680
    },
    {
        "content": "<p>tbrockman created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11843#discussion_r2446654454\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah okay, changed the error scenario to something which should throw on building the URI instead.</p>\n</blockquote>",
        "id": 546138610,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761018680
    }
]