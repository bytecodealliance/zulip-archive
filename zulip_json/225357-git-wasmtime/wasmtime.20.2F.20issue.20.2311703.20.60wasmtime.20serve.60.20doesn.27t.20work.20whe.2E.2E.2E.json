[
    {
        "content": "<p>dicej assigned dicej to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11703\">issue #11703</a>.</p>",
        "id": 539907714,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758065980
    },
    {
        "content": "<p>dicej opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11703\">issue #11703</a>:</p>\n<blockquote>\n<p>Consider a guest program targeting the WASIp3 <code>proxy</code> world that simply echoes the request headers, body, and trailers back to the client:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">handle</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Request</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">Response</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ErrorCode</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">headers</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">get_headers</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">trailers</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">consume_body</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">Response</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">headers</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">trailers</span><span class=\"p\">).</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>If you run that with <code>wasmtime serve</code> and use e.g <code>curl -i -H 'content-type: text/plain' --data \"hello, world!\" http://localhost:8080/echo</code> to send a request, you'll find that the headers are echoed but the body is not.  I haven't had a chance to debug this yet, but I suspect this is due to <code>wasmtime serve</code> only running the instance's event loop until the <code>handle</code> task has exited.  In this case, that's not enough, since the inbound stream has not finished (or, apparently, even started) being piped to the outbound stream.</p>\n<p>This is related to the concern I raised <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11646#discussion_r2333842342\">here</a>, but I didn't realize at the time how easy it would be to reproduce.</p>\n</blockquote>",
        "id": 539907716,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758065982
    },
    {
        "content": "<p><a href=\"https://github.com/dicej\">dicej</a> added the wasm-proposal:component-model-async label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11703\">Issue #11703</a>.</p>",
        "id": 539907717,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758065982
    },
    {
        "content": "<p>dicej edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11703\">issue #11703</a>:</p>\n<blockquote>\n<p>Consider a guest program targeting the WASIp3 <code>proxy</code> world that simply echoes the request headers, body, and trailers back to the client:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">handle</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Request</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">Response</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ErrorCode</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">headers</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">get_headers</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">trailers</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">consume_body</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">Response</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">headers</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">trailers</span><span class=\"p\">).</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>If you run that with <code>wasmtime serve</code> and use e.g <code>curl -i -H 'content-type: text/plain' --data \"hello, world!\" http://localhost:8080/echo</code> to send a request, you'll find that the headers are echoed but the body is not.  I haven't had a chance to debug this yet, but I suspect this is due to <code>wasmtime serve</code> only running the instance's event loop until the <code>handle</code> task has exited.  In this case, that's not enough, since the inbound stream has not finished (nor, apparently, even started) being piped to the outbound stream.</p>\n<p>This is related to the concern I raised <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11646#discussion_r2333842342\">here</a>, but I didn't realize at the time how easy it would be to reproduce.</p>\n</blockquote>",
        "id": 539907773,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758066030
    },
    {
        "content": "<p>dicej edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11703\">issue #11703</a>:</p>\n<blockquote>\n<p>Consider a guest program targeting the WASIp3 <code>proxy</code> world that simply echoes the request headers, body, and trailers back to the client:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">handle</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Request</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">Response</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ErrorCode</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">headers</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">get_headers</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">trailers</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">consume_body</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">Response</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">headers</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">trailers</span><span class=\"p\">).</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>If you run that with <code>wasmtime serve</code> and use e.g <code>curl -i -H 'content-type: text/plain' --data \"hello, world!\" http://localhost:8080/echo</code> to send a request, you'll find that the headers are echoed but the body is not.  I haven't had a chance to debug this yet, but I suspect this is due to <code>wasmtime serve</code> only running the instance's event loop until the <code>handle</code> task has exited.  In this case, that's not enough, since the inbound stream has not finished (nor, apparently, even started) being piped to the outbound stream.</p>\n<p>This is related to the concern I raised <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11646#discussion_r2333842342\">here</a>, but I didn't realize at the time how easy it would be to reproduce.</p>\n</blockquote>",
        "id": 539908653,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758066822
    },
    {
        "content": "<p>dicej closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11703\">issue #11703</a>:</p>\n<blockquote>\n<p>Consider a guest program targeting the WASIp3 <code>proxy</code> world that simply echoes the request headers, body, and trailers back to the client:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">handle</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Request</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">Response</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ErrorCode</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">headers</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">get_headers</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">trailers</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">consume_body</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">Response</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">headers</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">trailers</span><span class=\"p\">).</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>If you run that with <code>wasmtime serve</code> and use e.g <code>curl -i -H 'content-type: text/plain' --data \"hello, world!\" http://localhost:8080/echo</code> to send a request, you'll find that the headers are echoed but the body is not.  I haven't had a chance to debug this yet, but I suspect this is due to <code>wasmtime serve</code> only running the instance's event loop until the <code>handle</code> task has exited.  In this case, that's not enough, since the inbound stream has not finished (nor, apparently, even started) being piped to the outbound stream.</p>\n<p>This is related to the concern I raised <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11646#discussion_r2333842342\">here</a>, but I didn't realize at the time how easy it would be to reproduce.</p>\n</blockquote>",
        "id": 544250698,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760131855
    },
    {
        "content": "<p>dicej <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11703#issuecomment-3392355670\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11703\">issue #11703</a>:</p>\n<blockquote>\n<p>This was addressed by #11763 </p>\n</blockquote>",
        "id": 544250700,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760131856
    }
]