[
    {
        "content": "<p>wingo opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11771\">issue #11771</a>:</p>\n<blockquote>\n<p>Consider this test for what the HTTP implementation does with invalid field names.  First it tries a field name with a space in it, then it tries <code>\"</code>.  Both of these are <a href=\"https://www.rfc-editor.org/rfc/rfc9110.html#section-5.6.2\">invalid</a>, but the first shows an error on <code>fields.delete</code> whereas the second does not:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">wit_bindgen</span><span class=\"p\">;</span>\n\n<span class=\"n\">wit_bindgen</span><span class=\"p\">::</span><span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">inline</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">r</span><span class=\"s\">\"</span>\n<span class=\"s\">  package test:test;</span>\n\n<span class=\"s\">  world test {</span>\n<span class=\"s\">      include wasi:http/imports@0.3.0-rc-2025-09-16;</span>\n<span class=\"s\">  }</span>\n<span class=\"s\">\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">additional_derives</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">PartialEq</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Eq</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Hash</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Clone</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"n\">features</span><span class=\"p\">:[</span><span class=\"s\">\"clocks-timezone\"</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"n\">generate_all</span>\n<span class=\"p\">});</span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">http</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::</span><span class=\"n\">Fields</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">http</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::</span><span class=\"n\">HeaderError</span><span class=\"p\">;</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">test_invalid_field_name</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"kt\">str</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"testing field: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">field</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fields</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Fields</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"fm\">assert!</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">fields</span><span class=\"p\">.</span><span class=\"n\">has</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">),</span>\n<span class=\"w\">               </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">HeaderError</span><span class=\"p\">::</span><span class=\"n\">InvalidSyntax</span><span class=\"p\">));</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">test_valid_field_names</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">test_invalid_field_name</span><span class=\"p\">(</span><span class=\"s\">\"field with space\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">test_invalid_field_name</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\\"</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">test_valid_field_names</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Run it:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"n\">nightly</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wcomponent</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"o\">-</span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Sp3</span><span class=\"p\">,</span><span class=\"n\">http</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">field</span><span class=\"o\">-</span><span class=\"n\">invalid</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"o\">-</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip3</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">1.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">wingo</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">wasip3</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">testsuite</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip3</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">release</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">profile</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">optimized</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.35</span><span class=\"n\">s</span>\n<span class=\"n\">testing</span><span class=\"w\"> </span><span class=\"n\">field</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">field</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">space</span>\n<span class=\"n\">testing</span><span class=\"w\"> </span><span class=\"n\">field</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"</span>\n\n<span class=\"s\">thread 'main' (1) panicked at src/bin/field-invalid.rs:23:5:</span>\n<span class=\"s\">assertion `left == right` failed</span>\n<span class=\"s\">  left: Ok(())</span>\n<span class=\"s\"> right: Err(HeaderError::InvalidSyntax)</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 542449756,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759311356
    },
    {
        "content": "<p><a href=\"https://github.com/wingo\">wingo</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11771\">Issue #11771</a>.</p>",
        "id": 542449758,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759311356
    },
    {
        "content": "<p>wingo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11771#issuecomment-3355516360\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11771\">issue #11771</a>:</p>\n<blockquote>\n<p>Related to <a href=\"https://github.com/WebAssembly/wasi-http/issues/192\">https://github.com/WebAssembly/wasi-http/issues/192</a>.</p>\n</blockquote>",
        "id": 542450021,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759311419
    },
    {
        "content": "<p>wingo edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11771\">issue #11771</a>:</p>\n<blockquote>\n<p>Consider this test for what the HTTP implementation does with invalid field names.  First it tries a field name with a space in it, then it tries <code>\"</code>.  Both of these are <a href=\"https://www.rfc-editor.org/rfc/rfc9110.html#section-5.6.2\">invalid</a>, but the first shows an error on <code>fields.delete</code> whereas the second does not:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">wit_bindgen</span><span class=\"p\">;</span>\n\n<span class=\"n\">wit_bindgen</span><span class=\"p\">::</span><span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">inline</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">r</span><span class=\"s\">\"</span>\n<span class=\"s\">  package test:test;</span>\n\n<span class=\"s\">  world test {</span>\n<span class=\"s\">      include wasi:http/imports@0.3.0-rc-2025-09-16;</span>\n<span class=\"s\">  }</span>\n<span class=\"s\">\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">additional_derives</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">PartialEq</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Eq</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Hash</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Clone</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"n\">features</span><span class=\"p\">:[</span><span class=\"s\">\"clocks-timezone\"</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"n\">generate_all</span>\n<span class=\"p\">});</span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">http</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::</span><span class=\"n\">Fields</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">http</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::</span><span class=\"n\">HeaderError</span><span class=\"p\">;</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">test_invalid_field_name</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"kt\">str</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"testing field: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">field</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fields</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Fields</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"fm\">assert!</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">fields</span><span class=\"p\">.</span><span class=\"n\">has</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">),</span>\n<span class=\"w\">               </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">HeaderError</span><span class=\"p\">::</span><span class=\"n\">InvalidSyntax</span><span class=\"p\">));</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">test_invalid_field_names</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">test_invalid_field_name</span><span class=\"p\">(</span><span class=\"s\">\"field with space\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">test_invalid_field_name</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\\"</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">test_invalid_field_names</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Run it:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"n\">nightly</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wcomponent</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"o\">-</span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Sp3</span><span class=\"p\">,</span><span class=\"n\">http</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">field</span><span class=\"o\">-</span><span class=\"n\">invalid</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"o\">-</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip3</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">1.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">wingo</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">wasip3</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">testsuite</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip3</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">release</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">profile</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">optimized</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.35</span><span class=\"n\">s</span>\n<span class=\"n\">testing</span><span class=\"w\"> </span><span class=\"n\">field</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">field</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">space</span>\n<span class=\"n\">testing</span><span class=\"w\"> </span><span class=\"n\">field</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"</span>\n\n<span class=\"s\">thread 'main' (1) panicked at src/bin/field-invalid.rs:23:5:</span>\n<span class=\"s\">assertion `left == right` failed</span>\n<span class=\"s\">  left: Ok(())</span>\n<span class=\"s\"> right: Err(HeaderError::InvalidSyntax)</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 542450171,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759311457
    },
    {
        "content": "<p>wingo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11771#issuecomment-3355529068\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11771\">issue #11771</a>:</p>\n<blockquote>\n<p>Also related to <a href=\"https://github.com/WebAssembly/wasi-http/issues/178\">https://github.com/WebAssembly/wasi-http/issues/178</a>, could it be that Wasmtime is thinking that <code>\"</code> is valid in a field name?</p>\n</blockquote>",
        "id": 542450729,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759311631
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasi:impl label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11771\">Issue #11771</a>.</p>",
        "id": 542507337,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759328092
    }
]