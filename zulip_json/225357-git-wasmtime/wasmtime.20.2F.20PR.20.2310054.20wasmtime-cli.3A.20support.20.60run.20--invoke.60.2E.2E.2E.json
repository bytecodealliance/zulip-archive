[
    {
        "content": "<p>pchickey opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a> from <code>bytecodealliance:pch/invoke_wave</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 494905884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737404418
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>.</p>",
        "id": 494906535,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737404657
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>.</p>",
        "id": 494906838,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737404777
    },
    {
        "content": "<p>tpmccallum <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#issuecomment-2683908359\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>:</p>\n<blockquote>\n<p>Tried this locally and got the following:</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"go\">cd /Users/tpmccallum</span>\n<span class=\"go\">git clone https://github.com/bytecodealliance/wasmtime.git</span>\n<span class=\"go\">cd wasmtime</span>\n<span class=\"go\">git checkout main</span>\n<span class=\"go\">git pull origin main</span>\n<span class=\"go\">git checkout pch/invoke_wave</span>\n<span class=\"go\">git merge main</span>\n<span class=\"go\">cargo clean</span>\n<span class=\"go\">cargo build --release</span>\n</code></pre></div>\n<p>Repo I used for testing is at <a href=\"https://github.com/tpmccallum/testing_components/tree/main\">https://github.com/tpmccallum/testing_components/tree/main</a> (specifically the <code>compress</code> component):</p>\n<p><div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">tpmccallum@192-168-1-17 compress % </span>/Users/tpmccallum/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span>compress<span class=\"w\"> </span>target/wasm32-wasip1/debug/compress.wasm\n\n<span class=\"go\">Error: failed to run main module `target/wasm32-wasip1/debug/compress.wasm`</span>\n\n<span class=\"go\">Caused by:</span>\n<span class=\"go\">    0: parsing invoke \"compress\"</span>\n<span class=\"go\">    1: unexpected end of input at 8..8</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 501963836,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740546529
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#issuecomment-2685711520\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>:</p>\n<blockquote>\n<p>The wave syntax requires functions to be invoked with parens, so <code>--invoke \"compress()\"</code> should hopefully work. one of the big things missing is better error messages...</p>\n</blockquote>",
        "id": 502102009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740590387
    },
    {
        "content": "<p>tpmccallum <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#issuecomment-2689329742\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>:</p>\n<blockquote>\n<p>Thanks for the response @pchickey <br>\nThat makes sense. Thank you, and I will try that next and report back here.</p>\n</blockquote>",
        "id": 502459848,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740698430
    },
    {
        "content": "<p>tpmccallum <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#issuecomment-2693247368\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>:</p>\n<blockquote>\n<p>Hi @pchickey <br>\nThanks for the additional info. I got this working - and wrote an article &lt; <a href=\"https://medium.com/wasm/wasm-component-model-seamless-compression-c-rust-and-wasm-3b8d52ed8b31\">https://medium.com/wasm/wasm-component-model-seamless-compression-c-rust-and-wasm-3b8d52ed8b31</a> &gt;<br>\nThanks again!<br>\nLet me know if you need/want me to do any further testing on this. Super happy to assist.</p>\n</blockquote>",
        "id": 502938123,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740976028
    },
    {
        "content": "<p>tpmccallum <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#issuecomment-2768318470\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>:</p>\n<blockquote>\n<p>Hi @pchickey, <br>\nI have implemented the error message, please see information below.</p>\n<h2><a href=\"http://Run.rs\">Run.rs</a></h2>\n<h3><strong>Original/Before</strong></h3>\n<p>An example of a user typing `--invoke \"compress\" (with quotes).</p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span><span class=\"s2\">\"compress\"</span><span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>parsing<span class=\"w\"> </span>invoke<span class=\"w\"> </span><span class=\"s2\">\"compress\"</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>end<span class=\"w\"> </span>of<span class=\"w\"> </span>input<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">8</span>..8\n</code></pre></div>\n<p>An example of a user typing <code>--invoke compress</code> (no quotes):</p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span>compress<span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>parsing<span class=\"w\"> </span>invoke<span class=\"w\"> </span><span class=\"s2\">\"compress\"</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>end<span class=\"w\"> </span>of<span class=\"w\"> </span>input<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">8</span>..8\n</code></pre></div>\n<h3><strong>After</strong></h3>\n<p>An example of a user typing `--invoke \"compress\" (with quotes).</p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span><span class=\"s2\">\"compress\"</span><span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>parse<span class=\"w\"> </span>invoke<span class=\"w\"> </span><span class=\"s1\">'compress'</span>:<span class=\"w\"> </span>invoked<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>calls<span class=\"w\"> </span>must<span class=\"w\"> </span>include<span class=\"w\"> </span>parentheses<span class=\"w\"> </span>after<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>name<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>quoted<span class=\"w\"> </span>wave<span class=\"w\"> </span>syntax<span class=\"w\"> </span><span class=\"o\">(</span>e.g.,<span class=\"w\"> </span><span class=\"s2\">\"compress()\"</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>end<span class=\"w\"> </span>of<span class=\"w\"> </span>input<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">8</span>..8\n</code></pre></div>\n<p>An example of a user typing <code>--invoke compress</code> (no quotes):</p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span>compress<span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>parse<span class=\"w\"> </span>invoke<span class=\"w\"> </span><span class=\"s1\">'compress'</span>:<span class=\"w\"> </span>invoked<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>calls<span class=\"w\"> </span>must<span class=\"w\"> </span>include<span class=\"w\"> </span>parentheses<span class=\"w\"> </span>after<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>name<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>quoted<span class=\"w\"> </span>wave<span class=\"w\"> </span>syntax<span class=\"w\"> </span><span class=\"o\">(</span>e.g.,<span class=\"w\"> </span><span class=\"s2\">\"compress()\"</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>end<span class=\"w\"> </span>of<span class=\"w\"> </span>input<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">8</span>..8\n</code></pre></div>\n<h3>With Arguments</h3>\n<p>I also updated the Rust function to accept a string argument and then tested that the proper escaping of the string argument worked:</p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span><span class=\"s2\">\"compress(\\\"hello\\\")\"</span><span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"o\">[</span><span class=\"m\">40</span>,<span class=\"w\"> </span><span class=\"m\">181</span>,<span class=\"w\"> </span><span class=\"m\">47</span>,<span class=\"w\"> </span><span class=\"m\">253</span>,<span class=\"w\"> </span><span class=\"m\">0</span>,<span class=\"w\"> </span><span class=\"m\">88</span>,<span class=\"w\"> </span><span class=\"m\">41</span>,<span class=\"w\"> </span><span class=\"m\">0</span>,<span class=\"w\"> </span><span class=\"m\">0</span>,<span class=\"w\"> </span><span class=\"m\">104</span>,<span class=\"w\"> </span><span class=\"m\">101</span>,<span class=\"w\"> </span><span class=\"m\">108</span>,<span class=\"w\"> </span><span class=\"m\">108</span>,<span class=\"w\"> </span><span class=\"m\">111</span><span class=\"o\">]</span>\n</code></pre></div>\n<h2>Cli-options.md</h2>\n<p>I also went ahead and updated the documentation that talks about <code>--invoke</code> with all of the above information (quotes, parenthesis, etc.).</p>\n</blockquote>",
        "id": 509369492,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743489306
    },
    {
        "content": "<p>tpmccallum edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#issuecomment-2768318470\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>:</p>\n<blockquote>\n<p>Hi @pchickey, <br>\nI have implemented the error message, please see information below.</p>\n<h2><a href=\"http://Run.rs\">Run.rs</a></h2>\n<h3><strong>Original/Before</strong> (Testing error message output)</h3>\n<p>An example of a user typing `--invoke \"compress\" (with quotes).</p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span><span class=\"s2\">\"compress\"</span><span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>parsing<span class=\"w\"> </span>invoke<span class=\"w\"> </span><span class=\"s2\">\"compress\"</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>end<span class=\"w\"> </span>of<span class=\"w\"> </span>input<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">8</span>..8\n</code></pre></div>\n<p>An example of a user typing <code>--invoke compress</code> (no quotes):</p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span>compress<span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>parsing<span class=\"w\"> </span>invoke<span class=\"w\"> </span><span class=\"s2\">\"compress\"</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>end<span class=\"w\"> </span>of<span class=\"w\"> </span>input<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">8</span>..8\n</code></pre></div>\n<h3><strong>After</strong> (Testing error message output)</h3>\n<p>An example of a user typing `--invoke \"compress\" (with quotes).</p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span><span class=\"s2\">\"compress\"</span><span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>parse<span class=\"w\"> </span>invoke<span class=\"w\"> </span><span class=\"s1\">'compress'</span>:<span class=\"w\"> </span>invoked<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>calls<span class=\"w\"> </span>must<span class=\"w\"> </span>include<span class=\"w\"> </span>parentheses<span class=\"w\"> </span>after<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>name<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>quoted<span class=\"w\"> </span>wave<span class=\"w\"> </span>syntax<span class=\"w\"> </span><span class=\"o\">(</span>e.g.,<span class=\"w\"> </span><span class=\"s2\">\"compress()\"</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>end<span class=\"w\"> </span>of<span class=\"w\"> </span>input<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">8</span>..8\n</code></pre></div>\n<p>An example of a user typing <code>--invoke compress</code> (no quotes):</p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span>compress<span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>parse<span class=\"w\"> </span>invoke<span class=\"w\"> </span><span class=\"s1\">'compress'</span>:<span class=\"w\"> </span>invoked<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>calls<span class=\"w\"> </span>must<span class=\"w\"> </span>include<span class=\"w\"> </span>parentheses<span class=\"w\"> </span>after<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>name<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>quoted<span class=\"w\"> </span>wave<span class=\"w\"> </span>syntax<span class=\"w\"> </span><span class=\"o\">(</span>e.g.,<span class=\"w\"> </span><span class=\"s2\">\"compress()\"</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>end<span class=\"w\"> </span>of<span class=\"w\"> </span>input<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">8</span>..8\n</code></pre></div>\n<h3>With Arguments (Testing functionality of invoking a function with arguments)</h3>\n<p>I also updated the Rust function to accept a string argument and then tested that the proper escaping of the string argument worked:</p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span><span class=\"s2\">\"compress(\\\"hello\\\")\"</span><span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"o\">[</span><span class=\"m\">40</span>,<span class=\"w\"> </span><span class=\"m\">181</span>,<span class=\"w\"> </span><span class=\"m\">47</span>,<span class=\"w\"> </span><span class=\"m\">253</span>,<span class=\"w\"> </span><span class=\"m\">0</span>,<span class=\"w\"> </span><span class=\"m\">88</span>,<span class=\"w\"> </span><span class=\"m\">41</span>,<span class=\"w\"> </span><span class=\"m\">0</span>,<span class=\"w\"> </span><span class=\"m\">0</span>,<span class=\"w\"> </span><span class=\"m\">104</span>,<span class=\"w\"> </span><span class=\"m\">101</span>,<span class=\"w\"> </span><span class=\"m\">108</span>,<span class=\"w\"> </span><span class=\"m\">108</span>,<span class=\"w\"> </span><span class=\"m\">111</span><span class=\"o\">]</span>\n</code></pre></div>\n<h2>Cli-options.md</h2>\n<p>I also went ahead and updated the documentation that talks about <code>--invoke</code> with all of the above information (quotes, parenthesis, etc.).</p>\n<hr>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">status</span>\n<span class=\"w\">    </span><span class=\"n\">modified</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"nc\">docs</span><span class=\"o\">/</span><span class=\"n\">cli</span><span class=\"o\">-</span><span class=\"n\">options</span><span class=\"p\">.</span><span class=\"n\">md</span>\n<span class=\"w\">    </span><span class=\"n\">modified</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"nc\">src</span><span class=\"o\">/</span><span class=\"n\">commands</span><span class=\"o\">/</span><span class=\"n\">run</span><span class=\"p\">.</span><span class=\"n\">rs</span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">commit</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"s\">\"Finalized enhancements for --invoke: error messages\"</span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"n\">invoke_wave_enhancements</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"n\">a93050af</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">Finalized</span><span class=\"w\"> </span><span class=\"n\">enhancements</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"n\">messages</span>\n<span class=\"w\">        </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">files</span><span class=\"w\"> </span><span class=\"n\">changed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">37</span><span class=\"w\"> </span><span class=\"n\">insertions</span><span class=\"p\">(</span><span class=\"o\">+</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"n\">deletions</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"p\">)</span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">push</span><span class=\"w\"> </span><span class=\"n\">origin</span><span class=\"w\"> </span><span class=\"n\">invoke_wave_enhancements</span>\n<span class=\"w\">        </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">push</span><span class=\"w\"> </span><span class=\"n\">origin</span><span class=\"w\"> </span><span class=\"n\">invoke_wave_enhancements</span>\n<span class=\"w\">        </span><span class=\"n\">Enumerating</span><span class=\"w\"> </span><span class=\"n\">objects</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">done</span><span class=\"p\">.</span>\n<span class=\"w\">        </span><span class=\"n\">Counting</span><span class=\"w\"> </span><span class=\"n\">objects</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">13</span><span class=\"o\">/</span><span class=\"mi\">13</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">done</span><span class=\"p\">.</span>\n<span class=\"w\">        </span><span class=\"n\">Delta</span><span class=\"w\"> </span><span class=\"n\">compression</span><span class=\"w\"> </span><span class=\"n\">using</span><span class=\"w\"> </span><span class=\"n\">up</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"w\"> </span><span class=\"n\">threads</span>\n<span class=\"w\">        </span><span class=\"n\">Compressing</span><span class=\"w\"> </span><span class=\"n\">objects</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"mi\">7</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">done</span><span class=\"p\">.</span>\n<span class=\"w\">        </span><span class=\"n\">Writing</span><span class=\"w\"> </span><span class=\"n\">objects</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"mi\">7</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mf\">1.84</span><span class=\"w\"> </span><span class=\"n\">KiB</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"mf\">1.84</span><span class=\"w\"> </span><span class=\"n\">MiB</span><span class=\"o\">/</span><span class=\"n\">s</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">done</span><span class=\"p\">.</span>\n<span class=\"w\">        </span><span class=\"n\">Total</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">delta</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">reused</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">delta</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">pack</span><span class=\"o\">-</span><span class=\"n\">reused</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">        </span><span class=\"n\">remote</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Resolving</span><span class=\"w\"> </span><span class=\"n\">deltas</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"o\">/</span><span class=\"mi\">6</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">completed</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"n\">local</span><span class=\"w\"> </span><span class=\"n\">objects</span><span class=\"p\">.</span>\n<span class=\"w\">        </span><span class=\"n\">remote</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"nc\">remote</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Create</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">pull</span><span class=\"w\"> </span><span class=\"n\">request</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">invoke_wave_enhancements</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">GitHub</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">visiting</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"nc\">remote</span><span class=\"p\">:</span><span class=\"w\">      </span><span class=\"nc\">https</span><span class=\"p\">:</span><span class=\"c1\">//github.com/tpmccallum/wasmtime/pull/new/invoke_wave_enhancements</span>\n<span class=\"w\">        </span><span class=\"n\">remote</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"nc\">To</span><span class=\"w\"> </span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">:</span><span class=\"nc\">tpmccallum</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">git</span>\n<span class=\"w\">         </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">new</span><span class=\"w\"> </span><span class=\"n\">branch</span><span class=\"p\">]</span><span class=\"w\">          </span><span class=\"n\">invoke_wave_enhancements</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">invoke_wave_enhancements</span>\n</code></pre></div>\n</blockquote>",
        "id": 509370380,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743489687
    },
    {
        "content": "<p>tpmccallum <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#issuecomment-2768374083\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>:</p>\n<blockquote>\n<p>Hi @pchickey <br>\nWhen creating the PR, the base repository is set to <code>pchickey/wasmtime</code>, but the drop-down for the base branch does not have a <code>pch/invoke_wave</code> option?<br>\nNot sure if you want/need to push <code>pch/invoke_wave</code> to your fork so I can set it as the base? <br>\nAt this stage, I used <code>main</code> as the base because the changed files look relevant to the --invoke work specifically. So perhaps all is fine and you will see my changes.</p>\n<p>The PR is at <code>[tpmccallum/wasmtime:invoke_wave_enhancements](https://github.com/pchickey/wasmtime/pull/1)</code>. <br>\nI did not get to the CI errors today, only the CLI output messages and the documentation. <br>\nPlease let me know your thoughts, and I can get the CI done tomorrow.<br>\nChat soon<br>\nThanks!</p>\n</blockquote>",
        "id": 509372994,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743490776
    },
    {
        "content": "<p>tpmccallum edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#issuecomment-2768374083\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>:</p>\n<blockquote>\n<p>Hi @pchickey <br>\nWhen creating the PR, the base repository is set to <code>pchickey/wasmtime</code>, but the drop-down for the base branch does not have a <code>pch/invoke_wave</code> option?<br>\nNot sure if you want/need to push <code>pch/invoke_wave</code> to your fork so I can set it as the base? <br>\nAt this stage, I used <code>main</code> as the base because the changed files look relevant to the --invoke work specifically. So perhaps all is fine and you will see my changes.</p>\n<p>The PR is at <code>[tpmccallum/wasmtime:invoke_wave_enhancements](https://github.com/pchickey/wasmtime/pull/1)</code>. <br>\nI did not get to the CI errors today, only the CLI output messages and the documentation. </p>\n<p>Please let me know your thoughts, and I can get the CI done tomorrow. On that note, I was wondering if you wanted to rebase and bring the PR up to date with the current code base. Happy to be guided by you.  </p>\n<p>Chat soon<br>\nThanks!</p>\n</blockquote>",
        "id": 509373488,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743490954
    },
    {
        "content": "<p>tpmccallum deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#issuecomment-2768374083\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>:</p>\n<blockquote>\n<p>Hi @pchickey <br>\nWhen creating the PR, the base repository is set to <code>pchickey/wasmtime</code>, but the drop-down for the base branch does not have a <code>pch/invoke_wave</code> option?<br>\nNot sure if you want/need to push <code>pch/invoke_wave</code> to your fork so I can set it as the base? <br>\nAt this stage, I used <code>main</code> as the base because the changed files look relevant to the --invoke work specifically. So perhaps all is fine and you will see my changes.</p>\n<p>The PR is at <code>[tpmccallum/wasmtime:invoke_wave_enhancements](https://github.com/pchickey/wasmtime/pull/1)</code>. <br>\nI did not get to the CI errors today, only the CLI output messages and the documentation. </p>\n<p>Please let me know your thoughts, and I can get the CI done tomorrow. On that note, I was wondering if you wanted to rebase and bring the PR up to date with the current code base. Happy to be guided by you.  </p>\n<p>Chat soon<br>\nThanks!</p>\n</blockquote>",
        "id": 509373688,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743491035
    },
    {
        "content": "<p>tpmccallum edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#issuecomment-2768318470\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>:</p>\n<blockquote>\n<p>Hi @pchickey, <br>\nI have implemented the error message, tested out a bunch of scenarios and also updated the documentation.<br>\nPlease see the details below.</p>\n<h2><a href=\"http://Run.rs\">Run.rs</a></h2>\n<h3><strong>Original/Before</strong> (Testing error message output)</h3>\n<p>An example of a user typing `--invoke \"compress\" (with quotes).</p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span><span class=\"s2\">\"compress\"</span><span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>parsing<span class=\"w\"> </span>invoke<span class=\"w\"> </span><span class=\"s2\">\"compress\"</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>end<span class=\"w\"> </span>of<span class=\"w\"> </span>input<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">8</span>..8\n</code></pre></div>\n<p>An example of a user typing <code>--invoke compress</code> (no quotes):</p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span>compress<span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>parsing<span class=\"w\"> </span>invoke<span class=\"w\"> </span><span class=\"s2\">\"compress\"</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>end<span class=\"w\"> </span>of<span class=\"w\"> </span>input<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">8</span>..8\n</code></pre></div>\n<h3><strong>After</strong> (Testing error message output)</h3>\n<p>An example of a user typing `--invoke \"compress\" (with quotes).</p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span><span class=\"s2\">\"compress\"</span><span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>parse<span class=\"w\"> </span>invoke<span class=\"w\"> </span><span class=\"s1\">'compress'</span>:<span class=\"w\"> </span>invoked<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>calls<span class=\"w\"> </span>must<span class=\"w\"> </span>include<span class=\"w\"> </span>parentheses<span class=\"w\"> </span>after<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>name<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>quoted<span class=\"w\"> </span>wave<span class=\"w\"> </span>syntax<span class=\"w\"> </span><span class=\"o\">(</span>e.g.,<span class=\"w\"> </span><span class=\"s2\">\"compress()\"</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>end<span class=\"w\"> </span>of<span class=\"w\"> </span>input<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">8</span>..8\n</code></pre></div>\n<p>An example of a user typing <code>--invoke compress</code> (no quotes):</p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span>compress<span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>parse<span class=\"w\"> </span>invoke<span class=\"w\"> </span><span class=\"s1\">'compress'</span>:<span class=\"w\"> </span>invoked<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>calls<span class=\"w\"> </span>must<span class=\"w\"> </span>include<span class=\"w\"> </span>parentheses<span class=\"w\"> </span>after<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>name<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>quoted<span class=\"w\"> </span>wave<span class=\"w\"> </span>syntax<span class=\"w\"> </span><span class=\"o\">(</span>e.g.,<span class=\"w\"> </span><span class=\"s2\">\"compress()\"</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>end<span class=\"w\"> </span>of<span class=\"w\"> </span>input<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">8</span>..8\n</code></pre></div>\n<h3>With Arguments (Testing functionality of invoking a function with arguments)</h3>\n<p>I also updated the Rust function to accept a string argument and then tested that the proper escaping of the string argument worked:</p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span><span class=\"s2\">\"compress(\\\"hello\\\")\"</span><span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"o\">[</span><span class=\"m\">40</span>,<span class=\"w\"> </span><span class=\"m\">181</span>,<span class=\"w\"> </span><span class=\"m\">47</span>,<span class=\"w\"> </span><span class=\"m\">253</span>,<span class=\"w\"> </span><span class=\"m\">0</span>,<span class=\"w\"> </span><span class=\"m\">88</span>,<span class=\"w\"> </span><span class=\"m\">41</span>,<span class=\"w\"> </span><span class=\"m\">0</span>,<span class=\"w\"> </span><span class=\"m\">0</span>,<span class=\"w\"> </span><span class=\"m\">104</span>,<span class=\"w\"> </span><span class=\"m\">101</span>,<span class=\"w\"> </span><span class=\"m\">108</span>,<span class=\"w\"> </span><span class=\"m\">108</span>,<span class=\"w\"> </span><span class=\"m\">111</span><span class=\"o\">]</span>\n</code></pre></div>\n<h2>Cli-options.md</h2>\n<p>I also went ahead and updated the documentation that talks about <code>--invoke</code> with all of the above information (quotes, parenthesis, etc.).</p>\n<hr>\n<p>How I pushed my changes ...</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">status</span>\n<span class=\"w\">    </span><span class=\"n\">modified</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"nc\">docs</span><span class=\"o\">/</span><span class=\"n\">cli</span><span class=\"o\">-</span><span class=\"n\">options</span><span class=\"p\">.</span><span class=\"n\">md</span>\n<span class=\"w\">    </span><span class=\"n\">modified</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"nc\">src</span><span class=\"o\">/</span><span class=\"n\">commands</span><span class=\"o\">/</span><span class=\"n\">run</span><span class=\"p\">.</span><span class=\"n\">rs</span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">commit</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"s\">\"Finalized enhancements for --invoke: error messages\"</span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"n\">invoke_wave_enhancements</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"n\">a93050af</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">Finalized</span><span class=\"w\"> </span><span class=\"n\">enhancements</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"n\">messages</span>\n<span class=\"w\">        </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">files</span><span class=\"w\"> </span><span class=\"n\">changed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">37</span><span class=\"w\"> </span><span class=\"n\">insertions</span><span class=\"p\">(</span><span class=\"o\">+</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"n\">deletions</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"p\">)</span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">push</span><span class=\"w\"> </span><span class=\"n\">origin</span><span class=\"w\"> </span><span class=\"n\">invoke_wave_enhancements</span>\n<span class=\"w\">        </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">push</span><span class=\"w\"> </span><span class=\"n\">origin</span><span class=\"w\"> </span><span class=\"n\">invoke_wave_enhancements</span>\n<span class=\"w\">        </span><span class=\"n\">Enumerating</span><span class=\"w\"> </span><span class=\"n\">objects</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">done</span><span class=\"p\">.</span>\n<span class=\"w\">        </span><span class=\"n\">Counting</span><span class=\"w\"> </span><span class=\"n\">objects</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">13</span><span class=\"o\">/</span><span class=\"mi\">13</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">done</span><span class=\"p\">.</span>\n<span class=\"w\">        </span><span class=\"n\">Delta</span><span class=\"w\"> </span><span class=\"n\">compression</span><span class=\"w\"> </span><span class=\"n\">using</span><span class=\"w\"> </span><span class=\"n\">up</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"w\"> </span><span class=\"n\">threads</span>\n<span class=\"w\">        </span><span class=\"n\">Compressing</span><span class=\"w\"> </span><span class=\"n\">objects</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"mi\">7</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">done</span><span class=\"p\">.</span>\n<span class=\"w\">        </span><span class=\"n\">Writing</span><span class=\"w\"> </span><span class=\"n\">objects</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"mi\">7</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mf\">1.84</span><span class=\"w\"> </span><span class=\"n\">KiB</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"mf\">1.84</span><span class=\"w\"> </span><span class=\"n\">MiB</span><span class=\"o\">/</span><span class=\"n\">s</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">done</span><span class=\"p\">.</span>\n<span class=\"w\">        </span><span class=\"n\">Total</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">delta</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">reused</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">delta</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">pack</span><span class=\"o\">-</span><span class=\"n\">reused</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">        </span><span class=\"n\">remote</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Resolving</span><span class=\"w\"> </span><span class=\"n\">deltas</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"o\">/</span><span class=\"mi\">6</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">completed</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"n\">local</span><span class=\"w\"> </span><span class=\"n\">objects</span><span class=\"p\">.</span>\n<span class=\"w\">        </span><span class=\"n\">remote</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"nc\">remote</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Create</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">pull</span><span class=\"w\"> </span><span class=\"n\">request</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">invoke_wave_enhancements</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">GitHub</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">visiting</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"nc\">remote</span><span class=\"p\">:</span><span class=\"w\">      </span><span class=\"nc\">https</span><span class=\"p\">:</span><span class=\"c1\">//github.com/tpmccallum/wasmtime/pull/new/invoke_wave_enhancements</span>\n<span class=\"w\">        </span><span class=\"n\">remote</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"nc\">To</span><span class=\"w\"> </span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"p\">:</span><span class=\"nc\">tpmccallum</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">git</span>\n<span class=\"w\">         </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">new</span><span class=\"w\"> </span><span class=\"n\">branch</span><span class=\"p\">]</span><span class=\"w\">          </span><span class=\"n\">invoke_wave_enhancements</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">invoke_wave_enhancements</span>\n</code></pre></div>\n<p>When creating the PR in the GitHub UI, the base repository is set to <code>pchickey/wasmtime</code>, but the drop-down for the base branch does not have a <code>pch/invoke_wave</code> option. Not sure if you want/need to push pch/invoke_wave to your fork so I can set it as the base?</p>\n<p>At this stage, I used main as the base because the changed files look relevant to the --invoke work specifically. So perhaps all is fine and you will see my changes.</p>\n<p>The PR is at <a href=\"https://github.com/pchickey/wasmtime/pull/1\">tpmccallum/wasmtime:invoke_wave_enhancements</a>.<br>\nI did not get to the CI errors today, only the CLI output messages and the documentation.</p>\n<p>Please let me know your thoughts, and I can get the CI done tomorrow. On that note, I was wondering if you wanted to rebase and bring the PR up to date with the current code base. Happy to be guided by you.</p>\n<p>Chat soon<br>\nThanks!</p>\n</blockquote>",
        "id": 509373807,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743491072
    },
    {
        "content": "<p>tpmccallum edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#issuecomment-2768318470\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>:</p>\n<blockquote>\n<p>Hi @pchickey, <br>\nI have implemented the error message, tested out a bunch of scenarios and also updated the documentation.<br>\nPlease see the details below.</p>\n<h2><a href=\"http://Run.rs\">Run.rs</a></h2>\n<h3><strong>Original/Before</strong> (Original error message)</h3>\n<p><strong>An example of a user typing <code>--invoke \"compress\"</code> </strong>(with quotes)<strong>.</strong></p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span><span class=\"s2\">\"compress\"</span><span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>parsing<span class=\"w\"> </span>invoke<span class=\"w\"> </span><span class=\"s2\">\"compress\"</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>end<span class=\"w\"> </span>of<span class=\"w\"> </span>input<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">8</span>..8\n</code></pre></div>\n<p><strong>An example of a user typing <code>--invoke compress</code> </strong>(no quotes)<strong>:</strong></p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span>compress<span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>parsing<span class=\"w\"> </span>invoke<span class=\"w\"> </span><span class=\"s2\">\"compress\"</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>end<span class=\"w\"> </span>of<span class=\"w\"> </span>input<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">8</span>..8\n</code></pre></div>\n<h3><strong>After</strong> (Confirming new error message that provides advice about quotes and parentheses)</h3>\n<p><strong>An example of a user typing `--invoke \"compress\" </strong>(with quotes)<strong>.</strong></p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span><span class=\"s2\">\"compress\"</span><span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>parse<span class=\"w\"> </span>invoke<span class=\"w\"> </span><span class=\"s1\">'compress'</span>:<span class=\"w\"> </span>invoked<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>calls<span class=\"w\"> </span>must<span class=\"w\"> </span>include<span class=\"w\"> </span>parentheses<span class=\"w\"> </span>after<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>name<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>quoted<span class=\"w\"> </span>wave<span class=\"w\"> </span>syntax<span class=\"w\"> </span><span class=\"o\">(</span>e.g.,<span class=\"w\"> </span><span class=\"s2\">\"compress()\"</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>end<span class=\"w\"> </span>of<span class=\"w\"> </span>input<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">8</span>..8\n</code></pre></div>\n<p><strong>An example of a user typing <code>--invoke compress</code> </strong>(no quotes)<strong>:</strong></p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span>compress<span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>main<span class=\"w\"> </span>module<span class=\"w\"> </span><span class=\"sb\">`</span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm<span class=\"sb\">`</span>\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>parse<span class=\"w\"> </span>invoke<span class=\"w\"> </span><span class=\"s1\">'compress'</span>:<span class=\"w\"> </span>invoked<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>calls<span class=\"w\"> </span>must<span class=\"w\"> </span>include<span class=\"w\"> </span>parentheses<span class=\"w\"> </span>after<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>name<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>quoted<span class=\"w\"> </span>wave<span class=\"w\"> </span>syntax<span class=\"w\"> </span><span class=\"o\">(</span>e.g.,<span class=\"w\"> </span><span class=\"s2\">\"compress()\"</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>end<span class=\"w\"> </span>of<span class=\"w\"> </span>input<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">8</span>..8\n</code></pre></div>\n<h3><strong>After</strong> (Testing functionality of invoking a function with arguments inside the parentheses)</h3>\n<p>I also updated the Rust function to accept a string argument and then tested that the proper escaping of the string argument worked:</p>\n<p>Command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>/Users/tpmccallum/test_wasmtime/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--invoke<span class=\"w\"> </span><span class=\"s2\">\"compress(\\\"hello\\\")\"</span><span class=\"w\"> </span>/Users/tpmccallum/testing_components/compress/target/wasm32-wasip1/debug/compress.wasm\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"o\">[</span><span class=\"m\">40</span>,<span class=\"w\"> </span><span class=\"m\">181</span>,<span class=\"w\"> </span><span class=\"m\">47</span>,<span class=\"w\"> </span><span class=\"m\">253</span>,<span class=\"w\"> </span><span class=\"m\">0</span>,<span class=\"w\"> </span><span class=\"m\">88</span>,<span class=\"w\"> </span><span class=\"m\">41</span>,<span class=\"w\"> </span><span class=\"m\">0</span>,<span class=\"w\"> </span><span class=\"m\">0</span>,<span class=\"w\"> </span><span class=\"m\">104</span>,<span class=\"w\"> </span><span class=\"m\">101</span>,<span class=\"w\"> </span><span class=\"m\">108</span>,<span class=\"w\"> </span><span class=\"m\">108</span>,<span class=\"w\"> </span><span class=\"m\">111</span><span class=\"o\">]</span>\n</code></pre></div>\n<h2>Documentation (<code>docs/cli-options.md</code>)</h2>\n<p>I also went ahead and updated the documentation that talks about <code>--invoke</code> with all of the above information (quotes, parenthesis, etc.).</p>\n<h2>Workflow</h2>\n<p>Below is how I pushed my changes. I hope this is what you were after, if not, please let me know.</p>\n<p>Created a new branch called <code>invoke_wave_enhancements</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>git<span class=\"w\"> </span>branch\n<span class=\"w\">          </span>invoke_wave\n<span class=\"w\">        </span>*<span class=\"w\"> </span>invoke_wave_enhancements\n<span class=\"w\">          </span>main\n\n$<span class=\"w\"> </span>git<span class=\"w\"> </span>status\n<span class=\"w\">    </span>modified:<span class=\"w\">   </span>docs/cli-options.md\n<span class=\"w\">    </span>modified:<span class=\"w\">   </span>src/commands/run.rs\n\n$<span class=\"w\"> </span>git<span class=\"w\"> </span>commit<span class=\"w\"> </span>-m<span class=\"w\"> </span><span class=\"s2\">\"Finalized enhancements for --invoke: error messages\"</span>\n<span class=\"w\">        </span><span class=\"o\">[</span>invoke_wave_enhancements<span class=\"w\"> </span>4a93050af<span class=\"o\">]</span><span class=\"w\"> </span>Finalized<span class=\"w\"> </span>enhancements<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>--invoke:<span class=\"w\"> </span>error<span class=\"w\"> </span>messages\n<span class=\"w\">        </span><span class=\"m\">2</span><span class=\"w\"> </span>files<span class=\"w\"> </span>changed,<span class=\"w\"> </span><span class=\"m\">37</span><span class=\"w\"> </span>insertions<span class=\"o\">(</span>+<span class=\"o\">)</span>,<span class=\"w\"> </span><span class=\"m\">5</span><span class=\"w\"> </span>deletions<span class=\"o\">(</span>-<span class=\"o\">)</span>\n\n$<span class=\"w\"> </span>git<span class=\"w\"> </span>push<span class=\"w\"> </span>origin<span class=\"w\"> </span>invoke_wave_enhancements\n<span class=\"w\">        </span>git<span class=\"w\"> </span>push<span class=\"w\"> </span>origin<span class=\"w\"> </span>invoke_wave_enhancements\n<span class=\"w\">        </span>Enumerating<span class=\"w\"> </span>objects:<span class=\"w\"> </span><span class=\"m\">13</span>,<span class=\"w\"> </span><span class=\"k\">done</span>.\n<span class=\"w\">        </span>Counting<span class=\"w\"> </span>objects:<span class=\"w\"> </span><span class=\"m\">100</span>%<span class=\"w\"> </span><span class=\"o\">(</span><span class=\"m\">13</span>/13<span class=\"o\">)</span>,<span class=\"w\"> </span><span class=\"k\">done</span>.\n<span class=\"w\">        </span>Delta<span class=\"w\"> </span>compression<span class=\"w\"> </span>using<span class=\"w\"> </span>up<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"m\">16</span><span class=\"w\"> </span>threads\n<span class=\"w\">        </span>Compressing<span class=\"w\"> </span>objects:<span class=\"w\"> </span><span class=\"m\">100</span>%<span class=\"w\"> </span><span class=\"o\">(</span><span class=\"m\">7</span>/7<span class=\"o\">)</span>,<span class=\"w\"> </span><span class=\"k\">done</span>.\n<span class=\"w\">        </span>Writing<span class=\"w\"> </span>objects:<span class=\"w\"> </span><span class=\"m\">100</span>%<span class=\"w\"> </span><span class=\"o\">(</span><span class=\"m\">7</span>/7<span class=\"o\">)</span>,<span class=\"w\"> </span><span class=\"m\">1</span>.84<span class=\"w\"> </span>KiB<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"m\">1</span>.84<span class=\"w\"> </span>MiB/s,<span class=\"w\"> </span><span class=\"k\">done</span>.\n<span class=\"w\">        </span>Total<span class=\"w\"> </span><span class=\"m\">7</span><span class=\"w\"> </span><span class=\"o\">(</span>delta<span class=\"w\"> </span><span class=\"m\">6</span><span class=\"o\">)</span>,<span class=\"w\"> </span>reused<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span><span class=\"o\">(</span>delta<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"o\">)</span>,<span class=\"w\"> </span>pack-reused<span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"w\">        </span>remote:<span class=\"w\"> </span>Resolving<span class=\"w\"> </span>deltas:<span class=\"w\"> </span><span class=\"m\">100</span>%<span class=\"w\"> </span><span class=\"o\">(</span><span class=\"m\">6</span>/6<span class=\"o\">)</span>,<span class=\"w\"> </span>completed<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"m\">6</span><span class=\"w\"> </span><span class=\"nb\">local</span><span class=\"w\"> </span>objects.\n<span class=\"w\">        </span>remote:\n<span class=\"w\">        </span>remote:<span class=\"w\"> </span>Create<span class=\"w\"> </span>a<span class=\"w\"> </span>pull<span class=\"w\"> </span>request<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"s1\">'invoke_wave_enhancements'</span><span class=\"w\"> </span>on<span class=\"w\"> </span>GitHub<span class=\"w\"> </span>by<span class=\"w\"> </span>visiting:\n<span class=\"w\">        </span>remote:<span class=\"w\">      </span>https://github.com/tpmccallum/wasmtime/pull/new/invoke_wave_enhancements\n<span class=\"w\">        </span>remote:\n<span class=\"w\">        </span>To<span class=\"w\"> </span>github.com:tpmccallum/wasmtime.git\n<span class=\"w\">         </span>*<span class=\"w\"> </span><span class=\"o\">[</span>new<span class=\"w\"> </span>branch<span class=\"o\">]</span><span class=\"w\">          </span>invoke_wave_enhancements<span class=\"w\"> </span>-&gt;<span class=\"w\"> </span>invoke_wave_enhancements\n</code></pre></div>\n<p>When creating the PR in the GitHub UI, the base repository is set to <code>pchickey/wasmtime</code>, but the drop-down for the base branch does not have a <code>pch/invoke_wave</code> option. Not sure if you want/need to push <code>pch/invoke_wave</code> to your fork so I can set it in the drop-down for the base?</p>\n<p>At this stage, I used main as the base because the changed files look relevant to the <code>--invoke</code> work specifically. So perhaps all is fine and you will see my changes.</p>\n<p>The PR is at <a href=\"https://github.com/pchickey/wasmtime/pull/1\">tpmccallum/wasmtime:invoke_wave_enhancements</a>.<br>\nI did not get to fixing the CI errors today, only the CLI output messages and the documentation.</p>\n<p>Please let me know your thoughts, and I can get the CI done tomorrow. On that note, I was wondering if you wanted to rebase and bring the PR up to date with the current code base. Happy to be guided by you.</p>\n<p>Chat soon<br>\nThanks!</p>\n</blockquote>",
        "id": 509417294,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743504333
    },
    {
        "content": "<p>tpmccallum <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#issuecomment-2771817012\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>:</p>\n<blockquote>\n<p>Update at <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10511\">https://github.com/bytecodealliance/wasmtime/pull/10511</a></p>\n</blockquote>",
        "id": 509634307,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743582952
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>.</p>",
        "id": 509716339,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743604769
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>.</p>",
        "id": 510237712,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743782296
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>.</p>",
        "id": 510302776,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743806654
    },
    {
        "content": "<p><strong>pchickey</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a> as ready for review.</p>",
        "id": 510302855,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743806704
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>.</p>",
        "id": 510302859,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743806705
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>.</p>",
        "id": 510302860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743806705
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>.</p>",
        "id": 510302862,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743806705
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>:</p>\n<blockquote>\n<p>This PR does two things:</p>\n<ul>\n<li>\n<p>adds the methods <code>exports</code> and <code>exports_rec</code> to Wasmtime's <code>Component</code> type. These expose iterators for the exported <code>ComponentItem</code>, as well as their string and <code>ComponentExportIndex</code> names, of the top level of a component, and recursively in all of the exports of a component, respectively. These methods are motivated by needing to search for export functions with a given suffix.</p>\n</li>\n<li>\n<p>adds support for <code>wasmtime run --invoke &lt;wave-function-call&gt; component.wasm</code> to wasmtime-cli. In the existing invoke for modules, the user provides a bare function name, and only functions that do not take arguments are supported. For components, the argument to invoke is parsed into component vals using the existing wasm-wave parsing introduced in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8872\">https://github.com/bytecodealliance/wasmtime/pull/8872</a>.  We make some effort to provide useful error messages when   we can't parse the wave function call.</p>\n</li>\n</ul>\n</blockquote>",
        "id": 510303770,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743807245
    },
    {
        "content": "<p>tpmccallum submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#pullrequestreview-2744335730\">PR review</a>:</p>\n<blockquote>\n<p>There was an <a href=\"https://github.com/bytecodealliance/bytecodealliance.org/pull/126/files#r2029019335\">excellent suggestion to use single quotes</a> posted on the article about Invoke.<br>\nUsing single quotes to surround the whole function call negates the need to escape double quotes around string arguments.</p>\n</blockquote>",
        "id": 510312114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743812917
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029577341\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>$ wasmtime run --invoke 'initialize()' foo.wasm\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 510312115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743812918
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029577702\">PR review comment</a>:</p>",
        "id": 510312116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743812918
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029577808\">PR review comment</a>:</p>",
        "id": 510312117,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743812918
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029577505\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>The exported function's name and exported function's parentheses must both be enclosed in one set of single quotes, i.e. `'initialize()'`.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 510312118,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743812918
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029577661\">PR review comment</a>:</p>",
        "id": 510312119,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743812918
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029577864\">PR review comment</a>:</p>",
        "id": 510312120,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743812918
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029578060\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>$ wasmtime run --invoke 'initialize(\"Pi\", 3.14)' foo.wasm\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 510312121,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743812918
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029578183\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>$ wasmtime run --invoke 'add(1, 2)' foo.wasm\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 510312122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743812918
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029577918\">PR review comment</a>:</p>",
        "id": 510312123,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743812918
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029578353\">PR review comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>**Please note:** If you enclose your function call using double quotes, your string argument will require its double quotes to be escaped (escaping quotes is more complicated and harder to read and therefore not ideal). For example:\n\n```bash\nwasmtime run - invoke \"initialize(\\\"hello\\\")\" foo.wasm\n</code></pre></div>\n<h2><code>serve</code></h2>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">~~~</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 510312124,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743812918
    },
    {
        "content": "<p>tpmccallum submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#pullrequestreview-2744345692\">PR review</a>.</p>",
        "id": 510312578,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743813330
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029581782\">PR review comment</a>:</p>\n<blockquote>\n<p>I would like to revisit this logic (and will take some help if possible).<br>\nI discussed why Rust is not able to actually check for outer quotes in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10511#issuecomment-2774552109\">this comment </a>.<br>\nBut now that I realize we can use single quotes to surround the whole function there might be another way to attempt to detect the absence of surrounding quotes (that are passed, to Rust, from the CLI). I will try and get back to this in a few hours and do some local testing.</p>\n</blockquote>",
        "id": 510312579,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743813331
    },
    {
        "content": "<p>tpmccallum submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#pullrequestreview-2744352605\">PR review</a>.</p>",
        "id": 510312916,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743813607
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029584011\">PR review comment</a>:</p>\n<blockquote>\n<p>Just some inline updates that promote the use of <code>'</code> instead of <code>\"</code>.</p>\n</blockquote>",
        "id": 510312917,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743813607
    },
    {
        "content": "<p>tpmccallum edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#issuecomment-2693247368\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>:</p>\n<blockquote>\n<p>Hi @pchickey <br>\nThanks for the additional info. I got this working - and wrote <a href=\"https://github.com/bytecodealliance/bytecodealliance.org/pull/126\">an article</a>.<br>\nThanks again!<br>\nLet me know if you need/want me to do any further testing on this. Super happy to assist.</p>\n</blockquote>",
        "id": 510324519,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743822229
    },
    {
        "content": "<p>tpmccallum edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029581782\">PR review comment</a>.</p>",
        "id": 510324836,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743822472
    },
    {
        "content": "<p>tpmccallum deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029578353\">PR review comment</a>.</p>",
        "id": 510570473,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744006982
    },
    {
        "content": "<p>tpmccallum deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029578183\">PR review comment</a>.</p>",
        "id": 510570482,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744006991
    },
    {
        "content": "<p>tpmccallum deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029578060\">PR review comment</a>.</p>",
        "id": 510570487,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744006995
    },
    {
        "content": "<p>tpmccallum deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029577918\">PR review comment</a>.</p>",
        "id": 510570496,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744007002
    },
    {
        "content": "<p>tpmccallum deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029577864\">PR review comment</a>.</p>",
        "id": 510570505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744007007
    },
    {
        "content": "<p>tpmccallum deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029577808\">PR review comment</a>.</p>",
        "id": 510570517,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744007012
    },
    {
        "content": "<p>tpmccallum deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029577702\">PR review comment</a>.</p>",
        "id": 510570528,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744007017
    },
    {
        "content": "<p>tpmccallum deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029577661\">PR review comment</a>.</p>",
        "id": 510570536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744007022
    },
    {
        "content": "<p>tpmccallum deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029577505\">PR review comment</a>.</p>",
        "id": 510570545,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744007028
    },
    {
        "content": "<p>tpmccallum deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2029577341\">PR review comment</a>.</p>",
        "id": 510570552,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744007035
    },
    {
        "content": "<p>tpmccallum submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#pullrequestreview-2745770891\">PR review</a>.</p>",
        "id": 510581517,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744010857
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2030612746\">PR review comment</a>:</p>\n<blockquote>\n<p>Updates are ready at<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/pull/10533\">https://github.com/bytecodealliance/wasmtime/pull/10533</a></p>\n</blockquote>",
        "id": 510581519,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744010858
    },
    {
        "content": "<p>tpmccallum <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#issuecomment-2782288982\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>:</p>\n<blockquote>\n<p>Hi @pchickey and @alexcrichton <br>\nThanks for your patience. I have gotten around to some additional new work on a branch that handles the invoke quotes/parentheses and also takes care of the documentation about <code>invoke</code>'s quotes and parentheses, etc.<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/pull/10533\">https://github.com/bytecodealliance/wasmtime/pull/10533</a><br>\nThanks so much. <br>\nTim</p>\n</blockquote>",
        "id": 510581944,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744010992
    },
    {
        "content": "<p>tpmccallum submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#pullrequestreview-2745777611\">PR review</a>.</p>",
        "id": 510582074,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744011021
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2030617200\">PR review comment</a>:</p>\n<blockquote>\n<p>Updates at <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10533\">https://github.com/bytecodealliance/wasmtime/pull/10533</a></p>\n</blockquote>",
        "id": 510582075,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744011021
    },
    {
        "content": "<p>tpmccallum submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#pullrequestreview-2745778128\">PR review</a>.</p>",
        "id": 510582114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744011033
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2030617518\">PR review comment</a>:</p>\n<blockquote>\n<p>Updates at <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10533\">https://github.com/bytecodealliance/wasmtime/pull/10533</a></p>\n</blockquote>",
        "id": 510582116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744011033
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>.</p>",
        "id": 510719945,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744044086
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#pullrequestreview-2748057907\">PR review</a>.</p>",
        "id": 510765251,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744059318
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2031975424\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm personally a bit hesitant to add too many flavors of accessors for exports, but would it be possible to use <a href=\"https://docs.rs/wasmtime/latest/wasmtime/component/types/struct.Component.html#method.exports\"><code>types::Component::exports</code></a> here instead of adding these iterators?</p>\n</blockquote>",
        "id": 510765252,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744059318
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2031976441\">PR review comment</a>:</p>\n<blockquote>\n<p>Is this still necessary? This currently compiles on CI so the ignoring the warning may not be necessary.</p>\n</blockquote>",
        "id": 510765253,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744059318
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2031977529\">PR review comment</a>:</p>\n<blockquote>\n<p>Mind updating the docs here to clarify that this information related to <code>--invoke</code> is component-specific? For example the module/component <code>--invoke</code> arguments behave pretty differently</p>\n</blockquote>",
        "id": 510765254,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744059318
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2031996092\">PR review comment</a>:</p>\n<blockquote>\n<p>FWIW I think the long string above is causing rustfmt to bail out here.</p>\n</blockquote>",
        "id": 510765255,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744059318
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2031995609\">PR review comment</a>:</p>\n<blockquote>\n<p>Personally I'm a bit wary to eagerly include help text like this without more detection around what was being done. Could this perhaps instead link to the wave syntax document for now as an intro to what syntax is expected?</p>\n</blockquote>",
        "id": 510765257,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744059318
    },
    {
        "content": "<p>tpmccallum submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#pullrequestreview-2748407748\">PR review</a>.</p>",
        "id": 510792353,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744073092
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2032207909\">PR review comment</a>:</p>\n<blockquote>\n<p>I believe it is still necessary, yes.<br>\nFor example, if I remove that line and then run the following:</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"go\">rustfmt --edition 2021 crates/wasmtime/src/runtime/wave/core.rs</span>\n<span class=\"go\">export CARGO_INCREMENTAL=0</span>\n<span class=\"go\">export CARGO_PROFILE_DEV_DEBUG=0</span>\n<span class=\"go\">export CARGO_PROFILE_TEST_DEBUG=0</span>\n<span class=\"go\">export RUSTFLAGS=\"-D warnings\"</span>\n<span class=\"go\">export WIT_REQUIRE_SEMICOLONS=1</span>\n<span class=\"go\">cargo clippy --workspace --all-targets</span>\n</code></pre></div>\n<p>An error appears:</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"go\">error: casting `u128` to `i64` may truncate the value</span>\n<span class=\"go\">   --&gt; crates/wasmtime/src/runtime/wave/core.rs:103:19</span>\n<span class=\"go\">    |</span>\n<span class=\"go\">103 |         let low = v as i64;</span>\n<span class=\"go\">    |                   ^^^^^^^^</span>\n<span class=\"go\">    |</span>\n<span class=\"go\">    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...</span>\n<span class=\"go\">    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation</span>\n<span class=\"go\">    = note: `-D clippy::cast-possible-truncation` implied by `-D warnings`</span>\n<span class=\"go\">    = help: to override `-D warnings` add `#[allow(clippy::cast_possible_truncation)]`</span>\n<span class=\"go\">help: ... or use `try_from` and handle the error accordingly</span>\n<span class=\"go\">    |</span>\n<span class=\"go\">103 -         let low = v as i64;</span>\n<span class=\"go\">103 +         let low = i64::try_from(v);</span>\n<span class=\"go\">    |</span>\n\n<span class=\"go\">error: could not compile `wasmtime` (lib) due to 1 previous error</span>\n</code></pre></div>\n<p>If I add the <code>#[allow(clippy::cast_possible_truncation)]</code> back on line <code>100</code> the error goes away.<br>\nI originally noticed the issue in the GitHub UI. Please see screen capture below:</p>\n<p>![Screenshot 2025-04-08 at 10 42 38](<a href=\"https://github.com/user-attachments/assets/ee17b4b8-fe79-4c98-accb-ebdb4e426bdb\">https://github.com/user-attachments/assets/ee17b4b8-fe79-4c98-accb-ebdb4e426bdb</a>)</p>\n</blockquote>",
        "id": 510792354,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744073093
    },
    {
        "content": "<p>tpmccallum submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#pullrequestreview-2748597048\">PR review</a>.</p>",
        "id": 510832799,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744085281
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2032344196\">PR review comment</a>:</p>\n<blockquote>\n<p>Sure thing Alex. Good point. I have updated and will have a new branch with all of these changes for you soon.</p>\n</blockquote>",
        "id": 510832800,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744085281
    },
    {
        "content": "<p>tpmccallum submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#pullrequestreview-2748601549\">PR review</a>.</p>",
        "id": 510833237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744085532
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2032346799\">PR review comment</a>:</p>\n<blockquote>\n<p>Sure thing, I will add a link in the message and take these examples out of the CLI's response.<br>\nChanges will also be on the new branch soon.</p>\n</blockquote>",
        "id": 510833238,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744085532
    },
    {
        "content": "<p>tpmccallum submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#pullrequestreview-2748657728\">PR review</a>.</p>",
        "id": 510838127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744088527
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2032385318\">PR review comment</a>:</p>\n<blockquote>\n<p>Updates at <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10544/files\">https://github.com/bytecodealliance/wasmtime/pull/10544/files</a></p>\n</blockquote>",
        "id": 510838128,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744088527
    },
    {
        "content": "<p>tpmccallum submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#pullrequestreview-2748657943\">PR review</a>.</p>",
        "id": 510838143,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744088538
    },
    {
        "content": "<p>tpmccallum created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2032385437\">PR review comment</a>:</p>\n<blockquote>\n<p>Updates at <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10544/files\">https://github.com/bytecodealliance/wasmtime/pull/10544/files</a></p>\n</blockquote>",
        "id": 510838144,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744088538
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>.</p>",
        "id": 511023651,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744145556
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#pullrequestreview-2757423193\">PR review</a>.</p>",
        "id": 511452585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744301437
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#discussion_r2037773426\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah ok makes sense, I think it's because the wave feature must not be enabled on the clippy run which would explain this a well</p>\n</blockquote>",
        "id": 511452587,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744301438
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>.</p>",
        "id": 511708882,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744395092
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>.</p>",
        "id": 511709151,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744395187
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>:</p>\n<blockquote>\n<p>This PR adds support for <code>wasmtime run --invoke &lt;wave-function-call&gt; component.wasm</code> to wasmtime-cli. In the existing invoke for modules, the user provides a bare function name, and only functions that do not take arguments are supported. For components, the argument to invoke is parsed into component vals using the existing wasm-wave parsing introduced in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8872\">https://github.com/bytecodealliance/wasmtime/pull/8872</a>.  We make some effort to provide useful error messages when   we can't parse the wave function call.</p>\n</blockquote>",
        "id": 511709802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744395428
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#issuecomment-2797713490\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>:</p>\n<blockquote>\n<p>@alexcrichton I rewrote the search for component exports to live in the wasmtime-cli and be much dumber/simpler than the borrowing version that was a method on Component.</p>\n</blockquote>",
        "id": 511709937,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744395482
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054#pullrequestreview-2761461882\">PR review</a>.</p>",
        "id": 511724713,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744401422
    },
    {
        "content": "<p>pchickey merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10054\">PR #10054</a>.</p>",
        "id": 511743924,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744410132
    }
]