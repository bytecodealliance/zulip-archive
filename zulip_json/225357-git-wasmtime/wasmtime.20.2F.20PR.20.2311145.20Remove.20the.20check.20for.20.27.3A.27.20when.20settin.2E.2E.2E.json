[
    {
        "content": "<p>rylev opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145\">PR #11145</a> from <code>rylev:remove-authority-check</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Authorities can have <code>:</code> in them when they are IPV6 addresses. With the current check it is impossible to use ipv6 addresses as authorities for outgoing http requests. </p>\n<p>It's not clear to me why the check was added in the first place, so I might be missing something obvious here why the check is necessary. <br>\n</p>\n</blockquote>",
        "id": 526047306,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751017221
    },
    {
        "content": "<p><strong>rylev</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-wasi-reviewers\">wasmtime-wasi-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145\">PR #11145</a>.</p>",
        "id": 526047310,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751017221
    },
    {
        "content": "<p><strong>rylev</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145\">PR #11145</a>.</p>",
        "id": 526055433,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751020276
    },
    {
        "content": "<p><strong>rylev</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145\">PR #11145</a>.</p>",
        "id": 526055434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751020276
    },
    {
        "content": "<p>rylev updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145\">PR #11145</a>.</p>",
        "id": 526055436,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751020277
    },
    {
        "content": "<p>dicej <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145#issuecomment-3013167611\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145\">PR #11145</a>:</p>\n<blockquote>\n<p>It looks like the check for <code>:</code> was an attempt to validate <a href=\"https://github.com/WebAssembly/wasi-http/blob/d97efe470e4d1e3f959162d81eef9666335bc186/wit/types.wit#L370-L373\">this</a>:</p>\n<blockquote>\n<p>The HTTP and HTTPS schemes always require an authority. Fails if the string given is not a syntactically valid URI authority.</p>\n</blockquote>\n<p>Presumably, that means it should _not_ contain a port number.  So if we update the check to ensure it doesn't end with a colon followed by zero or more digits (e.g. the regex <code>:[0-9]*</code>), that should allow IPv6 addresses but still disallow port numbers.</p>\n</blockquote>",
        "id": 526088901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751032414
    },
    {
        "content": "<p>badeend <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145#issuecomment-3013191859\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145\">PR #11145</a>:</p>\n<blockquote>\n<p>From <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7451\">the PR that introduced this check</a>, I can't reverse engineer why this check was added. </p>\n<p>The URI authority  _can_ include the port. As matter of fact, it is the _only_ way in the wasi-http interface the declare the port number.</p>\n<p>Taking the code at face value, I _think_ what it tried to check for is that: when a port is provided it shall be a valid u16.<br>\nA better way to write this could be:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">auth</span><span class=\"p\">.</span><span class=\"n\">port</span><span class=\"p\">().</span><span class=\"n\">is_some</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">auth</span><span class=\"p\">.</span><span class=\"n\">port_u16</span><span class=\"p\">().</span><span class=\"n\">is_none</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"nb\">Err</span><span class=\"p\">(()));</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>I agree with the general sentiment of this PR: <code>http::uri::Authority::from_str</code> alone is likely better equipped to validate URI's than ad-hoc validations in wasmtime itself.</p>\n<p>Could you add a test that checks a IPv6 address +/- a port number passes the validation? E.g. <code>\"[::]:443\"</code></p>\n</blockquote>",
        "id": 526090826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751032926
    },
    {
        "content": "<p>badeend edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145#issuecomment-3013191859\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145\">PR #11145</a>:</p>\n<blockquote>\n<p>From <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7451\">the PR that introduced this check</a>, I can't reverse engineer why this check was added. </p>\n<p>The URI authority  _can_ include the port. As matter of fact, it is the _only_ way in the wasi-http interface to declare the port number.</p>\n<p>Taking the code at face value, I _think_ what it tried to check for is that: when a port is provided it shall be a valid u16.<br>\nA better way to write this could be:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">auth</span><span class=\"p\">.</span><span class=\"n\">port</span><span class=\"p\">().</span><span class=\"n\">is_some</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">auth</span><span class=\"p\">.</span><span class=\"n\">port_u16</span><span class=\"p\">().</span><span class=\"n\">is_none</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"nb\">Err</span><span class=\"p\">(()));</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Maybe there's still value in keeping such a validation around.</p>\n<p>Other than that: I agree with the general sentiment of this PR: <code>http::uri::Authority::from_str</code> alone is likely better equipped to validate URI's than ad-hoc validations in wasmtime itself.</p>\n<p>Could you add a test that checks a IPv6 address +/- a port number passes the validation? E.g. <code>\"[::]:443\"</code></p>\n</blockquote>",
        "id": 526091084,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751033012
    },
    {
        "content": "<p>dicej edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145#issuecomment-3013167611\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145\">PR #11145</a>:</p>\n<blockquote>\n<p><del>It looks like the check for <code>:</code> was an attempt to validate <a href=\"https://github.com/WebAssembly/wasi-http/blob/d97efe470e4d1e3f959162d81eef9666335bc186/wit/types.wit#L370-L373\">this</a>:</del></p>\n<blockquote>\n<p>The HTTP and HTTPS schemes always require an authority. Fails if the string given is not a syntactically valid URI authority.</p>\n</blockquote>\n<p><del>Presumably, that means it should _not_ contain a port number.  So if we update the check to ensure it doesn't end with a colon followed by zero or more digits (e.g. the regex <code>:[0-9]*</code>), that should allow IPv6 addresses but still disallow port numbers.</del>  EDIT: Disregard what I wrote.  Reading the code more carefully, I see the code was not trying to disallow specifying the host.  I don't know what it was trying to do <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> </p>\n</blockquote>",
        "id": 526091234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751033054
    },
    {
        "content": "<p>dicej edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145#issuecomment-3013167611\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145\">PR #11145</a>:</p>\n<blockquote>\n<p><del>It looks like the check for <code>:</code> was an attempt to validate <a href=\"https://github.com/WebAssembly/wasi-http/blob/d97efe470e4d1e3f959162d81eef9666335bc186/wit/types.wit#L370-L373\">this</a>:</del></p>\n<blockquote>\n<p>The HTTP and HTTPS schemes always require an authority. Fails if the string given is not a syntactically valid URI authority.</p>\n</blockquote>\n<p><del>Presumably, that means it should _not_ contain a port number.  So if we update the check to ensure it doesn't end with a colon followed by zero or more digits (e.g. the regex <code>:[0-9]*</code>), that should allow IPv6 addresses but still disallow port numbers.</del>  EDIT: Disregard what I wrote.  Reading the code more carefully, I see the code was not trying to disallow specifying the port.  I don't know what it was trying to do <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> </p>\n</blockquote>",
        "id": 526091434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751033105
    },
    {
        "content": "<p>badeend edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145#issuecomment-3013191859\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145\">PR #11145</a>:</p>\n<blockquote>\n<p>From <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7451\">the PR that introduced this check</a>, I can't reverse engineer why this check was added. </p>\n<p>The URI authority  _can_ include the port. As matter of fact, it is the _only_ way in the wasi-http interface to declare the port number.</p>\n<p>Taking the code at face value, I _think_ what it tried to check for is that: when a port is provided it shall be a valid u16. For example: <code>http://bad-port:99999</code> is syntactically a valid URI authority, but <code>99999</code> is not a valid port number.<br>\nA better way to write this could be:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">auth</span><span class=\"p\">.</span><span class=\"n\">port</span><span class=\"p\">().</span><span class=\"n\">is_some</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">auth</span><span class=\"p\">.</span><span class=\"n\">port_u16</span><span class=\"p\">().</span><span class=\"n\">is_none</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"nb\">Err</span><span class=\"p\">(()));</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Maybe there's still value in keeping such a validation around.</p>\n<p>Other than that: I agree with the general sentiment of this PR: <code>http::uri::Authority::from_str</code> alone is likely better equipped to validate URI's than ad-hoc validations in wasmtime itself.</p>\n<p>Could you add a test that checks a IPv6 address +/- a port number passes the validation? E.g. <code>\"[::]:443\"</code></p>\n</blockquote>",
        "id": 526091597,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751033145
    },
    {
        "content": "<p>dicej edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145#issuecomment-3013167611\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145\">PR #11145</a>:</p>\n<blockquote>\n<p><del>It looks like the check for <code>:</code> was an attempt to validate <a href=\"https://github.com/WebAssembly/wasi-http/blob/d97efe470e4d1e3f959162d81eef9666335bc186/wit/types.wit#L370-L373\">this</a>:</del></p>\n<blockquote>\n<p>The HTTP and HTTPS schemes always require an authority. Fails if the string given is not a syntactically valid URI authority.</p>\n</blockquote>\n<p><del>Presumably, that means it should _not_ contain a port number.  So if we update the check to ensure it doesn't end with a colon followed by zero or more digits (e.g. the regex <code>:[0-9]*</code>), that should allow IPv6 addresses but still disallow port numbers.</del>  EDIT: Disregard what I wrote.  Reading the code more carefully, I see it was not trying to disallow specifying the port.  I don't know what it was trying to do <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> </p>\n</blockquote>",
        "id": 526092194,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751033326
    },
    {
        "content": "<p>rylev updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145\">PR #11145</a>.</p>",
        "id": 526093741,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751033791
    },
    {
        "content": "<p>rylev <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145#issuecomment-3013235370\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145\">PR #11145</a>:</p>\n<blockquote>\n<p>FYI: the check suggested of...</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">auth</span><span class=\"p\">.</span><span class=\"n\">port</span><span class=\"p\">().</span><span class=\"n\">is_some</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">auth</span><span class=\"p\">.</span><span class=\"n\">port_u16</span><span class=\"p\">().</span><span class=\"n\">is_none</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"nb\">Err</span><span class=\"p\">(()));</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>... won't work as <code>auth.port()</code> already parses the port as a u16. So if <code>auth.port().is_some()</code> is true - <code>auth.port_u16()</code> will also be <code>Some</code>. </p>\n<p>I have pushed a test for ipv6 with and without a port. </p>\n</blockquote>",
        "id": 526093843,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751033813
    },
    {
        "content": "<p>badeend <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145#issuecomment-3013256716\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145\">PR #11145</a>:</p>\n<blockquote>\n<p>Hmm. I see. In that case, I don't know why that check was there.</p>\n</blockquote>",
        "id": 526095382,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751034189
    },
    {
        "content": "<p>badeend submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145#pullrequestreview-2966792523\">PR review</a>.</p>",
        "id": 526095676,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751034268
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11145\">PR #11145</a>.</p>",
        "id": 526102042,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751036067
    }
]