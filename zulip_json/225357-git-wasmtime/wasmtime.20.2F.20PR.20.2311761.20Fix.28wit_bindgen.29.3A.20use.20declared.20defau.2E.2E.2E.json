[
    {
        "content": "<p>anlavandier opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11761\">PR #11761</a> from <code>anlavandier:fix/bindgen-send</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;<br>\nFixes #11752.</p>\n<p>This change will ensure that <code>bindgen!</code> invocation with <code>imports/exports: { default: async }</code> will require generate <code>T: Send</code> bounds in <code>WorldName::add_to_linker&lt;T, D&gt;</code> even when the world doesn't import functions directly and only imports interfaces defined in another module. </p>\n<p>An example of code that currently doesn't (but in my opinion) compile and will now compile is in the linked issue. It is reproduced below with minor touch-ups for convenience.</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package example:example;\n\ninterface api {\n    foo: func();\n}\n\nworld bar {\n    import api;\n    export baz: func();\n}\n\nworld api-impl {\n    import api;\n}\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">bindgen</span><span class=\"p\">;</span>\n\n<span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">world</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"bar\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"wit/example.wit\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">with</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"s\">\"example:example/api\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">async_impl</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">imports</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">default</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">async</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">});</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">async_impl</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">bindgen</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">        </span><span class=\"n\">world</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"api-impl\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"wit/example.wit\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">imports</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">default</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">async</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">});</span>\n\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">MyHost</span><span class=\"p\">;</span>\n\n\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">example</span><span class=\"p\">::</span><span class=\"n\">example</span><span class=\"p\">::</span><span class=\"n\">api</span><span class=\"p\">::{</span><span class=\"n\">Host</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">HostWithStore</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">add_to_linker</span><span class=\"p\">};</span>\n\n<span class=\"w\">    </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Host</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyHost</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n</code></pre></div>\n<p>The compile error is the following:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>error<span class=\"o\">[</span>E0277<span class=\"o\">]</span>:<span class=\"w\"> </span><span class=\"sb\">`</span>T<span class=\"sb\">`</span><span class=\"w\"> </span>cannot<span class=\"w\"> </span>be<span class=\"w\"> </span>sent<span class=\"w\"> </span>between<span class=\"w\"> </span>threads<span class=\"w\"> </span>safely\n<span class=\"w\">  </span>--&gt;<span class=\"w\"> </span>src/main.rs:3:1\n<span class=\"w\">   </span><span class=\"p\">|</span>\n<span class=\"m\">3</span><span class=\"w\">  </span><span class=\"p\">|</span><span class=\"w\"> </span>/<span class=\"w\"> </span>bindgen!<span class=\"o\">({</span>\n<span class=\"m\">4</span><span class=\"w\">  </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\">     </span>world:<span class=\"w\"> </span><span class=\"s2\">\"bar\"</span>,\n<span class=\"m\">5</span><span class=\"w\">  </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\">     </span>path:<span class=\"w\"> </span><span class=\"s2\">\"wit/example.wit\"</span>,\n<span class=\"m\">6</span><span class=\"w\">  </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\">     </span>with:<span class=\"w\"> </span><span class=\"o\">{</span>\n...<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"m\">12</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"o\">})</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"p\">|</span>__^<span class=\"w\"> </span><span class=\"sb\">`</span>T<span class=\"sb\">`</span><span class=\"w\"> </span>cannot<span class=\"w\"> </span>be<span class=\"w\"> </span>sent<span class=\"w\"> </span>between<span class=\"w\"> </span>threads<span class=\"w\"> </span>safely\n<span class=\"w\">   </span><span class=\"p\">|</span>\nnote:<span class=\"w\"> </span>required<span class=\"w\"> </span>by<span class=\"w\"> </span>a<span class=\"w\"> </span>bound<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"sb\">`</span>add_to_linker<span class=\"sb\">`</span>\n<span class=\"w\">  </span>--&gt;<span class=\"w\"> </span>src/main.rs:16:5\n<span class=\"w\">   </span><span class=\"p\">|</span>\n<span class=\"m\">16</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>/<span class=\"w\">     </span>bindgen!<span class=\"o\">({</span>\n<span class=\"m\">17</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\">         </span>world:<span class=\"w\"> </span><span class=\"s2\">\"api-impl\"</span>,\n<span class=\"m\">18</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\">         </span>path:<span class=\"w\"> </span><span class=\"s2\">\"wit/example.wit\"</span>,\n<span class=\"m\">19</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\">         </span>imports:<span class=\"w\"> </span><span class=\"o\">{</span>\n...<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"m\">22</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\">     </span><span class=\"o\">})</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"p\">|</span>______^<span class=\"w\"> </span>required<span class=\"w\"> </span>by<span class=\"w\"> </span>this<span class=\"w\"> </span>bound<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"sb\">`</span>add_to_linker<span class=\"sb\">`</span>\n<span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>this<span class=\"w\"> </span>error<span class=\"w\"> </span>originates<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>the<span class=\"w\"> </span>macro<span class=\"w\"> </span><span class=\"sb\">`</span>bindgen<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"k\">in</span><span class=\"w\"> </span>Nightly<span class=\"w\"> </span>builds,<span class=\"w\"> </span>run<span class=\"w\"> </span>with<span class=\"w\"> </span>-Z<span class=\"w\"> </span>macro-backtrace<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>more<span class=\"w\"> </span>info<span class=\"o\">)</span>\nhelp:<span class=\"w\"> </span>consider<span class=\"w\"> </span>further<span class=\"w\"> </span>restricting<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>parameter<span class=\"w\"> </span><span class=\"sb\">`</span>T<span class=\"sb\">`</span><span class=\"w\"> </span>with<span class=\"w\"> </span>trait<span class=\"w\"> </span><span class=\"sb\">`</span>Send<span class=\"sb\">`</span>\n<span class=\"w\">   </span><span class=\"p\">|</span>\n<span class=\"m\">12</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span><span class=\"o\">})</span>,<span class=\"w\"> </span>T:<span class=\"w\"> </span>std::marker::Send<span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"p\">|</span><span class=\"w\">   </span>++++++++++++++++++++++\n\nFor<span class=\"w\"> </span>more<span class=\"w\"> </span>information<span class=\"w\"> </span>about<span class=\"w\"> </span>this<span class=\"w\"> </span>error,<span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"sb\">`</span>rustc<span class=\"w\"> </span>--explain<span class=\"w\"> </span>E0277<span class=\"sb\">`</span>.\nerror:<span class=\"w\"> </span>could<span class=\"w\"> </span>not<span class=\"w\"> </span>compile<span class=\"w\"> </span><span class=\"sb\">`</span>component-model-test<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span>bin<span class=\"w\"> </span><span class=\"s2\">\"component-model-test\"</span><span class=\"o\">)</span><span class=\"w\"> </span>due<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>previous<span class=\"w\"> </span>error\n</code></pre></div>\n</blockquote>",
        "id": 542245200,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759230409
    },
    {
        "content": "<p><strong>anlavandier</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11761\">PR #11761</a>.</p>",
        "id": 542245203,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759230410
    },
    {
        "content": "<p><strong>anlavandier</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11761\">PR #11761</a>.</p>",
        "id": 542245204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759230410
    },
    {
        "content": "<p>anlavandier <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11761#issuecomment-3351847794\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11761\">PR #11761</a>:</p>\n<blockquote>\n<p>This PR makes the CI fail when comparing against previous expansions. If this contribution is deemed useful then changing the relevant files in <code>crates/component-macro/tests/expanded/</code> is easy to do. I didn't do it at first because it would add a lot of changes that aren't related to the main point of this PR.  </p>\n</blockquote>",
        "id": 542262846,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759235534
    },
    {
        "content": "<p>anlavandier edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11761#issuecomment-3351847794\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11761\">PR #11761</a>:</p>\n<blockquote>\n<p>This PR makes the CI fail when comparing against previous expansions. If this contribution is deemed useful then changing the relevant files in <code>crates/component-macro/tests/expanded/</code> is easy to do. I didn't do it for now because it would add a lot of changes that aren't related to the main point of this PR.  </p>\n</blockquote>",
        "id": 542298211,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759243969
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11761#issuecomment-3353559784\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11761\">PR #11761</a>:</p>\n<blockquote>\n<p>Seems reasonable enough to me, thanks! Would you be up for adding a test for this as well? (e.g. writing down your example in this PR in <code>tests/codegen.rs</code>). Then including the test updates in the <code>expanded</code> directory should be fine as well.</p>\n</blockquote>",
        "id": 542354946,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759261495
    },
    {
        "content": "<p>anlavandier updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11761\">PR #11761</a>.</p>",
        "id": 542439311,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759308323
    },
    {
        "content": "<p>anlavandier <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11761#issuecomment-3355348979\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11761\">PR #11761</a>:</p>\n<blockquote>\n<blockquote>\n<p>Seems reasonable enough to me, thanks! Would you be up for adding a test for this as well? (e.g. writing down your example in this PR in <code>tests/codegen.rs</code>). Then including the test updates in the <code>expanded</code> directory should be fine as well.</p>\n</blockquote>\n<p>@alexcrichton Done in the latest commits. If you have better ideas for names in the example added in <code>codegen.rs</code> I'm happy to oblige.</p>\n</blockquote>",
        "id": 542439581,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759308412
    },
    {
        "content": "<p>anlavandier updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11761\">PR #11761</a>.</p>",
        "id": 542440981,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759308784
    },
    {
        "content": "<p>anlavandier updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11761\">PR #11761</a>.</p>",
        "id": 542441460,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759308919
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11761#pullrequestreview-3289437986\">PR review</a>.</p>",
        "id": 542507518,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759328131
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11761\">PR #11761</a>.</p>",
        "id": 542513319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759329540
    }
]