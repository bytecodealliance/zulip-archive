[
    {
        "content": "<p>mihaly-sisak opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10114\">issue #10114</a>:</p>\n<blockquote>\n<p>Hello all! <br>\nThis is my first time touching Rust code and I feel a little bit lost.<br>\nI am more familiar with C so I wanted to give the c-api a try.<br>\nI found these tutorials: <a href=\"https://docs.wasmtime.dev/examples-c-gcd.html\">https://docs.wasmtime.dev/examples-c-gcd.html</a></p>\n<p>However, I ran into an error. I did not have <code>wasmtime_wat2wasm</code> defined.<br>\nI stumbled upon <code>WASMTIME_FEATURE_LIST</code>.<br>\nI managed to fix this by adding <code>wat = [\"dep:wat\", \"wasmtime/wat\"]</code> to <code>crates/c-api/Cargo.toml</code>, adding <code>\"WAT\",</code> to <code>crates/c-api/build.rs</code>, and compiling with <code>cargo build --release --package wasmtime-c-api --features wasmtime-c-api/wat</code>.</p>\n<p>What is the expected action if I want to enable/disable features? Do I need to modify <code>build.rs</code>, <code>Cargo.toml</code> and <code>features.cmake</code> to match? Or is it supposed to be matching automatically and I am just so new to cargo that I cant figure it out?</p>\n</blockquote>",
        "id": 495907269,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737841112
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10114#issuecomment-2616530870\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10114\">issue #10114</a>:</p>\n<blockquote>\n<p>Thanks for the report! I think you've found a bug in our configuration and the changes you made were correct. I've pushed those up as <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10124\">https://github.com/bytecodealliance/wasmtime/pull/10124</a>, although if you'd like to send a PR as well I'm happy to close that too in favor of yours!</p>\n<p>In terms of expectations: no, you shouldn't have to do this. Features should be toggle-able with <code>cargo build</code> or the cmake-based build, whichever you're using. The example you linked to just needs to ensure that the \"wat\" feature was enabled when building the C library.</p>\n</blockquote>",
        "id": 496183041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738000969
    },
    {
        "content": "<p>mihaly-sisak closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10114\">issue #10114</a>:</p>\n<blockquote>\n<p>Hello all! <br>\nThis is my first time touching Rust code and I feel a little bit lost.<br>\nI am more familiar with C so I wanted to give the c-api a try.<br>\nI found these tutorials: <a href=\"https://docs.wasmtime.dev/examples-c-gcd.html\">https://docs.wasmtime.dev/examples-c-gcd.html</a></p>\n<p>However, I ran into an error. I did not have <code>wasmtime_wat2wasm</code> defined.<br>\nI stumbled upon <code>WASMTIME_FEATURE_LIST</code>.<br>\nI managed to fix this by adding <code>wat = [\"dep:wat\", \"wasmtime/wat\"]</code> to <code>crates/c-api/Cargo.toml</code>, adding <code>\"WAT\",</code> to <code>crates/c-api/build.rs</code>, and compiling with <code>cargo build --release --package wasmtime-c-api --features wasmtime-c-api/wat</code>.</p>\n<p>What is the expected action if I want to enable/disable features? Do I need to modify <code>build.rs</code>, <code>Cargo.toml</code> and <code>features.cmake</code> to match? Or is it supposed to be matching automatically and I am just so new to cargo that I cant figure it out?</p>\n</blockquote>",
        "id": 496204422,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738008866
    },
    {
        "content": "<p>mihaly-sisak <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10114#issuecomment-2616796299\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10114\">issue #10114</a>:</p>\n<blockquote>\n<p>Oh, so the cargo and cmake builds are 2 separate ways to achieve the same thing. Thank you for clearing up my confusion!</p>\n</blockquote>",
        "id": 496204424,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738008867
    }
]