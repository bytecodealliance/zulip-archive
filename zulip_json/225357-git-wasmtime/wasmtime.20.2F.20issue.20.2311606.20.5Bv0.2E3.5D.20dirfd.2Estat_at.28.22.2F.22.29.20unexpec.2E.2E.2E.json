[
    {
        "content": "<p>wingo opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\">issue #11606</a>:</p>\n<blockquote>\n<h2>Summary</h2>\n<p>I can stat-at \"/\", whereas the filesystem spec says that any path that starts with / should result in <code>not-permitted</code>.</p>\n<h2>Test case</h2>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">process</span><span class=\"p\">;</span>\n<span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">wit_bindgen</span><span class=\"p\">;</span>\n\n<span class=\"n\">wit_bindgen</span><span class=\"p\">::</span><span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">inline</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">r</span><span class=\"s\">\"</span>\n<span class=\"s\">  package test:test;</span>\n\n<span class=\"s\">  world test {</span>\n<span class=\"s\">      include wasi:filesystem/imports@0.3.0-rc-2025-08-15;</span>\n<span class=\"s\">      include wasi:cli/command@0.3.0-rc-2025-08-15;</span>\n<span class=\"s\">  }</span>\n<span class=\"s\">\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">additional_derives</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">PartialEq</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Eq</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Hash</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Clone</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"c1\">// Work around https://github.com/bytecodealliance/wasm-tools/issues/2285.</span>\n<span class=\"w\">    </span><span class=\"n\">features</span><span class=\"p\">:[</span><span class=\"s\">\"clocks-timezone\"</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"s\">\"wasi:cli/run@0.3.0-rc-2025-08-15#run\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"n\">generate_all</span>\n<span class=\"p\">});</span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">filesystem</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::{</span><span class=\"n\">PathFlags</span><span class=\"p\">,</span><span class=\"n\">ErrorCode</span><span class=\"p\">};</span>\n\n<span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">test_filesystem</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">filesystem</span><span class=\"p\">::</span><span class=\"n\">preopens</span><span class=\"p\">::</span><span class=\"n\">get_directories</span><span class=\"p\">()[</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"p\">[(</span><span class=\"n\">dirfd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)]</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span><span class=\"n\">dirfd</span><span class=\"p\">.</span><span class=\"n\">stat_at</span><span class=\"p\">(</span><span class=\"n\">PathFlags</span><span class=\"p\">::</span><span class=\"n\">empty</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"s\">\"/\"</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">()).</span><span class=\"k\">await</span><span class=\"p\">,</span>\n<span class=\"w\">                       </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">ErrorCode</span><span class=\"p\">::</span><span class=\"n\">NotPermitted</span><span class=\"p\">));</span>\n<span class=\"w\">        </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"fm\">eprintln!</span><span class=\"p\">(</span><span class=\"s\">\"usage: run with one open dir\"</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"n\">process</span><span class=\"p\">::</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Component</span><span class=\"p\">;</span>\n<span class=\"n\">export</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">Component</span><span class=\"p\">);</span>\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">exports</span><span class=\"p\">::</span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">cli</span><span class=\"p\">::</span><span class=\"n\">run</span><span class=\"p\">::</span><span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Component</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">run</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">test_filesystem</span><span class=\"p\">().</span><span class=\"k\">await</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"fm\">unreachable!</span><span class=\"p\">(</span><span class=\"s\">\"main is a stub\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Run as:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">mkdir</span><span class=\"w\"> </span><span class=\"n\">fs</span><span class=\"o\">-</span><span class=\"n\">tests</span><span class=\"p\">.</span><span class=\"n\">dir</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">fs</span><span class=\"o\">-</span><span class=\"n\">tests</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wcomponent</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"o\">-</span><span class=\"k\">async</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Sp3</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 537636927,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756980600
    },
    {
        "content": "<p><a href=\"https://github.com/wingo\">wingo</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\">Issue #11606</a>.</p>",
        "id": 537636931,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756980601
    },
    {
        "content": "<p>wingo edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\">issue #11606</a>:</p>\n<blockquote>\n<h2>Summary</h2>\n<p>I can stat-at \"/\", whereas the filesystem spec says that any path that starts with / should result in <code>not-permitted</code>.</p>\n<h2>Test case</h2>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">process</span><span class=\"p\">;</span>\n<span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">wit_bindgen</span><span class=\"p\">;</span>\n\n<span class=\"n\">wit_bindgen</span><span class=\"p\">::</span><span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">inline</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">r</span><span class=\"s\">\"</span>\n<span class=\"s\">  package test:test;</span>\n\n<span class=\"s\">  world test {</span>\n<span class=\"s\">      include wasi:filesystem/imports@0.3.0-rc-2025-08-15;</span>\n<span class=\"s\">      include wasi:cli/command@0.3.0-rc-2025-08-15;</span>\n<span class=\"s\">  }</span>\n<span class=\"s\">\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">additional_derives</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">PartialEq</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Eq</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Hash</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Clone</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"c1\">// Work around https://github.com/bytecodealliance/wasm-tools/issues/2285.</span>\n<span class=\"w\">    </span><span class=\"n\">features</span><span class=\"p\">:[</span><span class=\"s\">\"clocks-timezone\"</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"s\">\"wasi:cli/run@0.3.0-rc-2025-08-15#run\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"n\">generate_all</span>\n<span class=\"p\">});</span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">filesystem</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::{</span><span class=\"n\">PathFlags</span><span class=\"p\">,</span><span class=\"n\">ErrorCode</span><span class=\"p\">};</span>\n\n<span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">test_filesystem</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">filesystem</span><span class=\"p\">::</span><span class=\"n\">preopens</span><span class=\"p\">::</span><span class=\"n\">get_directories</span><span class=\"p\">()[</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"p\">[(</span><span class=\"n\">dirfd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)]</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span><span class=\"n\">dirfd</span><span class=\"p\">.</span><span class=\"n\">stat_at</span><span class=\"p\">(</span><span class=\"n\">PathFlags</span><span class=\"p\">::</span><span class=\"n\">empty</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"s\">\"/\"</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">()).</span><span class=\"k\">await</span><span class=\"p\">,</span>\n<span class=\"w\">                       </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">ErrorCode</span><span class=\"p\">::</span><span class=\"n\">NotPermitted</span><span class=\"p\">));</span>\n<span class=\"w\">        </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"fm\">eprintln!</span><span class=\"p\">(</span><span class=\"s\">\"usage: run with one open dir\"</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"n\">process</span><span class=\"p\">::</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Component</span><span class=\"p\">;</span>\n<span class=\"n\">export</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">Component</span><span class=\"p\">);</span>\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">exports</span><span class=\"p\">::</span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">cli</span><span class=\"p\">::</span><span class=\"n\">run</span><span class=\"p\">::</span><span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Component</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">run</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">test_filesystem</span><span class=\"p\">().</span><span class=\"k\">await</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"fm\">unreachable!</span><span class=\"p\">(</span><span class=\"s\">\"main is a stub\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Run as:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">mkdir</span><span class=\"w\"> </span><span class=\"n\">fs</span><span class=\"o\">-</span><span class=\"n\">tests</span><span class=\"p\">.</span><span class=\"n\">dir</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">fs</span><span class=\"o\">-</span><span class=\"n\">tests</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wcomponent</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"o\">-</span><span class=\"k\">async</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Sp3</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<p>Output:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">assertion</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">failed</span>\n<span class=\"w\">  </span><span class=\"n\">left</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">DescriptorStat</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">type</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">DescriptorType</span><span class=\"p\">::</span><span class=\"n\">Directory</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">link</span><span class=\"o\">-</span><span class=\"n\">count</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">4096</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">access</span><span class=\"o\">-</span><span class=\"n\">timestamp</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">Datetime</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">seconds</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1755768485</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">nanoseconds</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">715466563</span><span class=\"w\"> </span><span class=\"p\">}),</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">modification</span><span class=\"o\">-</span><span class=\"n\">timestamp</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">Datetime</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">seconds</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1755095399</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">nanoseconds</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">980128269</span><span class=\"w\"> </span><span class=\"p\">}),</span><span class=\"w\"> </span><span class=\"n\">status</span><span class=\"o\">-</span><span class=\"n\">change</span><span class=\"o\">-</span><span class=\"n\">timestamp</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">Datetime</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">seconds</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1755086421</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">nanoseconds</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">967089397</span><span class=\"w\"> </span><span class=\"p\">})</span><span class=\"w\"> </span><span class=\"p\">})</span>\n<span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">ErrorCode</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"not-permitted\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"Operation not permitted, similar to `EPERM` in POSIX.\"</span><span class=\"w\"> </span><span class=\"p\">})</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 537637108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756980659
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasi:impl label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\">Issue #11606</a>.</p>",
        "id": 537687046,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756996293
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasi label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\">Issue #11606</a>.</p>",
        "id": 537687048,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756996293
    },
    {
        "content": "<p>wingo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606#issuecomment-3254173862\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\">issue #11606</a>:</p>\n<blockquote>\n<p>Same bug for <code>metadata-hash-at(\"/\")</code>.</p>\n</blockquote>",
        "id": 537695888,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756998610
    },
    {
        "content": "<p>wingo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606#issuecomment-3254188025\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\">issue #11606</a>:</p>\n<blockquote>\n<p>FWIW, this is actually a sandbox escape, but only for <code>/</code>, and so far I have only been able to repro with <code>stat</code> and <code>metadata-hash-at</code>, and not with anything that goes through <code>openat</code> instead of straight to <code>statx</code>.  Still testing all the foo-at methods though.</p>\n</blockquote>",
        "id": 537696809,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756998846
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606#issuecomment-3255463550\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\">issue #11606</a>:</p>\n<blockquote>\n<p>This might be something where we end up having to update the specification as my gut is that it's pretty heavily baked in everywhere that <code>/foo</code> works in WASI (e.g. wasi-libc and all its dependents).</p>\n<p>Could you elaborate a bit more on the sandbox escape point though? Are you thinking that this ends up looking at the host's <code>/</code> root folder? I would expect that this would be looking at the folder itself passed to openat/statat/etc, so <code>/</code> is more like a relative root instead of the absolute root. I could very well be wrong though, I'm not intimately familiar with these syscalls</p>\n</blockquote>",
        "id": 537745812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757017029
    },
    {
        "content": "<p>wingo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606#issuecomment-3257183226\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\">issue #11606</a>:</p>\n<blockquote>\n<p>If you strace the process, it does:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">statx</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"/\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">AT_STATX_SYNC_AS_STAT</span><span class=\"o\">|</span><span class=\"n\">AT_SYMLINK_NOFOLLOW</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">STATX_ALL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">stx_mask</span><span class=\"o\">=</span><span class=\"n\">STATX_ALL</span><span class=\"o\">|</span><span class=\"n\">STATX_MNT_ID</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">stx_attributes</span><span class=\"o\">=</span><span class=\"n\">STATX_ATTR_MOUNT_ROOT</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">stx_mode</span><span class=\"o\">=</span><span class=\"n\">S_IFDIR</span><span class=\"o\">|</span><span class=\"mi\">0755</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">stx_size</span><span class=\"o\">=</span><span class=\"mi\">4096</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.})</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n</code></pre></div>\n<p>Which I think is statting the real <code>/</code>.</p>\n</blockquote>",
        "id": 537799503,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757052569
    },
    {
        "content": "<p>wingo edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606#issuecomment-3257183226\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\">issue #11606</a>:</p>\n<blockquote>\n<p>If you strace the process, it does:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">statx</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"/\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">AT_STATX_SYNC_AS_STAT</span><span class=\"o\">|</span><span class=\"n\">AT_SYMLINK_NOFOLLOW</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">STATX_ALL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">stx_mask</span><span class=\"o\">=</span><span class=\"n\">STATX_ALL</span><span class=\"o\">|</span><span class=\"n\">STATX_MNT_ID</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">stx_attributes</span><span class=\"o\">=</span><span class=\"n\">STATX_ATTR_MOUNT_ROOT</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">stx_mode</span><span class=\"o\">=</span><span class=\"n\">S_IFDIR</span><span class=\"o\">|</span><span class=\"mi\">0755</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">stx_size</span><span class=\"o\">=</span><span class=\"mi\">4096</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.})</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n</code></pre></div>\n<p>Which I think is statting the real <code>/</code>.  I could be misinterpreting though, I don't know what <code>STATX_ATTR_MOUNT_ROOT</code> does.</p>\n</blockquote>",
        "id": 537799787,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757052753
    },
    {
        "content": "<p>wingo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606#issuecomment-3257199063\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\">issue #11606</a>:</p>\n<blockquote>\n<p>The docs seem pretty clear that if you pass an absolute path to statx, the dirfd is ignored: <a href=\"https://man.archlinux.org/man/statx.2.en#An\">https://man.archlinux.org/man/statx.2.en#An</a></p>\n</blockquote>",
        "id": 537800291,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757053037
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606#issuecomment-3258505281\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\">issue #11606</a>:</p>\n<blockquote>\n<p>For the sandbox escape part, all you can do is learn that there's a root filesystem right? You can't read/write anything about it? Although to discuss this further, if you feel this is a CVE mind running through our <a href=\"https://bytecodealliance.org/security#disclosure-policy\">security policy</a>?</p>\n<p>For WASI here I basically don't know if this is going to be a practical change. There's a lot of code in the wild doing filesystem stuff and I'm not sure that anyone has a good handle on what it's all doing. For example my personal interpretation of <code>/</code> would be \"stat the root\" and I feel like I've almost certainly written code to that effect in the past. I have no idea if anyone's relying on that still and how many places would need to be updated.</p>\n</blockquote>",
        "id": 537880352,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757081522
    },
    {
        "content": "<p>wingo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606#issuecomment-3259231969\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\">issue #11606</a>:</p>\n<blockquote>\n<p>I don't have an opinion regarding CVE :)  And I think it just gets you stat access to /, I haven't found anything else you can do with it.  I'm sympathetic wrt wanting to stat the root but I think wasmtime should be handling these calls itself, as you can't use these interfaces to stat <code>/dir</code> even when <code>/dir</code> is in preopens.</p>\n</blockquote>",
        "id": 537916577,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757093694
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606#issuecomment-3267947526\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\">issue #11606</a>:</p>\n<blockquote>\n<p>From the description here, I don't think a CVE is warranted here, but this is a bug, and I'll look into fixing it.<br>\n</p>\n</blockquote>",
        "id": 538311715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757364108
    },
    {
        "content": "<p>sunfishcode closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11606\">issue #11606</a>:</p>\n<blockquote>\n<h2>Summary</h2>\n<p>I can stat-at \"/\", whereas the filesystem spec says that any path that starts with / should result in <code>not-permitted</code>.</p>\n<h2>Test case</h2>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">process</span><span class=\"p\">;</span>\n<span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">wit_bindgen</span><span class=\"p\">;</span>\n\n<span class=\"n\">wit_bindgen</span><span class=\"p\">::</span><span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">inline</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">r</span><span class=\"s\">\"</span>\n<span class=\"s\">  package test:test;</span>\n\n<span class=\"s\">  world test {</span>\n<span class=\"s\">      include wasi:filesystem/imports@0.3.0-rc-2025-08-15;</span>\n<span class=\"s\">      include wasi:cli/command@0.3.0-rc-2025-08-15;</span>\n<span class=\"s\">  }</span>\n<span class=\"s\">\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">additional_derives</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">PartialEq</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Eq</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Hash</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Clone</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"c1\">// Work around https://github.com/bytecodealliance/wasm-tools/issues/2285.</span>\n<span class=\"w\">    </span><span class=\"n\">features</span><span class=\"p\">:[</span><span class=\"s\">\"clocks-timezone\"</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"s\">\"wasi:cli/run@0.3.0-rc-2025-08-15#run\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"n\">generate_all</span>\n<span class=\"p\">});</span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">filesystem</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::{</span><span class=\"n\">PathFlags</span><span class=\"p\">,</span><span class=\"n\">ErrorCode</span><span class=\"p\">};</span>\n\n<span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">test_filesystem</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">filesystem</span><span class=\"p\">::</span><span class=\"n\">preopens</span><span class=\"p\">::</span><span class=\"n\">get_directories</span><span class=\"p\">()[</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"p\">[(</span><span class=\"n\">dirfd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)]</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span><span class=\"n\">dirfd</span><span class=\"p\">.</span><span class=\"n\">stat_at</span><span class=\"p\">(</span><span class=\"n\">PathFlags</span><span class=\"p\">::</span><span class=\"n\">empty</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"s\">\"/\"</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">()).</span><span class=\"k\">await</span><span class=\"p\">,</span>\n<span class=\"w\">                       </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">ErrorCode</span><span class=\"p\">::</span><span class=\"n\">NotPermitted</span><span class=\"p\">));</span>\n<span class=\"w\">        </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"fm\">eprintln!</span><span class=\"p\">(</span><span class=\"s\">\"usage: run with one open dir\"</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"n\">process</span><span class=\"p\">::</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Component</span><span class=\"p\">;</span>\n<span class=\"n\">export</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">Component</span><span class=\"p\">);</span>\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">exports</span><span class=\"p\">::</span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">cli</span><span class=\"p\">::</span><span class=\"n\">run</span><span class=\"p\">::</span><span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Component</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">run</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">test_filesystem</span><span class=\"p\">().</span><span class=\"k\">await</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"fm\">unreachable!</span><span class=\"p\">(</span><span class=\"s\">\"main is a stub\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Run as:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">mkdir</span><span class=\"w\"> </span><span class=\"n\">fs</span><span class=\"o\">-</span><span class=\"n\">tests</span><span class=\"p\">.</span><span class=\"n\">dir</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">fs</span><span class=\"o\">-</span><span class=\"n\">tests</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wcomponent</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"o\">-</span><span class=\"k\">async</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Sp3</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<p>Output:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">assertion</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">failed</span>\n<span class=\"w\">  </span><span class=\"n\">left</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">DescriptorStat</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">type</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">DescriptorType</span><span class=\"p\">::</span><span class=\"n\">Directory</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">link</span><span class=\"o\">-</span><span class=\"n\">count</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">4096</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">access</span><span class=\"o\">-</span><span class=\"n\">timestamp</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">Datetime</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">seconds</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1755768485</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">nanoseconds</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">715466563</span><span class=\"w\"> </span><span class=\"p\">}),</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"o\">-</span><span class=\"n\">modification</span><span class=\"o\">-</span><span class=\"n\">timestamp</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">Datetime</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">seconds</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1755095399</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">nanoseconds</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">980128269</span><span class=\"w\"> </span><span class=\"p\">}),</span><span class=\"w\"> </span><span class=\"n\">status</span><span class=\"o\">-</span><span class=\"n\">change</span><span class=\"o\">-</span><span class=\"n\">timestamp</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">Datetime</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">seconds</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1755086421</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">nanoseconds</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">967089397</span><span class=\"w\"> </span><span class=\"p\">})</span><span class=\"w\"> </span><span class=\"p\">})</span>\n<span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">ErrorCode</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"not-permitted\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"Operation not permitted, similar to `EPERM` in POSIX.\"</span><span class=\"w\"> </span><span class=\"p\">})</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 547000286,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761340315
    }
]