[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10720\">PR #10720</a> from <code>abrown:asm-logical-sse</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>More details in each commit message.</p>\n</blockquote>",
        "id": 515817067,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746229910
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10720\">PR #10720</a>.</p>",
        "id": 515817068,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746229910
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10720\">PR #10720</a>.</p>",
        "id": 515817069,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746229910
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10720#pullrequestreview-2813075825\">PR review</a>.</p>",
        "id": 515821702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746232714
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10720#discussion_r2072260565\">PR review comment</a>:</p>\n<blockquote>\n<p>Drive-by question: <a href=\"https://www.felixcloutier.com/x86/andps\">here</a> it says the encoding is: <code>NP 0F 54 /r ANDPS xmm1, xmm2/m128</code>, how does the \"NP\" map to this?</p>\n</blockquote>",
        "id": 515821704,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746232715
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10720#discussion_r2072261228\">PR review comment</a>:</p>\n<blockquote>\n<p>Also drive-by-question, should <code>_64b | compat</code> be removed? I feel like that has been copy/pasted around but is mostly only relevant for gpr instructions, 64-bit ones?</p>\n</blockquote>",
        "id": 515821705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746232715
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10720#pullrequestreview-2813104378\">PR review</a>.</p>",
        "id": 515828909,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746237072
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10720#discussion_r2072280051\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>Drive-by question: <a href=\"https://www.felixcloutier.com/x86/andps\">here</a> it says the encoding is: <code>NP 0F 54 /r ANDPS xmm1, xmm2/m128</code>, how does the \"NP\" map to this?</p>\n</blockquote>\n<p>I think it boils down to \"no prefix\":</p>\n<blockquote>\n<p>NP â€” Indicates the use of 66/F2/F3 prefixes (beyond those already part of the instructions opcode) are not <br>\nallowed with the instruction. Such use will either cause an invalid-opcode exception (#UD) or result in the <br>\nencoding for a different instruction.</p>\n</blockquote>\n<blockquote>\n<p>should _64b | compat be removed?</p>\n</blockquote>\n<p>I was just thinking about that today: for most instructions we want to have a shorter thing that means \"both\". Maybe <code>base</code>? </p>\n</blockquote>",
        "id": 515828910,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746237072
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10720#issuecomment-2848391213\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10720\">PR #10720</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @saulecabrera</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:x64\", \"winch\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>saulecabrera: winch</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 515835631,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746241441
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10720#pullrequestreview-2813263295\">PR review</a>.</p>",
        "id": 515921898,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746289705
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10720#discussion_r2072424761\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah ok makes sense about NP.</p>\n<p>For features <a href=\"https://www.felixcloutier.com/x86/and\">the normal <code>and</code> instruction</a> has columns for 64-bit and compat, so it makes sense to me to translate that to <code>_64b | compat</code>, I don't think it's weird to have to specify both vs having a combined option. For <a href=\"https://www.felixcloutier.com/x86/andps\"><code>andnps</code> though</a> it's easy to translate the \"CPUID Feature Flag\" column but how does the \"64/32 bit Mode Support\" column translate to this? Does \"V/V\" mean <code>_64b | compat</code>? Should it not require <code>_64b</code> or <code>compat</code> features? </p>\n</blockquote>",
        "id": 515921899,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746289705
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10720#discussion_r2074093967\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>how does the \"64/32 bit Mode Support\" column translate to this? Does \"V/V\" mean _64b | compat?</p>\n</blockquote>\n<p>For older instructions they split this out into two separate columns, \"64-bit Mode\" and \"Compat/Leg Mode,\" but then they were coalesced into a single column with the space-efficient \"V/V\" instead of \"Valid | Valid.\" So my reading is that <code>andps</code> is valid in both 64-bit and 32-bit (compatibility) modes, hence <code>_64b | compat</code>.</p>\n<p>So think at some level we need to boil down to essentially <code>_64b | compat</code> but we could have an alias for that since it is quite, quite common. I'm going to merge this as-is and we can keep discussing elsewhere.</p>\n</blockquote>",
        "id": 516283363,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746474625
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10720#pullrequestreview-2815928251\">PR review</a>.</p>",
        "id": 516283364,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746474625
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10720\">PR #10720</a>.</p>",
        "id": 516287447,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746476002
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10720#pullrequestreview-2816001873\">PR review</a>.</p>",
        "id": 516289048,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746476558
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10720#discussion_r2074133908\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah makes sense! Ok another question (if you'll continue to indulge me): are there instructions valid in 64-bit mode and not valid in 32-bit mode? If not should we perhaps remove the <code>compat</code> feature since it's always implicit?</p>\n</blockquote>",
        "id": 516289049,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746476558
    }
]