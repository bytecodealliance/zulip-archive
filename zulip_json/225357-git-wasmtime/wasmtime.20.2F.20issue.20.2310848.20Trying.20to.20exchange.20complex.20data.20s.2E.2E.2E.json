[
    {
        "content": "<p>HillOfTong opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10848\">issue #10848</a>:</p>\n<blockquote>\n<p>I'm not sure the best place to ask this type of question. If it's no, just let me know where and I'll ask there.</p>\n<p>I am trying to use WASM in my Cpp project and i found this project wasmtime. And in my project, I plan to use rust to write WSAM code.<br>\nThere are some questions:</p>\n<ol>\n<li>How to define Memory type, Table type in rust which used in test wat files. There's only WAT file used in test case.</li>\n<li>If i can't define Memory type, Table type in rust. Is there a approach to exchange complex struct between cpp and rust? I noticed that it seems the only way is to copy (byte by byte) data between WSAM liner memory and cpp memory. </li>\n</ol>\n</blockquote>",
        "id": 520819943,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748416462
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10848#issuecomment-2915363541\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10848\">issue #10848</a>:</p>\n<blockquote>\n<p>Using the wasm component model would be the canonical answer. I'm not sure if Wasmtime supports using it directly from C++ already though: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8036\">https://github.com/bytecodealliance/wasmtime/issues/8036</a></p>\n</blockquote>",
        "id": 520827938,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748419376
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10848\">issue #10848</a>:</p>\n<blockquote>\n<p>I'm not sure the best place to ask this type of question. If it's no, just let me know where and I'll ask there.</p>\n<p>I am trying to use WASM in my Cpp project and i found this project wasmtime. And in my project, I plan to use rust to write WSAM code.<br>\nThere are some questions:</p>\n<ol>\n<li>How to define Memory type, Table type in rust which used in test wat files. There's only WAT file used in test case.</li>\n<li>If i can't define Memory type, Table type in rust. Is there a approach to exchange complex struct between cpp and rust? I noticed that it seems the only way is to copy (byte by byte) data between WSAM liner memory and cpp memory. </li>\n</ol>\n</blockquote>",
        "id": 520916823,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748445023
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10848#issuecomment-2916708985\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10848\">issue #10848</a>:</p>\n<blockquote>\n<p>Indeed yes the answer to this is the component model. Work is <a href=\"https://github.com/bytecodealliance/wasmtime/issues?q=is%3Apr+author%3AMangoPeachGrape\">ongoing</a> to expose a C API for the component model, and if you're up for it building out the C++ headers that use the C API I think would be reasonable as well, that's not been done yet.</p>\n<p>Otherwise also of note is that linear memory languages like Rust do not have direct ways to model memories/tables/WebAssembly constructs. LLVM's compilation model maps to WebAssembly, but Rust does not have native support for these constructs. That means that if you're not using the component model then, yes, you'll have to serialize information into linear memory and the host would have to deserialize that information from linear memory.</p>\n<p>I'm going to close this as the answer at this time is the component model, but if you have follow-up questions feel free to post them here.</p>\n</blockquote>",
        "id": 520916824,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748445023
    },
    {
        "content": "<p>HillOfTong <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10848#issuecomment-2918115935\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10848\">issue #10848</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 521010442,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748488392
    }
]