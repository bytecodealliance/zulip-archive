[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11097\">PR #11097</a> from <code>alexcrichton:x64-refactor-conditions</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit represents a refactor of the x64 backend's handling of condition codes for various instructions with a goal of simplifying conversion of a <code>Value</code> to a condition code used for <code>select</code> and <code>brif</code>. This additionally tries to deduplicate handling of condition codes across <code>icmp</code> and <code>fcmp</code> for example.</p>\n<p>Previously the x64 backend had types such as <code>IcmpCondResult</code> and <code>FcmpCondResult</code> which respresented the condition codes for the <code>icmp</code> and <code>fcmp</code> values. When used in <code>select</code>, <code>brif</code>, or <code>trap{n,}z</code> each lowering had to special case <code>icmp</code> and <code>fcmp</code> to create these <code>*CondResult</code> values and call specialized helpers to lower the value back. Furthermore on the <code>select</code> instruction this created a matrix of ways-to-produce-the-condition-code along with<br>\nways-to-handle-the-condition-code to conditionally move GPR, XMM, or 128-bit values. The end result was a fair bit of duplication across rules and optimizations on some rules but not others. For example <code>brif</code> on a <code>vall_true</code> value was optimized but <code>select</code> was not.</p>\n<p>The design implemented in this commit is inspired/modeled after what the riscv64 backend is currently doing. There is a top-level helper <code>is_nonzero_cmp</code> which takes a <code>Value</code> and produces a <code>CondResult</code>. This <code>CondResult</code> is a merging of <code>IcmpCondResult</code> and <code>FcmpCondResult</code> into one. This centralizes the ability to take any value and produce condition codes, for example this handles <code>icmp</code>, <code>fcmp</code>, 128-bit integers, <code>v{all,any}_true</code>, etc. Once the condition is produced it's then handled separately at each location for jumps, selects, traps, etc. In effect <code>CondResult</code> serves as a \"narrow waist\" through which production of condition codes can all flow meaning that if an optimization is added for production of condition codes all instructions benefit instead of having to hand-update each one.</p>\n<p>The goal of this refactoring was to not actually change any lowerings and only refactor internals, but this refactoring exposed a few non-optimal lowerings in the backend which were improved as a result of this change. In the future I plan on additionally adding more ways to pattern-match \"produces a condition\" which will now equally benefit all of these locations.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 525182561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750547190
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11097\">PR #11097</a>.</p>",
        "id": 525182565,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750547191
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11097\">PR #11097</a>.</p>",
        "id": 525182566,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750547191
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11097\">PR #11097</a>.</p>",
        "id": 525182567,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750547192
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11097\">PR #11097</a>.</p>",
        "id": 525182568,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750547192
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11097#pullrequestreview-2951121434\">PR review</a>:</p>\n<blockquote>\n<p>I think this makes sense to me but @fitzgen you may want to double-check the Spectre-related changes.</p>\n</blockquote>",
        "id": 525387496,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750703187
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11097#pullrequestreview-2954219653\">PR review</a>:</p>\n<blockquote>\n<p>Nice!</p>\n</blockquote>",
        "id": 525536441,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750776577
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11097\">PR #11097</a>.</p>",
        "id": 525540930,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750777899
    }
]