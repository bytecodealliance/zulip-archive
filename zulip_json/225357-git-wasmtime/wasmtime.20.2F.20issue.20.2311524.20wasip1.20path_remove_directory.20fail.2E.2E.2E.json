[
    {
        "content": "<p>wingo opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11524\">issue #11524</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>For the wasi-testsuite test <a href=\"https://github.com/WebAssembly/wasi-testsuite/blob/main/tests/rust/src/bin/remove_directory_trailing_slashes.rs#L19\">remove_directory_trailing_slashes</a>, we mkdir <code>dir.cleanup</code>, then try to rrmdir <code>dir.cleanup/</code> (note trailing slash).  This fails because it uses the \"get the parent then remove the leaf\" strategy, and the parent of <code>dir.cleanup/</code> is <code>dir.cleanup</code>, and the leaf is <code>.</code>.</p>\n<p>A trace: <a href=\"https://github.com/WebAssembly/wasi-testsuite/issues/101#issuecomment-3214123363\">https://github.com/WebAssembly/wasi-testsuite/issues/101#issuecomment-3214123363</a></p>\n<p>I would expect that the rmdir removes trailing slashes.</p>\n<p>Filing this bug here as I am not sure if this is a failure of cap-std or if callers are required to remove trailing slashes already.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 1a88c70a6ec088ee213658488549306f8951405d (august 19)<br>\n</p>\n</blockquote>",
        "id": 535966434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756106018
    },
    {
        "content": "<p><a href=\"https://github.com/wingo\">wingo</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11524\">Issue #11524</a>.</p>",
        "id": 535966436,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756106019
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasi label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11524\">Issue #11524</a>.</p>",
        "id": 536039219,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756132453
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasi:impl label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11524\">Issue #11524</a>.</p>",
        "id": 536039223,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756132454
    },
    {
        "content": "<p>fitzgen assigned sunfishcode to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11524\">issue #11524</a>.</p>",
        "id": 536649317,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756400277
    },
    {
        "content": "<p>wingo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11524#issuecomment-3253843726\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11524\">issue #11524</a>:</p>\n<blockquote>\n<p>Given that cap-std needs to sometimes normalize paths, consider using some wrapper around <code>std::path::Path</code> for normalized paths.  Otherwise it's too easy to pass an absolute path to some routine that needs a normalized relative path.</p>\n</blockquote>",
        "id": 537678032,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756993969
    },
    {
        "content": "<p>wingo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11524#issuecomment-3257932134\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11524\">issue #11524</a>:</p>\n<blockquote>\n<p>Same failure in wasip3:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">process</span><span class=\"p\">;</span>\n<span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">wit_bindgen</span><span class=\"p\">;</span>\n\n<span class=\"n\">wit_bindgen</span><span class=\"p\">::</span><span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">inline</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">r</span><span class=\"s\">\"</span>\n<span class=\"s\">  package test:test;</span>\n\n<span class=\"s\">  world test {</span>\n<span class=\"s\">      include wasi:filesystem/imports@0.3.0-rc-2025-08-15;</span>\n<span class=\"s\">      include wasi:cli/command@0.3.0-rc-2025-08-15;</span>\n<span class=\"s\">  }</span>\n<span class=\"s\">\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">additional_derives</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nb\">PartialEq</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Eq</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Hash</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Clone</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"c1\">// Work around https://github.com/bytecodealliance/wasm-tools/issues/2285.</span>\n<span class=\"w\">    </span><span class=\"n\">features</span><span class=\"p\">:[</span><span class=\"s\">\"clocks-timezone\"</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"s\">\"wasi:cli/run@0.3.0-rc-2025-08-15#run\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"n\">generate_all</span>\n<span class=\"p\">});</span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">filesystem</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::{</span><span class=\"n\">PathFlags</span><span class=\"p\">,</span><span class=\"n\">ErrorCode</span><span class=\"p\">};</span>\n\n<span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">test_filesystem</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">filesystem</span><span class=\"p\">::</span><span class=\"n\">preopens</span><span class=\"p\">::</span><span class=\"n\">get_directories</span><span class=\"p\">()[</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"p\">[(</span><span class=\"n\">dirfd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)]</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">dirfd</span><span class=\"p\">.</span><span class=\"n\">create_directory_at</span><span class=\"p\">(</span><span class=\"s\">\"qqq/\"</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">())</span>\n<span class=\"w\">                </span><span class=\"p\">.</span><span class=\"k\">await</span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"mkdir qqq/\"</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"n\">dirfd</span><span class=\"p\">.</span><span class=\"n\">remove_directory_at</span><span class=\"p\">(</span><span class=\"s\">\"qqq/\"</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">())</span>\n<span class=\"w\">                </span><span class=\"p\">.</span><span class=\"k\">await</span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"rmdir qqq/\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"fm\">eprintln!</span><span class=\"p\">(</span><span class=\"s\">\"usage: run with one open dir\"</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"n\">process</span><span class=\"p\">::</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Component</span><span class=\"p\">;</span>\n<span class=\"n\">export</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">Component</span><span class=\"p\">);</span>\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">exports</span><span class=\"p\">::</span><span class=\"n\">wasi</span><span class=\"p\">::</span><span class=\"n\">cli</span><span class=\"p\">::</span><span class=\"n\">run</span><span class=\"p\">::</span><span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Component</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">run</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">test_filesystem</span><span class=\"p\">().</span><span class=\"k\">await</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"fm\">unreachable!</span><span class=\"p\">(</span><span class=\"s\">\"main is a stub\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>The <code>mkdir qqq/</code> straces as:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">mkdirat</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"qqq\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0777</span><span class=\"p\">)</span><span class=\"w\">                 </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n</code></pre></div>\n<p>Whereas the <code>rmdir qqq/</code> straces as:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">openat2</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"qqq/\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"n\">O_RDONLY</span><span class=\"o\">|</span><span class=\"n\">O_CLOEXEC</span><span class=\"o\">|</span><span class=\"n\">O_PATH</span><span class=\"o\">|</span><span class=\"n\">O_DIRECTORY</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">resolve</span><span class=\"o\">=</span><span class=\"n\">RESOLVE_NO_MAGICLINKS</span><span class=\"o\">|</span><span class=\"n\">RESOLVE_BENEATH</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">11</span>\n<span class=\"n\">unlinkat</span><span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\".\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">AT_REMOVEDIR</span><span class=\"p\">)</span><span class=\"w\">         </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">EINVAL</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Invalid</span><span class=\"w\"> </span><span class=\"n\">argument</span><span class=\"p\">)</span>\n</code></pre></div>\n</blockquote>",
        "id": 537843126,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757069528
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11524#issuecomment-3377613811\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11524\">issue #11524</a>:</p>\n<blockquote>\n<p>@sunfishcode are you still interested in investigating this?</p>\n</blockquote>",
        "id": 543572620,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759853786
    }
]