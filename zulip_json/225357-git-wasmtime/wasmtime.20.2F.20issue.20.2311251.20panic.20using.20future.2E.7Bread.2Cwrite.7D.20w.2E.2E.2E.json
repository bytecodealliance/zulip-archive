[
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/11251\">Issue #11251 panic using future.{read,write} with no type and no memory</a> was transferred from <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/issues/235\">bytecodealliance/wasip3-prototyping#235</a>.</p>",
        "id": 528955541,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752620871
    },
    {
        "content": "<p>dicej <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11251#issuecomment-3076014088\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11251\">issue #11251</a>:</p>\n<blockquote>\n<p>Thanks for reporting this @lukewagner.  I've moved the issue to the Wasmtime repo since CM async support has been upstreamed (and thus this should be reproduceable on the latest canary build).</p>\n</blockquote>",
        "id": 528955673,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752620970
    },
    {
        "content": "<p>dicej assigned dicej to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11251\">issue #11251</a>.</p>",
        "id": 528955676,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752620973
    },
    {
        "content": "<p><a href=\"https://github.com/dicej\">dicej</a> added the wasm-proposal:component-model-async label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11251\">Issue #11251</a>.</p>",
        "id": 528955756,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752621007
    },
    {
        "content": "<p>dicej edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11251#issuecomment-3076014088\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11251\">issue #11251</a>:</p>\n<blockquote>\n<p>Thanks for reporting this @lukewagner.  I've moved the issue to the Wasmtime repo since CM async support has been upstreamed (<del>and thus this should be reproduceable on the latest canary build</del> Er, maybe we don't have canary builds in this repo; the last <code>dev</code> build appears to be from 2022).</p>\n</blockquote>",
        "id": 528955885,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752621096
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> removed the bug label from <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11251\">Issue #11251</a>.</p>",
        "id": 528963716,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752626848
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11251\">issue #11251</a>:</p>\n<blockquote>\n<p>To reproduce, start with this test:<br>\n<a href=\"https://github.com/WebAssembly/component-model/blob/main/test/async/empty-wait.wast\">https://github.com/WebAssembly/component-model/blob/main/test/async/empty-wait.wast</a><br>\nand then delete the <code>(memory $memory \"mem\")</code> on either the <code>canon future.read</code> or <code>canon future.write</code>.</p>\n<p>Backtrace:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"n\">full</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">p3</span><span class=\"w\"> </span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"o\">-</span><span class=\"k\">async</span><span class=\"o\">=</span><span class=\"n\">yes</span><span class=\"w\"> </span><span class=\"n\">empty</span><span class=\"o\">-</span><span class=\"n\">wait</span><span class=\"p\">.</span><span class=\"n\">wast</span>\n\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">compiler</span><span class=\"o\">/</span><span class=\"n\">component</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">1317</span><span class=\"p\">:</span><span class=\"mi\">70</span><span class=\"p\">:</span>\n<span class=\"nc\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Option</span><span class=\"p\">::</span><span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>\n<span class=\"n\">stack</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"w\">        </span><span class=\"mh\">0x107bbba08</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">option</span><span class=\"p\">::</span><span class=\"n\">unwrap_failed</span><span class=\"p\">::</span><span class=\"n\">hdbf5b02c13e4fbf7</span>\n<span class=\"w\">  </span><span class=\"mi\">13</span><span class=\"p\">:</span><span class=\"w\">        </span><span class=\"mh\">0x106e26729</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">wasmtime_internal_cranelift</span><span class=\"p\">::</span><span class=\"n\">compiler</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">TrampolineCompiler</span><span class=\"p\">::</span><span class=\"n\">translate_future_or_stream_call</span><span class=\"p\">::</span><span class=\"n\">h5f2f561f1bc4b0c3</span>\n<span class=\"w\">  </span><span class=\"mi\">14</span><span class=\"p\">:</span><span class=\"w\">        </span><span class=\"mh\">0x106e80d9c</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">wasmtime_internal_cranelift</span><span class=\"p\">::</span><span class=\"n\">compiler</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"o\">&lt;</span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">wasmtime_environ</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">compiler</span><span class=\"p\">::</span><span class=\"n\">ComponentCompiler</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">wasmtime_internal_cranelift</span><span class=\"p\">::</span><span class=\"n\">compiler</span><span class=\"p\">::</span><span class=\"n\">Compiler</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"n\">compile_trampoline</span><span class=\"p\">::{{</span><span class=\"n\">closure</span><span class=\"p\">}}::</span><span class=\"n\">h92a0b1bc7be14058</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 529345422,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752781553
    }
]