[
    {
        "content": "<p>TartanLlama opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a> from <code>TartanLlama:sy/coop_threading</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Implements <a href=\"https://github.com/WebAssembly/component-model/pull/557\">https://github.com/WebAssembly/component-model/pull/557</a></p>\n<p>Submitting as a draft PR for now to share progress.</p>\n<ul>\n<li>[x] Pass through all new builtins</li>\n<li>[x] Basic implementations of new builtins</li>\n<li>[ ] Cancellation support</li>\n<li>[ ] Support for explicit threads continuing after the implicit thread has exited</li>\n<li>[ ] Testing</li>\n<li>[ ] Revert changes to the <code>component_model_async_builtins</code> and <code>component_model_async_stackful</code> features</li>\n</ul>\n<p>Requires building against <a href=\"https://github.com/TartanLlama/wit-bindgen/tree/sy/coop_threading\">this branch</a> of <code>wit-bindgen</code>  </p>\n</blockquote>",
        "id": 541979880,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759136806
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#issuecomment-3346271162\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"fuzzing\", \"wasmtime:api\", \"wasmtime:config\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: fuzzing</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 542002155,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759142783
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#issuecomment-3346500227\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 542014897,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759146304
    },
    {
        "content": "<p>cpetig submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3283107801\">PR review</a>.</p>",
        "id": 542207140,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759219224
    },
    {
        "content": "<p>cpetig created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2390230981\">PR review comment</a>:</p>\n<blockquote>\n<p>This logic looks wrong (not using p for filter_map)</p>\n</blockquote>",
        "id": 542207141,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759219224
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3283304011\">PR review</a>.</p>",
        "id": 542216428,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759221876
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2390371450\">PR review comment</a>:</p>\n<blockquote>\n<p>Indeed, that's going to be fixed when I merge in the latest changes</p>\n</blockquote>",
        "id": 542216430,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759221877
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 542228062,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759225156
    },
    {
        "content": "<p>TartanLlama edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>Implements <a href=\"https://github.com/WebAssembly/component-model/pull/557\">https://github.com/WebAssembly/component-model/pull/557</a></p>\n<p>Submitting as a draft PR for now to share progress.</p>\n<ul>\n<li>[x] Pass through all new builtins</li>\n<li>[x] Basic implementations of new builtins</li>\n<li>[ ] Cancellation support</li>\n<li>[ ] Support for explicit threads continuing after the implicit thread has exited</li>\n<li>[ ] Testing</li>\n<li>[X] Revert changes to the <code>component_model_async_builtins</code> and <code>component_model_async_stackful</code> features</li>\n</ul>\n<p>Requires building against <a href=\"https://github.com/TartanLlama/wit-bindgen/tree/sy/coop_threading\">this branch</a> of <code>wit-bindgen</code>  </p>\n</blockquote>",
        "id": 542228175,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759225186
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 542252274,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759232520
    },
    {
        "content": "<p>TartanLlama edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>Implements <a href=\"https://github.com/WebAssembly/component-model/pull/557\">https://github.com/WebAssembly/component-model/pull/557</a></p>\n<p>Submitting as a draft PR for now to share progress.</p>\n<ul>\n<li>[x] Pass through all new builtins</li>\n<li>[x] Basic implementations of new builtins</li>\n<li>[ ] Cancellation support</li>\n<li>[ ] Support for explicit threads continuing after the implicit thread has exited</li>\n<li>[ ] Testing</li>\n<li>[X] Revert changes to the <code>component_model_async_builtins</code> and <code>component_model_async_stackful</code> features</li>\n</ul>\n</blockquote>",
        "id": 542252418,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759232569
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 542252687,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759232655
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 542472930,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759318898
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 542478561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759320638
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 542896937,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759481133
    },
    {
        "content": "<p>TartanLlama edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>Implements <a href=\"https://github.com/WebAssembly/component-model/pull/557\">https://github.com/WebAssembly/component-model/pull/557</a></p>\n<p>Submitting as a draft PR for now to share progress.</p>\n<ul>\n<li>[x] Pass through all new builtins</li>\n<li>[x] Basic implementations of new builtins</li>\n<li>[x] Cancellation support</li>\n<li>[ ] Support for explicit threads continuing after the implicit thread has exited</li>\n<li>[ ] Testing</li>\n<li>[X] Revert changes to the <code>component_model_async_builtins</code> and <code>component_model_async_stackful</code> features</li>\n</ul>\n</blockquote>",
        "id": 542944090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759497382
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 542979230,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759507727
    },
    {
        "content": "<p>TartanLlama edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>Implements <a href=\"https://github.com/WebAssembly/component-model/pull/557\">https://github.com/WebAssembly/component-model/pull/557</a></p>\n<p>Submitting as a draft PR for now to share progress.</p>\n<ul>\n<li>[x] Pass through all new builtins</li>\n<li>[x] Basic implementations of new builtins</li>\n<li>[x] Cancellation support</li>\n<li>[ ] Support for explicit threads continuing after the implicit thread has exited</li>\n<li>[ ] Insert threads into the instance table rather than holding them inside <code>GuestTask</code></li>\n<li>[ ] Don't reuse the existing <code>GuestCall</code> functionality for new threads</li>\n<li>[ ] Testing</li>\n<li>[X] Revert changes to the <code>component_model_async_builtins</code> and <code>component_model_async_stackful</code> features</li>\n</ul>\n</blockquote>",
        "id": 543014661,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759519118
    },
    {
        "content": "<p>TartanLlama edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>Implements <a href=\"https://github.com/WebAssembly/component-model/pull/557\">https://github.com/WebAssembly/component-model/pull/557</a></p>\n<p>Submitting as a draft PR for now to share progress.</p>\n<ul>\n<li>[x] Pass through all new builtins</li>\n<li>[x] Basic implementations of new builtins</li>\n<li>[x] Cancellation support</li>\n<li>[ ] Support for explicit threads continuing after the implicit thread has exited</li>\n<li>[x] Insert threads into the instance table rather than holding them inside <code>GuestTask</code></li>\n<li>[x] Don't reuse the existing <code>GuestCall</code> functionality for new threads</li>\n<li>[ ] Testing</li>\n<li>[X] Revert changes to the <code>component_model_async_builtins</code> and <code>component_model_async_stackful</code> features</li>\n</ul>\n</blockquote>",
        "id": 543084755,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759581628
    },
    {
        "content": "<p>TartanLlama edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>Implements <a href=\"https://github.com/WebAssembly/component-model/pull/557\">https://github.com/WebAssembly/component-model/pull/557</a></p>\n<p>Submitting as a draft PR for now to share progress.</p>\n<ul>\n<li>[x] Pass through all new builtins</li>\n<li>[x] Basic implementations of new builtins</li>\n<li>[x] Cancellation support</li>\n<li>[ ] Support for explicit threads continuing after the implicit thread has exited</li>\n<li>[x] Insert threads into the instance table rather than holding them inside <code>GuestTask</code></li>\n<li>[x] Don't reuse the existing <code>GuestCall</code> functionality for new threads</li>\n<li>[ ] Testing</li>\n<li>[X] Revert changes to the <code>component_model_async_builtins</code> and <code>component_model_async_stackful</code> features</li>\n</ul>\n</blockquote>",
        "id": 543084757,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759581630
    },
    {
        "content": "<p>TartanLlama edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>Implements <a href=\"https://github.com/WebAssembly/component-model/pull/557\">https://github.com/WebAssembly/component-model/pull/557</a></p>\n<p>Submitting as a draft PR for now to share progress.</p>\n<ul>\n<li>[x] Pass through all new builtins</li>\n<li>[x] Basic implementations of new builtins</li>\n<li>[x] Cancellation support</li>\n<li>[ ] Support for explicit threads continuing after the implicit thread has exited</li>\n<li>[ ] Insert threads into the instance table rather than holding them inside <code>GuestTask</code></li>\n<li>[ ] Don't reuse the existing <code>GuestCall</code> functionality for new threads</li>\n<li>[ ] Testing</li>\n<li>[X] Revert changes to the <code>component_model_async_builtins</code> and <code>component_model_async_stackful</code> features</li>\n</ul>\n</blockquote>",
        "id": 543084838,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759581701
    },
    {
        "content": "<p>TartanLlama edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>Implements <a href=\"https://github.com/WebAssembly/component-model/pull/557\">https://github.com/WebAssembly/component-model/pull/557</a></p>\n<p>Submitting as a draft PR for now to share progress.</p>\n<ul>\n<li>[x] Pass through all new builtins</li>\n<li>[x] Basic implementations of new builtins</li>\n<li>[x] Cancellation support</li>\n<li>[ ] Support for explicit threads continuing after the implicit thread has exited</li>\n<li>[ ] Insert threads into the instance table rather than holding them inside <code>GuestTask</code></li>\n<li>[ ] Don't reuse the existing <code>GuestCall</code> functionality for new threads</li>\n<li>[ ] Testing</li>\n<li>[X] Revert changes to the <code>component_model_async_builtins</code> and <code>component_model_async_stackful</code> features</li>\n</ul>\n</blockquote>",
        "id": 543084840,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759581703
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 543086196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759583078
    },
    {
        "content": "<p>TartanLlama edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>Implements <a href=\"https://github.com/WebAssembly/component-model/pull/557\">https://github.com/WebAssembly/component-model/pull/557</a></p>\n<p>Submitting as a draft PR for now to share progress.</p>\n<ul>\n<li>[x] Pass through all new builtins</li>\n<li>[x] Basic implementations of new builtins</li>\n<li>[x] Cancellation support</li>\n<li>[ ] Support for explicit threads continuing after the implicit thread has exited</li>\n<li>[x] Insert threads into the instance table rather than holding them inside <code>GuestTask</code></li>\n<li>[x] Don't reuse the existing <code>GuestCall</code> functionality for new threads</li>\n<li>[ ] Testing</li>\n<li>[X] Revert changes to the <code>component_model_async_builtins</code> and <code>component_model_async_stackful</code> features</li>\n</ul>\n</blockquote>",
        "id": 543086201,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759583083
    },
    {
        "content": "<p>TartanLlama edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>Implements <a href=\"https://github.com/WebAssembly/component-model/pull/557\">https://github.com/WebAssembly/component-model/pull/557</a></p>\n<p>Submitting as a draft PR for now to share progress.</p>\n<ul>\n<li>[x] Pass through all new builtins</li>\n<li>[x] Basic implementations of new builtins</li>\n<li>[x] Cancellation support</li>\n<li>[ ] Support for explicit threads continuing after the implicit thread has exited</li>\n<li>[x] Insert threads into the instance table rather than holding them inside <code>GuestTask</code></li>\n<li>[x] Don't reuse the existing <code>GuestCall</code> functionality for new threads</li>\n<li>[ ] Testing</li>\n<li>[X] Revert changes to the <code>component_model_async_builtins</code> and <code>component_model_async_stackful</code> features</li>\n</ul>\n</blockquote>",
        "id": 543086204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759583085
    },
    {
        "content": "<p>cpetig submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3304482685\">PR review</a>.</p>",
        "id": 543309065,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759755928
    },
    {
        "content": "<p>cpetig created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2406174749\">PR review comment</a>:</p>\n<blockquote>\n<p>resolved. (I don't seem to be able to close this thread)</p>\n</blockquote>",
        "id": 543309068,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759755928
    },
    {
        "content": "<p>TartanLlama edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>Implements <a href=\"https://github.com/WebAssembly/component-model/pull/557\">https://github.com/WebAssembly/component-model/pull/557</a></p>\n<p>Submitting as a draft PR for now to share progress.</p>\n<ul>\n<li>[x] Pass through all new builtins</li>\n<li>[x] Basic implementations of new builtins</li>\n<li>[x] Cancellation support</li>\n<li>[ ] Support for explicit threads continuing after the implicit thread has exited</li>\n<li>[ ] Match trap conditions with the spec</li>\n<li>[x] Insert threads into the instance table rather than holding them inside <code>GuestTask</code></li>\n<li>[x] Don't reuse the existing <code>GuestCall</code> functionality for new threads</li>\n<li>[ ] Testing</li>\n<li>[X] Revert changes to the <code>component_model_async_builtins</code> and <code>component_model_async_stackful</code> features</li>\n</ul>\n</blockquote>",
        "id": 543364530,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759768656
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 543546044,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759847088
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 543556019,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759849457
    },
    {
        "content": "<p>TartanLlama edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>Implements <a href=\"https://github.com/WebAssembly/component-model/pull/557\">https://github.com/WebAssembly/component-model/pull/557</a></p>\n<p>Submitting as a draft PR for now to share progress.</p>\n<ul>\n<li>[x] Pass through all new builtins</li>\n<li>[x] Basic implementations of new builtins</li>\n<li>[x] Cancellation support</li>\n<li>[x] Support for explicit threads continuing after the implicit thread has exited</li>\n<li>[ ] Match trap conditions with the spec</li>\n<li>[x] Insert threads into the instance table rather than holding them inside <code>GuestTask</code></li>\n<li>[x] Don't reuse the existing <code>GuestCall</code> functionality for new threads</li>\n<li>[ ] Testing</li>\n<li>[X] Revert changes to the <code>component_model_async_builtins</code> and <code>component_model_async_stackful</code> features</li>\n</ul>\n</blockquote>",
        "id": 543556297,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759849522
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 543904948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760000120
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 543907747,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760000913
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 543971790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760019181
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 543972526,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760019331
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 543973524,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760019539
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 543976710,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760020236
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 543990221,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760023586
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 544202777,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760111596
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 544203167,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760111727
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 544203390,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760111799
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 544203537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760111835
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 544210037,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760113994
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 544214286,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760115712
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 544215375,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760116120
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 544216459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760116548
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 544217233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760116858
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 544217802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760117112
    },
    {
        "content": "<p><strong>TartanLlama</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a> as ready for review.</p>",
        "id": 544231496,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760123136
    },
    {
        "content": "<p><strong>TartanLlama</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 544231499,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760123138
    },
    {
        "content": "<p><strong>TartanLlama</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 544231500,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760123138
    },
    {
        "content": "<p><strong>TartanLlama</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 544231501,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760123138
    },
    {
        "content": "<p><strong>TartanLlama</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 544231502,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760123138
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3332310338\">PR review</a>:</p>\n<blockquote>\n<p>Some initial comments from review, mostly pretty minor. I'm ccing @dicej on this as well as he's the main author of <code>concurrent.rs</code>, the meat of the changes here, so he'll be taking a look at that</p>\n</blockquote>",
        "id": 544816648,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760467757
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2426834427\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this, and a few updates above, may not be necessary any more? (maybe once were but may no longer be)</p>\n</blockquote>",
        "id": 544816649,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760467757
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2426838777\">PR review comment</a>:</p>\n<blockquote>\n<p>I realize that this is preexisting (my comment here applies to other tests in this file too) and so you can defer this to later if you desire, but these tests are perfect for adding to <code>tests/misc_testsuite/**/*.wast</code> vs in-Rust tests here. Should be able to <code>(assert_trap (invoke ...) \"the message\")</code> and that makes the tests much easier to run and avoids compiling more Rust code for tests</p>\n</blockquote>",
        "id": 544816650,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760467757
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2426835183\">PR review comment</a>:</p>\n<blockquote>\n<p>This might be an accidental update? (assuming based on the removed test)</p>\n</blockquote>",
        "id": 544816651,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760467757
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2426833723\">PR review comment</a>:</p>\n<blockquote>\n<p>In <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11818\">https://github.com/bytecodealliance/wasmtime/pull/11818</a> I'm hoping to split tests apart based on features rather than having everything in one large test, so mind adding the updated version of this test to a new test instead of updating the one here?</p>\n</blockquote>",
        "id": 544816652,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760467757
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2426842536\">PR review comment</a>:</p>\n<blockquote>\n<p>This might be another victim of a mass rename (unrelated to components here)</p>\n</blockquote>",
        "id": 544816654,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760467758
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2426847647\">PR review comment</a>:</p>\n<blockquote>\n<p>If you'd like it should be possible to reduce the number of functions here to correspond to just the <code>suspension_intrinsic</code> function. There's no need for the libcalls here to be 1:1 with component model libcalls as the compiler could translate, for example, the <code>thread_suspend</code> call here into a <code>suspension_intrinsic</code> libcall which would bake in <code>false</code> as a runtime argument in the trampoline and this function itself would take the boolean an an argument.</p>\n<p>Mostly a stylistic preference one way or another and I don't mind either way myself. Just wanted to note the possibility in case you didn't like having so many intrinsics.</p>\n</blockquote>",
        "id": 544816655,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760467758
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2426836535\">PR review comment</a>:</p>\n<blockquote>\n<p>This might be an unrelated victim of \"mass rename yield to thread-yield\" (it's core modules not components)</p>\n</blockquote>",
        "id": 544816656,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760467758
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2426841793\">PR review comment</a>:</p>\n<blockquote>\n<p>Similar to my comment below, but this would also be a good test to add to the <code>*.wast</code>-based testing. It might be a little more verbose there but I think it'd be worth it (ideally all tests are <code>*.wast</code>).</p>\n<p>Feel free to defer this to a future PR though</p>\n</blockquote>",
        "id": 544816657,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760467758
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2426843207\">PR review comment</a>:</p>\n<blockquote>\n<p>This is technically I think a victim of the mass renabme and while this is related to components it's host-level yielding as opposed to component-level yielding.</p>\n</blockquote>",
        "id": 544816658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760467758
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3341092019\">PR review</a>:</p>\n<blockquote>\n<p>Looks great; thanks for doing this!</p>\n<p>I've only looked closely at the <code>concurrent.rs</code> changes; Alex said the rest looked fine.  It all looks reasonable to me; just a few inline comments here and there.  I appreciate the tweaks you made to the existing code to make it more readable.</p>\n</blockquote>",
        "id": 545011056,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760545426
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2433079832\">PR review comment</a>:</p>\n<blockquote>\n<p><code>self</code> doesn't appear to be used here; perhaps this function should be moved to <code>impl ConcurrentState</code>?</p>\n</blockquote>",
        "id": 545011057,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760545427
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2433161058\">PR review comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    /// The \"high priority\" work queue for this store's event loop.\n</code></pre></div>\n<p>Not related to your changes, but I should have updated these docs when I moved <code>ConcurrentState</code> to <code>StoreOpaque</code>.</p>\n</blockquote>",
        "id": 545011058,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760545427
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2433083945\">PR review comment</a>:</p>\n<blockquote>\n<p>There's a lot of <code>unsafe</code> code here that I don't have enough context for.  @alexcrichton would you mind talking a look?</p>\n</blockquote>",
        "id": 545011060,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760545427
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2433220283\">PR review comment</a>:</p>\n<blockquote>\n<p>This leaks information \"non-determinstically\" about how many table indexes have been allocated across all (sub)components by returning the rep directly.  We should translate the rep to a (sub)component-specific handle using a <code>RuntimeComponentInstanceIndex</code>-specific table like we do for <code>subtask</code>, <code>stream</code>, <code>future</code>, <code>resource</code>, etc. handles.</p>\n</blockquote>",
        "id": 545011061,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760545427
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2433230835\">PR review comment</a>:</p>\n<blockquote>\n<p>Optional nit: <code>task.have_lowered_parameters()</code> feels a bit ungrammatical.  Perhaps change this to <code>has_*</code> instead?</p>\n</blockquote>",
        "id": 545011062,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760545427
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2433162229\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    /// The \"low priority\" work queue for this store's event loop.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 545011063,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760545427
    },
    {
        "content": "<p>dicej edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2433220283\">PR review comment</a>.</p>",
        "id": 545135284,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760566299
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 545520626,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760692414
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3349043823\">PR review</a>.</p>",
        "id": 545520700,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760692437
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2438968822\">PR review comment</a>:</p>\n<blockquote>\n<p>Change was unnecessary now, reverted</p>\n</blockquote>",
        "id": 545520703,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760692437
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 545521098,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760692553
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 545522479,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760692989
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 545522842,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760693100
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 545528646,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760694795
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3349193541\">PR review</a>.</p>",
        "id": 545529237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760695004
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2439086363\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, this is mostly an artifact of how the code developed, but I think it's okay to have the 1:1 correspondence as it keeps the libcalls easily searchable</p>\n</blockquote>",
        "id": 545529238,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760695004
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3349195242\">PR review</a>.</p>",
        "id": 545529330,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760695033
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2439087671\">PR review comment</a>:</p>\n<blockquote>\n<p>Makes sense, I'll defer for now and can address in a future PR</p>\n</blockquote>",
        "id": 545529331,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760695033
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 545530322,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760695322
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 545531024,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760695544
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3349238095\">PR review</a>.</p>",
        "id": 545531237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760695612
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2439129409\">PR review comment</a>:</p>\n<blockquote>\n<p>I renamed it to <code>already_lowered_parameters</code> because otherwise it could be interpreted as \"currently owns lowered parameters\", which doesn't really make sense, but I think this is less ambiguous</p>\n</blockquote>",
        "id": 545531238,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760695612
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3350035324\">PR review</a>.</p>",
        "id": 545555905,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760703912
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2439754419\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah yeah, makes sense. I've made this change, but it breaks a bunch of the existing tests that check the value of handles, e.g. <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/tests/misc_testsuite/component-model/async/partial-stream-copies.wast#L164\">https://github.com/bytecodealliance/wasmtime/blob/main/tests/misc_testsuite/component-model/async/partial-stream-copies.wast#L164</a></p>\n<p>Do we consider stability of those handles part of the ABI? </p>\n</blockquote>",
        "id": 545555908,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760703913
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3350447941\">PR review</a>.</p>",
        "id": 545572536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760708763
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2440087654\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>Do we consider stability of those handles part of the ABI?</p>\n</blockquote>\n<p>The values of the handles should be a deterministic function of the specific instance's history (i.e. how many waitables, resources, etc. it creates, where some of those handles might be created implicitly).  The important thing is that the history of _other_ instances (e.g. instances the original instance is composed with) should not have any effect.</p>\n<p>Whether that deterministic function must be stable across revisions of the component model specification is an interesting question.  In this case, we've added a feature that implicitly creates new handles, IIUC; in that case, it seems like we must update the deterministic function to account for that and not worry about maintaining stability before vs. after the feature was added.  @lukewagner may have thoughts.</p>\n</blockquote>",
        "id": 545572541,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760708764
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3350531993\">PR review</a>.</p>",
        "id": 545576669,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760709922
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2440150984\">PR review comment</a>:</p>\n<blockquote>\n<p>That makes sense, although my understanding is that the handle value function cannot be entirely deterministic as elements of a specific instance's execution may be non-deterministic (e.g. scheduling of yielded threads), which may affect the order in which items are added to the instance table. But that's unrelated to your main point of other instances not affecting a specific instance's execution.</p>\n<p>As a related question, I've seen movement elsewhere to move a lot of testing up into the component model specification testing suite, but things like this are testing for implementation details of wasmtime. Is the idea that we'll still have tests that ensure observable parts of the wasmtime implementation don't change, even if the spec doesn't have an opinion on them?</p>\n</blockquote>",
        "id": 545576670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760709922
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3350583919\">PR review</a>.</p>",
        "id": 545579053,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760710627
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2440190932\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>my understanding is that the handle value function cannot be entirely deterministic as elements of a specific instance's execution may be non-deterministic (e.g. scheduling of yielded threads),</p>\n</blockquote>\n<p>Yes, good point.  I think <code>partial-stream-copies.wast</code> is an example of avoiding such non-determinism in order to reliably predict the values of handles, but you're right that that can't be done in general.</p>\n<blockquote>\n<p>Is the idea that we'll still have tests that ensure observable parts of the wasmtime implementation don't change, even if the spec doesn't have an opinion on them?</p>\n</blockquote>\n<p>Per <a href=\"https://github.com/WebAssembly/component-model/pull/513\">https://github.com/WebAssembly/component-model/pull/513</a>, I think the spec _does_ have opinions about how handles are allocated, and I'd interpret e.g. <code>partial-stream-copies.wast</code> as testing behavior that's _not_ expected to vary across implementations.  I could be wrong about that, though.</p>\n</blockquote>",
        "id": 545579054,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760710628
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3350604870\">PR review</a>.</p>",
        "id": 545580214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760710956
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2440206448\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>I think the spec does have opinions about how handles are allocated...</p>\n</blockquote>\n<p>Yep, I think you're right. I'll go ahead and update those tests, thanks!</p>\n</blockquote>",
        "id": 545580215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760710956
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3350802012\">PR review</a>.</p>",
        "id": 545592669,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760714206
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2440358565\">PR review comment</a>:</p>\n<blockquote>\n<p>@TartanLlama mind moving this function to <code>VMComponentConetxt</code> since that's generally where our <code>unsafe</code>-frobbing bits live? Also, would it be possible to return a <code>Func</code> from this function instead fo a <code>NonNull&lt;VMFuncRef&gt;</code>? That'd improve the safety of this function in the sense that it's more difficult to mis-use the return value too.</p>\n<p>Otherwise though this function should itself be safe because there's no unsafe (e.g. raw pointer) parameters and the indices should all be checked internally.</p>\n</blockquote>",
        "id": 545592671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760714207
    },
    {
        "content": "<p>lukewagner submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3350921799\">PR review</a>.</p>",
        "id": 545602351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760716240
    },
    {
        "content": "<p>lukewagner created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2440449041\">PR review comment</a>:</p>\n<blockquote>\n<p>It's a good question (and one that we should probably consider again as we move toward 1.0, b/c there's pros/cons each way) of if and how much nondeterminism the spec should allow regarding the allocation of handles.  But for now, yes, if you hold all the other nondeterministic (scheduling, et al) choices constant, handle allocation is indeed currently fully deterministic as specified by the Python \"operational semantics\" <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/CanonicalABI.md#table-state\">here</a>.  That does mean that <a href=\"https://github.com/WebAssembly/component-model/pull/557\">CM/#557</a> is technically a \"breaking\" change since it adds a new element (for the implicit thread created for each export call) to the instance's table even for existing code, but I expect it won't break anything in practice so I think we're fine.</p>\n</blockquote>",
        "id": 545602353,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760716240
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 546000644,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760971798
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3356782492\">PR review</a>.</p>",
        "id": 546000797,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760971829
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2445252718\">PR review comment</a>:</p>\n<blockquote>\n<p>I've addressed this with this commit: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751/commits/d01a51d1f8114e9d19aad82fd100f4e5d528f0d1\">https://github.com/bytecodealliance/wasmtime/pull/11751/commits/d01a51d1f8114e9d19aad82fd100f4e5d528f0d1</a></p>\n</blockquote>",
        "id": 546000801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760971829
    },
    {
        "content": "<p>TartanLlama <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#issuecomment-3425317544\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>PR to update component model tests: <a href=\"https://github.com/WebAssembly/component-model/pull/570\">https://github.com/WebAssembly/component-model/pull/570</a></p>\n</blockquote>",
        "id": 546167376,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761033974
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 546168242,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761034246
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 546174706,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761036103
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 546208579,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761046241
    },
    {
        "content": "<p>TartanLlama <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#issuecomment-3426160201\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>Test failures for upstream component model tests are awaiting this PR: <a href=\"https://github.com/WebAssembly/component-model/pull/570\">https://github.com/WebAssembly/component-model/pull/570</a></p>\n</blockquote>",
        "id": 546210467,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761046741
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 546212374,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761047200
    },
    {
        "content": "<p>TartanLlama edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>Implements <a href=\"https://github.com/WebAssembly/component-model/pull/557\">https://github.com/WebAssembly/component-model/pull/557</a></p>\n<p>Submitting as a draft PR for now to share progress.</p>\n<ul>\n<li>[x] Pass through all new builtins</li>\n<li>[x] Basic implementations of new builtins</li>\n<li>[x] Cancellation support</li>\n<li>[x] Support for explicit threads continuing after the implicit thread has exited</li>\n<li>[ ] Match trap conditions with the spec</li>\n<li>[x] Insert threads into the instance table rather than holding them inside <code>GuestTask</code></li>\n<li>[x] Don't reuse the existing <code>GuestCall</code> functionality for new threads</li>\n<li>[ ] Testing</li>\n<li>[X] Revert changes to the <code>component_model_async_builtins</code> and <code>component_model_async_stackful</code> features</li>\n</ul>\n<p>prtest:full</p>\n</blockquote>",
        "id": 546212847,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761047313
    },
    {
        "content": "<p>TartanLlama deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#issuecomment-3425317544\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>PR to update component model tests: <a href=\"https://github.com/WebAssembly/component-model/pull/570\">https://github.com/WebAssembly/component-model/pull/570</a></p>\n</blockquote>",
        "id": 546215308,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761047880
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 546216751,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761048237
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 546233943,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761052574
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3360683072\">PR review</a>.</p>",
        "id": 546234444,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761052687
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2448239552\">PR review comment</a>:</p>\n<blockquote>\n<p>I've moved it to <code>ComponentInstance</code> in <code>runtime/vm/component.rs</code>, as that seemed a better fit that <code>VMComponentContext</code>, but can move it there if you think that's wrong. I've also made it return a <code>Func</code> and be safe.</p>\n</blockquote>",
        "id": 546234447,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761052687
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 546234704,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761052739
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 546235219,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761052846
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3361472481\">PR review</a>.</p>",
        "id": 546270948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761061494
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2448828657\">PR review comment</a>:</p>\n<blockquote>\n<p>This could be reverted to the old structure</p>\n</blockquote>",
        "id": 546270949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761061494
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3361642837\">PR review</a>.</p>",
        "id": 546279702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761063905
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2448951962\">PR review comment</a>:</p>\n<blockquote>\n<p>Rename <code>RemoveOnDrop</code> to something better</p>\n</blockquote>",
        "id": 546279715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761063905
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3361663559\">PR review</a>.</p>",
        "id": 546280772,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761064216
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2448966328\">PR review comment</a>:</p>\n<blockquote>\n<p>Maybe change to <code>sync/async stackful</code></p>\n</blockquote>",
        "id": 546280773,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761064217
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3361715504\">PR review</a>.</p>",
        "id": 546283109,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761064924
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2448998718\">PR review comment</a>:</p>\n<blockquote>\n<p>Factor out</p>\n</blockquote>",
        "id": 546283112,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761064924
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3361721948\">PR review</a>.</p>",
        "id": 546283330,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761065002
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2449004313\">PR review comment</a>:</p>\n<blockquote>\n<p>Store this in case the func ref changes</p>\n</blockquote>",
        "id": 546283331,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761065002
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3361722967\">PR review</a>.</p>",
        "id": 546283368,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761065013
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2449005002\">PR review comment</a>:</p>\n<blockquote>\n<p>Use cached version</p>\n</blockquote>",
        "id": 546283369,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761065013
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3361760619\">PR review</a>.</p>",
        "id": 546284926,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761065442
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2449031504\">PR review comment</a>:</p>\n<blockquote>\n<p>Create this closure inside <code>thread_new_indirect</code></p>\n</blockquote>",
        "id": 546284927,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761065442
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3361770071\">PR review</a>.</p>",
        "id": 546285368,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761065568
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2449038683\">PR review comment</a>:</p>\n<blockquote>\n<p>Maybe factor out high_priority check as it's duplicated with above</p>\n</blockquote>",
        "id": 546285370,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761065569
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3361782208\">PR review</a>.</p>",
        "id": 546285953,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761065734
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2449047664\">PR review comment</a>:</p>\n<blockquote>\n<p>Change to a <code>Result&lt;Something&gt;</code> where <code>Something</code> represents <code>Cancelled</code> or <code>NotCancelled</code></p>\n</blockquote>",
        "id": 546285955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761065734
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3361805156\">PR review</a>.</p>",
        "id": 546287129,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761066083
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2449066434\">PR review comment</a>:</p>\n<blockquote>\n<p>Maybe iterate once and check if the length has changed</p>\n</blockquote>",
        "id": 546287132,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761066083
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3361833057\">PR review</a>.</p>",
        "id": 546288604,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761066512
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2449088881\">PR review comment</a>:</p>\n<blockquote>\n<p>Replace with an assertion</p>\n</blockquote>",
        "id": 546288606,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761066513
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3361840188\">PR review</a>.</p>",
        "id": 546288946,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761066635
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2449094590\">PR review comment</a>:</p>\n<blockquote>\n<p>Change to <code>take_pending_cancellation</code></p>\n</blockquote>",
        "id": 546288949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761066636
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3364656828\">PR review</a>.</p>",
        "id": 546407582,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761125434
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2451187049\">PR review comment</a>:</p>\n<blockquote>\n<p>Converted to issue: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11908\">https://github.com/bytecodealliance/wasmtime/issues/11908</a></p>\n</blockquote>",
        "id": 546407584,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761125435
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 546408140,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761125609
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 546408918,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761125857
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 546417352,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761128370
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 546420700,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761129344
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3365125333\">PR review</a>.</p>",
        "id": 546421318,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761129525
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2451570344\">PR review comment</a>:</p>\n<blockquote>\n<p>@alexcrichton I forgot to go over this function in the call, but this is to where I moved that funcref extraction</p>\n</blockquote>",
        "id": 546421319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761129525
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 546429453,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761131824
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 546430180,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761131995
    },
    {
        "content": "<p>TartanLlama <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#issuecomment-3431950506\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>Created issues #11910 #11909 #11908 to track deferred work </p>\n</blockquote>",
        "id": 546435039,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761133229
    },
    {
        "content": "<p>TartanLlama <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#issuecomment-3431955979\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>@alexcrichton @dicej I think we're good to go. For CI to go green, we'd need to have <a href=\"https://github.com/WebAssembly/component-model/pull/570\">https://github.com/WebAssembly/component-model/pull/570</a> and <a href=\"https://github.com/WebAssembly/component-model/pull/557\">https://github.com/WebAssembly/component-model/pull/557</a> merged into the component model repo. What do we think about getting them merged soon @lukewagner ?</p>\n</blockquote>",
        "id": 546435447,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761133331
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2452392533\">PR review comment</a>:</p>\n<blockquote>\n<p>For these two errors, the error message will want to be updated silghtly -- <code>Ok(None)</code> means that a null funcref was loaded, which technically should be plumbed to the caller as a <code>Result&lt;Option&lt;Func&gt;&gt;</code> return value from this function. (or document the function as \"returns an error on null funcref values\"). The second error, <code>Err(e)</code>, is the out-of-bounds error and it should be fine to use <code>?</code> on the <code>get_func</code> expression to avoid having to deal with it in the <code>match</code></p>\n</blockquote>",
        "id": 546479954,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761144948
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2452385947\">PR review comment</a>:</p>\n<blockquote>\n<p>Mind using <code>Instance::from_vmctx</code> instead of a manual <code>byte_sub</code>? (that function came into existence after you wrote this I suspect)</p>\n</blockquote>",
        "id": 546479955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761144948
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2452381626\">PR review comment</a>:</p>\n<blockquote>\n<p>For some style here, instead of using <code>?</code> and/or <code>Err(anyhow!(...))</code> you can use <code>bail!(...)</code> in the error cases</p>\n</blockquote>",
        "id": 546479956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761144948
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3366188744\">PR review</a>:</p>\n<blockquote>\n<p>You can also feel free to update this function -- <a href=\"https://github.com/bytecodealliance/wasmtime/blob/710ba4bbf33e02f681eeada012ffa081b8d20588/crates/test-util/src/wast.rs#L404\">https://github.com/bytecodealliance/wasmtime/blob/710ba4bbf33e02f681eeada012ffa081b8d20588/crates/test-util/src/wast.rs#L404</a> -- to avoid blocking on PRs and go ahead and land this with known-failing tests</p>\n</blockquote>",
        "id": 546479958,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761144949
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2452383676\">PR review comment</a>:</p>\n<blockquote>\n<p>Instead of passing in <code>&amp;VMTableImport</code> could this pass in a <code>RuntimeTableIndex</code> or similar? Otherwise this function needs to be <code>unsafe</code> because any table value could be passed in with invalid pointers.</p>\n</blockquote>",
        "id": 546479961,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761144949
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2452395823\">PR review comment</a>:</p>\n<blockquote>\n<p>I might recommend using <code>offsets.ptr.vmtable_import_{vmctx,from}()</code> here to avoid the clippy lint</p>\n</blockquote>",
        "id": 546479962,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761144950
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3366540192\">PR review</a>.</p>",
        "id": 546499778,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761149656
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3366577398\">PR review</a>.</p>",
        "id": 546502007,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761150352
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2452656485\">PR review comment</a>:</p>\n<blockquote>\n<p>In that case is the documentation of <code>get_func</code> wrong? Current:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"sd\">/// Get reference to the specified element.</span>\n<span class=\"w\">    </span><span class=\"sd\">///</span>\n<span class=\"w\">    </span><span class=\"sd\">/// Returns `None` if the index is out of bounds.</span>\n<span class=\"w\">    </span><span class=\"sd\">///</span>\n<span class=\"w\">    </span><span class=\"sd\">/// Panics if this is a table of GC references and `gc_store` is `None`.</span>\n</code></pre></div>\n<p>Should this instead be: </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"sd\">/// Get reference to the specified element.</span>\n<span class=\"w\">    </span><span class=\"sd\">///</span>\n<span class=\"w\">    </span><span class=\"sd\">/// Returns `Ok(None)` if the element is null.</span>\n<span class=\"w\">    </span><span class=\"sd\">/// Returns `Err` if the index is out of bounds.</span>\n<span class=\"w\">    </span><span class=\"sd\">///</span>\n<span class=\"w\">    </span><span class=\"sd\">/// Panics if this is a table of GC references and `gc_store` is `None`.</span>\n</code></pre></div>\n</blockquote>",
        "id": 546502010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761150353
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2452703956\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah yes good point! That is indeed outdated documentation, and your proposed docs are more accurate. The only other thing we should add is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"sd\">/// Returns `Ok(None)` if the element is null or uninitialized.</span>\n</code></pre></div>\n<p>Since <code>Ok(None)</code> happens for lazy-init tables where the elem hasn't been init'd yet</p>\n</blockquote>",
        "id": 546505560,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761151446
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3366640395\">PR review</a>.</p>",
        "id": 546505563,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761151447
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3366671571\">PR review</a>.</p>",
        "id": 546507178,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761152046
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2452728618\">PR review comment</a>:</p>\n<blockquote>\n<p>Cool cool, I'll roll that into this PR</p>\n</blockquote>",
        "id": 546507180,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761152046
    },
    {
        "content": "<p>TartanLlama submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3368864402\">PR review</a>.</p>",
        "id": 546623100,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761209346
    },
    {
        "content": "<p>TartanLlama created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2454391659\">PR review comment</a>:</p>\n<blockquote>\n<p>Hm, that seems to be a function on <code>VMOffsets</code> rather than <code>PtrSize</code>, and I think I'd need to pick a module to create a <code>VMOffsets</code></p>\n</blockquote>",
        "id": 546623101,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761209346
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 546624051,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761209597
    },
    {
        "content": "<p>TartanLlama updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>.</p>",
        "id": 546625494,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761210000
    },
    {
        "content": "<p>lukewagner <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#issuecomment-3435877960\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>@TartanLlama That is fantastic to hear!  I merged CM/#557.  Do you suppose you could post a note on CM/#570 noting that it has been implemented and you think it's good to merge?</p>\n</blockquote>",
        "id": 546627787,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761210625
    },
    {
        "content": "<p>lukewagner edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#issuecomment-3435877960\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>@TartanLlama That is fantastic to hear!  I merged <a href=\"https://github.com/WebAssembly/component-model/pull/570\">CM/#570</a>.  Do you suppose you could post a note on <a href=\"https://github.com/WebAssembly/component-model/pull/557\">CM/#557</a> noting that it has been implemented and you think it's good to merge?</p>\n</blockquote>",
        "id": 546628031,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761210683
    },
    {
        "content": "<p>TartanLlama edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751\">PR #11751</a>:</p>\n<blockquote>\n<p>Implements <a href=\"https://github.com/WebAssembly/component-model/pull/557\">https://github.com/WebAssembly/component-model/pull/557</a></p>\n<ul>\n<li>[x] Pass through all new builtins</li>\n<li>[x] Basic implementations of new builtins</li>\n<li>[x] Cancellation support</li>\n<li>[x] Support for explicit threads continuing after the implicit thread has exited</li>\n<li>[ ] Match trap conditions with the spec (deferred)</li>\n<li>[x] Insert threads into the instance table rather than holding them inside <code>GuestTask</code></li>\n<li>[x] Don't reuse the existing <code>GuestCall</code> functionality for new threads</li>\n<li>[ ] Testing (partially implemented, further testing deferred)</li>\n<li>[X] Revert changes to the <code>component_model_async_builtins</code> and <code>component_model_async_stackful</code> features</li>\n</ul>\n<p>prtest:full</p>\n</blockquote>",
        "id": 546628632,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761210864
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3370339988\">PR review</a>.</p>",
        "id": 546700132,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761230728
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2455401700\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah ok good point!</p>\n</blockquote>",
        "id": 546700137,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761230728
    },
    {
        "content": "<p>posborne submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3372153291\">PR review</a>.</p>",
        "id": 546753641,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761247230
    },
    {
        "content": "<p>posborne created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2456891791\">PR review comment</a>:</p>\n<blockquote>\n<p>Looks like <a href=\"https://github.com/WebAssembly/component-model/pull/570\">https://github.com/WebAssembly/component-model/pull/570</a> has now merged.</p>\n</blockquote>",
        "id": 546753643,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761247231
    },
    {
        "content": "<p>posborne submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3372217773\">PR review</a>.</p>",
        "id": 546755787,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761248029
    },
    {
        "content": "<p>posborne created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#discussion_r2456952368\">PR review comment</a>:</p>\n<blockquote>\n<p>In other callsites here, access to thread state (e.g. <code>state.get_mut(t.thread)</code>) is done fallibly.  May be worth making this consistent unless we are more confident of state presence for this specific case.</p>\n<p>E.g.</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"k\">ref</span><span class=\"w\"> </span><span class=\"n\">ot</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">old_thread</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">state</span><span class=\"p\">.</span><span class=\"n\">get_mut</span><span class=\"p\">(</span><span class=\"n\">ot</span><span class=\"p\">.</span><span class=\"n\">thread</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"n\">state</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">GuestThreadState</span><span class=\"p\">::</span><span class=\"n\">Running</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 546755788,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761248030
    },
    {
        "content": "<p>posborne submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11751#pullrequestreview-3372322823\">PR review</a>:</p>\n<blockquote>\n<p>Left a couple freestanding comments, but they are minor and can probably be deferred if relevant.</p>\n</blockquote>",
        "id": 546758899,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761249229
    }
]