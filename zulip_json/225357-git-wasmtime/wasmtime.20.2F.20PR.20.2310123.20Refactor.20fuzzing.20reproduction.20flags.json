[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10123\">PR #10123</a> from <code>alexcrichton:refactor-fuzzing-reproduction-flags</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 496173147,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737997910
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10123\">PR #10123</a>.</p>",
        "id": 496173150,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737997910
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10123\">PR #10123</a>.</p>",
        "id": 496173151,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737997910
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10123\">PR #10123</a>.</p>",
        "id": 496173154,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737997910
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10123\">PR #10123</a>.</p>",
        "id": 496173164,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737997913
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10123\">PR #10123</a>.</p>",
        "id": 496173212,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737997923
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10123\">PR #10123</a>:</p>\n<blockquote>\n<p>During fuzzing we emit a debug log of configured options to assist with<br>\nreproducing fuzz test cases outside of the fuzzing harness. Mapping<br>\noptions the fuzzer is using though to CLI flags, for example, is a bit<br>\nof an art though and not obvious. Just today we've got a fuzz bug and I<br>\ncouldn't figure out how to reproduce on the CLI and it turns out the<br>\nissue was that I was forgetting a flag that was being configured in<br>\nresponse to another flag. I got a bit fed up with constantly trying to<br>\nmap one to the other, so I've decided to fix things.</p>\n<p>This commit adds a <code>Display for CommonOptions</code> implementation to the<br>\n<code>wasmtime-cli-flags</code> crate. This is built on the same macro-construction<br>\ninfrastructure of all our flags making it a relatively low one-time-cost<br>\nto implement this. Each option value now implements not only parsing but<br>\nprinting as well.</p>\n<p>Next the <code>wasmtime-fuzzing</code> crate was updated to create a<br>\n<code>CommonOptions</code> first which is then in turn used to create a<br>\n<code>wasmtime::Config</code>. This provides a layer to insert a log statement with<br>\nto emit all configuration options in a form that can be easily<br>\ncopy/pasted to the CLI to reproduce.</p>\n<p>Overall after doing this I was able to quickly reproduce the bug in<br>\nquestion (yay!). The CLI flag logging is pretty verbose right now since<br>\nthe fuzzing infrastructure sets many settings redundantly to their<br>\ndefaults, but reducing flags to a minimum is expected to be relatively<br>\neasy compared to otherwise trying to extract the options.</p>\n</blockquote>",
        "id": 496173262,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737997935
    }
]