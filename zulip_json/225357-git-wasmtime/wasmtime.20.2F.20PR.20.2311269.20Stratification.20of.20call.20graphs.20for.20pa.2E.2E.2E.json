[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11269\">PR #11269</a> from <code>fitzgen:stratification</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit takes a call graph and constructs a strata, which is essentially a parallel execution plan. A strata consists of an ordered sequence of layers, and a layer of an unordered set of functions. The <code>i</code>th layer must be processed before the <code>i + 1</code>th layer, but functions within the same layer may be processed in any order (and in parallel).</p>\n<p>For example, when given the following tree-like call graph:</p>\n<div class=\"codehilite\"><pre><span></span><code>+---+   +---+   +---+\n| a |--&gt;| b |--&gt;| c |\n+---+   +---+   +---+\n  |       |\n  |       |     +---+\n  |       &#39;----&gt;| d |\n  |             +---+\n  |\n  |     +---+   +---+\n  &#39;----&gt;| e |--&gt;| f |\n        +---+   +---+\n          |\n          |     +---+\n          &#39;----&gt;| g |\n                +---+\n</code></pre></div>\n\n<p>then stratification will produce these layers:</p>\n<div class=\"codehilite\"><pre><span></span><code>[\n    {c, d, f, g},\n    {b, e},\n    {a},\n]\n</code></pre></div>\n\n<p>Our goal in constructing the layers is to maximize potential parallelism at each layer. Logically, we do this by finding the strongly-connected components of the input call graph and peeling off all of the leaves of SCCs' condensation (i.e. the DAG that the SCCs form; see the documentation for the <code>StronglyConnectedComponents::evaporation</code> method for details). These leaves become the strata's first layer. The layer's components are removed from the condensation graph, and we repeat the process, so that the condensation's new leaves become the strata's second layer, and etc... until the condensation graph is empty and all components have been processed. In practice we don't actually mutate the condensation graph or remove its nodes but instead count how many unprocessed dependencies each component has, and a component is ready for inclusion in a layer once its unprocessed-dependencies count reaches zero.</p>\n<p>This commit also renames the entity type for strongly-connected components from <code>Component</code> to <code>Scc</code>, as I felt the former was a bit ambiguous given Wasm components.</p>\n<p>The next PR will extend Wasmtime's compilation driver code to actually make use of this new infrastructure.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 529341754,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752779865
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11269\">PR #11269</a>.</p>",
        "id": 529341756,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752779865
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11269\">PR #11269</a>.</p>",
        "id": 529341757,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752779865
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11269\">PR #11269</a>.</p>",
        "id": 529341758,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752779866
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11269\">PR #11269</a>.</p>",
        "id": 529341759,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752779866
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11269\">PR #11269</a>.</p>",
        "id": 529341794,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752779879
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11269\">PR #11269</a>.</p>",
        "id": 529341797,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752779879
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11269\">PR #11269</a>.</p>",
        "id": 529341799,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752779879
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11269\">PR #11269</a>.</p>",
        "id": 529342229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752780078
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11269#pullrequestreview-3030752549\">PR review</a>:</p>\n<blockquote>\n<p>This looks great! Very happy to see this coming together. The dependency-based scheduling into layers looks exactly like I'd expect.</p>\n<p>One thought below on a potential abstraction opportunity but otherwise LGTM</p>\n</blockquote>",
        "id": 529344693,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752781245
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11269#discussion_r2214116729\">PR review comment</a>:</p>\n<blockquote>\n<p>We should clarify the scope and soundness/completeness of the call graph here -- in particular, with respect to imports and indirect calls (one could pick any of several set-points to get e.g. an overapproximation that's sound, or an underapproximation that gives partial but exact answers, and I think inlining wants the latter)</p>\n</blockquote>",
        "id": 529344696,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752781245
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11269#discussion_r2214127667\">PR review comment</a>:</p>\n<blockquote>\n<p>Idle thought -- we have this idiom a lot (list-of-lists stored in a flattened manner, with ranges in another list). It might be nice to build an abstraction around it -- something like</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">elems</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">edge_elems</span><span class=\"p\">.</span><span class=\"n\">start_range</span><span class=\"p\">();</span>\n<span class=\"n\">elems</span><span class=\"p\">.</span><span class=\"n\">extend_from_slice</span><span class=\"p\">(</span><span class=\"o\">..</span><span class=\"p\">.);</span><span class=\"w\"> </span><span class=\"c1\">// or elems.push or whatever</span>\n<span class=\"n\">edges</span><span class=\"p\">[</span><span class=\"n\">caller</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">elems</span><span class=\"p\">.</span><span class=\"n\">finish</span><span class=\"p\">();</span>\n</code></pre></div>\n<p>not necessarily in this PR but as a cleanup at some point.</p>\n<p>We do have <code>Ranges</code> which optimizes for the case that we build the ranges themselves in-order so we can store only one end of the range (and use previous-end as start); here we're processing callers in arbitrary order.</p>\n</blockquote>",
        "id": 529344697,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752781245
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11269#discussion_r2214146073\">PR review comment</a>:</p>\n<blockquote>\n<p>(Actually, on reading further down and seeing more instances of this pattern -- I suspect it might be a nice cleanup in this PR!)</p>\n</blockquote>",
        "id": 529344702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752781246
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11269\">PR #11269</a>.</p>",
        "id": 529357319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752786940
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11269\">PR #11269</a>.</p>",
        "id": 529357370,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752786956
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11269\">PR #11269</a>.</p>",
        "id": 529361334,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752789222
    }
]