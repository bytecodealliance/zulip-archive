[
    {
        "content": "<p>ST-Saint opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713\">issue #10713</a>:</p>\n<blockquote>\n<p>I am trying to use a pipe to achieve IPC in wasm. However, it seems like fifo is not mapped as a fifo, and I failed to open it.</p>\n<p>I am not sure if the fifo type is supported or if I did it wrong.</p>\n<p>Here is how I run it:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>mkfifo<span class=\"w\"> </span>/tmp/fifo\n\nls<span class=\"w\"> </span>/tmp/fifo\n&gt;<span class=\"w\"> </span><span class=\"p\">|</span>rw-r--r--<span class=\"w\"> </span>-<span class=\"w\"> </span>x<span class=\"w\">  </span><span class=\"m\">2</span><span class=\"w\"> </span>May<span class=\"w\"> </span><span class=\"m\">11</span>:42<span class=\"w\"> </span>/tmp/fifo\n\nclang<span class=\"w\"> </span>--target<span class=\"o\">=</span>wasm32-wasi<span class=\"w\"> </span>--sysroot<span class=\"o\">=</span>/usr/share/wasi-sysroot<span class=\"w\"> </span>-o<span class=\"w\"> </span>test_fifo.wasm<span class=\"w\"> </span>test_fifo.c\n\nwasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--dir<span class=\"o\">=</span>/tmp::/tmp<span class=\"w\"> </span>test_fifo.wasm\n&gt;<span class=\"w\"> </span>/tmp/fifo<span class=\"w\"> </span>is<span class=\"w\"> </span>not<span class=\"w\"> </span>a<span class=\"w\"> </span>FIFO\n</code></pre></div>\n<p><div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"c1\">// test_fifo.c</span>\n\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdio.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdlib.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/stat.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;fcntl.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;unistd.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/types.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/stat.h&gt;</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">fifo_path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"/tmp/fifo\"</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">stat</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"p\">(</span><span class=\"n\">fifo_path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">st</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">-1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"stat\"</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"n\">EXIT_FAILURE</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">S_ISFIFO</span><span class=\"p\">(</span><span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">st_mode</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"%s is a FIFO</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fifo_path</span><span class=\"p\">);</span>\n\n<span class=\"w\">                </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">fifo_path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">O_RDONLY</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">-1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"open\"</span><span class=\"p\">);</span>\n<span class=\"w\">                        </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"n\">EXIT_FAILURE</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n\n<span class=\"w\">                </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"n\">buffer</span><span class=\"p\">[</span><span class=\"mi\">128</span><span class=\"p\">];</span>\n<span class=\"w\">                </span><span class=\"kt\">ssize_t</span><span class=\"w\"> </span><span class=\"n\">bytes_read</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"n\">bytes_read</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buffer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                        </span><span class=\"n\">buffer</span><span class=\"p\">[</span><span class=\"n\">bytes_read</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"sc\">'\\0'</span><span class=\"p\">;</span>\n<span class=\"w\">                        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Received: %s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buffer</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n\n<span class=\"w\">                </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bytes_read</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">-1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"read\"</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n\n<span class=\"w\">                </span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"%s is not a FIFO</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fifo_path</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 515777660,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746211808
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713#issuecomment-2847936228\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713\">issue #10713</a>:</p>\n<blockquote>\n<p>You're using WASI Preview 1, where the system call interface underlying your program won't be able to tell it the host file is a FIFO.</p>\n<p>Support for representing a FIFO was added in WASI Preview 2 aka 0.2. However, we still don't have full support in wasi-libc for WASI 0.2, so the libc is falling back on the Preview 1 bindings even when compiled to 0.2 at this time. And furthermore, nobody ever added tests to show that FIFO works with WASI 0.2 filesystems in Wasmtime, so while it might work, it also might be broken. (You're welcome to investigate this - using the <code>wasi</code> crate to call the bindings directly would work, but the libc interfaces will not.)</p>\n<p>We are working on support for WASI 0.2 in wasi-libc soon. Once that work is complete and also we add FIFO to the test suite for Wasmtime, the above code example should fully work. Until then, you'll just have to ignore the libc S_ISFIFO and treat the files you know to be FIFO as FIFOs.</p>\n</blockquote>",
        "id": 515782977,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746213783
    },
    {
        "content": "<p>ST-Saint <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713#issuecomment-2847955893\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713\">issue #10713</a>:</p>\n<blockquote>\n<p>Thanks for the quick reply.</p>\n<p>I also tried reading the FIFO file blindly (without checking the file stat), but I still got seek errors:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\"># shell 1</span>\nwasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--dir<span class=\"o\">=</span>/tmp::/tmp<span class=\"w\"> </span>test_fifo.wasm\n&gt;<span class=\"w\"> </span>...<span class=\"w\"> </span><span class=\"c1\"># pending</span>\n\n<span class=\"c1\"># shell 2</span>\n<span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">\"test\"</span><span class=\"w\"> </span>&gt;<span class=\"w\"> </span>/tmp/fifo\n\n<span class=\"c1\"># shell 1</span>\n\nread:<span class=\"w\"> </span>Invalid<span class=\"w\"> </span>seek\n</code></pre></div>\n<p>Yet, if I simply compile the test to native code, I do receive the message from the FIFO file.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>clang<span class=\"w\"> </span>-o<span class=\"w\"> </span>test_fifo<span class=\"w\"> </span>test_fifo.c\n&gt;<span class=\"w\"> </span>Received:<span class=\"w\"> </span><span class=\"nb\">test</span>\n</code></pre></div>\n<p>so it seems the FIFO support is not ready yet?</p>\n<div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"c1\">// test_fifo.c</span>\n\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdio.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdlib.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/stat.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;fcntl.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;unistd.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/types.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/stat.h&gt;</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">fifo_path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"/tmp/fifo\"</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">stat</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">fifo_path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">O_RDONLY</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">-1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"open\"</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"n\">EXIT_FAILURE</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"n\">buffer</span><span class=\"p\">[</span><span class=\"mi\">128</span><span class=\"p\">];</span>\n<span class=\"w\">        </span><span class=\"kt\">ssize_t</span><span class=\"w\"> </span><span class=\"n\">bytes_read</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"n\">bytes_read</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buffer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">buffer</span><span class=\"p\">[</span><span class=\"n\">bytes_read</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"sc\">'\\0'</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Received: %s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buffer</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bytes_read</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">-1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"read\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</blockquote>",
        "id": 515784555,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746214376
    },
    {
        "content": "<p>ST-Saint edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713#issuecomment-2847955893\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713\">issue #10713</a>:</p>\n<blockquote>\n<p>Thanks for the quick reply.</p>\n<p>I also tried reading the FIFO file blindly (without checking the file stat), but I still got seek errors:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\"># shell 1</span>\nwasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--dir<span class=\"o\">=</span>/tmp::/tmp<span class=\"w\"> </span>test_fifo.wasm\n&gt;<span class=\"w\"> </span>...<span class=\"w\"> </span><span class=\"c1\"># pending</span>\n\n<span class=\"c1\"># shell 2</span>\n<span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">\"test\"</span><span class=\"w\"> </span>&gt;<span class=\"w\"> </span>/tmp/fifo\n\n<span class=\"c1\"># shell 1</span>\n\nread:<span class=\"w\"> </span>Invalid<span class=\"w\"> </span>seek\n</code></pre></div>\n<p>Yet, if I simply compile the test to native code, I do receive the message from the FIFO file.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>clang<span class=\"w\"> </span>-o<span class=\"w\"> </span>test_fifo<span class=\"w\"> </span>test_fifo.c\n&gt;<span class=\"w\"> </span>Received:<span class=\"w\"> </span><span class=\"nb\">test</span>\n</code></pre></div>\n<p>so it seems that I cannot operate the FIFO files with wasi 0.1?</p>\n<div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"c1\">// test_fifo.c</span>\n\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdio.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdlib.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/stat.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;fcntl.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;unistd.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/types.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/stat.h&gt;</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">fifo_path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"/tmp/fifo\"</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">stat</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">fifo_path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">O_RDONLY</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">-1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"open\"</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"n\">EXIT_FAILURE</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"n\">buffer</span><span class=\"p\">[</span><span class=\"mi\">128</span><span class=\"p\">];</span>\n<span class=\"w\">        </span><span class=\"kt\">ssize_t</span><span class=\"w\"> </span><span class=\"n\">bytes_read</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"n\">bytes_read</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buffer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">buffer</span><span class=\"p\">[</span><span class=\"n\">bytes_read</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"sc\">'\\0'</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Received: %s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buffer</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bytes_read</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">-1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"read\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</blockquote>",
        "id": 515784788,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746214458
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713#issuecomment-2847982686\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713\">issue #10713</a>:</p>\n<blockquote>\n<p>Try running wasmtime with <code>WASMTIME_LOG=wasmtime_wasi=trace</code> and see if the messages from there are any help</p>\n</blockquote>",
        "id": 515786524,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746215189
    },
    {
        "content": "<p>ST-Saint <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713#issuecomment-2847993193\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713\">issue #10713</a>:</p>\n<blockquote>\n<p>here it is</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"m\">2025</span>-05-02T19:50:16.080456Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_prestat_get\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">3</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:16.080504Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_prestat_get\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(</span>Dir<span class=\"o\">(</span>PrestatDir<span class=\"w\"> </span><span class=\"o\">{</span><span class=\"w\"> </span>pr_name_len:<span class=\"w\"> </span><span class=\"m\">4</span><span class=\"w\"> </span><span class=\"o\">}))</span>\n<span class=\"m\">2025</span>-05-02T19:50:16.080525Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_prestat_dir_name\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">3</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">path</span><span class=\"o\">=</span>*guest<span class=\"w\"> </span>0x114c0<span class=\"w\"> </span><span class=\"nv\">path_len</span><span class=\"o\">=</span><span class=\"m\">4</span>\n<span class=\"m\">2025</span>-05-02T19:50:16.080534Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_prestat_dir_name\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(())</span>\n<span class=\"m\">2025</span>-05-02T19:50:16.080541Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_prestat_get\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">4</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:16.080547Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_prestat_get\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Err<span class=\"o\">(</span>Error<span class=\"w\"> </span><span class=\"o\">{</span><span class=\"w\"> </span>inner:<span class=\"w\"> </span>Badf<span class=\"w\"> </span><span class=\"o\">})</span>\n<span class=\"m\">2025</span>-05-02T19:50:16.080568Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_fdstat_get\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">3</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:16.080582Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_fdstat_get\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(</span>Fdstat<span class=\"w\"> </span><span class=\"o\">{</span><span class=\"w\"> </span>fs_filetype:<span class=\"w\"> </span>Directory,<span class=\"w\"> </span>fs_flags:<span class=\"w\"> </span>Fdflags<span class=\"o\">(</span>0x0<span class=\"o\">)</span>,<span class=\"w\"> </span>fs_rights_base:<span class=\"w\"> </span>Rights<span class=\"o\">(</span>PATH_CREATE_DIRECTORY<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_CREATE_FILE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_LINK_SOURCE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_LINK_TARGET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_OPEN<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_READDIR<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_READLINK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_RENAME_SOURCE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_RENAME_TARGET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_FILESTAT_GET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_FILESTAT_SET_TIMES<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_GET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_SET_TIMES<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_SYMLINK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_REMOVE_DIRECTORY<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_UNLINK_FILE<span class=\"o\">)</span>,<span class=\"w\"> </span>fs_rights_inheriting:<span class=\"w\"> </span>Rights<span class=\"o\">(</span>FD_DATASYNC<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_READ<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_SEEK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FDSTAT_SET_FLAGS<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_SYNC<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_TELL<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_WRITE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_ADVISE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_ALLOCATE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_CREATE_DIRECTORY<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_CREATE_FILE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_LINK_SOURCE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_LINK_TARGET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_OPEN<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_READDIR<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_READLINK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_RENAME_SOURCE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_RENAME_TARGET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_FILESTAT_GET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_FILESTAT_SET_TIMES<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_GET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_SET_SIZE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_SET_TIMES<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_SYMLINK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_REMOVE_DIRECTORY<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_UNLINK_FILE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>POLL_FD_READWRITE<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">})</span>\n<span class=\"m\">2025</span>-05-02T19:50:16.080607Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"path_open\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">3</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">dirflags</span><span class=\"o\">=</span>Lookupflags<span class=\"o\">(</span>SYMLINK_FOLLOW<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">path</span><span class=\"o\">=</span>*guest<span class=\"w\"> </span>0x422/4<span class=\"w\"> </span><span class=\"nv\">oflags</span><span class=\"o\">=</span>Oflags<span class=\"o\">(</span>0x0<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">fs_rights_base</span><span class=\"o\">=</span>Rights<span class=\"o\">(</span>FD_READ<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_SEEK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FDSTAT_SET_FLAGS<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_SYNC<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_TELL<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_ADVISE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_CREATE_DIRECTORY<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_CREATE_FILE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_LINK_SOURCE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_LINK_TARGET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_OPEN<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_READDIR<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_READLINK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_RENAME_SOURCE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_RENAME_TARGET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_FILESTAT_GET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_FILESTAT_SET_TIMES<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_GET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_SET_TIMES<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_SYMLINK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_REMOVE_DIRECTORY<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_UNLINK_FILE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>POLL_FD_READWRITE<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">fs_rights_inheriting</span><span class=\"o\">=</span>Rights<span class=\"o\">(</span>FD_DATASYNC<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_READ<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_SEEK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FDSTAT_SET_FLAGS<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_SYNC<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_TELL<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_WRITE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_ADVISE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_ALLOCATE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_CREATE_DIRECTORY<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_CREATE_FILE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_LINK_SOURCE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_LINK_TARGET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_OPEN<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_READDIR<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_READLINK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_RENAME_SOURCE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_RENAME_TARGET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_FILESTAT_GET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_FILESTAT_SET_TIMES<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_GET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_SET_SIZE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_SET_TIMES<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_SYMLINK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_REMOVE_DIRECTORY<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_UNLINK_FILE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>POLL_FD_READWRITE<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">fdflags</span><span class=\"o\">=</span>Fdflags<span class=\"o\">(</span>0x0<span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351325Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"path_open\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(</span>Fd<span class=\"o\">(</span><span class=\"m\">4</span><span class=\"o\">))</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351364Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_read\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">4</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">iovs</span><span class=\"o\">=</span>*guest<span class=\"w\"> </span>0x11378/1\n<span class=\"m\">2025</span>-05-02T19:50:22.351380Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_read\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Err<span class=\"o\">(</span>Error<span class=\"w\"> </span><span class=\"o\">{</span><span class=\"w\"> </span>inner:<span class=\"w\"> </span>Spipe<span class=\"w\"> </span><span class=\"o\">})</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351402Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">2</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">iovs</span><span class=\"o\">=</span>*guest<span class=\"w\"> </span>0x11370/2\nread2025-05-02T19:50:22.351416Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(</span><span class=\"m\">4</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351422Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">2</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">iovs</span><span class=\"o\">=</span>*guest<span class=\"w\"> </span>0x11360/2\n:2025-05-02T19:50:22.351430Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(</span><span class=\"m\">1</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351436Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">2</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">iovs</span><span class=\"o\">=</span>*guest<span class=\"w\"> </span>0x11360/2\n<span class=\"w\"> </span><span class=\"m\">2025</span>-05-02T19:50:22.351443Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(</span><span class=\"m\">1</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351450Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">2</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">iovs</span><span class=\"o\">=</span>*guest<span class=\"w\"> </span>0x11370/2\n\nInvalid<span class=\"w\"> </span>seek\n\n<span class=\"m\">2025</span>-05-02T19:50:22.351457Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(</span><span class=\"m\">12</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351463Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">2</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">iovs</span><span class=\"o\">=</span>*guest<span class=\"w\"> </span>0x11360/2\n\n<span class=\"m\">2025</span>-05-02T19:50:22.351471Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(</span><span class=\"m\">1</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351486Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_close\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">4</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351499Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_close\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(())</span>\n</code></pre></div>\n<p>I might just try with wasi 0.2 then</p>\n</blockquote>",
        "id": 515787422,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746215535
    },
    {
        "content": "<p>ST-Saint edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713#issuecomment-2847993193\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713\">issue #10713</a>:</p>\n<blockquote>\n<p>here it is</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"m\">2025</span>-05-02T19:50:16.080456Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_prestat_get\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">3</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:16.080504Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_prestat_get\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(</span>Dir<span class=\"o\">(</span>PrestatDir<span class=\"w\"> </span><span class=\"o\">{</span><span class=\"w\"> </span>pr_name_len:<span class=\"w\"> </span><span class=\"m\">4</span><span class=\"w\"> </span><span class=\"o\">}))</span>\n<span class=\"m\">2025</span>-05-02T19:50:16.080525Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_prestat_dir_name\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">3</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">path</span><span class=\"o\">=</span>*guest<span class=\"w\"> </span>0x114c0<span class=\"w\"> </span><span class=\"nv\">path_len</span><span class=\"o\">=</span><span class=\"m\">4</span>\n<span class=\"m\">2025</span>-05-02T19:50:16.080534Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_prestat_dir_name\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(())</span>\n<span class=\"m\">2025</span>-05-02T19:50:16.080541Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_prestat_get\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">4</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:16.080547Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_prestat_get\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Err<span class=\"o\">(</span>Error<span class=\"w\"> </span><span class=\"o\">{</span><span class=\"w\"> </span>inner:<span class=\"w\"> </span>Badf<span class=\"w\"> </span><span class=\"o\">})</span>\n<span class=\"m\">2025</span>-05-02T19:50:16.080568Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_fdstat_get\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">3</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:16.080582Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_fdstat_get\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(</span>Fdstat<span class=\"w\"> </span><span class=\"o\">{</span><span class=\"w\"> </span>fs_filetype:<span class=\"w\"> </span>Directory,<span class=\"w\"> </span>fs_flags:<span class=\"w\"> </span>Fdflags<span class=\"o\">(</span>0x0<span class=\"o\">)</span>,<span class=\"w\"> </span>fs_rights_base:<span class=\"w\"> </span>Rights<span class=\"o\">(</span>PATH_CREATE_DIRECTORY<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_CREATE_FILE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_LINK_SOURCE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_LINK_TARGET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_OPEN<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_READDIR<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_READLINK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_RENAME_SOURCE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_RENAME_TARGET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_FILESTAT_GET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_FILESTAT_SET_TIMES<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_GET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_SET_TIMES<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_SYMLINK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_REMOVE_DIRECTORY<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_UNLINK_FILE<span class=\"o\">)</span>,<span class=\"w\"> </span>fs_rights_inheriting:<span class=\"w\"> </span>Rights<span class=\"o\">(</span>FD_DATASYNC<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_READ<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_SEEK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FDSTAT_SET_FLAGS<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_SYNC<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_TELL<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_WRITE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_ADVISE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_ALLOCATE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_CREATE_DIRECTORY<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_CREATE_FILE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_LINK_SOURCE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_LINK_TARGET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_OPEN<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_READDIR<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_READLINK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_RENAME_SOURCE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_RENAME_TARGET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_FILESTAT_GET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_FILESTAT_SET_TIMES<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_GET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_SET_SIZE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_SET_TIMES<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_SYMLINK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_REMOVE_DIRECTORY<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_UNLINK_FILE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>POLL_FD_READWRITE<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">})</span>\n<span class=\"m\">2025</span>-05-02T19:50:16.080607Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"path_open\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">3</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">dirflags</span><span class=\"o\">=</span>Lookupflags<span class=\"o\">(</span>SYMLINK_FOLLOW<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">path</span><span class=\"o\">=</span>*guest<span class=\"w\"> </span>0x422/4<span class=\"w\"> </span><span class=\"nv\">oflags</span><span class=\"o\">=</span>Oflags<span class=\"o\">(</span>0x0<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">fs_rights_base</span><span class=\"o\">=</span>Rights<span class=\"o\">(</span>FD_READ<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_SEEK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FDSTAT_SET_FLAGS<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_SYNC<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_TELL<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_ADVISE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_CREATE_DIRECTORY<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_CREATE_FILE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_LINK_SOURCE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_LINK_TARGET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_OPEN<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_READDIR<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_READLINK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_RENAME_SOURCE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_RENAME_TARGET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_FILESTAT_GET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_FILESTAT_SET_TIMES<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_GET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_SET_TIMES<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_SYMLINK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_REMOVE_DIRECTORY<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_UNLINK_FILE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>POLL_FD_READWRITE<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">fs_rights_inheriting</span><span class=\"o\">=</span>Rights<span class=\"o\">(</span>FD_DATASYNC<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_READ<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_SEEK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FDSTAT_SET_FLAGS<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_SYNC<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_TELL<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_WRITE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_ADVISE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_ALLOCATE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_CREATE_DIRECTORY<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_CREATE_FILE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_LINK_SOURCE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_LINK_TARGET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_OPEN<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_READDIR<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_READLINK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_RENAME_SOURCE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_RENAME_TARGET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_FILESTAT_GET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_FILESTAT_SET_TIMES<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_GET<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_SET_SIZE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>FD_FILESTAT_SET_TIMES<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_SYMLINK<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_REMOVE_DIRECTORY<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>PATH_UNLINK_FILE<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>POLL_FD_READWRITE<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">fdflags</span><span class=\"o\">=</span>Fdflags<span class=\"o\">(</span>0x0<span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351325Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"path_open\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(</span>Fd<span class=\"o\">(</span><span class=\"m\">4</span><span class=\"o\">))</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351364Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_read\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">4</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">iovs</span><span class=\"o\">=</span>*guest<span class=\"w\"> </span>0x11378/1\n<span class=\"m\">2025</span>-05-02T19:50:22.351380Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_read\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Err<span class=\"o\">(</span>Error<span class=\"w\"> </span><span class=\"o\">{</span><span class=\"w\"> </span>inner:<span class=\"w\"> </span>Spipe<span class=\"w\"> </span><span class=\"o\">})</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351402Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">2</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">iovs</span><span class=\"o\">=</span>*guest<span class=\"w\"> </span>0x11370/2\n\n<span class=\"nb\">read</span>\n\n<span class=\"m\">2025</span>-05-02T19:50:22.351416Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(</span><span class=\"m\">4</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351422Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">2</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">iovs</span><span class=\"o\">=</span>*guest<span class=\"w\"> </span>0x11360/2\n\n:\n\n<span class=\"m\">2025</span>-05-02T19:50:22.351430Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(</span><span class=\"m\">1</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351436Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">2</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">iovs</span><span class=\"o\">=</span>*guest<span class=\"w\"> </span>0x11360/2\n<span class=\"w\"> </span><span class=\"m\">2025</span>-05-02T19:50:22.351443Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(</span><span class=\"m\">1</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351450Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">2</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">iovs</span><span class=\"o\">=</span>*guest<span class=\"w\"> </span>0x11370/2\n\nInvalid<span class=\"w\"> </span>seek\n\n<span class=\"m\">2025</span>-05-02T19:50:22.351457Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(</span><span class=\"m\">12</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351463Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">2</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"nv\">iovs</span><span class=\"o\">=</span>*guest<span class=\"w\"> </span>0x11360/2\n\n<span class=\"m\">2025</span>-05-02T19:50:22.351471Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_write\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(</span><span class=\"m\">1</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351486Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_close\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">fd</span><span class=\"o\">=</span>Fd<span class=\"o\">(</span><span class=\"m\">4</span><span class=\"o\">)</span>\n<span class=\"m\">2025</span>-05-02T19:50:22.351499Z<span class=\"w\"> </span>TRACE<span class=\"w\"> </span>wiggle<span class=\"w\"> </span>abi<span class=\"o\">{</span><span class=\"nv\">module</span><span class=\"o\">=</span><span class=\"s2\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"o\">=</span><span class=\"s2\">\"fd_close\"</span><span class=\"o\">}</span>:<span class=\"w\"> </span>wasmtime_wasi::preview1::wasi_snapshot_preview1:<span class=\"w\"> </span><span class=\"nv\">result</span><span class=\"o\">=</span>Ok<span class=\"o\">(())</span>\n</code></pre></div>\n<p>I might just try with wasi 0.2 then</p>\n</blockquote>",
        "id": 515787615,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746215623
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713#issuecomment-2848003156\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713\">issue #10713</a>:</p>\n<blockquote>\n<p>Looks like wasip2 only provides an equivalent to pread and expects the guest to keep the file position itself. Pread requires the file to be seekable however, which pipes are not. (confusingly the docs on <code>descriptor#read-via-stream</code> and <code>descriptor#write-via-stream</code> say that they are similar to <code>read</code>/<code>write</code> when they are actually more similar to <code>pread</code>/<code>pwrite</code> as they have an <code>offset</code> argument.</p>\n</blockquote>",
        "id": 515788169,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746215864
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713#issuecomment-2848003187\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713\">issue #10713</a>:</p>\n<blockquote>\n<p>Ok, it looks like the read isnt blocking and instead is failing with ESPIPE, and then wasi-libc doesn't know how to deal with that because wasi-libc doesn't know about FIFOs (for previously described reasons).</p>\n<p>One way you could work around this would be to write your own <code>read</code> function, rather than use wasi-libcs, that gets the blocking behavior (if desired) by using poll_oneoff after an SPIPE to block until readable.</p>\n</blockquote>",
        "id": 515788172,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746215864
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713#issuecomment-2848007398\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713\">issue #10713</a>:</p>\n<blockquote>\n<blockquote>\n<p>Ok, it looks like the read isnt blocking and instead is failing with ESPIPE, and then wasi-libc doesn't know how to deal with that because wasi-libc doesn't know about FIFOs (for previously described reasons).</p>\n</blockquote>\n<p><code>ESPIPE</code> is an error documented as being returned by <code>fseek</code>/<code>pread</code>, not by <code>read</code>. Wasip2 doesn't provide any way to use <code>read</code>, and Wasmtime layers wasip1 on top of wasip2 so it too can't use <code>read</code>.</p>\n</blockquote>",
        "id": 515788467,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746215997
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713#issuecomment-2848013499\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713\">issue #10713</a>:</p>\n<blockquote>\n<p>Ah right thats an implementation detail of wasi p1 on p2 that I forgot about, probably because its never been tested on FIFOs.</p>\n<p>So, for now, FIFOs wont work under either p1 or p2. Someone will have to do some work to get them working. I can guide someone if theyre willing to dig into the implementations to contribute, but I can't prioritize it for myself for a while.</p>\n</blockquote>",
        "id": 515788983,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746216184
    },
    {
        "content": "<p>ST-Saint edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713#issuecomment-2847955893\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10713\">issue #10713</a>:</p>\n<blockquote>\n<p>Thanks for the quick reply.</p>\n<p>I also tried reading the FIFO file blindly (without checking the file stat), but I still got seek errors:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\"># shell 1</span>\nwasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--dir<span class=\"o\">=</span>/tmp::/tmp<span class=\"w\"> </span>test_fifo.wasm\n&gt;<span class=\"w\"> </span>...<span class=\"w\"> </span><span class=\"c1\"># pending</span>\n\n<span class=\"c1\"># shell 2</span>\n<span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">\"test\"</span><span class=\"w\"> </span>&gt;<span class=\"w\"> </span>/tmp/fifo\n\n<span class=\"c1\"># shell 1</span>\n\nread:<span class=\"w\"> </span>Invalid<span class=\"w\"> </span>seek\n</code></pre></div>\n<p>Yet, if I simply compile the test to native code, I do receive the message from the FIFO file.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>clang<span class=\"w\"> </span>-o<span class=\"w\"> </span>test_fifo<span class=\"w\"> </span>test_fifo.c\n\n<span class=\"c1\"># shell 1</span>\n./test_fifo\n&gt;<span class=\"w\"> </span>...<span class=\"w\"> </span><span class=\"c1\"># pending</span>\n\n<span class=\"c1\"># shell 2</span>\n<span class=\"nb\">echo</span><span class=\"w\"> </span><span class=\"s2\">\"test\"</span><span class=\"w\"> </span>&gt;<span class=\"w\"> </span>/tmp/fifo\n\n<span class=\"c1\"># shell 1</span>\n&gt;<span class=\"w\"> </span>Received:<span class=\"w\"> </span><span class=\"nb\">test</span>\n</code></pre></div>\n<p>so it seems that I cannot operate the FIFO files with wasi 0.1?</p>\n<div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"c1\">// test_fifo.c</span>\n\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdio.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdlib.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/stat.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;fcntl.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;unistd.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/types.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/stat.h&gt;</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">fifo_path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"/tmp/fifo\"</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">stat</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">fifo_path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">O_RDONLY</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">-1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"open\"</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"n\">EXIT_FAILURE</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"n\">buffer</span><span class=\"p\">[</span><span class=\"mi\">128</span><span class=\"p\">];</span>\n<span class=\"w\">        </span><span class=\"kt\">ssize_t</span><span class=\"w\"> </span><span class=\"n\">bytes_read</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"n\">bytes_read</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buffer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">buffer</span><span class=\"p\">[</span><span class=\"n\">bytes_read</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"sc\">'\\0'</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Received: %s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buffer</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bytes_read</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">-1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"read\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</blockquote>",
        "id": 515845657,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746247388
    }
]