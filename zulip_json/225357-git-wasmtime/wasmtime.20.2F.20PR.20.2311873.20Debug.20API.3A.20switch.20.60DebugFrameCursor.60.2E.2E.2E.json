[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873\">PR #11873</a> from <code>cfallin:wasmtime-debug-store-context</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This permits use of ordinary store accessors, such as GC object accessors, while viewing the stack. In #11835 and related discussion, we've concluded that (i) it is safe to provide this mutable access, including e.g. ability to do a GC, because debugger access comes only at points that are morally like hostcalls (right now, literally with a <code>Caller</code>, and eventually with debug yields); and (ii) we will need this in order to provide the full range of expected debugger functionality. Even before mutation-during-debugging comes into play, with the API before this change, it was not possible to read GC objects at all (because all accessors take a mutable store).</p>\n<p>Closes #11835 (this addresses the broader question of access from the debugger, and it seems there wasn't a desire to actually refactor as that issue initially suggested).</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 545140160,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760569224
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873\">PR #11873</a>.</p>",
        "id": 545140162,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760569224
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873\">PR #11873</a>.</p>",
        "id": 545140163,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760569225
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873#pullrequestreview-3345266651\">PR review</a>.</p>",
        "id": 545349853,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760625483
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873#discussion_r2436253554\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this be <code>StoreContextMut&lt;'a, T&gt;</code> instead of <code>&amp;'a mut StoreInner&lt;T&gt;</code>? That's generally what's used in various places to avoid using <code>StoreInner</code> directly.</p>\n</blockquote>",
        "id": 545349855,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760625483
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873#discussion_r2436249771\">PR review comment</a>:</p>\n<blockquote>\n<p>This seems a bit surprising to me where I'd expect that debug wouldn't have that much to do with gc in terms of conditionals relative to what the rest of the codebase already does. Do you know why debug is different in this regard?</p>\n</blockquote>",
        "id": 545349860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760625483
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873#discussion_r2436523138\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, I think I put this in as a matter of expediency when building out the debug step event for exceptions; but my only real reason was \"this seems like a lot of trouble to cfg-gate\" on all the relevant enums, etc. Happy to do so though.</p>\n</blockquote>",
        "id": 545377219,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760629485
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873#pullrequestreview-3345628017\">PR review</a>.</p>",
        "id": 545377222,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760629485
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873\">PR #11873</a>.</p>",
        "id": 545420897,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760638998
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873#pullrequestreview-3346384945\">PR review</a>.</p>",
        "id": 545420947,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760639012
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873#discussion_r2437024072\">PR review comment</a>:</p>\n<blockquote>\n<p>Done in 494e406a2b.</p>\n</blockquote>",
        "id": 545420949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760639012
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873#pullrequestreview-3346385413\">PR review</a>.</p>",
        "id": 545420962,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760639017
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873#discussion_r2437024352\">PR review comment</a>:</p>\n<blockquote>\n<p>Done in 494e406a2b.</p>\n</blockquote>",
        "id": 545420963,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760639018
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873#pullrequestreview-3346971630\">PR review</a>.</p>",
        "id": 545442670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760647971
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873\">PR #11873</a>.</p>",
        "id": 545448363,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760650846
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873\">PR #11873</a>.</p>",
        "id": 545448387,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760650858
    },
    {
        "content": "<p>cfallin has disabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873\">PR #11873</a>.</p>",
        "id": 545452566,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760653402
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11873\">PR #11873</a>.</p>",
        "id": 545452703,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1760653505
    }
]