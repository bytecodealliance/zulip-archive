[
    {
        "content": "<p><a href=\"https://github.com/davecramer\">davecramer</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167\">Issue #10167</a>.</p>",
        "id": 497226632,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738472037
    },
    {
        "content": "<p>davecramer opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167\">issue #10167</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p>With the following python</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">def</span><span class=\"w\"> </span><span class=\"n\">talk</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"s\">\"Talk \"</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">message</span>\n\n\n<span class=\"n\">def</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">():</span>\n<span class=\"w\">    </span><span class=\"nc\">print</span><span class=\"p\">(</span><span class=\"n\">talk</span><span class=\"p\">(</span><span class=\"s\">\"Hello World\"</span><span class=\"p\">))</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n\n\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">__name__</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">\"__main__\"</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">main</span><span class=\"p\">()</span>\n</code></pre></div>\n<p>compiled to wasm using py2wasm</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"c1\">// Set up our context</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_engine_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_engine_new</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"n\">assert</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_store_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_store_new</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">assert</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_context_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">context</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_store_context</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Create a linker with WASI functions defined</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_linker_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_linker_new</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_error_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_linker_define_wasi</span><span class=\"p\">(</span><span class=\"n\">linker</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to link wasi\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"n\">wasm_byte_vec_t</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"c1\">// Load our input file to parse it next</span>\n<span class=\"w\">  </span><span class=\"n\">FILE</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">(</span><span class=\"s\">\"wasm/test.wasm\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"rb\"</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">file</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"&gt; Error loading file!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"n\">fseek</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">L</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SEEK_END</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">size_t</span><span class=\"w\"> </span><span class=\"n\">file_size</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ftell</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_byte_vec_new_uninitialized</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">wasm</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_size</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">fseek</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">L</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SEEK_SET</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fread</span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_size</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"&gt; Error loading module!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"n\">fclose</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Compile our modules</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_module_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_module_new</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">uint8_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to compile module\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_byte_vec_delete</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">wasm</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Instantiate wasi</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">wasi_config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasi_config_new</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"n\">assert</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_inherit_argv</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_inherit_env</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_inherit_stdin</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_inherit_stdout</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_inherit_stderr</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_trap_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">trap</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_context_set_wasi</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to instantiate WASI\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Instantiate the module</span>\n<span class=\"w\">  </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_linker_module</span><span class=\"p\">(</span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to instantiate module\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Run it.</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_func_t</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_linker_get_default</span><span class=\"p\">(</span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"main\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">func</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to locate default export for module\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_func_call</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">func</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"error calling default export\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"c1\">// Clean up after ourselves at this point</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_module_delete</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_store_delete</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_engine_delete</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">message</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasmtime_error_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">error</span><span class=\"p\">,</span>\n<span class=\"w\">                            </span><span class=\"n\">wasm_trap_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">trap</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">fprintf</span><span class=\"p\">(</span><span class=\"n\">stderr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"error: %s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_byte_vec_t</span><span class=\"w\"> </span><span class=\"n\">error_message</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_error_message</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_error_delete</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_trap_message</span><span class=\"p\">(</span><span class=\"n\">trap</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_trap_delete</span><span class=\"p\">(</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"n\">fprintf</span><span class=\"p\">(</span><span class=\"n\">stderr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"%.*s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"n\">error_message</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error_message</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_byte_vec_delete</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>TODO: upload Wasm file here<br>\nI get the error </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Talk</span><span class=\"w\"> </span><span class=\"n\">Hello</span><span class=\"w\"> </span><span class=\"n\">World</span>\n<span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"n\">calling</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"w\"> </span><span class=\"n\">export</span>\n<span class=\"n\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x32a019</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__wasi_proc_exit</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x3286df</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">_Exit</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x33301f</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">exit</span>\n<span class=\"w\">    </span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x16698d</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">Py_Exit</span>\n<span class=\"w\">    </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x34b2dc</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">main</span>\n<span class=\"w\">    </span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x329c22</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__main_void</span>\n<span class=\"w\">    </span><span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x5002</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">_start</span>\n<span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">WASMTIME_BACKTRACE_DETAILS</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">show</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">debugging</span><span class=\"w\"> </span><span class=\"n\">information</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">Exited</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: <br>\n29.0.0</p>\n<p>Operating system: macos Sonoma 14.7.2</p>\n<p>Architecture: ARM</p>\n</blockquote>",
        "id": 497226633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738472037
    },
    {
        "content": "<p>davecramer edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167\">issue #10167</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>With the following python</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">def</span><span class=\"w\"> </span><span class=\"n\">talk</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"s\">\"Talk \"</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">message</span>\n\n\n<span class=\"n\">def</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">():</span>\n<span class=\"w\">    </span><span class=\"nc\">print</span><span class=\"p\">(</span><span class=\"n\">talk</span><span class=\"p\">(</span><span class=\"s\">\"Hello World\"</span><span class=\"p\">))</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n\n\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">__name__</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">\"__main__\"</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">main</span><span class=\"p\">()</span>\n</code></pre></div>\n<p>compiled to wasm using py2wasm</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"c1\">// Set up our context</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_engine_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_engine_new</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"n\">assert</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_store_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_store_new</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">assert</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_context_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">context</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_store_context</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Create a linker with WASI functions defined</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_linker_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_linker_new</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_error_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_linker_define_wasi</span><span class=\"p\">(</span><span class=\"n\">linker</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to link wasi\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"n\">wasm_byte_vec_t</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"c1\">// Load our input file to parse it next</span>\n<span class=\"w\">  </span><span class=\"n\">FILE</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">(</span><span class=\"s\">\"wasm/test.wasm\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"rb\"</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">file</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"&gt; Error loading file!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"n\">fseek</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">L</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SEEK_END</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">size_t</span><span class=\"w\"> </span><span class=\"n\">file_size</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ftell</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_byte_vec_new_uninitialized</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">wasm</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_size</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">fseek</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">L</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SEEK_SET</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fread</span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_size</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"&gt; Error loading module!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"n\">fclose</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Compile our modules</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_module_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_module_new</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">uint8_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to compile module\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_byte_vec_delete</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">wasm</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Instantiate wasi</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">wasi_config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasi_config_new</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"n\">assert</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_inherit_argv</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_inherit_env</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_inherit_stdin</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_inherit_stdout</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_inherit_stderr</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_trap_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">trap</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_context_set_wasi</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to instantiate WASI\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Instantiate the module</span>\n<span class=\"w\">  </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_linker_module</span><span class=\"p\">(</span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to instantiate module\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Run it.</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_func_t</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_linker_get_default</span><span class=\"p\">(</span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"main\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">func</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to locate default export for module\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_func_call</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">func</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"error calling default export\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"c1\">// Clean up after ourselves at this point</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_module_delete</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_store_delete</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_engine_delete</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">message</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasmtime_error_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">error</span><span class=\"p\">,</span>\n<span class=\"w\">                            </span><span class=\"n\">wasm_trap_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">trap</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">fprintf</span><span class=\"p\">(</span><span class=\"n\">stderr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"error: %s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_byte_vec_t</span><span class=\"w\"> </span><span class=\"n\">error_message</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_error_message</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_error_delete</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_trap_message</span><span class=\"p\">(</span><span class=\"n\">trap</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_trap_delete</span><span class=\"p\">(</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"n\">fprintf</span><span class=\"p\">(</span><span class=\"n\">stderr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"%.*s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"n\">error_message</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error_message</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_byte_vec_delete</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>TODO: upload Wasm file here<br>\nI get the error </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Talk</span><span class=\"w\"> </span><span class=\"n\">Hello</span><span class=\"w\"> </span><span class=\"n\">World</span>\n<span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"n\">calling</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"w\"> </span><span class=\"n\">export</span>\n<span class=\"n\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x32a019</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__wasi_proc_exit</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x3286df</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">_Exit</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x33301f</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">exit</span>\n<span class=\"w\">    </span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x16698d</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">Py_Exit</span>\n<span class=\"w\">    </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x34b2dc</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">main</span>\n<span class=\"w\">    </span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x329c22</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__main_void</span>\n<span class=\"w\">    </span><span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x5002</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">_start</span>\n<span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">WASMTIME_BACKTRACE_DETAILS</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">show</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">debugging</span><span class=\"w\"> </span><span class=\"n\">information</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">Exited</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: <br>\n29.0.0</p>\n<p>Operating system: macos Sonoma 14.7.2</p>\n<p>Architecture: ARM</p>\n</blockquote>",
        "id": 497226688,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738472059
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167#issuecomment-2629331747\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167\">issue #10167</a>:</p>\n<blockquote>\n<p>The wasi_proc_exit syscall works by throwing a trap with the exit code. In Rust you can downcast the trap to the wasi exit code type, but I don't think the C API supports this.</p>\n</blockquote>",
        "id": 497245929,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738491490
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167#issuecomment-2629331747\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167\">issue #10167</a>:</p>\n<blockquote>\n<p>The wasi_proc_exit syscall works by throwing a trap with the exit code. In Rust you can downcast the trap to the wasi exit code type, but I don't think the C API supports this.</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/a0338af84f66cb452fdf4b692d4facb5d052c12d/src/commands/run.rs#L243-L249\">https://github.com/bytecodealliance/wasmtime/blob/a0338af84f66cb452fdf4b692d4facb5d052c12d/src/commands/run.rs#L243-L249</a></p>\n</blockquote>",
        "id": 497245956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738491535
    },
    {
        "content": "<p>davecramer <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167#issuecomment-2629492829\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167\">issue #10167</a>:</p>\n<blockquote>\n<p>Interesting as it is more or less from the examples</p>\n<p>Thanks</p>\n<p>Dave Cramer</p>\n<p>On Sun, Feb 2, 2025 at 5:18 AM bjorn3 <strong><em>@</em></strong>.***&gt; wrote:</p>\n<blockquote>\n<p>The wasi_proc_exit syscall works by throwing a trap with the exit code. In<br>\nRust you can downcast the trap to the wasi exit code type, but I don't<br>\nthink the C API supports this.</p>\n<p>—<br>\nReply to this email directly, view it on GitHub<br>\n&lt;<a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167#issuecomment-2629331747\">https://github.com/bytecodealliance/wasmtime/issues/10167#issuecomment-2629331747</a>&gt;,<br>\nor unsubscribe<br>\n&lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AADDH5QPPT7ERETPV7KLM332NXWHLAVCNFSM6AAAAABWKAIFZOVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDMMRZGMZTCNZUG4\">https://github.com/notifications/unsubscribe-auth/AADDH5QPPT7ERETPV7KLM332NXWHLAVCNFSM6AAAAABWKAIFZOVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDMMRZGMZTCNZUG4</a>&gt;<br>\n.<br>\nYou are receiving this because you authored the thread.Message ID:<br>\n<strong><em>@</em></strong>.***&gt;</p>\n</blockquote>\n</blockquote>",
        "id": 497277008,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738519088
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167#issuecomment-2629570645\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167\">issue #10167</a>:</p>\n<blockquote>\n<p>What's going on here is that the Wasm VM does not have a way to unwind the stack when a function like libc's <code>exit</code> is called, so we have to implement it by having the WASI implementation throw a trap. In the C API, you can use <a href=\"https://github.com/bytecodealliance/wasmtime/blob/pch/invoke_wave/crates/c-api/include/wasmtime/error.h#L54-L62\"><code>wasmtime_error_exit_status</code></a> to check if the returned error is caused by a WASI exit, and you probably want to treat a WASI exit with code 0 the same as a successful call (the C API does not bake that assumption in for you).</p>\n<p>The Wasm Exception Handling proposal has recently <a href=\"https://github.com/WebAssembly/proposals?tab=readme-ov-file#phase-4---standardize-the-feature-wg\">progressed to Phase 4</a> and we want to implement it in wasmtime soon. Once it is widely available in WASI runtimes, we can then change the behavior of the WASI libc to implement <code>exit</code> with stack unwinding, rather than calling a special function that traps and requires user interpretation in this way.</p>\n</blockquote>",
        "id": 497294136,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738532858
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167#issuecomment-2629573121\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167\">issue #10167</a>:</p>\n<blockquote>\n<blockquote>\n<p>we can then change the behavior of the WASI libc to implement exit with stack unwinding</p>\n</blockquote>\n<p>That would be unsound at least when the guest language is rust. <code>std::process::exit</code> is defined to immediately exit the process without unwinding and in the libc crate <code>exit</code> is defined as <code>extern \"C\"</code> rather than <code>extern \"C-unwind\"</code> and thus unwinding out of it is UB.</p>\n</blockquote>",
        "id": 497294582,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738533202
    },
    {
        "content": "<p>davecramer <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167#issuecomment-2630614780\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167\">issue #10167</a>:</p>\n<blockquote>\n<p>Well it's good to know that there's nothing I can do about it. <br>\nI'm kind of surprised that nobody else has found this? Seems like it isn't used very much<br>\nIt's not out of the realm of possibility that I could write what I want in Rust, it's just much easier in C.</p>\n</blockquote>",
        "id": 497398951,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738580315
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167#issuecomment-2630739788\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167\">issue #10167</a>:</p>\n<blockquote>\n<p>@davecramer did you see Pat's link to <code>wasmtime_error_exit_status</code>? Does that not work for you? (That's the solution to this issue, and adding such handling to the C/Rust API examples would be reasonable too I think)</p>\n</blockquote>",
        "id": 497412881,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738583775
    },
    {
        "content": "<p>davecramer <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167#issuecomment-2630867691\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167\">issue #10167</a>:</p>\n<blockquote>\n<p>@alexcrichton honestly, no. Just got back from FOSDEM, bit ragged at the moment.</p>\n</blockquote>",
        "id": 497425923,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738587144
    },
    {
        "content": "<p>davecramer closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167\">issue #10167</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>With the following python</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">def</span><span class=\"w\"> </span><span class=\"n\">talk</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"s\">\"Talk \"</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">message</span>\n\n\n<span class=\"n\">def</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">():</span>\n<span class=\"w\">    </span><span class=\"nc\">print</span><span class=\"p\">(</span><span class=\"n\">talk</span><span class=\"p\">(</span><span class=\"s\">\"Hello World\"</span><span class=\"p\">))</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n\n\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">__name__</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">\"__main__\"</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">main</span><span class=\"p\">()</span>\n</code></pre></div>\n<p>compiled to wasm using py2wasm</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"c1\">// Set up our context</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_engine_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_engine_new</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"n\">assert</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_store_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_store_new</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">assert</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_context_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">context</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_store_context</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Create a linker with WASI functions defined</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_linker_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_linker_new</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_error_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_linker_define_wasi</span><span class=\"p\">(</span><span class=\"n\">linker</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to link wasi\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"n\">wasm_byte_vec_t</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"c1\">// Load our input file to parse it next</span>\n<span class=\"w\">  </span><span class=\"n\">FILE</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">(</span><span class=\"s\">\"wasm/test.wasm\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"rb\"</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">file</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"&gt; Error loading file!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"n\">fseek</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">L</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SEEK_END</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">size_t</span><span class=\"w\"> </span><span class=\"n\">file_size</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ftell</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_byte_vec_new_uninitialized</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">wasm</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_size</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">fseek</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">L</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SEEK_SET</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fread</span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_size</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"&gt; Error loading module!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"n\">fclose</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Compile our modules</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_module_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_module_new</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">uint8_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to compile module\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_byte_vec_delete</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">wasm</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Instantiate wasi</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">wasi_config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasi_config_new</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"n\">assert</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_inherit_argv</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_inherit_env</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_inherit_stdin</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_inherit_stdout</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasi_config_inherit_stderr</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_trap_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">trap</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_context_set_wasi</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to instantiate WASI\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Instantiate the module</span>\n<span class=\"w\">  </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_linker_module</span><span class=\"p\">(</span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to instantiate module\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Run it.</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_func_t</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_linker_get_default</span><span class=\"p\">(</span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"main\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">func</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to locate default export for module\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_func_call</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">func</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"error calling default export\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"c1\">// Clean up after ourselves at this point</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_module_delete</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasmtime_store_delete</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_engine_delete</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">message</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasmtime_error_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">error</span><span class=\"p\">,</span>\n<span class=\"w\">                            </span><span class=\"n\">wasm_trap_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">trap</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">fprintf</span><span class=\"p\">(</span><span class=\"n\">stderr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"error: %s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_byte_vec_t</span><span class=\"w\"> </span><span class=\"n\">error_message</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_error_message</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_error_delete</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_trap_message</span><span class=\"p\">(</span><span class=\"n\">trap</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_trap_delete</span><span class=\"p\">(</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"n\">fprintf</span><span class=\"p\">(</span><span class=\"n\">stderr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"%.*s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"n\">error_message</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error_message</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">wasm_byte_vec_delete</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>TODO: upload Wasm file here<br>\nI get the error </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Talk</span><span class=\"w\"> </span><span class=\"n\">Hello</span><span class=\"w\"> </span><span class=\"n\">World</span>\n<span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"n\">calling</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"w\"> </span><span class=\"n\">export</span>\n<span class=\"n\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x32a019</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__wasi_proc_exit</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x3286df</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">_Exit</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x33301f</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">exit</span>\n<span class=\"w\">    </span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x16698d</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">Py_Exit</span>\n<span class=\"w\">    </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x34b2dc</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">main</span>\n<span class=\"w\">    </span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x329c22</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__main_void</span>\n<span class=\"w\">    </span><span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x5002</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">_start</span>\n<span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">WASMTIME_BACKTRACE_DETAILS</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">show</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">debugging</span><span class=\"w\"> </span><span class=\"n\">information</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">Exited</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: <br>\n29.0.0</p>\n<p>Operating system: macos Sonoma 14.7.2</p>\n<p>Architecture: ARM</p>\n</blockquote>",
        "id": 497467253,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738596775
    },
    {
        "content": "<p>davecramer <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167#issuecomment-2631342017\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10167\">issue #10167</a>:</p>\n<blockquote>\n<blockquote>\n<p><a href=\"https://github.com/davecramer\">@davecramer</a> did you see Pat's link to <code>wasmtime_error_exit_status</code>? Does that not work for you? (That's the solution to this issue, and adding such handling to the C/Rust API examples would be reasonable too I think)</p>\n</blockquote>\n<p>That works fine.</p>\n<p>Now on to how to pass data back and forth without using argc, argv.<br>\nThanks!</p>\n</blockquote>",
        "id": 497467256,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738596775
    }
]