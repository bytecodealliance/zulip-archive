[
    {
        "content": "<p>sunfishcode opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10670\">PR #10670</a> from <code>sunfishcode:sunfishcode/trunc-libcall</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>When <code>!clif_instruction_traps_enabled()</code>, the float-to-int conversion would sometimes emit a Cranelift <code>trunc</code> instruction directly, without checking <code>has_round()</code>, which led to Cranelift emitting a libcall. Fix it by calling the <code>trunc_f32</code> and <code>trunc_f64</code> routines which do check <code>has_round()</code>.</p>\n<p>This fixes a fuzzbug from #10657.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 514208299,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745521170
    },
    {
        "content": "<p><strong>sunfishcode</strong> requested <a href=\"https://github.com/dicej\">dicej</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10670\">PR #10670</a>.</p>",
        "id": 514208301,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745521170
    },
    {
        "content": "<p><strong>sunfishcode</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10670\">PR #10670</a>.</p>",
        "id": 514208305,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745521171
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10670#issuecomment-2828597523\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10670\">PR #10670</a>:</p>\n<blockquote>\n<p>What's a good place to add a testcase for this? It needs a Wasm input, a custom target configuration, and it needs to check the generated Cranelift code or machine code.</p>\n</blockquote>",
        "id": 514208951,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745521286
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10670#issuecomment-2828668262\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10670\">PR #10670</a>:</p>\n<blockquote>\n<blockquote>\n<p>What's a good place to add a testcase for this?</p>\n</blockquote>\n<p>We have the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/tests/disas/\">disas tests</a> now; a good example with specific target settings might be <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/tests/disas/x64-bmi2.wat\">this one</a> (for the x86-64 BMI2 extensions). We have the env-var-based \"blessing\" infra here to autogenerate the expectation, too (<code>WASMTIME_TEST_BLESS=1</code>).</p>\n</blockquote>",
        "id": 514214764,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745523323
    },
    {
        "content": "<p>cfallin edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10670#issuecomment-2828668262\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10670\">PR #10670</a>:</p>\n<blockquote>\n<blockquote>\n<p>What's a good place to add a testcase for this?</p>\n</blockquote>\n<p>We have the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/tests/disas/\">disas tests</a> now; a good example with specific target settings might be <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/tests/disas/x64-bmi2.wat\">this one</a> (for the x86-64 BMI2 extensions). We have the env-var-based \"blessing\" infra here to autogenerate the expectation, too (<code>WASMTIME_TEST_BLESS=1 cargo test --test disas</code>).</p>\n</blockquote>",
        "id": 514214820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745523349
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10670#pullrequestreview-2792295703\">PR review</a>.</p>",
        "id": 514214915,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745523380
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10670\">PR #10670</a>.</p>",
        "id": 514219552,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745525113
    },
    {
        "content": "<p>sunfishcode merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10670\">PR #10670</a>.</p>",
        "id": 514225704,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745527465
    }
]