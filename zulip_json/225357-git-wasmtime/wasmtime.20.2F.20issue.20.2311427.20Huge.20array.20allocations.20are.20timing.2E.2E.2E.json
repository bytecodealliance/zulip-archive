[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11427\">issue #11427</a>:</p>\n<blockquote>\n<p>There's a <a href=\"https://oss-fuzz.com/testcase-detail/5285141607153664\">timeout on oss-fuzz right now</a> in the <code>differential</code> fuzzer. Debugging this it looks like huge arrays are being allocated in wasm and limits aren't kicking into effect. I've verified that the memory limits aren't being exceeded as all allocations fall under our 1G limit for stores. </p>\n<p>What appears to be happening is that Cranelift-generated wasm code is taking quite a long time to initialize the array in question. This is under Pulley which is also a slowdown hit too. Differential fuzzing relies on in-wasm fuel counters to ensure execution doesn't take too long and those counters aren't taking into account these \"expensive\" instructions.</p>\n<p>There's a few things I've noticed here and some ideas for solving this:</p>\n<ul>\n<li>Compiled code for <code>array.new_default</code> has a loop which doesn't contain fuel/epoch checks. That will help in the general case but won't help here because while fuel is enabled for this fuzz test case it's given infinite fuel and relies on in-wasm fuel instead.</li>\n<li>Wasm-smith could in theory decrement the size of <code>array.new_default</code> from the in-wasm fuel counter before executing <code>array.new_default</code>, but it doesn't currently.</li>\n<li>Host-side allocations of large arrays don't have any await/fuel/epoch checks meaning that large allocations take take a significant chunk of time.</li>\n</ul>\n</blockquote>",
        "id": 534272831,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755105735
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the fuzz-bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11427\">Issue #11427</a>.</p>",
        "id": 534272833,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755105735
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasm-proposal:gc label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11427\">Issue #11427</a>.</p>",
        "id": 534272836,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755105737
    }
]