[
    {
        "content": "<p>Simoffsky opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10994\">issue #10994</a>:</p>\n<blockquote>\n<p>Cranelift fails to eliminate a dead conditional branch in a case where the condition is statically known to be false due to constant folding.</p>\n<p><a href=\"https://godbolt.org/z/nMjvMcK1Y\">godbolt link</a> (look at $process_rows).</p>\n<h2>Input WASM getted by using C++ Wasmtime API</h2>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$process_rows</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n    <span class=\"k\">block</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.eqz</span>\n      <span class=\"nb\">br_if</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">i32.shl</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">i32.add</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">2</span>\n      <span class=\"nb\">i32.gt_s</span>\n      <span class=\"nb\">select</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.add</span>\n      <span class=\"nb\">local.set</span> <span class=\"mi\">0</span>\n    <span class=\"k\">end</span>\n    <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n    <span class=\"nb\">i32.const</span> <span class=\"mi\">1</span>\n    <span class=\"nb\">i32.add</span><span class=\"p\">))</span>\n</code></pre></div>\n<h2>Expected behavior</h2>\n<p>Since <code>i32.const 0</code> is always equal to zero, the result of <code>i32.eqz</code> is always 1, and <code>br_if 0</code> is guaranteed to be taken unconditionally. Therefore, all code after the branch inside the block is dead and should be removed.</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">xor</span><span class=\"w\"> </span><span class=\"no\">esi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">esi</span>\n<span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">esi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">esi</span>\n<span class=\"nf\">je</span><span class=\"w\">  </span><span class=\"err\">&lt;</span><span class=\"no\">after_block</span><span class=\"err\">&gt;</span><span class=\"w\">       </span><span class=\"c1\">; this is always false, should not exist</span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\">            </span><span class=\"c1\">; dead code</span>\n<span class=\"nf\">shl</span><span class=\"w\"> </span><span class=\"no\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0x1</span>\n<span class=\"nf\">lea</span><span class=\"w\"> </span><span class=\"no\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rdx</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x1</span><span class=\"p\">]</span>\n<span class=\"nf\">cmp</span><span class=\"w\"> </span><span class=\"no\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0x2</span>\n<span class=\"nf\">cmovg</span><span class=\"w\">   </span><span class=\"no\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">eax</span>\n<span class=\"nf\">add</span><span class=\"w\"> </span><span class=\"no\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">edi</span>\n<span class=\"nf\">lea</span><span class=\"w\"> </span><span class=\"no\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rdx</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x1</span><span class=\"p\">]</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: Wasmtime 22.0.0</p>\n<p>Operating system: macos, linux (debian)</p>\n<p>Architecture: (arm, x64)<br>\n</p>\n</blockquote>",
        "id": 523240466,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749545823
    },
    {
        "content": "<p><a href=\"https://github.com/Simoffsky\">Simoffsky</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10994\">Issue #10994</a>.</p>",
        "id": 523240468,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749545823
    },
    {
        "content": "<p><a href=\"https://github.com/Simoffsky\">Simoffsky</a> added the cranelift label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10994\">Issue #10994</a>.</p>",
        "id": 523240469,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749545823
    },
    {
        "content": "<p>Simoffsky edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10994\">issue #10994</a>:</p>\n<blockquote>\n<p>Cranelift fails to eliminate a dead conditional branch in a case where the condition is statically known to be false due to constant folding.</p>\n<p><a href=\"https://godbolt.org/z/nMjvMcK1Y\">godbolt link</a> (look at $process_rows).</p>\n<h2>Input WASM</h2>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$process_rows</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n    <span class=\"k\">block</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.eqz</span>\n      <span class=\"nb\">br_if</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">i32.shl</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">i32.add</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">2</span>\n      <span class=\"nb\">i32.gt_s</span>\n      <span class=\"nb\">select</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.add</span>\n      <span class=\"nb\">local.set</span> <span class=\"mi\">0</span>\n    <span class=\"k\">end</span>\n    <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n    <span class=\"nb\">i32.const</span> <span class=\"mi\">1</span>\n    <span class=\"nb\">i32.add</span><span class=\"p\">))</span>\n</code></pre></div>\n<h2>Expected behavior</h2>\n<p>Since <code>i32.const 0</code> is always equal to zero, the result of <code>i32.eqz</code> is always 1, and <code>br_if 0</code> is guaranteed to be taken unconditionally. Therefore, all code after the branch inside the block is dead and should be removed.</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">xor</span><span class=\"w\"> </span><span class=\"no\">esi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">esi</span>\n<span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">esi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">esi</span>\n<span class=\"nf\">je</span><span class=\"w\">  </span><span class=\"err\">&lt;</span><span class=\"no\">after_block</span><span class=\"err\">&gt;</span><span class=\"w\">       </span><span class=\"c1\">; this is always false, should not exist</span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\">            </span><span class=\"c1\">; dead code</span>\n<span class=\"nf\">shl</span><span class=\"w\"> </span><span class=\"no\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0x1</span>\n<span class=\"nf\">lea</span><span class=\"w\"> </span><span class=\"no\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rdx</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x1</span><span class=\"p\">]</span>\n<span class=\"nf\">cmp</span><span class=\"w\"> </span><span class=\"no\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0x2</span>\n<span class=\"nf\">cmovg</span><span class=\"w\">   </span><span class=\"no\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">eax</span>\n<span class=\"nf\">add</span><span class=\"w\"> </span><span class=\"no\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">edi</span>\n<span class=\"nf\">lea</span><span class=\"w\"> </span><span class=\"no\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rdx</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x1</span><span class=\"p\">]</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: Wasmtime 22.0.0</p>\n<p>Operating system: macos, linux (debian)</p>\n<p>Architecture: (arm, x64)<br>\n</p>\n</blockquote>",
        "id": 523244155,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749546875
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10994\">issue #10994</a>:</p>\n<blockquote>\n<p>Cranelift fails to eliminate a dead conditional branch in a case where the condition is statically known to be false due to constant folding.</p>\n<p><a href=\"https://godbolt.org/z/nMjvMcK1Y\">godbolt link</a> (look at $process_rows).</p>\n<h2>Input WASM</h2>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$process_rows</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n    <span class=\"k\">block</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.eqz</span>\n      <span class=\"nb\">br_if</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">i32.shl</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">i32.add</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">2</span>\n      <span class=\"nb\">i32.gt_s</span>\n      <span class=\"nb\">select</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.add</span>\n      <span class=\"nb\">local.set</span> <span class=\"mi\">0</span>\n    <span class=\"k\">end</span>\n    <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n    <span class=\"nb\">i32.const</span> <span class=\"mi\">1</span>\n    <span class=\"nb\">i32.add</span><span class=\"p\">))</span>\n</code></pre></div>\n<h2>Expected behavior</h2>\n<p>Since <code>i32.const 0</code> is always equal to zero, the result of <code>i32.eqz</code> is always 1, and <code>br_if 0</code> is guaranteed to be taken unconditionally. Therefore, all code after the branch inside the block is dead and should be removed.</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">xor</span><span class=\"w\"> </span><span class=\"no\">esi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">esi</span>\n<span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">esi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">esi</span>\n<span class=\"nf\">je</span><span class=\"w\">  </span><span class=\"err\">&lt;</span><span class=\"no\">after_block</span><span class=\"err\">&gt;</span><span class=\"w\">       </span><span class=\"c1\">; this is always false, should not exist</span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\">            </span><span class=\"c1\">; dead code</span>\n<span class=\"nf\">shl</span><span class=\"w\"> </span><span class=\"no\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0x1</span>\n<span class=\"nf\">lea</span><span class=\"w\"> </span><span class=\"no\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rdx</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x1</span><span class=\"p\">]</span>\n<span class=\"nf\">cmp</span><span class=\"w\"> </span><span class=\"no\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0x2</span>\n<span class=\"nf\">cmovg</span><span class=\"w\">   </span><span class=\"no\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">eax</span>\n<span class=\"nf\">add</span><span class=\"w\"> </span><span class=\"no\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">edi</span>\n<span class=\"nf\">lea</span><span class=\"w\"> </span><span class=\"no\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rdx</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x1</span><span class=\"p\">]</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: Wasmtime 22.0.0</p>\n<p>Operating system: macos, linux (debian)</p>\n<p>Architecture: (arm, x64)<br>\n</p>\n</blockquote>",
        "id": 523247867,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749548091
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10994#issuecomment-2958386854\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10994\">issue #10994</a>:</p>\n<blockquote>\n<p>We don't have any branch-folding optimizations at the moment, so this result is expected. #6106 covers tracking this possible enhancement, I believe, so I'll close as a duplicate of that tracking issue.</p>\n</blockquote>",
        "id": 523247871,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749548091
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10994\">issue #10994</a>:</p>\n<blockquote>\n<p>Cranelift fails to eliminate a dead conditional branch in a case where the condition is statically known to be false due to constant folding.</p>\n<p><a href=\"https://godbolt.org/z/nMjvMcK1Y\">godbolt link</a> (look at $process_rows).</p>\n<h2>Input WASM</h2>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$process_rows</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n    <span class=\"k\">block</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.eqz</span>\n      <span class=\"nb\">br_if</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">i32.shl</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">1</span>\n      <span class=\"nb\">i32.add</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.const</span> <span class=\"mi\">2</span>\n      <span class=\"nb\">i32.gt_s</span>\n      <span class=\"nb\">select</span>\n      <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n      <span class=\"nb\">i32.add</span>\n      <span class=\"nb\">local.set</span> <span class=\"mi\">0</span>\n    <span class=\"k\">end</span>\n    <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n    <span class=\"nb\">i32.const</span> <span class=\"mi\">1</span>\n    <span class=\"nb\">i32.add</span><span class=\"p\">))</span>\n</code></pre></div>\n<h2>Expected behavior</h2>\n<p>Since <code>i32.const 0</code> is always equal to zero, the result of <code>i32.eqz</code> is always 1, and <code>br_if 0</code> is guaranteed to be taken unconditionally. Therefore, all code after the branch inside the block is dead and should be removed.</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">xor</span><span class=\"w\"> </span><span class=\"no\">esi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">esi</span>\n<span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">esi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">esi</span>\n<span class=\"nf\">je</span><span class=\"w\">  </span><span class=\"err\">&lt;</span><span class=\"no\">after_block</span><span class=\"err\">&gt;</span><span class=\"w\">       </span><span class=\"c1\">; this is always false, should not exist</span>\n<span class=\"nf\">mov</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\">            </span><span class=\"c1\">; dead code</span>\n<span class=\"nf\">shl</span><span class=\"w\"> </span><span class=\"no\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0x1</span>\n<span class=\"nf\">lea</span><span class=\"w\"> </span><span class=\"no\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rdx</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x1</span><span class=\"p\">]</span>\n<span class=\"nf\">cmp</span><span class=\"w\"> </span><span class=\"no\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0x2</span>\n<span class=\"nf\">cmovg</span><span class=\"w\">   </span><span class=\"no\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">eax</span>\n<span class=\"nf\">add</span><span class=\"w\"> </span><span class=\"no\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">edi</span>\n<span class=\"nf\">lea</span><span class=\"w\"> </span><span class=\"no\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rdx</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x1</span><span class=\"p\">]</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: Wasmtime 22.0.0</p>\n<p>Operating system: macos, linux (debian)</p>\n<p>Architecture: (arm, x64)<br>\n</p>\n</blockquote>",
        "id": 523247962,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749548108
    }
]