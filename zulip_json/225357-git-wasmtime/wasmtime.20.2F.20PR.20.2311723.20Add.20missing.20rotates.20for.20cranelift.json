[
    {
        "content": "<p>khagankhan opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11723\">PR #11723</a> from <code>khagankhan:rotate-mo</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This adds the missed rotate optimizations in cranelift mid-end opened in #11722 </p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (func $main (export \"main\") (result i32)\n    ;; Step 1: (i32.rotl (i32.const 1) (i32.const 1))\n    ;; 1 in binary (32-bit) = 0b...0001\n    ;; Rotate left by 1 bit = 0b...0010 = 2\n    (i32.rotl (i32.const 1) (i32.const 1))\n\n    ;; Step 2: (i32.rotr (i32.const 10) (i32.const 1))\n    ;; 10 in binary = 0b...1010\n    ;; Rotate right by 1 bit = 0b...0101 = 5\n    (i32.rotr (i32.const 10) (i32.const 1))\n\n    ;; Step 3: Add the results\n    ;; 2 + 5 = 7\n    (i32.add)\n  )\n)\n</code></pre></div>\n<p>Before PR: </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">Intermediate</span><span class=\"w\"> </span><span class=\"n\">Representation</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]::</span><span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]::</span><span class=\"n\">main</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"nc\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">vmctx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"nc\">tail</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">gv0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vmctx</span>\n<span class=\"w\">    </span><span class=\"n\">gv1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">readonly</span><span class=\"w\"> </span><span class=\"n\">gv0</span><span class=\"o\">+</span><span class=\"mi\">8</span>\n<span class=\"w\">    </span><span class=\"n\">gv2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">gv1</span><span class=\"o\">+</span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"n\">stack_limit</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">gv2</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">):</span>\n<span class=\"o\">@</span><span class=\"mi\">002</span><span class=\"n\">d</span><span class=\"w\">                               </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block1</span><span class=\"p\">:</span>\n<span class=\"o\">@</span><span class=\"mi\">0022</span><span class=\"w\">                               </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"o\">@</span><span class=\"mi\">0026</span><span class=\"w\">                               </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">rotl</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"o\">@</span><span class=\"mi\">0027</span><span class=\"w\">                               </span><span class=\"n\">v6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">10</span>\n<span class=\"o\">@</span><span class=\"mi\">002</span><span class=\"n\">b</span><span class=\"w\">                               </span><span class=\"n\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">rotr</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"o\">@</span><span class=\"mi\">002</span><span class=\"n\">c</span><span class=\"w\">                               </span><span class=\"n\">v9</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v8</span>\n<span class=\"o\">@</span><span class=\"mi\">002</span><span class=\"n\">d</span><span class=\"w\">                               </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v9</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>After PR:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">Intermediate</span><span class=\"w\"> </span><span class=\"n\">Representation</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]::</span><span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]::</span><span class=\"n\">main</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"nc\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">vmctx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"nc\">tail</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">gv0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vmctx</span>\n<span class=\"w\">    </span><span class=\"n\">gv1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">readonly</span><span class=\"w\"> </span><span class=\"n\">gv0</span><span class=\"o\">+</span><span class=\"mi\">8</span>\n<span class=\"w\">    </span><span class=\"n\">gv2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">gv1</span><span class=\"o\">+</span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"n\">stack_limit</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">gv2</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">):</span>\n<span class=\"o\">@</span><span class=\"mi\">002</span><span class=\"n\">d</span><span class=\"w\">                               </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block1</span><span class=\"p\">:</span>\n<span class=\"w\">                                    </span><span class=\"nc\">v12</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">7</span>\n<span class=\"o\">@</span><span class=\"mi\">002</span><span class=\"n\">d</span><span class=\"w\">                               </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v12</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v12</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">7</span>\n<span class=\"p\">}</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 540546288,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758326214
    },
    {
        "content": "<p><strong>khagankhan</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11723\">PR #11723</a>.</p>",
        "id": 540546289,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758326214
    },
    {
        "content": "<p><strong>khagankhan</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11723\">PR #11723</a>.</p>",
        "id": 540546290,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758326215
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11723#issuecomment-3314405865\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11723\">PR #11723</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 540552804,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758334171
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11723#discussion_r2365785483\">PR review comment</a>:</p>\n<blockquote>\n<p>I'd recommend using <a href=\"https://doc.rust-lang.org/stable/std/primitive.i64.html#method.cast_unsigned\"><code>cast_unsigned</code></a> here as it avoid using <code>as</code> which is something we try to avoid since it's by default a lossy cast.</p>\n</blockquote>",
        "id": 540608529,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758398135
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11723#discussion_r2365785290\">PR review comment</a>:</p>\n<blockquote>\n<p>It's ok to not test for 0 here because a 0-size integral type should cause a panic (which <code>% 0</code> would do I believe). Handling it here would accidentally try to recover from what should otherwise be a panicking situation.</p>\n</blockquote>",
        "id": 540608530,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758398135
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11723#pullrequestreview-3249220002\">PR review</a>:</p>\n<blockquote>\n<p>Thanks! Mind adding some tests for this too? They'd go in <code>cranelift/filetests/filetests/egraph</code> for testing the IR is updated appropriately and <code>cranelift/filetests/filetests/runtests</code> for ensuring that the behavior matches the interpreter.</p>\n</blockquote>",
        "id": 540608531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758398135
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11723#discussion_r2365784580\">PR review comment</a>:</p>\n<blockquote>\n<p>The <code>min</code> here should be an assert of some form because if <code>ty.bits()</code> is <code>&gt;=64</code> then that's an invalid state for this function to be in and it should panic.</p>\n</blockquote>",
        "id": 540608532,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758398135
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11723#discussion_r2365785699\">PR review comment</a>:</p>\n<blockquote>\n<p>For promotion back up to u64 I'd recommend using <code>u64::from((xv as u8).rotate_left(amt))</code> to avoid <code>as u64</code>. The <code>as u8</code> is still required, however, as this is intentionally truncating data.</p>\n</blockquote>",
        "id": 540608533,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758398136
    },
    {
        "content": "<p>khagankhan <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11723#issuecomment-3315217196\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11723\">PR #11723</a>:</p>\n<blockquote>\n<p>Sure thing! @alexcrichton Just made PR to get initial thoughts. I will address the comments</p>\n</blockquote>",
        "id": 540608806,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758398448
    }
]