[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10245\">issue #10245</a>:</p>\n<blockquote>\n<p>Currently in Wasmtime we have <code>Module::deserialize</code> and <code>Module::deserialize_file</code>. Given these APIs though it has the fundamental requirements that <code>deserialize</code> will copy the bytes into Wasmtime (e.g. some new map) and <code>deserialize_file</code> requires <code>std</code> support. That means that these APIs are not compatible with a <code>#![no_std]</code> situation which already has bytes loaded elsewhere in memory. There's no need to mutate the bytes so we just need a read-only view of the bytes.</p>\n<p>One possibility would be to add a <code>deserialize_raw</code> API which takes <code>*const [u8]</code> or similar. That would mean that we're not responsible for owning the memory at all and the embedder is responsible for ensuring it stays alive long enough as well as is able to update page permissions (which isn't applicable for Pulley but may be applicable for other platforms). This might be done by copying <a href=\"https://github.com/bytecodealliance/wasmtime/blob/362b0dbf7ef5f1e4944266b85ff4fdf54dcc4dd0/crates/wasmtime/src/engine.rs#L767-L784\">this API</a> to have raw pointers and then adding a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/362b0dbf7ef5f1e4944266b85ff4fdf54dcc4dd0/crates/wasmtime/src/runtime/vm/mmap_vec.rs#L36-L41\">new variant to <code>MmapVec</code></a> which represents a non-owned pointer.</p>\n<p>The end goal is that Wasmtime should be able to load bytes from an external source without needing to copy out of that source in a <code>no_std</code> context.</p>\n</blockquote>",
        "id": 500737748,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1739997295
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the enhancement label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10245\">Issue #10245</a>.</p>",
        "id": 502345907,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740679249
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasmtime:api label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10245\">Issue #10245</a>.</p>",
        "id": 502345908,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740679249
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10245\">issue #10245</a>:</p>\n<blockquote>\n<p>Currently in Wasmtime we have <code>Module::deserialize</code> and <code>Module::deserialize_file</code>. Given these APIs though it has the fundamental requirements that <code>deserialize</code> will copy the bytes into Wasmtime (e.g. some new map) and <code>deserialize_file</code> requires <code>std</code> support. That means that these APIs are not compatible with a <code>#![no_std]</code> situation which already has bytes loaded elsewhere in memory. There's no need to mutate the bytes so we just need a read-only view of the bytes.</p>\n<p>One possibility would be to add a <code>deserialize_raw</code> API which takes <code>*const [u8]</code> or similar. That would mean that we're not responsible for owning the memory at all and the embedder is responsible for ensuring it stays alive long enough as well as is able to update page permissions (which isn't applicable for Pulley but may be applicable for other platforms). This might be done by copying <a href=\"https://github.com/bytecodealliance/wasmtime/blob/362b0dbf7ef5f1e4944266b85ff4fdf54dcc4dd0/crates/wasmtime/src/engine.rs#L767-L784\">this API</a> to have raw pointers and then adding a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/362b0dbf7ef5f1e4944266b85ff4fdf54dcc4dd0/crates/wasmtime/src/runtime/vm/mmap_vec.rs#L36-L41\">new variant to <code>MmapVec</code></a> which represents a non-owned pointer.</p>\n<p>The end goal is that Wasmtime should be able to load bytes from an external source without needing to copy out of that source in a <code>no_std</code> context.</p>\n</blockquote>",
        "id": 503865613,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741286672
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10245#issuecomment-2704666709\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10245\">issue #10245</a>:</p>\n<blockquote>\n<p>Addressed in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10321\">https://github.com/bytecodealliance/wasmtime/pull/10321</a></p>\n</blockquote>",
        "id": 503865614,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741286673
    }
]