[
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10538\">PR #10538</a>.</p>",
        "id": 510720135,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744044135
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10538\">PR #10538</a>.</p>",
        "id": 510720136,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744044135
    },
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10538\">PR #10538</a> from <code>abrown:fix-10529</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Along the lines of #10389 and #10478, this change fixes the case where an XMM register is pretty-printed during logging, which may happen before register allocation has provided a true HW register.</p>\n<p>Fixes #10529.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 510720137,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744044135
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10538#issuecomment-2783979052\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10538\">PR #10538</a>:</p>\n<blockquote>\n<p>Could the test added in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10478\">https://github.com/bytecodealliance/wasmtime/pull/10478</a> be expanded to cover this too?</p>\n</blockquote>",
        "id": 510720829,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744044350
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10538#issuecomment-2784096146\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10538\">PR #10538</a>:</p>\n<blockquote>\n<blockquote>\n<p>Could the test added in #10478 be expanded to cover this too?</p>\n</blockquote>\n<p>Yeah, we need a few more SSE lowerings plumbed through to really trigger this; I can't seem to find one that actually goes all the way from WAT to the assembler that will use an XMM register and trigger this.</p>\n</blockquote>",
        "id": 510730785,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744047446
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10538#pullrequestreview-2748341670\">PR review</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n<p>An idle thought about testing: would it be possible to run the filetests in CI with <code>RUST_LOG=trace</code>? That would certainly give us coverage of almost all or all lowerings (we expect them all to be tested); only uncertainty is what it would do to test time, but probably OK?</p>\n</blockquote>",
        "id": 510786377,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744069689
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10538#issuecomment-2787691356\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10538\">PR #10538</a>:</p>\n<blockquote>\n<blockquote>\n<p>Thanks!</p>\n<p>An idle thought about testing: would it be possible to run the filetests in CI with <code>RUST_LOG=trace</code>? That would certainly give us coverage of almost all or all lowerings (we expect them all to be tested); only uncertainty is what it would do to test time, but probably OK?</p>\n</blockquote>\n<p>I think that makes sense. Here's a slowdown comparison:</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$ </span><span class=\"nb\">cd</span><span class=\"w\"> </span>cranelift\n<span class=\"gp\">$ </span><span class=\"nv\">RUST_LOG</span><span class=\"o\">=</span><span class=\"nv\">cranelift_codegen</span><span class=\"o\">=</span>trace<span class=\"w\"> </span>/usr/bin/time<span class=\"w\"> </span>cargo<span class=\"w\"> </span><span class=\"nb\">test</span>\n<span class=\"go\">...</span>\n<span class=\"go\">24.65user 0.57system 0:04.66elapsed 540%CPU</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$ </span><span class=\"nb\">cd</span><span class=\"w\"> </span>cranelift\n<span class=\"gp\">$ </span>/usr/bin/time<span class=\"w\"> </span>cargo<span class=\"w\"> </span><span class=\"nb\">test</span>\n<span class=\"go\">...</span>\n<span class=\"go\">17.79user 0.12system 0:04.18elapsed 427%CPU</span>\n</code></pre></div>\n<p>Slower, but perhaps worth it. Where does this fit in <code>main.yml</code>, though? A whole new <code>test_*</code> job?</p>\n</blockquote>",
        "id": 511028036,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744147354
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10538#issuecomment-2787713199\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10538\">PR #10538</a>:</p>\n<blockquote>\n<p>This won't fit easily into <code>main.yml</code> unfortunately. The <code>cranelift-tools</code> crate is tested in a \"soup\" with a bunch of other crates which are partitioned automatically. As global state (<code>RUST_LOG</code>) this also isn't workable as a sibling <code>#[test]</code>. What I might recommend is a sibling <code>cranelift/tests/filetests_with_trace.rs</code> which is mostly the same but configures <code>env_logger</code> or similar. That keeps it isolated into a single process at least.</p>\n</blockquote>",
        "id": 511029393,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744147984
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10538\">PR #10538</a>.</p>",
        "id": 511281732,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744242580
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10538#issuecomment-2791216454\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10538\">PR #10538</a>:</p>\n<blockquote>\n<p>This seems a bit like overkill but, hey, this virtual-vs-HW register panic keeps popping up. ea36958 adds a test to run all the filetests with logging enabled, which I confirmed catches the bug. When everything goes well, this is what I see time-wise:</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$ </span>/usr/bin/time<span class=\"w\"> </span>cargo<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>--package<span class=\"w\"> </span>cranelift-tools<span class=\"w\"> </span>--test<span class=\"w\"> </span>filetests\n<span class=\"go\">...</span>\n<span class=\"go\">14.87user 0.13system 0:01.15elapsed 1304%CPU</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$ </span>/usr/bin/time<span class=\"w\"> </span>cargo<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>--package<span class=\"w\"> </span>cranelift-tools<span class=\"w\"> </span>--test<span class=\"w\"> </span>logged-filetests\n<span class=\"go\">...</span>\n<span class=\"go\">20.41user 0.29system 0:01.42elapsed 1451%CPU</span>\n</code></pre></div>\n<p>Of course, if anything goes poorly, then one can expect an afternoon-long wait while the test runner prints every log it has captured. I guess that is incentive to keep the pretty-printing working!</p>\n</blockquote>",
        "id": 511282437,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744242919
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10538\">PR #10538</a>.</p>",
        "id": 511287478,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744245690
    }
]