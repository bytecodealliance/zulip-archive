[
    {
        "content": "<p><strong>dicej</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763\">PR #11763</a>.</p>",
        "id": 542302801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759245115
    },
    {
        "content": "<p>dicej opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763\">PR #11763</a> from <code>dicej:fix-11703</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This addresses #11703 by allowing the embedder to \"short-circuit\" host-to-host streams and keep them flowing after the guest instance and its store have been disposed.  Besides fixing that bug, it makes common proxy and full-duplex streaming scenarios more efficient by getting the Wasmtime runtime out of the way as early as possible, avoiding the extra memory and indirection overhead which would otherwise be imposed.</p>\n<p>See the individual commit messages for details.  Here's a summary:</p>\n<ul>\n<li>Add <code>StreamReader::try_into</code> for coercing a host-created stream into the <code>StreamProducer</code> implementation (or possibly a subset of it) that was used to create it.  <code>wasmtime-wasi-http</code> now uses this to unmask guest bodies which are really host bodies.</li>\n<li>Use <code>tokio::task::spawn</code> instead of <code>Accessor::spawn</code> to handle connection I/O for outgoing <code>wasmtime-wasi-http</code> requests.  This ensures that the connection remains alive after the store is disposed.</li>\n</ul>\n<p>Note that the implementation of <code>StreamReader::try_into</code> required adding a default-implemented <code>StreamProducer::try_into</code> function for doing the coercion.  The signature of that function is a bit awkward given that we have to erase the types and do runtime downcasts internally.  The upside is that it supports the scenario where the <code>StreamProducer</code> implementation is <code>!Unpin</code> (meaning it cannot be downcasted, AFAICT), in which case it may be coerced into a type representing a relevant subset which is <code>Unpin</code>.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 542302809,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759245115
    },
    {
        "content": "<p><strong>dicej</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-wasi-reviewers\">wasmtime-wasi-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763\">PR #11763</a>.</p>",
        "id": 542302811,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759245115
    },
    {
        "content": "<p><strong>dicej</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763\">PR #11763</a>.</p>",
        "id": 542302812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759245115
    },
    {
        "content": "<p><strong>dicej</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763\">PR #11763</a>.</p>",
        "id": 542302813,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759245116
    },
    {
        "content": "<p>dicej <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763#issuecomment-3352728446\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763\">PR #11763</a>:</p>\n<blockquote>\n<p>@rvolosatovs you might have opinions about <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763/commits/30afd9fa9e2a7adbf768c476a6119851e229ff5b\">https://github.com/bytecodealliance/wasmtime/pull/11763/commits/30afd9fa9e2a7adbf768c476a6119851e229ff5b</a></p>\n</blockquote>",
        "id": 542305678,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759245835
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763#pullrequestreview-3286455658\">PR review</a>.</p>",
        "id": 542354448,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759261281
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763#discussion_r2392643257\">PR review comment</a>:</p>\n<blockquote>\n<p>This <code>Box::new(*...)</code> shouldn't be necessary I think? In theory <code>Pin::into_inner(me)</code> should suffice here I believe</p>\n</blockquote>",
        "id": 542354449,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759261281
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763#discussion_r2392646819\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this happen during the construction of <code>Response</code> instead of here? Then I believe this would naturally fall through to <code>Body::Host</code> below?</p>\n</blockquote>",
        "id": 542354451,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759261282
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763#pullrequestreview-3286484693\">PR review</a>.</p>",
        "id": 542355607,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759261716
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763#discussion_r2392665282\">PR review comment</a>:</p>\n<blockquote>\n<p>The compiler doesn't like that:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0277</span><span class=\"p\">]:</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"k\">dyn</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">any</span><span class=\"p\">::</span><span class=\"n\">Any</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">cannot</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">unpinned</span>\n<span class=\"w\">   </span><span class=\"o\">-</span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">crates</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">http</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">p3</span><span class=\"o\">/</span><span class=\"n\">body</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">543</span><span class=\"p\">:</span><span class=\"mi\">32</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"mi\">543</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">Pin</span><span class=\"p\">::</span><span class=\"n\">into_inner</span><span class=\"p\">(</span><span class=\"n\">me</span><span class=\"p\">))</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                </span><span class=\"o\">---------------</span><span class=\"w\"> </span><span class=\"o\">^^</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">marker</span><span class=\"p\">::</span><span class=\"nb\">Unpin</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">implemented</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"k\">dyn</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">any</span><span class=\"p\">::</span><span class=\"n\">Any</span><span class=\"err\">`</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                </span><span class=\"n\">required</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">bound</span><span class=\"w\"> </span><span class=\"n\">introduced</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">call</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 542355609,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759261716
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763#discussion_r2392680836\">PR review comment</a>:</p>\n<blockquote>\n<p>Weird! <code>let me = Pin::into_inner(me); Ok(me)</code> works though.</p>\n<p>I think it's because it's trying to coerce <code>me: Pin&lt;Box&lt;Self&gt;&gt;</code> into <code>Pin&lt;Box&lt;dyn Any&gt;&gt;</code> and then go through <code>Pin::into_inner</code> to get out the <code>Box&lt;dyn Any&gt;</code> which doesn't work because <code>dyn Any</code> indeed does not implement <code>Unpin</code>. By separating it out it guides inference correctly.</p>\n</blockquote>",
        "id": 542356553,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759262086
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763#pullrequestreview-3286505069\">PR review</a>.</p>",
        "id": 542356554,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759262087
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763\">PR #11763</a>.</p>",
        "id": 542357892,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759262536
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763#pullrequestreview-3286536703\">PR review</a>.</p>",
        "id": 542357964,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759262554
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763#discussion_r2392702939\">PR review comment</a>:</p>\n<blockquote>\n<p>Good idea; done!</p>\n</blockquote>",
        "id": 542357965,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759262555
    },
    {
        "content": "<p>dicej has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763\">PR #11763</a>.</p>",
        "id": 542358234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759262650
    },
    {
        "content": "<p>dicej merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11763\">PR #11763</a>.</p>",
        "id": 542363430,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759264685
    }
]