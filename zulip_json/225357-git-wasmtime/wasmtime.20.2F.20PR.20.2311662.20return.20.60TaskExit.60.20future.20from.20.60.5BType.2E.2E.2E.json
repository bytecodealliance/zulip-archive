[
    {
        "content": "<p><strong>dicej</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11662\">PR #11662</a>.</p>",
        "id": 538541176,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757456659
    },
    {
        "content": "<p><strong>dicej</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11662\">PR #11662</a>.</p>",
        "id": 538541177,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757456659
    },
    {
        "content": "<p>dicej opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11662\">PR #11662</a> from <code>dicej:call-concurrent-task-exit</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>In addition to returning the value produced by the callee, these functions now also return a <code>TaskExit</code> future which resolves once the subtask (and any transitively-created subtasks) have exited.  This partially addresses #11600; the next step will be to add a <code>wasmtime-wit-bindgen</code> option to expose the <code>TaskExit</code> value in generated bindings.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 538541178,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757456659
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11662\">PR #11662</a>.</p>",
        "id": 538541578,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757456877
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11662\">PR #11662</a>.</p>",
        "id": 538542027,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757457171
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11662\">PR #11662</a>.</p>",
        "id": 538542922,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757457764
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11662\">PR #11662</a>.</p>",
        "id": 538543164,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757457931
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11662#pullrequestreview-3206695382\">PR review</a>.</p>",
        "id": 538680418,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757517754
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11662#discussion_r2337127309\">PR review comment</a>:</p>\n<blockquote>\n<p>Thinking more on this, two points:</p>\n<ul>\n<li>One is that I'm starting to think we may want to actually skip the type parameter here and instead have <code>async fn TaskExit::block(self, impl AsAccessor) -&gt; Result&lt;()&gt;</code> or something like that. It helps simplify bindings-generated signatures as well as the signatures of <code>call_*</code> above since we can keep <code>impl AsAccessor</code> instead of threading around the <code>A</code> type parameter.</li>\n<li>Another is that while I have no doubt \"just add a channel\" is the easiest way to fix this I think we'll want to avoid that in the future. In addition to the cost of the allocation/management of the Arcs (two layers, one on the sender and one in the channel itself) I feel like channels end up causing more problems than they solve in the long run. For now though it's fine but I think we'll want to have internal documentation along the lines of \"it's acknowledged that the accessor isn't actually used in the <code>block</code> implementation but it's here for hypothetical use in the future</li>\n</ul>\n</blockquote>",
        "id": 538680419,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757517755
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11662\">PR #11662</a>.</p>",
        "id": 538693151,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757521287
    },
    {
        "content": "<p>dicej has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11662\">PR #11662</a>.</p>",
        "id": 538693181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757521296
    },
    {
        "content": "<p>dicej merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11662\">PR #11662</a>.</p>",
        "id": 538700229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757523605
    }
]