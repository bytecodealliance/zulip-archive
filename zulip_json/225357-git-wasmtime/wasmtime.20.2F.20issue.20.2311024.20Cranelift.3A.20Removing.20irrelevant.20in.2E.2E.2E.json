[
    {
        "content": "<p>akldc edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11024\">issue #11024</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">optimize</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">opt_level</span><span class=\"o\">=</span><span class=\"n\">none</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">preserve_frame_pointers</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">enable_multi_ret_implicit_sret</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">f64</span><span class=\"w\"> </span><span class=\"nc\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">ss0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">explicit_slot</span><span class=\"w\"> </span><span class=\"mi\">32</span>\n\n<span class=\"n\">block0</span><span class=\"p\">():</span>\n<span class=\"w\">    </span><span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">f64const</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"n\">d707d3c2dd690p</span><span class=\"o\">-</span><span class=\"mi\">1</span>\n\n<span class=\"w\">    </span><span class=\"n\">v7</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stack_addr</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ss0</span>\n<span class=\"w\">    </span><span class=\"n\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">f32x4</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"o\">+</span><span class=\"mi\">8</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"p\">}</span>\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">f64</span><span class=\"p\">,</span><span class=\"n\">f64x2</span><span class=\"w\"> </span><span class=\"n\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">ss0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">explicit_slot</span><span class=\"w\"> </span><span class=\"mi\">32</span>\n<span class=\"w\">    </span><span class=\"n\">ss1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">explicit_slot</span><span class=\"w\"> </span><span class=\"mi\">32</span>\n<span class=\"w\">    </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">f64</span><span class=\"w\"> </span><span class=\"nc\">fast</span>\n<span class=\"w\">    </span><span class=\"n\">fn0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">u1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">sig0</span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x655a67ef3826115b29aeb0d774a11922</span>\n\n<span class=\"n\">block0</span><span class=\"p\">:</span>\n\n<span class=\"w\">    </span><span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">8142416529737083292</span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">const0</span>\n\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stack_addr</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ss0</span>\n<span class=\"w\">    </span><span class=\"n\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stack_addr</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ss1</span>\n\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"o\">+</span><span class=\"mi\">8</span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"o\">+</span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"o\">+</span><span class=\"mi\">24</span>\n\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"o\">+</span><span class=\"mi\">8</span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"o\">+</span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"o\">+</span><span class=\"mi\">24</span>\n\n<span class=\"w\">    </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stack_addr</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ss1</span>\n<span class=\"w\">    </span><span class=\"n\">atomic_store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v5</span>\n\n<span class=\"w\">    </span><span class=\"n\">v6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcvt_from_uint</span><span class=\"p\">.</span><span class=\"kt\">f64</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"w\">    </span><span class=\"n\">v7</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">scalar_to_vector</span><span class=\"p\">.</span><span class=\"n\">f64x2</span><span class=\"w\"> </span><span class=\"n\">v6</span>\n\n<span class=\"w\">    </span><span class=\"n\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">fn0</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">,</span><span class=\"n\">v6</span><span class=\"p\">,</span><span class=\"n\">v7</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">print</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span>\n</code></pre></div>\n<h3>Result</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">x86</span><span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x655a67ef3826115b29aeb0d774a11922</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mf\">1e00</span><span class=\"n\">a69cf7813p63</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x655a67ef3826115b43e1e00a69cf7813</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">aarch64</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x655a67ef3826115b29aeb0d774a11922</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mf\">1e00</span><span class=\"n\">a69cf7813p63</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x000000000000000043e1e00a69cf7813</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>When I try removing the <code>call</code> instruction from block0, or removing the <code>atomic_store</code> instruction, or removing the <code>store little</code> instruction, any of these changes makes the x86 result consistent with the aarch64 result. But in theory, these actions should have no effect on <code>v7</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">x86</span><span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x655a67ef3826115b29aeb0d774a11922</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mf\">1e00</span><span class=\"n\">a69cf7813p63</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x000000000000000043e1e00a69cf7813</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">aarch64</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x655a67ef3826115b29aeb0d774a11922</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mf\">1e00</span><span class=\"n\">a69cf7813p63</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x000000000000000043e1e00a69cf7813</span><span class=\"p\">]</span>\n</code></pre></div>\n</blockquote>",
        "id": 523762143,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749736336
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11024\">issue #11024</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">optimize</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">opt_level</span><span class=\"o\">=</span><span class=\"n\">none</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">preserve_frame_pointers</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">enable_multi_ret_implicit_sret</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">f64</span><span class=\"w\"> </span><span class=\"nc\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">ss0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">explicit_slot</span><span class=\"w\"> </span><span class=\"mi\">32</span>\n\n<span class=\"n\">block0</span><span class=\"p\">():</span>\n<span class=\"w\">    </span><span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">f64const</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"n\">d707d3c2dd690p</span><span class=\"o\">-</span><span class=\"mi\">1</span>\n\n<span class=\"w\">    </span><span class=\"n\">v7</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stack_addr</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ss0</span>\n<span class=\"w\">    </span><span class=\"n\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">f32x4</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"o\">+</span><span class=\"mi\">8</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"p\">}</span>\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">f64</span><span class=\"p\">,</span><span class=\"n\">f64x2</span><span class=\"w\"> </span><span class=\"n\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">ss0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">explicit_slot</span><span class=\"w\"> </span><span class=\"mi\">32</span>\n<span class=\"w\">    </span><span class=\"n\">ss1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">explicit_slot</span><span class=\"w\"> </span><span class=\"mi\">32</span>\n<span class=\"w\">    </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">f64</span><span class=\"w\"> </span><span class=\"nc\">fast</span>\n<span class=\"w\">    </span><span class=\"n\">fn0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">u1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">sig0</span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x655a67ef3826115b29aeb0d774a11922</span>\n\n<span class=\"n\">block0</span><span class=\"p\">:</span>\n\n<span class=\"w\">    </span><span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">8142416529737083292</span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">const0</span>\n\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stack_addr</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ss0</span>\n<span class=\"w\">    </span><span class=\"n\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stack_addr</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ss1</span>\n\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"o\">+</span><span class=\"mi\">8</span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"o\">+</span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"o\">+</span><span class=\"mi\">24</span>\n\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"o\">+</span><span class=\"mi\">8</span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"o\">+</span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"o\">+</span><span class=\"mi\">24</span>\n\n<span class=\"w\">    </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stack_addr</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ss1</span>\n<span class=\"w\">    </span><span class=\"n\">atomic_store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v5</span>\n\n<span class=\"w\">    </span><span class=\"n\">v6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcvt_from_uint</span><span class=\"p\">.</span><span class=\"kt\">f64</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"w\">    </span><span class=\"n\">v7</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">scalar_to_vector</span><span class=\"p\">.</span><span class=\"n\">f64x2</span><span class=\"w\"> </span><span class=\"n\">v6</span>\n\n<span class=\"w\">    </span><span class=\"n\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">fn0</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">,</span><span class=\"n\">v6</span><span class=\"p\">,</span><span class=\"n\">v7</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">print</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span>\n</code></pre></div>\n<h3>Result</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">x86</span><span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x655a67ef3826115b29aeb0d774a11922</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mf\">1e00</span><span class=\"n\">a69cf7813p63</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x655a67ef3826115b43e1e00a69cf7813</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">aarch64</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x655a67ef3826115b29aeb0d774a11922</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mf\">1e00</span><span class=\"n\">a69cf7813p63</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x000000000000000043e1e00a69cf7813</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>When I try removing the <code>call</code> instruction from block0, or removing the <code>atomic_store</code> instruction, or removing the <code>store little</code> instruction, any of these changes makes the x86 result consistent with the aarch64 result. But in theory, these actions should have no effect on <code>v7</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">x86</span><span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x655a67ef3826115b29aeb0d774a11922</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mf\">1e00</span><span class=\"n\">a69cf7813p63</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x000000000000000043e1e00a69cf7813</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">aarch64</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x655a67ef3826115b29aeb0d774a11922</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mf\">1e00</span><span class=\"n\">a69cf7813p63</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x000000000000000043e1e00a69cf7813</span><span class=\"p\">]</span>\n</code></pre></div>\n</blockquote>",
        "id": 523828323,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749760475
    }
]