[
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10568\">PR #10568</a>.</p>",
        "id": 511697252,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744390951
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10568\">PR #10568</a>.</p>",
        "id": 511697253,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744390951
    },
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10568\">PR #10568</a> from <code>cfallin:ordered-slab-ids</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This became necessary in a use-case where I am using slab IDs as keys in a BTreeMap (as a member of a tuple key type). The actual ordering doesn't carry a fundamental meaning, but overall I do need ordering as the first elements of the tuple have significant ordering and I need to process in order (namely: timer deadlines). The slab ID ordering is at least stable (since the Ids are integers under the hood), and this is useful for anyone who needs to build an ordered key type. The alternative is to use <code>.into_raw()</code> and manually write an <code>Ord</code> impl or use the raw <code>u32</code> in a key, which is much worse.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 511697254,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744390951
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10568#pullrequestreview-2760990213\">PR review</a>.</p>",
        "id": 511697450,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744391034
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10568\">PR #10568</a>.</p>",
        "id": 511697465,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744391040
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10568#issuecomment-2797629608\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10568\">PR #10568</a>:</p>\n<blockquote>\n<p>Merge queue job for Nightly tests failed due to <code>apt install</code> freezing for 25 minutes; retrying.</p>\n</blockquote>",
        "id": 511704300,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744393465
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10568\">PR #10568</a>.</p>",
        "id": 511710085,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744395543
    }
]