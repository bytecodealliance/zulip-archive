[
    {
        "content": "<p>Wardenfar opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11708\">PR #11708</a> from <code>Wardenfar:support_bitwise_op_vector64</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>his PR adds support for emitting bitwise operations using 64-bit vectors on AArch64.</p>\n<p>Before this change, the following function would produce an error during compilation:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">band_i8x8</span><span class=\"p\">(</span><span class=\"n\">i8x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i8x8</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">i8x8</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">i8x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">i8x8</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">band</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>The error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">..</span><span class=\"p\">.]</span><span class=\"o\">/</span><span class=\"n\">regalloc2</span><span class=\"o\">-</span><span class=\"mf\">0.13.1</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">642</span><span class=\"p\">:</span><span class=\"mi\">17</span><span class=\"p\">:</span>\n<span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">failed</span>\n<span class=\"w\">  </span><span class=\"n\">left</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Float</span>\n<span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Int</span>\n</code></pre></div>\n<p>The operand is a vector with a total size of 64 bits. When lowering this operation, it produces a machine instruction that expects a 64-bit integer.</p>\n<p>I've also added support for lowering and emitting the ORN instruction.<br>\n</p>\n</blockquote>",
        "id": 540117690,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758151844
    },
    {
        "content": "<p><strong>Wardenfar</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11708\">PR #11708</a>.</p>",
        "id": 540117694,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758151845
    },
    {
        "content": "<p><strong>Wardenfar</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11708\">PR #11708</a>.</p>",
        "id": 540117696,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758151845
    },
    {
        "content": "<p>Wardenfar edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11708\">PR #11708</a>:</p>\n<blockquote>\n<p>This PR adds support for emitting bitwise operations using 64-bit vectors on AArch64.</p>\n<p>Before this change, the following function would produce an error during compilation:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">band_i8x8</span><span class=\"p\">(</span><span class=\"n\">i8x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i8x8</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">i8x8</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">i8x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">i8x8</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">band</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>The error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">..</span><span class=\"p\">.]</span><span class=\"o\">/</span><span class=\"n\">regalloc2</span><span class=\"o\">-</span><span class=\"mf\">0.13.1</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">642</span><span class=\"p\">:</span><span class=\"mi\">17</span><span class=\"p\">:</span>\n<span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">failed</span>\n<span class=\"w\">  </span><span class=\"n\">left</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Float</span>\n<span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Int</span>\n</code></pre></div>\n<p>The operand is a vector with a total size of 64 bits. When lowering this operation, it produces a machine instruction that expects a 64-bit integer.</p>\n<p>I've also added support for lowering and emitting the ORN instruction.<br>\n</p>\n</blockquote>",
        "id": 540117728,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758151866
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11708#pullrequestreview-3236590870\">PR review</a>:</p>\n<blockquote>\n<p>Thanks! A few nits below but otherwise LGTM, and I appreciate the thorough tests; happy to merge once the below are addressed.</p>\n</blockquote>",
        "id": 540119805,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758153220
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11708#discussion_r2357021000\">PR review comment</a>:</p>\n<blockquote>\n<p>For a small-enough enum like this, to avoid any surprises in the future (e.g., add 256-bit vectors and mistake \"not 128 bits\" as meaning 64 bits rather than 256), I'd prefer a full match over all cases if possible; or alternately, a match on number of bits, and a separate <code>bits</code> method that has a full match.</p>\n</blockquote>",
        "id": 540119806,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758153221
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11708#discussion_r2357021938\">PR review comment</a>:</p>\n<blockquote>\n<p>I know it's pre-existing but could we leave a comment here why we special-case the size? IIRC, it's because that's the only supported case, and for bitwise operators it doesn't matter what we consider the lane divisions?</p>\n</blockquote>",
        "id": 540119807,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758153221
    },
    {
        "content": "<p>Wardenfar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11708\">PR #11708</a>.</p>",
        "id": 540515012,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758307027
    },
    {
        "content": "<p>Wardenfar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11708#pullrequestreview-3246449753\">PR review</a>.</p>",
        "id": 540515156,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758307084
    },
    {
        "content": "<p>Wardenfar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11708#discussion_r2364080129\">PR review comment</a>:</p>\n<blockquote>\n<p>good catch :)</p>\n</blockquote>",
        "id": 540515157,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758307084
    },
    {
        "content": "<p>Wardenfar <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11708#issuecomment-3313372134\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11708\">PR #11708</a>:</p>\n<blockquote>\n<p>I made the 2 requested changes</p>\n</blockquote>",
        "id": 540515433,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758307202
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11708#pullrequestreview-3249338020\">PR review</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 540625464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758420401
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11708\">PR #11708</a>.</p>",
        "id": 540626235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758421796
    }
]