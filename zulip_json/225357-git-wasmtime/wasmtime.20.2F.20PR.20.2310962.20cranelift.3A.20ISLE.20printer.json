[
    {
        "content": "<p>mmcloughlin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962\">PR #10962</a> from <code>mmcloughlin:cranelift-isle-print</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This PR adds a printer to the ISLE library. This is intended to support tooling which generates ISLE source code. In such cases, this printer library allows applications to work with ISLE's AST types rather than raw string manipulation, and produce more readable output due to the pretty-printing features.</p>\n<p>The printer is tested with a new integration test that verifies the print-parse roundtrip property for provided ISLE files.<br>\n</p>\n</blockquote>",
        "id": 522839667,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749239775
    },
    {
        "content": "<p><strong>mmcloughlin</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962\">PR #10962</a>.</p>",
        "id": 522839669,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749239776
    },
    {
        "content": "<p><strong>mmcloughlin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962\">PR #10962</a>.</p>",
        "id": 522839670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749239776
    },
    {
        "content": "<p>mmcloughlin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962#pullrequestreview-2906031362\">PR review</a>.</p>",
        "id": 522840065,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749239979
    },
    {
        "content": "<p>mmcloughlin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962#discussion_r2132839763\">PR review comment</a>:</p>\n<blockquote>\n<p>Previous discussion still applies: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8263#discussion_r1543966705\">https://github.com/bytecodealliance/wasmtime/pull/8263#discussion_r1543966705</a>. I still tend to think this is the simplest of the options.</p>\n<p>@cfallin regarding the suggestion \"a helper that maps through all AST nodes and sets positions to e.g. zero?\". I feel like this could be quite a bit of boilerplate to implement. Happy to do that if you prefer.</p>\n</blockquote>",
        "id": 522840067,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749239979
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962#issuecomment-2950754195\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962\">PR #10962</a>:</p>\n<blockquote>\n<p>redirecting review to @cfallin who I believe has more context on this</p>\n</blockquote>",
        "id": 522844904,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749242772
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962\">PR #10962</a>.</p>",
        "id": 522844910,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749242777
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962#pullrequestreview-2906125294\">PR review</a>:</p>\n<blockquote>\n<p>Looks generally good -- thanks for writing this out! A few things below but nothing too bad:</p>\n</blockquote>",
        "id": 522846364,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749243693
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962#discussion_r2132897804\">PR review comment</a>:</p>\n<blockquote>\n<p>Unfortunately we can't refer to one crate from another with paths like this: the tests have to work even when the crates are vendored or in some other directory layout. Can you run the print-tests over the existing ISLE test files we have in this crate?</p>\n</blockquote>",
        "id": 522846365,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749243693
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962#discussion_r2132898744\">PR review comment</a>:</p>\n<blockquote>\n<p>Rather than a setter, can we have an alternative constructor, e.g. <code>Parser::new_without_pos_tracking()</code>?</p>\n</blockquote>",
        "id": 522846366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749243693
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962#discussion_r2132903219\">PR review comment</a>:</p>\n<blockquote>\n<p>Here and elsewhere -- anywhere a node is a struct with fields -- a pattern I like to use is an infallible destructuring without an ellipsis, to ensure I've got all the fields and do something with them; e.g.:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">Type</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">is_extern</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">is_nodebug</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">;</span>\n<span class=\"c1\">// ... print `is_extern`, `is_nodebug`, `ty`</span>\n</code></pre></div>\n<p>This way, if/when we add new fields, we don't forget to add them to the printer, because we'll get a compile error otherwise.</p>\n</blockquote>",
        "id": 522846367,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749243693
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962#issuecomment-2951232998\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962\">PR #10962</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 522858873,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749253523
    },
    {
        "content": "<p>mmcloughlin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962\">PR #10962</a>.</p>",
        "id": 523004195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749422543
    },
    {
        "content": "<p>mmcloughlin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962#pullrequestreview-2908656265\">PR review</a>.</p>",
        "id": 523004204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749422571
    },
    {
        "content": "<p>mmcloughlin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962#discussion_r2134845357\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, done.</p>\n</blockquote>",
        "id": 523004205,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749422572
    },
    {
        "content": "<p>mmcloughlin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962#pullrequestreview-2908656344\">PR review</a>.</p>",
        "id": 523004220,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749422594
    },
    {
        "content": "<p>mmcloughlin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962#discussion_r2134845416\">PR review comment</a>:</p>\n<blockquote>\n<p>This is a really nice technique, thanks for sharing. I've used it throughout the file.</p>\n</blockquote>",
        "id": 523004221,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749422594
    },
    {
        "content": "<p>mmcloughlin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962#pullrequestreview-2908658918\">PR review</a>.</p>",
        "id": 523004601,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749423164
    },
    {
        "content": "<p>mmcloughlin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962#discussion_r2134847486\">PR review comment</a>:</p>\n<blockquote>\n<p>Makes sense, removed. I also consolidated the print tests back into the existing <code>run_tests.rs</code>. The separate <code>printer_tests.rs</code> was a holdover from #8263, which had the printer guarded by a feature flag because of the pretty-printer dependency.</p>\n<p>I did find the tests over the complete ISLE files to be useful/reassuring during development, and a useful backup to ensure the printer stays in sync with the ISLE syntax. So I wonder if there's a good way to do this that maintains the independence of the ISLE crate. Ideas:</p>\n<ul>\n<li>Dump a snapshot of ISLE files into <code>isle_examples/print</code>. For example, from the cranelift directory running: <code>find . -name '*.isle' | xargs cat &gt;isle/isle/isle_examples/print/all.isle</code>.</li>\n<li>Some special environment variable signals that additional test cases should be generated (e.g. <code>WASMTIME_CRANELIFT_DIR</code>). This would be set in Wasmtime CI but not considered an error if it's missing.<br>\n</li>\n</ul>\n</blockquote>",
        "id": 523004602,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749423164
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962#pullrequestreview-2908662194\">PR review</a>.</p>",
        "id": 523004972,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749423758
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962#discussion_r2134849891\">PR review comment</a>:</p>\n<blockquote>\n<p>We could potentially add a test to the <code>cranelift-codegen</code> side to roundtrip-test the printer -- that's the natural point in the dep graph at which we have both those files and the ISLE compiler. I'm happy to review that as a followup if you'd like.</p>\n</blockquote>",
        "id": 523004973,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749423758
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962#pullrequestreview-2908662435\">PR review</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 523005016,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749423820
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10962\">PR #10962</a>.</p>",
        "id": 523005830,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749425119
    }
]