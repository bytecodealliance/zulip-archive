[
    {
        "content": "<p><strong>dicej</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11796\">PR #11796</a>.</p>",
        "id": 543373490,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759771842
    },
    {
        "content": "<p>dicej opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11796\">PR #11796</a> from <code>dicej:fix-11226</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This has a few benefits:</p>\n<ul>\n<li>No need to specify an instance when creating or piping from a stream or future.</li>\n<li>No need to track the instance in an <code>Accessor</code>.</li>\n<li>You may now execute tasks for multiple instances in a single event loop.</li>\n</ul>\n<p>The main drawback is that, if one of several instances within a single store traps, it effectively means all instances have trapped, and the store can't be used to create new instances.  The way to avoid that is to use separate stores for instances which must be isolated from others.</p>\n<p>As a result of this change, a lot of code had to move from e.g. <code>impl Instance</code> to e.g. <code>impl StoreOpaque</code>, so the diff is pretty huge, but the changes themselves are almost entirely non-functional.</p>\n<p>Fixes #11226</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 543373494,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759771843
    },
    {
        "content": "<p><strong>dicej</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11796\">PR #11796</a>.</p>",
        "id": 543373496,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759771843
    },
    {
        "content": "<p><strong>dicej</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-wasi-reviewers\">wasmtime-wasi-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11796\">PR #11796</a>.</p>",
        "id": 543373501,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759771845
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11796\">PR #11796</a>.</p>",
        "id": 543377004,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759772986
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11796#pullrequestreview-3306473771\">PR review</a>.</p>",
        "id": 543383122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759775121
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11796#discussion_r2407844518\">PR review comment</a>:</p>\n<blockquote>\n<p>Would it makes sense to have a <code>concurrent_disabled.rs</code> which has ZST for <code>ConcurrentState</code> with no methods? That would avoid this <code>#[cfg]</code> for example and help encapsulate \"all the conditional stuff is in this file\" too</p>\n</blockquote>",
        "id": 543383123,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759775121
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11796#discussion_r2407840854\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm wary of making this public to the whole crate as it generally makes it harder to maintain abstraction boundaries. Would it be possible to encapsulate whatever's   needed within this file instead?</p>\n</blockquote>",
        "id": 543383126,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759775122
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11796\">PR #11796</a>.</p>",
        "id": 543384014,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759775446
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11796\">PR #11796</a>.</p>",
        "id": 543387326,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759776567
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11796\">PR #11796</a>.</p>",
        "id": 543388948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759777175
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11796\">PR #11796</a>:</p>\n<blockquote>\n<p>This has a few benefits:</p>\n<ul>\n<li>No need to specify an instance when creating or piping from a stream or future.</li>\n<li>No need to track the instance in an <code>Accessor</code>.</li>\n<li>You may now execute tasks for multiple instances in a single event loop.</li>\n</ul>\n<p>The main drawback is that, if one of several instances within a single store traps, it effectively means all instances have trapped, and the store can't be used to create new instances.  The way to avoid that is to use separate stores for instances which must be isolated from others.</p>\n<p>As a result of this change, a lot of code had to move from e.g. <code>impl Instance</code> to e.g. <code>impl StoreOpaque</code>, so the diff is pretty huge, but the changes themselves are almost entirely non-functional.</p>\n<p>Fixes #11226<br>\nFixes #11651</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 543389214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759777258
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11796\">PR #11796</a>:</p>\n<blockquote>\n<p>This has a few benefits:</p>\n<ul>\n<li>No need to specify an instance when creating or piping from a stream or future.</li>\n<li>No need to track the instance in an <code>Accessor</code>.</li>\n<li>You may now execute tasks for multiple instances in a single event loop.</li>\n</ul>\n<p>The main drawback is that, if one of several instances within a single store traps, it effectively means all instances have trapped, and the store can't be used to create new instances.  The way to avoid that is to use separate stores for instances which must be isolated from others.</p>\n<p>As a result of this change, a lot of code had to move from e.g. <code>impl Instance</code> to e.g. <code>impl StoreOpaque</code>, so the diff is pretty huge, but the changes themselves are almost entirely non-functional.</p>\n<p>Fixes #11226<br>\nFixes #11249<br>\nFixes #11651</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 543389325,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759777293
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11796#pullrequestreview-3306860155\">PR review</a>.</p>",
        "id": 543394284,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759779253
    },
    {
        "content": "<p>dicej merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11796\">PR #11796</a>.</p>",
        "id": 543400899,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759781769
    }
]