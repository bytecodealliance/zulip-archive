[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11492\">issue #11492</a>:</p>\n<blockquote>\n<p><a href=\"https://issues.oss-fuzz.com/issues/435228855\">https://issues.oss-fuzz.com/issues/435228855</a></p>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/user-attachments/files/21922638/table-ops-input.txt\">table-ops-input.txt</a></p>\n<p>(not actually a text file, just to get it to upload to github)</p>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">fuzz</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">none</span><span class=\"w\"> </span><span class=\"n\">table_ops</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"o\">-</span><span class=\"n\">ops</span><span class=\"o\">-</span><span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">txt</span>\n</code></pre></div>\n<hr>\n<p>This is an <code>unwrap()</code> on the result of instantiating the test case. This means that the Wasm binary is valid, since we can create a <code>wasmtime::Module</code> for it, but that it cannot be instantiated at runtime for whatever reason.</p>\n<p>Relevant part of the stack trace:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"mi\">11</span><span class=\"w\"> </span><span class=\"mh\">0x5b52efa9b775</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">result</span><span class=\"p\">::</span><span class=\"n\">unwrap_failed</span><span class=\"p\">::</span><span class=\"n\">hdf92484becbba54e</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">rustc</span><span class=\"o\">/</span><span class=\"mf\">3014e79</span><span class=\"n\">f9c8d5510ea7b3a3b70d171d0948b1e96</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">1761</span><span class=\"p\">:</span><span class=\"mi\">5</span>\n<span class=\"w\">        </span><span class=\"p\">#</span><span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"mh\">0x5b52efc4d3ff</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">result</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"cp\">$LT$T$C$E$GT$</span><span class=\"p\">::</span><span class=\"n\">unwrap</span><span class=\"p\">::</span><span class=\"n\">h22d2afba997c4a60</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">rustc</span><span class=\"o\">/</span><span class=\"mf\">3014e79</span><span class=\"n\">f9c8d5510ea7b3a3b70d171d0948b1e96</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">1167</span><span class=\"p\">:</span><span class=\"mi\">23</span>\n<span class=\"w\">        </span><span class=\"p\">#</span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"mh\">0x5b52efc4d3ff</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">wasmtime_fuzzing</span><span class=\"p\">::</span><span class=\"n\">oracles</span><span class=\"p\">::</span><span class=\"n\">table_ops</span><span class=\"p\">::</span><span class=\"n\">h3f545fa10cd3ab07</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">fuzzing</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">oracles</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">917</span><span class=\"p\">](</span><span class=\"n\">https</span><span class=\"p\">:</span><span class=\"c1\">//github.com/bytecodealliance/wasmtime/blob/7074afb633446d1f0ef0d246deaaa2cbe5b457c9/crates/fuzzing/src/oracles.rs#L917):64</span>\n<span class=\"w\">        </span><span class=\"p\">#</span><span class=\"mi\">14</span><span class=\"w\"> </span><span class=\"mh\">0x5b52efb61b83</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">table_ops</span><span class=\"p\">::</span><span class=\"n\">_</span><span class=\"p\">::</span><span class=\"n\">__libfuzzer_sys_run</span><span class=\"p\">::</span><span class=\"n\">h5b228f3df854d86e</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">fuzz</span><span class=\"o\">/</span><span class=\"n\">fuzz_targets</span><span class=\"o\">/</span><span class=\"n\">table_ops</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">24</span><span class=\"p\">](</span><span class=\"n\">https</span><span class=\"p\">:</span><span class=\"c1\">//github.com/bytecodealliance/wasmtime/blob/7074afb633446d1f0ef0d246deaaa2cbe5b457c9/fuzz/fuzz_targets/table_ops.rs#L24):13</span>\n</code></pre></div>\n<p>I suspect the fuzz-generated config is imposing a limit on table size or something and our <code>externref</code> table is larger than that limit. At the start of the oracle, we have an opportunity to clamp the config's limits to our own limits before we create a <code>wasmtime::Config</code> and <code>wasmtime::Engine</code> and all that from the fuzz config and we are probably just overlooking something there.</p>\n<p>+cc @khagankhan </p>\n</blockquote>",
        "id": 535548480,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755797231
    },
    {
        "content": "<p><a href=\"https://github.com/fitzgen\">fitzgen</a> added the fuzz-bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11492\">Issue #11492</a>.</p>",
        "id": 535548481,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755797231
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11492#issuecomment-3211503791\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11492\">issue #11492</a>:</p>\n<blockquote>\n<p>Oops nevermind, this one is already fixed and I failed to look at the OSS-Fuzz status.</p>\n</blockquote>",
        "id": 535548937,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755797408
    },
    {
        "content": "<p>fitzgen closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11492\">issue #11492</a>:</p>\n<blockquote>\n<p><a href=\"https://issues.oss-fuzz.com/issues/435228855\">https://issues.oss-fuzz.com/issues/435228855</a></p>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/user-attachments/files/21922638/table-ops-input.txt\">table-ops-input.txt</a></p>\n<p>(not actually a text file, just to get it to upload to github)</p>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">fuzz</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">none</span><span class=\"w\"> </span><span class=\"n\">table_ops</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"o\">-</span><span class=\"n\">ops</span><span class=\"o\">-</span><span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">txt</span>\n</code></pre></div>\n<hr>\n<p>This is an <code>unwrap()</code> on the result of instantiating the test case. This means that the Wasm binary is valid, since we can create a <code>wasmtime::Module</code> for it, but that it cannot be instantiated at runtime for whatever reason.</p>\n<p>Relevant part of the stack trace:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"mi\">11</span><span class=\"w\"> </span><span class=\"mh\">0x5b52efa9b775</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">result</span><span class=\"p\">::</span><span class=\"n\">unwrap_failed</span><span class=\"p\">::</span><span class=\"n\">hdf92484becbba54e</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">rustc</span><span class=\"o\">/</span><span class=\"mf\">3014e79</span><span class=\"n\">f9c8d5510ea7b3a3b70d171d0948b1e96</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">1761</span><span class=\"p\">:</span><span class=\"mi\">5</span>\n<span class=\"w\">        </span><span class=\"p\">#</span><span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"mh\">0x5b52efc4d3ff</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">result</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"cp\">$LT$T$C$E$GT$</span><span class=\"p\">::</span><span class=\"n\">unwrap</span><span class=\"p\">::</span><span class=\"n\">h22d2afba997c4a60</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">rustc</span><span class=\"o\">/</span><span class=\"mf\">3014e79</span><span class=\"n\">f9c8d5510ea7b3a3b70d171d0948b1e96</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">1167</span><span class=\"p\">:</span><span class=\"mi\">23</span>\n<span class=\"w\">        </span><span class=\"p\">#</span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"mh\">0x5b52efc4d3ff</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">wasmtime_fuzzing</span><span class=\"p\">::</span><span class=\"n\">oracles</span><span class=\"p\">::</span><span class=\"n\">table_ops</span><span class=\"p\">::</span><span class=\"n\">h3f545fa10cd3ab07</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">fuzzing</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">oracles</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">917</span><span class=\"p\">](</span><span class=\"n\">https</span><span class=\"p\">:</span><span class=\"c1\">//github.com/bytecodealliance/wasmtime/blob/7074afb633446d1f0ef0d246deaaa2cbe5b457c9/crates/fuzzing/src/oracles.rs#L917):64</span>\n<span class=\"w\">        </span><span class=\"p\">#</span><span class=\"mi\">14</span><span class=\"w\"> </span><span class=\"mh\">0x5b52efb61b83</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">table_ops</span><span class=\"p\">::</span><span class=\"n\">_</span><span class=\"p\">::</span><span class=\"n\">__libfuzzer_sys_run</span><span class=\"p\">::</span><span class=\"n\">h5b228f3df854d86e</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">fuzz</span><span class=\"o\">/</span><span class=\"n\">fuzz_targets</span><span class=\"o\">/</span><span class=\"n\">table_ops</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">24</span><span class=\"p\">](</span><span class=\"n\">https</span><span class=\"p\">:</span><span class=\"c1\">//github.com/bytecodealliance/wasmtime/blob/7074afb633446d1f0ef0d246deaaa2cbe5b457c9/fuzz/fuzz_targets/table_ops.rs#L24):13</span>\n</code></pre></div>\n<p>I suspect the fuzz-generated config is imposing a limit on table size or something and our <code>externref</code> table is larger than that limit. At the start of the oracle, we have an opportunity to clamp the config's limits to our own limits before we create a <code>wasmtime::Config</code> and <code>wasmtime::Engine</code> and all that from the fuzz config and we are probably just overlooking something there.</p>\n<p>+cc @khagankhan </p>\n</blockquote>",
        "id": 535548948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755797409
    }
]