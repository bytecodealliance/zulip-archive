[
    {
        "content": "<p>saulecabrera opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a> from <code>saulecabrera:winch-aarch64-enable-integration-tests</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit closes<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/issues/8321\">https://github.com/bytecodealliance/wasmtime/issues/8321</a></p>\n<p>With <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11013\">https://github.com/bytecodealliance/wasmtime/pull/11013</a>, Winch passes all spec tests for Core Wasm on Aarch64.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 523820641,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749756955
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>.</p>",
        "id": 523820644,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749756956
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>.</p>",
        "id": 523820646,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749756956
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>.</p>",
        "id": 523820647,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749756956
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031#pullrequestreview-2922411014\">PR review</a>.</p>",
        "id": 523820764,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749757015
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031#discussion_r2143512970\">PR review comment</a>:</p>\n<blockquote>\n<p>We need to gracefully handle compilation errors to correctly assert that a test should fail in case of missing features (e.g., SIMD on aarch64).</p>\n</blockquote>",
        "id": 523820765,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749757015
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>.</p>",
        "id": 523820832,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749757047
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>:</p>\n<blockquote>\n<p>This commit closes <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8321\">https://github.com/bytecodealliance/wasmtime/issues/8321</a></p>\n<p>With <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11013\">https://github.com/bytecodealliance/wasmtime/pull/11013</a>, Winch passes all spec tests for Core Wasm on Aarch64.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 523821286,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749757269
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031#pullrequestreview-2922518132\">PR review</a>.</p>",
        "id": 523824579,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749758883
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031#discussion_r2143572147\">PR review comment</a>:</p>\n<blockquote>\n<p>I think that this actually causes lots of test to \"fail\" with:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">..</span><span class=\"p\">.</span>\n\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">Winch</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">float_exprs</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">----</span>\n<span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">flagged</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">should</span><span class=\"o\">-</span><span class=\"n\">fail</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">succeeded</span>\n\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">Winch</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">table_copy</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">----</span>\n<span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">flagged</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">should</span><span class=\"o\">-</span><span class=\"n\">fail</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">succeeded</span>\n\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">Winch</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"k\">const</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">----</span>\n<span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">flagged</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">should</span><span class=\"o\">-</span><span class=\"n\">fail</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">succeeded</span>\n\n<span class=\"o\">..</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>the reason being that when we classify spec features required by spec tests we do that by directory as opposed to per-test so the entire spec test suite is considered as \"requires simd\". That means that all spec tests are expected to fail despite many of them passing.</p>\n<p>One possible fix is we could split into <code>config.simd</code> into <code>config.really_needs_simd</code> and <code>config.maybe_needs_simd</code> so this could return \"should fail\" for <code>config.really_needs_simd</code> but for spec tests they'd just be flagged with <code>maybe_needs_simd</code> which means we'd still run them (and allow-list failures below)</p>\n</blockquote>",
        "id": 523824580,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749758883
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031#pullrequestreview-2922544859\">PR review</a>.</p>",
        "id": 523826208,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749759581
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031#discussion_r2143588197\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah right, I didn't test this change with x64 and I had forgotten that the <code>should_fail</code> code is now shared. Let me explore your idea and see where I land. </p>\n</blockquote>",
        "id": 523826209,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749759581
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031#issuecomment-2968242336\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @saulecabrera</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"winch\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>saulecabrera: winch</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 523837732,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749764764
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031#discussion_r2143588197\">PR review comment</a>.</p>",
        "id": 523925892,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749813929
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>.</p>",
        "id": 523968272,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749828539
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031#pullrequestreview-2925249224\">PR review</a>.</p>",
        "id": 523968903,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749828763
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031#discussion_r2145347879\">PR review comment</a>:</p>\n<blockquote>\n<p>@alexcrichton I've pushed a variation of your suggestion in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031/commits/99e648766a9ebb41b864b92f96fe2eb16669d397\">https://github.com/bytecodealliance/wasmtime/pull/11031/commits/99e648766a9ebb41b864b92f96fe2eb16669d397</a> -- let me know what you think. Given that this configuration struct is shared among two tests contexts, I thought it might be easier to reason through if we instead introduce a proper option to flag the test as integration. Your suggested approach works, but I found it a bit challenging to reason about since it modifies to a certain extent the semantic meaning of the Wasm config depending on the testing context. Happy to revisit that last commit if you think that dividing the <code>simd</code> option is better though. </p>\n</blockquote>",
        "id": 523968904,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749828763
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>.</p>",
        "id": 523969214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749828881
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>.</p>",
        "id": 523969215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749828881
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>.</p>",
        "id": 523969217,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749828882
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>.</p>",
        "id": 523969511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749829003
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031#pullrequestreview-2925331269\">PR review</a>:</p>\n<blockquote>\n<p>I like it <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n<p>If you'll indulge a minor bikeshed though, what about inverting this from <code>integration: bool</code> to <code>spec_test: bool</code>? I'm a little worried that only the macro-defined tests are <code>integration: true</code> where all of <code>tests/misc_testsuite/*</code> should in theory be automatically <code>integration: true</code> as well. By inverting this to <code>spec_test: bool</code> it should be easy to audit the single location that classifies spec tests and ensure it sets that and then everything else can ignore it being set.</p>\n<p>Also, as a minor nit, instead of adding <code>..</code> to patterns can you add <code>spec_test: _</code> to explicitly ignore the field? The exhaustive match helps ensure that we update the patterns/etc when a new field is added.</p>\n</blockquote>",
        "id": 523972295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749830034
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>.</p>",
        "id": 523986640,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749835558
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>.</p>",
        "id": 523986712,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749835586
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031#issuecomment-2971041940\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>:</p>\n<blockquote>\n<p>@alexcrichton all that make sense, I've pushed the fixes in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031/commits/93bd9d4530203806e1ae1efe76359e879dda3733\">https://github.com/bytecodealliance/wasmtime/pull/11031/commits/93bd9d4530203806e1ae1efe76359e879dda3733</a></p>\n</blockquote>",
        "id": 523986795,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749835620
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031#pullrequestreview-2925636741\">PR review</a>.</p>",
        "id": 523987178,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749835780
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>.</p>",
        "id": 523987193,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749835785
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>.</p>",
        "id": 523991146,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749837507
    },
    {
        "content": "<p>saulecabrera has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>.</p>",
        "id": 523992551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749838041
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>.</p>",
        "id": 523998211,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749840488
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031#issuecomment-2971447283\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>:</p>\n<blockquote>\n<p>Hmm there seems to be a legit segfault for <code>macOS-arm64</code>, taking a look.</p>\n</blockquote>",
        "id": 524003822,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749843337
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031#issuecomment-2971785517\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"fuzzing\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: fuzzing</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 524017918,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749851126
    },
    {
        "content": "<p>saulecabrera merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>.</p>",
        "id": 524263812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750082304
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031#issuecomment-2976779896\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11031\">PR #11031</a>:</p>\n<blockquote>\n<p>It didn't seem like a segfault in the test itself, nor I was able to reproduce after running the job multiple times (locally and in CI). </p>\n</blockquote>",
        "id": 524264183,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750082408
    }
]