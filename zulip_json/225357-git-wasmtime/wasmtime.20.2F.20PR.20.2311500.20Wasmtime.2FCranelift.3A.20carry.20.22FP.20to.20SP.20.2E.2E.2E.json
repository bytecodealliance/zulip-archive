[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500\">PR #11500</a> from <code>cfallin:exception-sp-from-fp-with-offset</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Currently Wasmtime unwinds stack frames to look for exception handlers by walking frames one-by-one, following the FP chain as usual, and assuming that <em>these frames are contiguous</em>: that is, that the SP in any given frame (bottom of that frame) is immediately above the FP of the next lower frame, plus the FP/return address pair (e.g. 16 bytes). This allows us to get the SP for any given frame in addition to FP. We need SP for two reasons:</p>\n<ul>\n<li>To look up dynamic context, to match Wasm tag instances for handlers against the thrown tag;</li>\n<li>To actually set SP when we resume, if we do resume to a handler in this frame.</li>\n</ul>\n<p>This logic <em>almost but not quite</em> worked: I had forgotten that in our tail-call ABI, we need to clean up incoming stack args in the callee (because only the final callee in a parade of tail-calling functions that reuse the same stack frame location knows how many args it has, not the original caller). This implies that there is an \"incoming args area\" <em>above</em> the FP/return address pair. Thus, frames are not necessarily contiguous by the above definition.</p>\n<p>In #11489 we see a case where a function of signature <code>(func)</code> tail-calls one of <code>(func (param i32 i32 i32 i32 i32))</code>, which on x86-64 (with four arg registers left for Wasm) is sufficient to create incoming stack args, which then trips up the unwinder, reading a bogus vmctx and segfaulting.</p>\n<p>The most reasonable solution seems to be to embed the SP-to-FP offset in the exception metadata itself, so from only the FP (which is totally robust -- we rely on the FP chain for multiple kinds of stack-walking) we can get the SP, allowing us to read dynamic context and to reset SP during resume.</p>\n<p>This PR does just that. Technically, in our ABI, the SP-to-FP offset is constant for an entire function, but it was simpler in the exception metadata to encode this per callsite instead (there is no other notion of \"per-function\" data, only \"per-callsite\", so it would be a separate binary search).</p>\n<p>Fixes #11489.</p>\n<p>prtest:full</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 535583964,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755813048
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500\">PR #11500</a>.</p>",
        "id": 535583966,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755813048
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500\">PR #11500</a>.</p>",
        "id": 535583967,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755813048
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500\">PR #11500</a>.</p>",
        "id": 535583968,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755813049
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500#pullrequestreview-3142389429\">PR review</a>.</p>",
        "id": 535584791,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755813498
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500#discussion_r2292219764\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this (and below) expand documentation to explain what <code>None</code> means?</p>\n</blockquote>",
        "id": 535584792,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755813498
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500#discussion_r2292224760\">PR review comment</a>:</p>\n<blockquote>\n<p>Would it be worth it to add a disas test for <code>$throw</code> to ensure that it's handling the offset correctly?</p>\n</blockquote>",
        "id": 535584793,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755813498
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500#discussion_r2292223472\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this have a comment as to why <code>unwrap_or</code> is ok here? Or otherwise, if <code>None</code> is the same as 0 should this be represented as a u32 instead of a <code>Option&lt;u32&gt;</code>?</p>\n</blockquote>",
        "id": 535584794,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755813498
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500\">PR #11500</a>.</p>",
        "id": 535585576,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755813862
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500\">PR #11500</a>.</p>",
        "id": 535585688,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755813944
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500\">PR #11500</a>.</p>",
        "id": 535587091,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755814844
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500#pullrequestreview-3142435777\">PR review</a>.</p>",
        "id": 535587095,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755814847
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500#discussion_r2292252098\">PR review comment</a>:</p>\n<blockquote>\n<p>The interesting new bit is actually the offset at the <code>try_table</code> site (callsite in <code>$start</code>), which is the same as the case in <code>exceptions.wat</code>, so I think we're covered already!</p>\n</blockquote>",
        "id": 535587096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755814848
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500#pullrequestreview-3142435952\">PR review</a>.</p>",
        "id": 535587107,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755814854
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500#discussion_r2292252219\">PR review comment</a>:</p>\n<blockquote>\n<p>Updated to explicitly <code>.expect()</code> only when there are handlers. The subtlety is that <code>frame_offset</code> will be <code>None</code> if there are no handlers because we don't encode any metadata in that case.</p>\n</blockquote>",
        "id": 535587108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755814854
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500#pullrequestreview-3142436046\">PR review</a>.</p>",
        "id": 535587117,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755814858
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500#discussion_r2292252320\">PR review comment</a>:</p>\n<blockquote>\n<p>Updated!</p>\n</blockquote>",
        "id": 535587118,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755814858
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500\">PR #11500</a>.</p>",
        "id": 535588762,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755816012
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11500\">PR #11500</a>.</p>",
        "id": 535591226,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755817851
    }
]