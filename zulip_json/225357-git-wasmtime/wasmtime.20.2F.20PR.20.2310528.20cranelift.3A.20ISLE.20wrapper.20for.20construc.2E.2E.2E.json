[
    {
        "content": "<p>Gonzalosilvalde opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10528\">PR #10528</a> from <code>Gonzalosilvalde:6038</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n<h2>Description:</h2>\n<p>This pull request addresses issue <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6038\">#6038</a> by adding an ISLE wrapper for constructing constants. The goal is to allow mid-end optimization rules to generate constants generically without needing to know whether to use <code>iconst</code>, <code>vconst</code>, <code>f32const</code>, <code>f64const</code>, etc.</p>\n<h2>Changes:</h2>\n<ul>\n<li>Added a helper function <code>ty_vec</code> in <code>cranelift/codegen/src/isle_prelude.rs</code></li>\n<li>Defined an extractor <code>ty_vec</code> in `cranelift/codegen/src/prelude.isle</li>\n<li>Introduced a new rule in <code>cranelift/codegen/src/prelude_opt.isle</code> for constructing constant nodes</li>\n</ul>\n<h2>Additional Notes:</h2>\n<ul>\n<li>It compiles without any problem and passes the <code>cranelift</code> test.</li>\n</ul>\n</blockquote>",
        "id": 510423683,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743896617
    },
    {
        "content": "<p><strong>Gonzalosilvalde</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10528\">PR #10528</a>.</p>",
        "id": 510423684,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743896617
    },
    {
        "content": "<p><strong>Gonzalosilvalde</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10528\">PR #10528</a>.</p>",
        "id": 510423685,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743896617
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10528#issuecomment-2784280332\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10528\">PR #10528</a>:</p>\n<blockquote>\n<p>@Gonzalosilvalde thanks for the PR!</p>\n<p>In order to ensure this is tested and works for our lowerings, would you mind switching over at least a few existing uses of <code>iconst</code>/etc to use this instead? Looking at the issue(s) that spawned this might help to find cases to demonstrate it as well.</p>\n</blockquote>",
        "id": 510745564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744052373
    },
    {
        "content": "<p>efJerryYang <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10528#issuecomment-3378726913\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10528\">PR #10528</a>:</p>\n<blockquote>\n<p>Hi @Gonzalosilvalde , I noticed this PR has been quiet for a while.</p>\n<p>Would you mind if I pick this up and continue the remaining testing work in a separate PR to help move it forward?</p>\n</blockquote>",
        "id": 543622001,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759871273
    },
    {
        "content": "<p>Gonzalosilvalde <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10528#issuecomment-3380071724\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10528\">PR #10528</a>:</p>\n<blockquote>\n<p>Hi @efJerryYang ,<br>\nYeah, continue what remains without any problem</p>\n</blockquote>",
        "id": 543674288,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759907604
    }
]