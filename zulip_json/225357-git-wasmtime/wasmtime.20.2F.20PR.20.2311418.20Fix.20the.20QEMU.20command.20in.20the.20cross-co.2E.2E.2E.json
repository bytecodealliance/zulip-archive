[
    {
        "content": "<p>yomaytk opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418\">PR #11418</a> from <code>yomaytk:fix-docs-cross-compiling</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>cargo test command of cross compilation target causes the following error in the many tests because the setting <code>runner = \"qemu-aarch64 -L /usr/aarch64-linux-gnu -E LD_LIBRARY_PATH=/usr/aarch64-linux-gnu/lib -E WASMTIME_TEST_NO_HOG_MEMORY=1\"</code> of .cargo/config.toml cannot pass environment variables to the qemu-user executed by binfmt.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\"># aarch64</span>\naarch64-binfmt-P:<span class=\"w\"> </span>Could<span class=\"w\"> </span>not<span class=\"w\"> </span>open<span class=\"w\"> </span><span class=\"s1\">'/lib/ld-linux-aarch64.so.1'</span>:<span class=\"w\"> </span>No<span class=\"w\"> </span>such<span class=\"w\"> </span>file<span class=\"w\"> </span>or<span class=\"w\"> </span>directory\n</code></pre></div>\n<p>This PR fixes the error by specifying <code>env QEMU_LD_PREFIX=...</code>  to the .cargo/config.toml.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 533927337,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754985718
    },
    {
        "content": "<p><strong>yomaytk</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418\">PR #11418</a>.</p>",
        "id": 533927338,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754985718
    },
    {
        "content": "<p><strong>yomaytk</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418\">PR #11418</a>.</p>",
        "id": 533927339,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754985718
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418\">PR #11418</a>.</p>",
        "id": 534013475,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755015047
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418#issuecomment-3180082893\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418\">PR #11418</a>:</p>\n<blockquote>\n<p>Could you detail a bit more about the differences? I'm mostly curious because I've been using the previously-documented form for as long as I can remember. Additionally sticking to just a <code>qemu-*</code> binary feels nice in the sense that it doesn't also require <code>env</code> necessarily.</p>\n</blockquote>",
        "id": 534013732,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755015143
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418#issuecomment-3180118956\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418\">PR #11418</a>:</p>\n<blockquote>\n<p>It appears that <code>-L</code> and the <code>QEMU_LD_PREFIX</code> environment variable should be completely equivalent -- from the output of <code>qemu-aarch64 -h</code>, I see</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Options</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">associated</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variables</span><span class=\"p\">:</span>\n\n<span class=\"nc\">Argument</span><span class=\"w\">             </span><span class=\"n\">Env</span><span class=\"o\">-</span><span class=\"n\">variable</span><span class=\"w\">      </span><span class=\"n\">Description</span>\n<span class=\"p\">[</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">]</span>\n<span class=\"o\">-</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\">              </span><span class=\"n\">QEMU_LD_PREFIX</span><span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">elf</span><span class=\"w\"> </span><span class=\"n\">interpreter</span><span class=\"w\"> </span><span class=\"n\">prefix</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">path</span><span class=\"o\">'</span>\n</code></pre></div>\n<p>I'm surprised that the existing command didn't work for you. Do you have the named file (from your error message) at <code>/usr/aarch64-linux-gnu/lib/ld-linux-aarch64.so.1</code>?</p>\n<p>If so, could you show your complete Cargo config, the command you ran, and share info about your environment (Linux distro, Rust compiler version)?</p>\n</blockquote>",
        "id": 534015658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755015754
    },
    {
        "content": "<p>yomaytk <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418#issuecomment-3182200408\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418\">PR #11418</a>:</p>\n<blockquote>\n<p>@alexcrichton @cfallin Thank you for the review!</p>\n<p>According to the error message, the path to <code>ld-linux-aarch64.so.1</code> was missing <code>/usr/aarch64-linux-gnu</code>, so it seemed that binfmt was being launched without setting <code>/usr/aarch64-linux-gnu</code> as the sysroot. Therefore, I thought that during the execution of qemu-aarch64, the binfmt process launched as a other process could not receive the original <code>-L</code> option, leaving the sysroot empty, so I specified it via <code>env</code> command.</p>\n<p>However, since the original configuration passes your tests, I’m not sure if my understanding is correct…</p>\n<blockquote>\n<p>Do you have the named file (from your error message) at /usr/aarch64-linux-gnu/lib/ld-linux-aarch64.so.1?</p>\n</blockquote>\n<p>Yes, I do.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>ls<span class=\"w\"> </span>-l<span class=\"w\"> </span>/usr/aarch64-linux-gnu/lib/ld-linux-aarch64.so.1\n-rwxr-xr-x<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>root<span class=\"w\"> </span>root<span class=\"w\"> </span><span class=\"m\">202784</span><span class=\"w\"> </span>Apr<span class=\"w\"> </span><span class=\"m\">15</span><span class=\"w\">  </span><span class=\"m\">2024</span><span class=\"w\"> </span>/usr/aarch64-linux-gnu/lib/ld-linux-aarch64.so.1\n</code></pre></div>\n<blockquote>\n<p>If so, could you show your complete Cargo config, the command you ran, and share info about your environment (Linux distro, Rust compiler version)?</p>\n</blockquote>\n<p>Environment is as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>uname<span class=\"w\"> </span>-m<span class=\"p\">;</span><span class=\"w\"> </span>lsb_release<span class=\"w\"> </span>-d\nx86_64\nNo<span class=\"w\"> </span>LSB<span class=\"w\"> </span>modules<span class=\"w\"> </span>are<span class=\"w\"> </span>available.\nDescription:<span class=\"w\">    </span>Ubuntu<span class=\"w\"> </span><span class=\"m\">24</span>.04.2<span class=\"w\"> </span>LTS\n$<span class=\"w\"> </span>rustc<span class=\"w\"> </span>--version\nrustc<span class=\"w\"> </span><span class=\"m\">1</span>.89.0<span class=\"w\"> </span><span class=\"o\">(</span>29483883e<span class=\"w\"> </span><span class=\"m\">2025</span>-08-04<span class=\"o\">)</span>\n</code></pre></div>\n<p>.cargo/config.toml is as follows (before the changes in this PR).</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"o\">[</span>target.aarch64-unknown-linux-gnu<span class=\"o\">]</span>\n<span class=\"nv\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"aarch64-linux-gnu-gcc\"</span>\n<span class=\"nv\">runner</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"qemu-aarch64 -L /usr/aarch64-linux-gnu -E LD_LIBRARY_PATH=/usr/aarch64-linux-gnu/lib -E WASMTIME_TEST_NO_HOG_MEMORY=1\"</span>\n</code></pre></div>\n<p>Also, I attached the <code>Cargo.lock</code> file (the <code>Cargo.toml</code> is the same as in the latest commit) and the log file from running <code>cargo build --target aarch64-unknown-linux-gnu</code>.</p>\n<p><a href=\"https://github.com/user-attachments/files/21747261/aarch64-test.log\">aarch64-test.log</a><br>\n<a href=\"https://github.com/user-attachments/files/21747279/Cargo.lock.txt\">Cargo.lock.txt</a><br>\n</p>\n</blockquote>",
        "id": 534158847,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755061910
    },
    {
        "content": "<p>yomaytk edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418#issuecomment-3182200408\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418\">PR #11418</a>:</p>\n<blockquote>\n<p>@alexcrichton @cfallin Thank you for the review!</p>\n<p>According to the error message, the path to <code>ld-linux-aarch64.so.1</code> was missing <code>/usr/aarch64-linux-gnu</code>, so it seemed that binfmt was being launched without setting <code>/usr/aarch64-linux-gnu</code> as the sysroot. Therefore, I thought that during the execution of qemu-aarch64, the binfmt process launched as a other process could not receive the original <code>-L</code> option, leaving the sysroot empty, so I specified it via <code>env</code> command.</p>\n<p>However, since the original configuration passes your tests, I’m not sure if my understanding is correct…</p>\n<blockquote>\n<p>Do you have the named file (from your error message) at /usr/aarch64-linux-gnu/lib/ld-linux-aarch64.so.1?</p>\n</blockquote>\n<p>Yes, I do.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>ls<span class=\"w\"> </span>-l<span class=\"w\"> </span>/usr/aarch64-linux-gnu/lib/ld-linux-aarch64.so.1\n-rwxr-xr-x<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>root<span class=\"w\"> </span>root<span class=\"w\"> </span><span class=\"m\">202784</span><span class=\"w\"> </span>Apr<span class=\"w\"> </span><span class=\"m\">15</span><span class=\"w\">  </span><span class=\"m\">2024</span><span class=\"w\"> </span>/usr/aarch64-linux-gnu/lib/ld-linux-aarch64.so.1\n</code></pre></div>\n<blockquote>\n<p>If so, could you show your complete Cargo config, the command you ran, and share info about your environment (Linux distro, Rust compiler version)?</p>\n</blockquote>\n<p>Environment is as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>uname<span class=\"w\"> </span>-m<span class=\"p\">;</span><span class=\"w\"> </span>lsb_release<span class=\"w\"> </span>-d\nx86_64\nNo<span class=\"w\"> </span>LSB<span class=\"w\"> </span>modules<span class=\"w\"> </span>are<span class=\"w\"> </span>available.\nDescription:<span class=\"w\">    </span>Ubuntu<span class=\"w\"> </span><span class=\"m\">24</span>.04.2<span class=\"w\"> </span>LTS\n$<span class=\"w\"> </span>rustc<span class=\"w\"> </span>--version\nrustc<span class=\"w\"> </span><span class=\"m\">1</span>.89.0<span class=\"w\"> </span><span class=\"o\">(</span>29483883e<span class=\"w\"> </span><span class=\"m\">2025</span>-08-04<span class=\"o\">)</span>\n</code></pre></div>\n<p>.cargo/config.toml is as follows (before the changes in this PR).</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"o\">[</span>target.aarch64-unknown-linux-gnu<span class=\"o\">]</span>\n<span class=\"nv\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"aarch64-linux-gnu-gcc\"</span>\n<span class=\"nv\">runner</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"qemu-aarch64 -L /usr/aarch64-linux-gnu -E LD_LIBRARY_PATH=/usr/aarch64-linux-gnu/lib -E WASMTIME_TEST_NO_HOG_MEMORY=1\"</span>\n</code></pre></div>\n<p>Also, I attached the <code>Cargo.lock</code> file (the <code>Cargo.toml</code> is the same as in the latest commit) and the log file from running <code>cargo test --target aarch64-unknown-linux-gnu</code>.</p>\n<p><a href=\"https://github.com/user-attachments/files/21747261/aarch64-test.log\">aarch64-test.log</a><br>\n<a href=\"https://github.com/user-attachments/files/21747279/Cargo.lock.txt\">Cargo.lock.txt</a><br>\n</p>\n</blockquote>",
        "id": 534158982,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755062039
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418#issuecomment-3182228407\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418\">PR #11418</a>:</p>\n<blockquote>\n<p>The <code>aarch64-binfmt-P</code> is suspect -- that seems to imply to me that some other configuration is causing Linux's binfmt support (i.e., automatic registration of qemu to allow <code>exec()</code> of foreign-architecture binaries directly) to run instead.</p>\n<p>Question: do you have any other Cargo config, perhaps in your <code>~/.cargo</code>? And @alexcrichton would certainly know better than me about how Cargo finds configuration and whether there are any other gotchas here...</p>\n</blockquote>",
        "id": 534159694,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755062623
    },
    {
        "content": "<p>yomaytk <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418#issuecomment-3182365292\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418\">PR #11418</a>:</p>\n<blockquote>\n<blockquote>\n<p>The aarch64-binfmt-P is suspect -- that seems to imply to me that some other configuration is causing Linux's binfmt support (i.e., automatic registration of qemu to allow exec() of foreign-architecture binaries directly) to run instead.</p>\n</blockquote>\n<p>Yes, I agree. So I disabled the aarch64 binfmt and reran the tests, but they failed in the same tests. The error details have changed, but when I set the environment variables with <code>env</code> and enable binfmt, all the tests pass, so it looks like I need to review the configuration related to binfmt.</p>\n<p>The results of some tests are as follows.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>cargo<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>--target<span class=\"w\"> </span>aarch64-unknown-linux-gnu<span class=\"w\"> </span>big_table_in_pooling_allocator\n...\nrunning<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span><span class=\"nb\">test</span>\n<span class=\"nb\">test</span><span class=\"w\"> </span>cli_tests::big_table_in_pooling_allocator<span class=\"w\"> </span>...<span class=\"w\"> </span>FAILED\n\nfailures:\n\n----<span class=\"w\"> </span>cli_tests::big_table_in_pooling_allocator<span class=\"w\"> </span>stdout<span class=\"w\"> </span>----\nError:<span class=\"w\"> </span>Failed<span class=\"w\"> </span>to<span class=\"w\"> </span>execute<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>with:<span class=\"w\"> </span><span class=\"o\">[</span><span class=\"s2\">\"tests/all/cli_tests/big_table.wat\"</span><span class=\"o\">]</span>\nstatus:<span class=\"w\"> </span><span class=\"nb\">exit</span><span class=\"w\"> </span>status:<span class=\"w\"> </span><span class=\"m\">127</span>\n\n$<span class=\"w\"> </span>cargo<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>--target<span class=\"w\"> </span>aarch64-unknown-linux-gnu<span class=\"w\"> </span>bad_text_syntax\n...\nrunning<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span><span class=\"nb\">test</span>\n<span class=\"nb\">test</span><span class=\"w\"> </span>cli_tests::bad_text_syntax<span class=\"w\"> </span>...<span class=\"w\"> </span>FAILED\n\nfailures:\n\n----<span class=\"w\"> </span>cli_tests::bad_text_syntax<span class=\"w\"> </span>stdout<span class=\"w\"> </span>----\n\nthread<span class=\"w\"> </span><span class=\"s1\">'cli_tests::bad_text_syntax'</span><span class=\"w\"> </span>panicked<span class=\"w\"> </span>at<span class=\"w\"> </span>tests/all/cli_tests.rs:816:5:\nbad<span class=\"w\"> </span>stderr:\nnote:<span class=\"w\"> </span>run<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"sb\">`</span><span class=\"w\"> </span>environment<span class=\"w\"> </span>variable<span class=\"w\"> </span>to<span class=\"w\"> </span>display<span class=\"w\"> </span>a<span class=\"w\"> </span>backtrace\n</code></pre></div>\n<p>Just in case, I attached the full log file.</p>\n<p><a href=\"https://github.com/user-attachments/files/21748257/aarch64-test-nobinfmt.log\">aarch64-test-nobinfmt.log</a></p>\n<blockquote>\n<p>do you have any other Cargo config, perhaps in your ~/.cargo? </p>\n</blockquote>\n<p>No, just .cargo/config.toml.<br>\n</p>\n</blockquote>",
        "id": 534166075,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755066895
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418#issuecomment-3184843408\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418\">PR #11418</a>:</p>\n<blockquote>\n<p>Aha ok this makes sense now. Some tests that we have will execute the <code>wasmtime</code> binary itself (e.g. CLI tests). This gets tricky when the test suite has a configure runner (e.g. cargo wrapped it in qemu) because the test doesn't know that it needs to also wrap the invocation of the <code>wasmtime</code> binary itself. Effectively the wrapper that Cargo uses may or may not be communicated to the test itself to further execute the cross-architecture binary.</p>\n<p>Currently the test itself detecting a runner <a href=\"https://github.com/bytecodealliance/wasmtime/blob/0e7876a09dc7da2241baa0a98f426d96ae966b7f/crates/test-util/src/lib.rs#L13-L21\">only works if the runner is in an env var</a>, not via Cargo configuration. This is what our CI runners configure, for example. If you're using <code>~/.cargo/config.toml</code> then Cargo won't set env vars and the test won't know it's running under emulation so it won't know to use the emulation when re-executing <code>wasmtime</code>.</p>\n<p>Now if you have binfmt support enabled on Linux that's why the env vars appear to fix things for you. With binfmt support the test doesn't need to know to wrap the <code>wasmtime</code> invocation in QEMU, the kernel does that. The reason the env vars then work is that they're propagated automatically vs with CLI flags they're not propagated automatically.</p>\n<p>So, in essence, I think this is a confluence of events where it's less to do with Cargo and more to do with how our test suite executes the <code>wasmtime</code> CLI and tries to do that correctly when under emulation. Unfortunately both before/after this PR suffer from not being 100% accurate:</p>\n<ul>\n<li>Before this PR the documented way of configuring a runner technically doesn't work because the env vars aren't set for the test suite to re-execute <code>wasmtime</code>. All parts of our test suite that don't execute commands (most of them) will still work however.</li>\n<li>After this PR the documented way of configuring will only work if binfmt support is configured. While your PR fixes systems with binfmt support setup, those systems without it still won't wrap the <code>wasmtime</code> execution with <code>qemu-*</code> (as you've seen)</li>\n</ul>\n<p>The only \"real\" way to fix this is to export <code>CARGO_*_RUNNER</code> env vars like CI does, but that's a bit of a bummer. Ideally we could detect Cargo's <code>runner</code> configuration and/or detect we're under QEMU and just skip the tests.</p>\n</blockquote>",
        "id": 534274625,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755106504
    },
    {
        "content": "<p><strong>yomaytk</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418\">PR #11418</a>.</p>",
        "id": 534456148,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755169493
    },
    {
        "content": "<p>yomaytk updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11418\">PR #11418</a>.</p>",
        "id": 534456150,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755169493
    }
]