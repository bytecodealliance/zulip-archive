[
    {
        "content": "<p><a href=\"https://github.com/fitzgen\">fitzgen</a> added the fuzz-bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10331\">Issue #10331</a>.</p>",
        "id": 503393762,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741135107
    },
    {
        "content": "<p><a href=\"https://github.com/fitzgen\">fitzgen</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10331\">Issue #10331</a>.</p>",
        "id": 503393763,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741135107
    },
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10331\">issue #10331</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"test\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"err\">v</span><span class=\"mf\">128</span><span class=\"p\">)</span>\n    <span class=\"err\">v</span><span class=\"mf\">128</span><span class=\"err\">.const</span> <span class=\"kt\">i64</span><span class=\"err\">x</span><span class=\"mf\">2 32768</span> <span class=\"mi\">0</span>\n    <span class=\"nb\">call</span> <span class=\"mi\">1</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"err\">v</span><span class=\"mf\">128</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"err\">v</span><span class=\"mf\">128</span><span class=\"p\">)</span>\n    <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n    <span class=\"err\">i</span><span class=\"mi\">16</span><span class=\"err\">x</span><span class=\"mi\">8</span><span class=\"err\">.extadd_pairwise_i</span><span class=\"mf\">8x16</span><span class=\"err\">_s</span>\n  <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$ </span>target/debug/wasmtime<span class=\"w\"> </span>-Ccompiler<span class=\"o\">=</span>cranelift<span class=\"w\"> </span>--invoke<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>test.wat\n<span class=\"go\">65408</span>\n\n<span class=\"gp\">$ </span>target/debug/wasmtime<span class=\"w\"> </span>-Ccompiler<span class=\"o\">=</span>winch<span class=\"w\"> </span>--invoke<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>test.wat\n<span class=\"go\">0</span>\n</code></pre></div>\n<p>cc @saulecabrera @jeffcharles </p>\n</blockquote>",
        "id": 503393766,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741135108
    },
    {
        "content": "<p>jeffcharles <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10331#issuecomment-2701564433\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10331\">issue #10331</a>:</p>\n<blockquote>\n<p>The use of <code>self.v128_extend(src, writable!(tmp), low_kind)?;</code> in the macroassembler implementation for <code>extadd</code> looks incorrect to me since that extends the values in low half of the vector and puts that extended lower half of the vector in the scratch register and my understanding of <code>extadd</code> is it should be extending the adjacent lane and then adding the result. I'll work on an implementation that avoids that.</p>\n</blockquote>",
        "id": 503579011,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741194574
    },
    {
        "content": "<p>saulecabrera closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10331\">issue #10331</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"test\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"err\">v</span><span class=\"mf\">128</span><span class=\"p\">)</span>\n    <span class=\"err\">v</span><span class=\"mf\">128</span><span class=\"err\">.const</span> <span class=\"kt\">i64</span><span class=\"err\">x</span><span class=\"mf\">2 32768</span> <span class=\"mi\">0</span>\n    <span class=\"nb\">call</span> <span class=\"mi\">1</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"err\">v</span><span class=\"mf\">128</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"err\">v</span><span class=\"mf\">128</span><span class=\"p\">)</span>\n    <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n    <span class=\"err\">i</span><span class=\"mi\">16</span><span class=\"err\">x</span><span class=\"mi\">8</span><span class=\"err\">.extadd_pairwise_i</span><span class=\"mf\">8x16</span><span class=\"err\">_s</span>\n  <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$ </span>target/debug/wasmtime<span class=\"w\"> </span>-Ccompiler<span class=\"o\">=</span>cranelift<span class=\"w\"> </span>--invoke<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>test.wat\n<span class=\"go\">65408</span>\n\n<span class=\"gp\">$ </span>target/debug/wasmtime<span class=\"w\"> </span>-Ccompiler<span class=\"o\">=</span>winch<span class=\"w\"> </span>--invoke<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>test.wat\n<span class=\"go\">0</span>\n</code></pre></div>\n<p>cc @saulecabrera @jeffcharles </p>\n</blockquote>",
        "id": 503827118,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741275944
    }
]