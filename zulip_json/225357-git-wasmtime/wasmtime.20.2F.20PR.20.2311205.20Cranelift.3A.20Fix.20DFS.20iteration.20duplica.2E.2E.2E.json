[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11205\">PR #11205</a> from <code>fitzgen:dfs-duplicate-visits</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>When a single instruction could branch to the same successor multiple different ways (e.g. both sides of a <code>brif</code> go to the same block, or a block appears multiple times in a <code>br_table</code> or a <code>try_call</code>'s exception table) then our DFS traversal would mistakenly visit that block multiple times. This has largely not been an issue for analyses, just made them a tiny bit slower, but would be problematic for traversals that mutate the IR. Luckily the only traversal that is currently based on these DFS iteration helpers is the safepoints pass in <code>cranelift-frontend</code>, and that uses the post-order DFS iterator, which was not affected by this bug by chance. (My upcoming inliner, on the other hand, uses the pre-order DFS iterator and was affected by this bug.)</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 527795350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752025470
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11205\">PR #11205</a>.</p>",
        "id": 527795351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752025472
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11205\">PR #11205</a>.</p>",
        "id": 527795352,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752025472
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11205\">PR #11205</a>.</p>",
        "id": 527795483,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752025577
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11205\">PR #11205</a>:</p>\n<blockquote>\n<p>When a single instruction could branch to the same successor multiple different ways (e.g. both sides of a <code>brif</code> go to the same block, or a block appears multiple times in a <code>br_table</code> or a <code>try_call</code>'s exception table) then our DFS traversal would mistakenly visit that block multiple times. This has largely not been an issue for analyses, just made them a tiny bit slower, but would be problematic for traversals that mutate the IR. Luckily the only mutating traversal that is currently based on these DFS iteration helpers is the safepoints pass in <code>cranelift-frontend</code>, and that uses the post-order DFS iterator, which was not affected by this bug by chance. (My upcoming inliner, on the other hand, uses the pre-order DFS iterator and was affected by this bug.)</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 527795740,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752025834
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11205#pullrequestreview-3001829857\">PR review</a>.</p>",
        "id": 527903041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752071730
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11205\">PR #11205</a>.</p>",
        "id": 527907942,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752073107
    }
]