[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10759\">PR #10759</a> from <code>abrown:asm-write</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This change adds support to the new assembler for write-only operands. This implementation appeared first in [#10754] but is split out here to unblock implementation of instructions that require it: multiplication, conversions, moves, etc. This starts roughly the same as what was implemented for write-only XMMs in [#10754] but includes support for write-only GPRs as well and generates the temporary registers which are needed.</p>\n<p>[#10754]: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10754\">https://github.com/bytecodealliance/wasmtime/pull/10754</a></p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 517186410,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746824080
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10759\">PR #10759</a>.</p>",
        "id": 517186412,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746824081
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10759\">PR #10759</a>.</p>",
        "id": 517186413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746824081
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10759#pullrequestreview-2829693880\">PR review</a>.</p>",
        "id": 517189515,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746825508
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10759#discussion_r2082512905\">PR review comment</a>:</p>\n<blockquote>\n<p>Should this get collapsed into <code>ReadWrite</code> as well below? This has the same handling for <code>Reg</code> and all the other cases look applicable for one-operand-written instructions too (e.g. if something stores in memory or outputs to a fixed register)</p>\n</blockquote>",
        "id": 517189516,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746825509
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10759#pullrequestreview-2829727643\">PR review</a>.</p>",
        "id": 517191299,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746826652
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10759#discussion_r2082530659\">PR review comment</a>:</p>\n<blockquote>\n<p>Unfortunately, there's slightly different behavior for retrieving the underlying Cranelift type. The <code>ReadWrite</code> variant needs to access the <code>write</code> field; this one should actually be doing a <code>as_ref().to_reg()</code> (let me fix that). I think in the fullness of time we will want to merge some things like I did over in the assembler generator but let's leave this as-is until we have a few more write-only instructions implemented.</p>\n</blockquote>",
        "id": 517191300,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746826652
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10759\">PR #10759</a>.</p>",
        "id": 517191442,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746826731
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10759\">PR #10759</a>.</p>",
        "id": 517195242,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746829237
    }
]