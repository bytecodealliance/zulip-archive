[
    {
        "content": "<p>cpetig opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10619\">PR #10619</a> from <code>cpetig:fixed-size-list</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Implement the necessary parts of fixed size lists (see <a href=\"https://github.com/WebAssembly/component-model/pull/384\">https://github.com/WebAssembly/component-model/pull/384</a> ) to enable runtime testing in wit-bindgen.</p>\n</blockquote>",
        "id": 513300434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745177690
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10619#issuecomment-2817333333\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10619\">PR #10619</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 513305489,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745181922
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10619#pullrequestreview-2781505921\">PR review</a>.</p>",
        "id": 513417239,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745248426
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10619#discussion_r2052556773\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this be done with a new helper? I'm wary of defining an O(n) thing here and relying on LLVM to optimize it. This could make <code>list&lt;T, BigNumber&gt;</code> excessively slow in debug builds of Wasmtime for example.</p>\n</blockquote>",
        "id": 513417240,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745248426
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10619#discussion_r2052558667\">PR review comment</a>:</p>\n<blockquote>\n<p>Same as above, I think it'd be best to avoid \"feigning\" a record here and using a dedicated computation for fixed-size lists to avoid O(n) in the length of the list</p>\n</blockquote>",
        "id": 513417243,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745248426
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10619#discussion_r2052562853\">PR review comment</a>:</p>\n<blockquote>\n<p>Since these are relatively targeted <code>todo!()</code> items mind filing an issue as a tracking issue and tagging these with <code>// FIXME(#NNNN)</code>?</p>\n</blockquote>",
        "id": 513417244,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745248427
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10619#discussion_r2052561906\">PR review comment</a>:</p>\n<blockquote>\n<p>This is a bit of an interesting case. Effectively what this is doing is unrolling <code>list&lt;T, N&gt;</code> unconditionally, but I don't think that's necessarily appropriate for large <code>N</code>. I think it's fine to unroll for small <code>N</code> (perhaps only when <code>T</code> is small?). Ideally this would have a budget of sorts where a fixed number <code>Cost</code> is divided by the cost of <code>T</code> , and that's the maximal unrolling. That way we don't generate exponential amounts of code here for <code>list&lt;list&lt;T, N&gt;, N&gt;</code>.</p>\n<p>Basically what I'm saying is that I think we must implement the loop-based variant of translating lists, not just the fully-unrolled version of translating lists.</p>\n</blockquote>",
        "id": 513417245,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745248427
    },
    {
        "content": "<p>cpetig updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10619\">PR #10619</a>.</p>",
        "id": 528466818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752334661
    }
]