[
    {
        "content": "<p>beetrees opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652\">PR #10652</a> from <code>beetrees:f16-f128-riscv64-mvp</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>On the riscv64 backend, this PR adds initial support for using <code>f16</code> without the <code>Zfh</code> extension being enabled, as well as initial support for <code>f128</code>. Support is added for the <code>load</code>, <code>store</code>, <code>bitcast</code>, <code>select</code>, <code>f16const</code>, <code>f128const</code>, <code>bnot</code>, <code>band</code>, <code>bor</code> and <code>bxor</code> CLIF instructions, as well as adding the <code>zfhmin</code> and <code>zvfh</code> target features (alongside the pre-existing <code>zfh</code> target feature).</p>\n<p>cc @afonso360 who previously added initial <code>f16</code> support in #9135</p>\n<p><code>f16</code>/<code>f128</code> issue: #8312</p>\n</blockquote>",
        "id": 513874773,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745415519
    },
    {
        "content": "<p><strong>beetrees</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652\">PR #10652</a>.</p>",
        "id": 513874776,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745415520
    },
    {
        "content": "<p><strong>beetrees</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652\">PR #10652</a>.</p>",
        "id": 513874778,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745415520
    },
    {
        "content": "<p><strong>beetrees</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652\">PR #10652</a>.</p>",
        "id": 513874779,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745415520
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#pullrequestreview-2787389186\">PR review</a>.</p>",
        "id": 513876218,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745415904
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#discussion_r2056097396\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        \"Zfhmin: Minimal Half-Precision Floating-Point\",\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 513876226,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745415905
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#pullrequestreview-2787389788\">PR review</a>.</p>",
        "id": 513876241,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745415909
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#discussion_r2056097620\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        \"Zvfh: Vector Extension for Half-Precision Floating-Point\",\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 513876243,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745415910
    },
    {
        "content": "<p>beetrees updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652\">PR #10652</a>.</p>",
        "id": 513884830,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745418020
    },
    {
        "content": "<p>beetrees submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#pullrequestreview-2787530476\">PR review</a>.</p>",
        "id": 513884883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745418032
    },
    {
        "content": "<p>beetrees created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#discussion_r2056179275\">PR review comment</a>:</p>\n<blockquote>\n<p>Done</p>\n</blockquote>",
        "id": 513884884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745418032
    },
    {
        "content": "<p>beetrees submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#pullrequestreview-2787531057\">PR review</a>.</p>",
        "id": 513884924,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745418042
    },
    {
        "content": "<p>beetrees created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#discussion_r2056179631\">PR review comment</a>:</p>\n<blockquote>\n<p>Done</p>\n</blockquote>",
        "id": 513884926,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745418042
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#issuecomment-2824750081\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652\">PR #10652</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:meta\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 513906835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745423186
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#pullrequestreview-2788721159\">PR review</a>:</p>\n<blockquote>\n<p>A few nits but overall this looks plausible to me -- thanks for working through the tedious details!</p>\n</blockquote>",
        "id": 513968765,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745444164
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#discussion_r2056895530\">PR review comment</a>:</p>\n<blockquote>\n<p>Could we add a comment here describing why we're OR'ing in all ones in the high bits? I'm not sure if I understand why myself -- does this allow more immediates to fit into better/smaller codegen patterns for <code>imm</code> perhaps?</p>\n</blockquote>",
        "id": 513968766,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745444164
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#discussion_r2056895913\">PR review comment</a>:</p>\n<blockquote>\n<p>Likewise here as above -- where does the constant come from?</p>\n</blockquote>",
        "id": 513968767,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745444164
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#discussion_r2056902429\">PR review comment</a>:</p>\n<blockquote>\n<p>Is there any particular reason that we remove <code>aarch64 has_fp16</code> from the list of targets tested by this runtest and those below? Can we keep that while adding <code>riscv64</code> below it?</p>\n</blockquote>",
        "id": 513968768,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745444165
    },
    {
        "content": "<p>beetrees updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652\">PR #10652</a>.</p>",
        "id": 513978570,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745449691
    },
    {
        "content": "<p>beetrees submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#pullrequestreview-2788897287\">PR review</a>.</p>",
        "id": 513979088,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745450047
    },
    {
        "content": "<p>beetrees created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#discussion_r2057017700\">PR review comment</a>:</p>\n<blockquote>\n<p>I've added a comment. RISC-V stores smaller floats inside larger floating-point registers using NaN-boxing, meaning that the smaller float will be stored in the lower bits and all the other bits will be set to 1 (see section 21.2 of the <a href=\"https://drive.usercontent.google.com/download?id=1uviu1nH-tScFfgrovvFCrj7Omv8tFtkp&amp;export=download\">RISC-V ISA manual</a> for details). The correctly-sized <code>fmv</code> instructions do this automatically, but when using a 32-bit <code>fmv</code> for a 16-bit float the NaN-boxing has to be done manually.</p>\n</blockquote>",
        "id": 513979089,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745450047
    },
    {
        "content": "<p>beetrees updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652\">PR #10652</a>.</p>",
        "id": 513979199,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745450142
    },
    {
        "content": "<p>beetrees submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#pullrequestreview-2788905195\">PR review</a>.</p>",
        "id": 513979835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745450581
    },
    {
        "content": "<p>beetrees created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#discussion_r2057023514\">PR review comment</a>:</p>\n<blockquote>\n<p>This was a leftover from when <code>bitcast-f16-f128.clif</code> was split into <code>f16-bitcast.clif</code> and <code>f128-bitcast.clif</code> in #9135. The <code>aarch64</code> directives were just moved to <code>f128-bitcast.clif</code>, with <code>f16-bitcast.clif</code> only being tested on x86_64 and riscv64. This PR adds <code>aarch64</code> (both with and without <code>has_fp16</code>) to <code>f16-bitcast.clif</code> and removes the <code>has_fp16</code> case from <code>f128-bitcast.clif</code> as <code>has_fp16</code> is only relevant to testing <code>f16</code>, not <code>f128</code>.</p>\n</blockquote>",
        "id": 513979837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745450581
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#pullrequestreview-2790403232\">PR review</a>.</p>",
        "id": 514065769,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745486819
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#discussion_r2057954084\">PR review comment</a>:</p>\n<blockquote>\n<p>Does this rule only applies when 16bit float instructions are not supported? If so I think we could get away with only NaN-boxing on the ABI boundary and within the function leaving the high bits undefined. I don't know if that will be faster though.</p>\n</blockquote>",
        "id": 514065771,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745486819
    },
    {
        "content": "<p>beetrees submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#pullrequestreview-2791063524\">PR review</a>.</p>",
        "id": 514117889,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745499308
    },
    {
        "content": "<p>beetrees created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#discussion_r2058363160\">PR review comment</a>:</p>\n<blockquote>\n<p>When the <code>Zfhmin</code> extension is not enabled (which is the only case where NaN-boxing is done manually), the only place NaN-boxing is required is at the ABI boundary. However, I doubt it would be beneficial to move NaN-boxing from bitcasts to the ABI boundary as I expect that most uses of <code>f16</code> are going to be calls to other functions (such as <code>__extendhfsf2</code> from <code>compiler_builtins</code>). It would be faster to NaN-box the value at most once (the value will already be NaN-boxed if it is an argument to the function or return value from another function) rather than every time it is used.</p>\n</blockquote>",
        "id": 514117892,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745499309
    },
    {
        "content": "<p>beetrees edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#discussion_r2058363160\">PR review comment</a>.</p>",
        "id": 514118015,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745499339
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#pullrequestreview-2791857245\">PR review</a>.</p>",
        "id": 514173659,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745512735
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#discussion_r2058847086\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, right, of course -- saw the seemingly unrelated change but that cleanup makes sense, thanks.</p>\n</blockquote>",
        "id": 514173660,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745512735
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652#pullrequestreview-2791859918\">PR review</a>:</p>\n<blockquote>\n<p>Thanks, LGTM!</p>\n</blockquote>",
        "id": 514173898,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745512807
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10652\">PR #10652</a>.</p>",
        "id": 514178338,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745514111
    }
]