[
    {
        "content": "<p>rvolosatovs opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10586\">PR #10586</a> from <code>rvolosatovs:doc/pollable-fixup</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p><a href=\"https://docs.rs/wasmtime-wasi/31.0.0/wasmtime_wasi/trait.Pollable.html#example\">Usage example for <code>wasmtime_wasi::Pollable</code></a> is displayed as:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Instant</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">tokio</span><span class=\"p\">::</span><span class=\"n\">time</span><span class=\"p\">::{</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Duration</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Instant</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi_io</span><span class=\"p\">::{</span><span class=\"n\">IoView</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">poll</span><span class=\"p\">::{</span><span class=\"n\">Pollable</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">subscribe</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DynPollable</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"n\">async_trait</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">Resource</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"p\">;</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">sleep</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"k\">dyn</span><span class=\"w\"> </span><span class=\"n\">IoView</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dur</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Duration</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">Resource</span><span class=\"o\">&lt;</span><span class=\"n\">DynPollable</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instant</span><span class=\"p\">::</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">dur</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">sleep</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">MySleep</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"w\"> </span><span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">sleep_resource</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">cx</span><span class=\"p\">.</span><span class=\"n\">table</span><span class=\"p\">().</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">sleep</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">.</span><span class=\"n\">table</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">sleep_resource</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">MySleep</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Instant</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"cp\">#[async_trait]</span>\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Pollable</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MySleep</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">ready</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">tokio</span><span class=\"p\">::</span><span class=\"n\">time</span><span class=\"p\">::</span><span class=\"n\">sleep_until</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">end</span><span class=\"p\">).</span><span class=\"k\">await</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>which would not compile, if it were duplicated.</p>\n<p>Note, that the doctests do not catch this issue, since the Rust code <em>in the source</em> is valid, however the displayed one is not due to <code>#</code> only hiding part of the implementation</p>\n</blockquote>",
        "id": 512349055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744730255
    },
    {
        "content": "<p><strong>rvolosatovs</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10586\">PR #10586</a>.</p>",
        "id": 512349071,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744730256
    },
    {
        "content": "<p><strong>rvolosatovs</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10586\">PR #10586</a>.</p>",
        "id": 512349073,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744730256
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10586\">PR #10586</a>:</p>\n<blockquote>\n<p><a href=\"https://docs.rs/wasmtime-wasi/31.0.0/wasmtime_wasi/trait.Pollable.html#example\">Usage example for <code>wasmtime_wasi::Pollable</code> in v31.0.0</a> is displayed as:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Instant</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">tokio</span><span class=\"p\">::</span><span class=\"n\">time</span><span class=\"p\">::{</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Duration</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Instant</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi_io</span><span class=\"p\">::{</span><span class=\"n\">IoView</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">poll</span><span class=\"p\">::{</span><span class=\"n\">Pollable</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">subscribe</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DynPollable</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"n\">async_trait</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">Resource</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"p\">;</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">sleep</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"k\">dyn</span><span class=\"w\"> </span><span class=\"n\">IoView</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dur</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Duration</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">Resource</span><span class=\"o\">&lt;</span><span class=\"n\">DynPollable</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instant</span><span class=\"p\">::</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">dur</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">sleep</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">MySleep</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"w\"> </span><span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">sleep_resource</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">cx</span><span class=\"p\">.</span><span class=\"n\">table</span><span class=\"p\">().</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">sleep</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">.</span><span class=\"n\">table</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">sleep_resource</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">MySleep</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Instant</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"cp\">#[async_trait]</span>\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Pollable</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MySleep</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">ready</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">tokio</span><span class=\"p\">::</span><span class=\"n\">time</span><span class=\"p\">::</span><span class=\"n\">sleep_until</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">end</span><span class=\"p\">).</span><span class=\"k\">await</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>which would not compile, if it were duplicated.</p>\n<p>Note, that the doctests do not catch this issue, since the Rust code <em>in the source</em> is valid, however the displayed one is not due to <code>#</code> only hiding part of the implementation</p>\n</blockquote>",
        "id": 512349147,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744730274
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10586#pullrequestreview-2768842288\">PR review</a>.</p>",
        "id": 512349522,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744730357
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10586\">PR #10586</a>.</p>",
        "id": 512349549,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744730363
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10586\">PR #10586</a>.</p>",
        "id": 512357924,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744732486
    }
]