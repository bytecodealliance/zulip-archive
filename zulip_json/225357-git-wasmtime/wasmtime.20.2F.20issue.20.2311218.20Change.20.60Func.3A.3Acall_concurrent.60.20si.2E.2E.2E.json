[
    {
        "content": "<p>dicej opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11218\">issue #11218</a>:</p>\n<blockquote>\n<p>Per <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11127#discussion_r2190330180\">https://github.com/bytecodealliance/wasmtime/pull/11127#discussion_r2190330180</a>, Alex would like to see the signature of <code>Func::call_concurrent</code> changed to accept <code>.., params: &amp;[Val], results: &amp;mut [Val]</code> parameters and return an <code>impl Future&lt;Output = Result&lt;()&gt;&gt;</code> rather than the <code>.., params: Vec&lt;Val&gt;</code> and <code>impl Future&lt;Output = Result&lt;Vec&lt;Val&gt;&gt;&gt;</code> in the current signature.</p>\n<p>I tried implementing this, but it proved difficult to use e.g. in the scenario where the embedder starts concurrent calls in a loop, adds them to a <code>FuturesUnordered</code> and then collects the results.  Specifically, it was difficult to create <code>Future</code>s which closed over the <code>results</code> without closing over the store as well.  I may have been missing something, though, so we should revisit this.</p>\n</blockquote>",
        "id": 528352982,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752244492
    },
    {
        "content": "<p><a href=\"https://github.com/dicej\">dicej</a> added the wasm-proposal:component-model-async label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11218\">Issue #11218</a>.</p>",
        "id": 528352983,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752244493
    },
    {
        "content": "<p>alexcrichton assigned alexcrichton to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11218\">issue #11218</a>.</p>",
        "id": 528707459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752513449
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11218\">issue #11218</a>:</p>\n<blockquote>\n<p>Per <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11127#discussion_r2190330180\">https://github.com/bytecodealliance/wasmtime/pull/11127#discussion_r2190330180</a>, Alex would like to see the signature of <code>Func::call_concurrent</code> changed to accept <code>.., params: &amp;[Val], results: &amp;mut [Val]</code> parameters and return an <code>impl Future&lt;Output = Result&lt;()&gt;&gt;</code> rather than the <code>.., params: Vec&lt;Val&gt;</code> and <code>impl Future&lt;Output = Result&lt;Vec&lt;Val&gt;&gt;&gt;</code> in the current signature.</p>\n<p>I tried implementing this, but it proved difficult to use e.g. in the scenario where the embedder starts concurrent calls in a loop, adds them to a <code>FuturesUnordered</code> and then collects the results.  Specifically, it was difficult to create <code>Future</code>s which closed over the <code>results</code> without closing over the store as well.  I may have been missing something, though, so we should revisit this.</p>\n</blockquote>",
        "id": 529346599,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752782064
    }
]