[
    {
        "content": "<p>jsturtevant opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11450\">issue #11450</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<h3>Steps to Reproduce</h3>\n<p>Write a library that compiles your component with the following features from wasmtime:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s\">\"34\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"o\">-</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"cranelift\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"runtime\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"component-model\"</span><span class=\"w\"> </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">fs</span><span class=\"p\">::</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">infile</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">serialized</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">args</span><span class=\"p\">.</span><span class=\"n\">get_flag</span><span class=\"p\">(</span><span class=\"s\">\"component\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">engine</span><span class=\"p\">.</span><span class=\"n\">precompile_component</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">bytes</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">()</span>\n<span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">engine</span><span class=\"p\">.</span><span class=\"n\">precompile_module</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">bytes</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">()</span>\n<span class=\"w\">  </span><span class=\"p\">};</span>\n</code></pre></div>\n<p>Then try and run it in in wasmtime, turning off GC in the host, it fails to run:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"w\"> </span><span class=\"n\">gc</span><span class=\"o\">=</span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"o\">-</span><span class=\"n\">gc</span><span class=\"o\">=</span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">none</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">allow</span><span class=\"o\">-</span><span class=\"n\">precompiled</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">echo</span><span class=\"p\">(</span><span class=\"s\">\"hi\"</span><span class=\"p\">)</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">jstur</span><span class=\"o\">/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">hyperlight</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"o\">/</span><span class=\"n\">x64</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">runcomponent</span><span class=\"p\">.</span><span class=\"n\">aot</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">module</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">compiled</span><span class=\"w\"> </span><span class=\"n\">without</span><span class=\"w\"> </span><span class=\"n\">GC</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">GC</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">enabled</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">host</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>I would expect that I can turn the features off and run them.</p>\n<h3>Actual Results</h3>\n<p>error <code>module was compiled without GC but GC is enabled in the host</code></p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: any released version</p>\n<p>Operating system: TODO</p>\n<p>Architecture: TODO</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?</p>\n<p>I tracked it down to this being always on via build flag even though <code>-W gc=no -W component-model-gc=no</code> settings are turned off and causing a failure later on in processing.</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/759ccdfaee65f8c470ccc5b8b63506a1af5cd32d/crates/wasmtime/src/config.rs#L2162C1-L2163C1\">https://github.com/bytecodealliance/wasmtime/blob/759ccdfaee65f8c470ccc5b8b63506a1af5cd32d/crates/wasmtime/src/config.rs#L2162C1-L2163C1</a></p>\n<p>I moved this logic to use the gc flag and things worked.  Then I found <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10455#discussion_r2008287118\">https://github.com/bytecodealliance/wasmtime/pull/10455#discussion_r2008287118</a> and wasn't sure what the correct solution is here.</p>\n</blockquote>",
        "id": 534999790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755540888
    },
    {
        "content": "<p><a href=\"https://github.com/jsturtevant\">jsturtevant</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11450\">Issue #11450</a>.</p>",
        "id": 534999792,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755540888
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11450#issuecomment-3202074432\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11450\">issue #11450</a>:</p>\n<blockquote>\n<p>Thanks for the report! I've put up <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11463\">https://github.com/bytecodealliance/wasmtime/pull/11463</a> to propose addressing this which would make it easier to match features in this case.</p>\n</blockquote>",
        "id": 535196470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755634243
    },
    {
        "content": "<p>fitzgen closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11450\">issue #11450</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<h3>Steps to Reproduce</h3>\n<p>Write a library that compiles your component with the following features from wasmtime:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s\">\"34\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"o\">-</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"cranelift\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"runtime\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"component-model\"</span><span class=\"w\"> </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">fs</span><span class=\"p\">::</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">infile</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">serialized</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">args</span><span class=\"p\">.</span><span class=\"n\">get_flag</span><span class=\"p\">(</span><span class=\"s\">\"component\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">engine</span><span class=\"p\">.</span><span class=\"n\">precompile_component</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">bytes</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">()</span>\n<span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">engine</span><span class=\"p\">.</span><span class=\"n\">precompile_module</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">bytes</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">()</span>\n<span class=\"w\">  </span><span class=\"p\">};</span>\n</code></pre></div>\n<p>Then try and run it in in wasmtime, turning off GC in the host, it fails to run:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"w\"> </span><span class=\"n\">gc</span><span class=\"o\">=</span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"o\">-</span><span class=\"n\">gc</span><span class=\"o\">=</span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">none</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">allow</span><span class=\"o\">-</span><span class=\"n\">precompiled</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">echo</span><span class=\"p\">(</span><span class=\"s\">\"hi\"</span><span class=\"p\">)</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">jstur</span><span class=\"o\">/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">hyperlight</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"o\">/</span><span class=\"n\">x64</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">runcomponent</span><span class=\"p\">.</span><span class=\"n\">aot</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">module</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">compiled</span><span class=\"w\"> </span><span class=\"n\">without</span><span class=\"w\"> </span><span class=\"n\">GC</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">GC</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">enabled</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">host</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>I would expect that I can turn the features off and run them.</p>\n<h3>Actual Results</h3>\n<p>error <code>module was compiled without GC but GC is enabled in the host</code></p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: any released version</p>\n<p>Operating system: TODO</p>\n<p>Architecture: TODO</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?</p>\n<p>I tracked it down to this being always on via build flag even though <code>-W gc=no -W component-model-gc=no</code> settings are turned off and causing a failure later on in processing.</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/759ccdfaee65f8c470ccc5b8b63506a1af5cd32d/crates/wasmtime/src/config.rs#L2162C1-L2163C1\">https://github.com/bytecodealliance/wasmtime/blob/759ccdfaee65f8c470ccc5b8b63506a1af5cd32d/crates/wasmtime/src/config.rs#L2162C1-L2163C1</a></p>\n<p>I moved this logic to use the gc flag and things worked.  Then I found <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10455#discussion_r2008287118\">https://github.com/bytecodealliance/wasmtime/pull/10455#discussion_r2008287118</a> and wasn't sure what the correct solution is here.</p>\n</blockquote>",
        "id": 535203751,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755637730
    }
]