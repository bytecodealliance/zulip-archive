[
    {
        "content": "<p>benbrandt opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a> from <code>benbrandt:expose-cache-config</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Addresses issue #10638</p>\n<p>Since creating a <code>CacheConfig</code> also creates the worker thread, I opted for a Builder pattern, so that this worker thread, validation, and default values could be created in the <code>build</code> method, much like what happens when deserializing from a file.</p>\n<p>If there is a preferred alternate approach though, let me know.</p>\n<p>One thing that came to mind is that we may make it easier to create these worker threads, because it is easier to construct the <code>CacheConfig</code>, but since these threads get cleaned up once the <code>CacheConfig</code> is dropped, maybe this is not an issue?</p>\n<p>I'm also not sure if there is any danger in having multiple <code>CacheConfig</code>s pointing to the same directory in terms of the worker threads. But this issue could have existed with multiple <code>Config</code> with the same default config, so I assume this is not a huge issue.</p>\n<p>If there are any changes needed, let me know, especially around coding guidelines or best testing practices.</p>\n<p>Thanks!<br>\n&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 514065902,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745486836
    },
    {
        "content": "<p><strong>benbrandt</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 514065908,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745486836
    },
    {
        "content": "<p><strong>benbrandt</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 514065910,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745486836
    },
    {
        "content": "<p>benbrandt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 514066935,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745486973
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665#issuecomment-2827173299\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 514085403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745491636
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665#pullrequestreview-2792552450\">PR review</a>:</p>\n<blockquote>\n<p>Thanks again for this! FWIW the caching system hasn't really been substantially touched since its inception in 2019 so while reading over this I've noticed some other things that I think might be worth implementing, but I also don't want to hitch you with unnecessary work you don't have time to do. In that sense I'd like to see if you're interested in some of these adjacent cleanups perhaps? If not no worries we can go ahead and land this and I can work on some cleanups later.</p>\n<ul>\n<li>All <code>Config::cache_*</code> methods I think can now be deleted in favor of your new <code>cache_config</code> method  with a minor adjustment to take <code>Option&lt;CacheConfig&gt;</code> where <code>None</code> means \"disable\". We could then delegate file parsing and \"load default\" to methods on <code>CacheConfig</code> which are already there as <code>CacheConfig::from_file</code></li>\n<li>For the worker I think ideally creating a <code>Config</code> wouldn't actually spawn anything. Instead I think it would be best to defer that to <code>Engine</code>-creation time. For example we'd have some code in the engine creation where it'd call <code>config.cache_config.spawn()</code> or similar.</li>\n<li>To mirror configuration in Wasmtime we could perhaps rename <code>wasmtime_cache::CacheConfig</code> to <code>Cache</code> and then rename <code>wasmtime_cache::CacheConfigBuilder</code> to <code>CacheConfig</code>. Basically centralizing on \"Thing\" is the actual thing that was made where \"ThingConfig\" is configuration to produce the Thing. That means the new method could perhaps be <code>Config::cache(&amp;mut self, cache: Option&lt;Cache&gt;)</code>.</li>\n</ul>\n<p>Would you be up for those changes as well? I've got a few comments on this change in particular below too as well, and again I'm happy to defer the above improvements for later if you'd prefer to not take that on.</p>\n</blockquote>",
        "id": 514231607,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745530018
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665#discussion_r2059258741\">PR review comment</a>:</p>\n<blockquote>\n<p>While we don't have hard-and-fast conventions in Wasmtime I at least personally prefer builders to take <code>&amp;mut self</code> and return <code>&amp;mut Self</code> (like <code>Config</code> methods). Would you be up to changing to that pattern?</p>\n</blockquote>",
        "id": 514231608,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745530018
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665#discussion_r2059257172\">PR review comment</a>:</p>\n<blockquote>\n<p>Mind adding some docs to this method since it'll be public-facing in the <code>wasmtime</code> crate API?</p>\n</blockquote>",
        "id": 514231609,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745530018
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665#discussion_r2059259410\">PR review comment</a>:</p>\n<blockquote>\n<p>Mind adding some documentation here? I'm thinking specifically about some error cases for example.</p>\n<p>Additionally if you're ok with the <code>&amp;mut self</code> suggestion above, this would change to either <code>&amp;self</code> (ideally) or <code>&amp;mut self</code> if necessary.</p>\n</blockquote>",
        "id": 514231611,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745530018
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665#discussion_r2059257979\">PR review comment</a>:</p>\n<blockquote>\n<p>If you're ok I'd prefer to leave this not exposed, it's a bit weird to me to go through the rigamarole of creating a config just to say it's disabled. In that sense I think we should consider <code>CacheConfigBuilder</code> as \"always create something with the <code>enabled</code> flag set to <code>true</code>\".</p>\n</blockquote>",
        "id": 514231612,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745530018
    },
    {
        "content": "<p>benbrandt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665#issuecomment-2828905571\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>:</p>\n<blockquote>\n<p>@alexcrichton thanks for the thorough review! <br>\nI think all of these changes definitely make sense, and also address some weirdness I felt in implementing this. I can give the changes a try and see how far I get!</p>\n</blockquote>",
        "id": 514232016,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745530217
    },
    {
        "content": "<p>benbrandt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 514460906,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745614453
    },
    {
        "content": "<p>benbrandt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665#pullrequestreview-2795260735\">PR review</a>.</p>",
        "id": 514460975,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745614498
    },
    {
        "content": "<p>benbrandt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665#discussion_r2060872611\">PR review comment</a>:</p>\n<blockquote>\n<p>Agreed this indeed felt weird as well, I think we can go with an option on the main config and handle it that way</p>\n</blockquote>",
        "id": 514460976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745614498
    },
    {
        "content": "<p>benbrandt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665#pullrequestreview-2795261663\">PR review</a>.</p>",
        "id": 514461034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745614536
    },
    {
        "content": "<p>benbrandt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665#discussion_r2060873194\">PR review comment</a>:</p>\n<blockquote>\n<p>I had a feeling this one might come up, and I figured it was a 50/50 chance I got it right :) <br>\nNot a problem</p>\n</blockquote>",
        "id": 514461035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745614536
    },
    {
        "content": "<p>benbrandt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 514462453,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745615227
    },
    {
        "content": "<p>benbrandt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 514652205,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745764799
    },
    {
        "content": "<p>benbrandt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 514658239,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745769146
    },
    {
        "content": "<p>benbrandt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 514673815,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745780397
    },
    {
        "content": "<p>benbrandt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 514759596,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745831138
    },
    {
        "content": "<p>benbrandt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 514769336,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745833716
    },
    {
        "content": "<p>benbrandt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 514800791,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745843286
    },
    {
        "content": "<p>benbrandt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 515031694,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745924765
    },
    {
        "content": "<p>benbrandt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 515035912,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745926060
    },
    {
        "content": "<p>benbrandt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 515037434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745926492
    },
    {
        "content": "<p>benbrandt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 515042363,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745927928
    },
    {
        "content": "<p>benbrandt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 515043518,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745928215
    },
    {
        "content": "<p>benbrandt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 515044623,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745928502
    },
    {
        "content": "<p><strong>benbrandt</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a> as ready for review.</p>",
        "id": 515044662,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745928515
    },
    {
        "content": "<p><strong>benbrandt</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 515044668,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745928517
    },
    {
        "content": "<p><strong>benbrandt</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 515044669,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745928517
    },
    {
        "content": "<p>benbrandt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 515045175,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745928660
    },
    {
        "content": "<p>benbrandt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665#issuecomment-2838587615\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>:</p>\n<blockquote>\n<p>@alexcrichton Ok I think it is ready for review again. I also think this is all a lot, lot nicer than before, as well as being more flexible.</p>\n<p>Notes of breaking changes:</p>\n<ul>\n<li>Previous cache methods on <code>Config</code> have been removed in favor of a single <code>cache</code> method that can be set to <code>None</code> to disable it, or passed a constructed <code>Cache</code>, either from a file or manually configured</li>\n<li>I removed <code>enabled</code> from <code>CacheConfig</code> (more controversial)</li>\n</ul>\n<p>The latter felt kind of weird to leave as an option, since now there is either a <code>Cache</code> or there is not, and it simplified things to not have to worry if it was enabled or not.</p>\n<p>However, because of <code>#[serde(deny_unknown_fields)]</code>, this will cause existing config files to not work.</p>\n<p>If we want to support this old behavior, I am fine with doing so. Users who embed wasmtime will need to update their code regardless, so this might be acceptable. <br>\nHowever, CLI users would have to fix this themselves.</p>\n</blockquote>",
        "id": 515046034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745928935
    },
    {
        "content": "<p>benbrandt edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665#issuecomment-2838587615\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>:</p>\n<blockquote>\n<p>@alexcrichton Ok I think it is ready for review again. I also think this is all a lot, lot nicer than before, as well as being more flexible.</p>\n<p>Notes of breaking changes:</p>\n<ul>\n<li>Previous cache methods on <code>Config</code> have been removed in favor of a single <code>cache</code> method that can be set to <code>None</code> to disable it, or passed a constructed <code>Cache</code>, either from a file or manually configured</li>\n<li>I removed <code>enabled</code> from <code>CacheConfig</code> (more controversial)</li>\n</ul>\n<p>Other notable changes:</p>\n<ul>\n<li>Introduced a separate <code>Cache</code> struct to better separate the config from the actual thing holding the worker</li>\n<li>Moved default behavior to serialization time to also remove the awkward workarounds for assuming struct fields are set and not <code>None</code> after a certain stage</li>\n</ul>\n<p>The enabled flag felt kind of weird to leave as an option, since now there is either a <code>Cache</code> or there is not, and it simplified things to not have to worry if it was enabled or not.</p>\n<p>However, because of <code>#[serde(deny_unknown_fields)]</code>, this will cause existing config files to not work.</p>\n<p>If we want to support this old behavior, I am fine with doing so. Users who embed wasmtime will need to update their code regardless, so this might be acceptable. <br>\nHowever, CLI users would have to fix this themselves.</p>\n<p>Happy to address any and all feedback, I went in circles a bit trying out different things here, so there is likely room for improvement!</p>\n</blockquote>",
        "id": 515046862,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745929180
    },
    {
        "content": "<p>benbrandt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 515047912,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745929474
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665#pullrequestreview-2803990039\">PR review</a>:</p>\n<blockquote>\n<p>Thanks again for your work on this! All the changes here look reasonable to me, and thinking about it I think it's reasonable to leave <code>deny_unknown_fields</code> and drop <code>enabled = true</code> as well. That's a pretty old setting which predated the current CLI flags and configuration system, so I think it's reasonable to take this time to bring it forward to the current era.</p>\n</blockquote>",
        "id": 515085322,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745938217
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>.</p>",
        "id": 515093005,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745939524
    },
    {
        "content": "<p>dev-null-undefined <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665#issuecomment-2918669370\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>:</p>\n<blockquote>\n<p>The documentation seems outdated <a href=\"https://github.com/bytecodealliance/wasmtime/blob/0fabedfece020cab90124768c3dc94b8d95ca4ab/docs/cli-cache.md#setting-enabled\">https://github.com/bytecodealliance/wasmtime/blob/0fabedfece020cab90124768c3dc94b8d95ca4ab/docs/cli-cache.md#setting-enabled</a></p>\n</blockquote>",
        "id": 521044031,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748506604
    },
    {
        "content": "<p>benbrandt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665#issuecomment-2919556668\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10665\">PR #10665</a>:</p>\n<blockquote>\n<p>@dev-null-undefined good catch! Made a follow up PR here: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10859\">https://github.com/bytecodealliance/wasmtime/pull/10859</a></p>\n</blockquote>",
        "id": 521104127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748528334
    }
]