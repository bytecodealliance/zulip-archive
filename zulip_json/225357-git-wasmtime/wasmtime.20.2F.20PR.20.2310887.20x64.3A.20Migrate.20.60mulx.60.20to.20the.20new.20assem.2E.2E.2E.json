[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887\">PR #10887</a> from <code>alexcrichton:x64-mulx</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This is an interesting instruction as it has a relatively unique shape compared to many others. The VEX encoding is used to give it a 3-operand form, although it still has an implicit 4th operand as well. The other unique part about this instruction is that if the two write-only operands are the same then that has a different semantic meaning than if they are different.</p>\n<p>Modeling the two-output form of the instruction was pretty easy, the only changes needed were to add the <code>r32a</code> and <code>r32b</code> locations as previously only <code>r32</code> was available. Modeling the one-output form of the instruction led to a \"hook\" where these instructions specify that they use a custom regalloc function. That skips the auto-generated regalloc entirely and defers to a new <code>custom</code> submodule in the assembler crate. These custom variants handle only having a single write operand on the instruction.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 521465469,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748715867
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887\">PR #10887</a>.</p>",
        "id": 521465470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748715867
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887\">PR #10887</a>.</p>",
        "id": 521465471,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748715867
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887\">PR #10887</a>.</p>",
        "id": 521465484,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748715881
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887\">PR #10887</a>.</p>",
        "id": 521465961,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748716287
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887#issuecomment-2925659575\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887\">PR #10887</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:x64\", \"cranelift:meta\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 521470872,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748720684
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887#pullrequestreview-2889381006\">PR review</a>.</p>",
        "id": 521807204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748886132
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887#discussion_r2121791367\">PR review comment</a>:</p>\n<blockquote>\n<p>I guess there's no way to pass the same temporary register in... I wonder if eventually we need to allow even more fine-grained control from ISLE &mdash; a few new <code>gen_asm.rs</code> rules?</p>\n</blockquote>",
        "id": 521807207,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748886132
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887#discussion_r2121785272\">PR review comment</a>:</p>\n<blockquote>\n<p>I really like this <code>custom*</code> idea: I'd been mulling over how to do custom encodings for <code>nop</code> and custom printing for comparisons and felt we needed an escape hatch for very special instructions. And I like that we just expect <code>custom::visit_{inst}</code> to be present, which should be pretty clear in compile errors.</p>\n<p>I don't know if you were thinking this way, but maybe in the future we can go to <code>.custom(Visit | Encode | Display)</code> which would result in an appropriate call to <code>custom::visit::{inst}</code>, <code>custom::encode::{inst}</code>, and <code>custom::display::{inst}</code>. Thoughts?</p>\n</blockquote>",
        "id": 521807210,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748886132
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887#pullrequestreview-2889409868\">PR review</a>.</p>",
        "id": 521808492,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748886558
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887#discussion_r2121804331\">PR review comment</a>:</p>\n<blockquote>\n<p>I think that's reasonable yeah!</p>\n</blockquote>",
        "id": 521808494,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748886558
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887#pullrequestreview-2889411620\">PR review</a>.</p>",
        "id": 521808681,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748886608
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887#discussion_r2121805482\">PR review comment</a>:</p>\n<blockquote>\n<p>I was wondering the same yeah, but I figured that if it's just mulx then there's no need to go to such lengths, so I figured I'd leave it as-is for now. If the number of instructions needing this grows though I can see how making new ISLE helpers would be reasonable</p>\n</blockquote>",
        "id": 521808682,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748886608
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887\">PR #10887</a>.</p>",
        "id": 521811204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748887393
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887\">PR #10887</a>.</p>",
        "id": 521811236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748887404
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887\">PR #10887</a>.</p>",
        "id": 521838752,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748896645
    }
]