[
    {
        "content": "<p><a href=\"https://github.com/f52985\">f52985</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10353\">Issue #10353</a>.</p>",
        "id": 504074387,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741347783
    },
    {
        "content": "<p>f52985 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10353\">issue #10353</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"c1\">;; sample.wast</span>\n<span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"p\">(</span><span class=\"k\">table</span> <span class=\"nv\">$t</span> <span class=\"mi\">10</span> <span class=\"p\">(</span><span class=\"err\">ref</span> <span class=\"err\">null</span> <span class=\"err\">none</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"f\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"p\">(</span><span class=\"err\">ref</span> <span class=\"err\">null</span> <span class=\"err\">none</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mi\">99</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"err\">table.get</span> <span class=\"nv\">$t</span><span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"err\">assert_trap</span> <span class=\"p\">(</span><span class=\"err\">invoke</span> <span class=\"s2\">\"f\"</span><span class=\"p\">)</span> <span class=\"s2\">\"out of bounds table access\"</span><span class=\"p\">)</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Run the above <code>sample.wast</code> test using the following command:<br>\n<code>wasmtime wast -W gc=y sample.wast</code></p>\n<h3>Expected Results</h3>\n<p>Trap happens as expected, and <code>assert_trap</code> test is passed.</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">script</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">sample</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"o\">'</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">directive</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">sample</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"p\">:</span><span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">got</span><span class=\"w\"> </span><span class=\"n\">Core</span><span class=\"p\">([</span><span class=\"n\">AnyRef</span><span class=\"p\">(</span><span class=\"nb\">None</span><span class=\"p\">)])</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 30.0.2 (398694a59 2025-02-25)</p>\n<p>Operating system: Ubuntu 20.04.6 LTS (also confirmed on MacOS)</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>The bug is not triggered for different type of references, other than <code>none</code> type.</p>\n</blockquote>",
        "id": 504074391,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741347784
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10353#issuecomment-2706780000\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10353\">issue #10353</a>:</p>\n<blockquote>\n<p>I can echo my own thoughts over from <a href=\"https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-xjjh-q65v-wjhh\">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-xjjh-q65v-wjhh</a> here to: both thank you for filing this and thank you for filing a private issue first!</p>\n<p>@fitzgen you're probably interested in this. I don't believe this one's fixed on <code>main</code> yet. Do you want to dig into this first before we migrate this to a normal issue?</p>\n</blockquote>",
        "id": 504126061,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741362411
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10353#issuecomment-2706799010\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10353\">issue #10353</a>:</p>\n<blockquote>\n<p>(this issue is public, the advisory is not)</p>\n</blockquote>",
        "id": 504126983,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741362639
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10353#issuecomment-2706812534\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10353\">issue #10353</a>:</p>\n<blockquote>\n<p>Oop nevermind, carry on then. (and still many thanks @f52985!)</p>\n</blockquote>",
        "id": 504127474,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741362787
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasm-proposal:gc label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10353\">Issue #10353</a>.</p>",
        "id": 504127487,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741362792
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10353#issuecomment-2715372948\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10353\">issue #10353</a>:</p>\n<blockquote>\n<p>Fix over in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10372\">https://github.com/bytecodealliance/wasmtime/pull/10372</a></p>\n<p>Thanks for filing this issue @f52985! Out of curiosity, how have you been finding these bugs and generating these test cases? Are you doing some sort of fuzzing?</p>\n</blockquote>",
        "id": 504924077,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741718371
    },
    {
        "content": "<p>fitzgen closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10353\">issue #10353</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"c1\">;; sample.wast</span>\n<span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"p\">(</span><span class=\"k\">table</span> <span class=\"nv\">$t</span> <span class=\"mi\">10</span> <span class=\"p\">(</span><span class=\"err\">ref</span> <span class=\"err\">null</span> <span class=\"err\">none</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"f\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"p\">(</span><span class=\"err\">ref</span> <span class=\"err\">null</span> <span class=\"err\">none</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mi\">99</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"err\">table.get</span> <span class=\"nv\">$t</span><span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"err\">assert_trap</span> <span class=\"p\">(</span><span class=\"err\">invoke</span> <span class=\"s2\">\"f\"</span><span class=\"p\">)</span> <span class=\"s2\">\"out of bounds table access\"</span><span class=\"p\">)</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Run the above <code>sample.wast</code> test using the following command:<br>\n<code>wasmtime wast -W gc=y sample.wast</code></p>\n<h3>Expected Results</h3>\n<p>Trap happens as expected, and <code>assert_trap</code> test is passed.</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">script</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">sample</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"o\">'</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">directive</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">sample</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"p\">:</span><span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">got</span><span class=\"w\"> </span><span class=\"n\">Core</span><span class=\"p\">([</span><span class=\"n\">AnyRef</span><span class=\"p\">(</span><span class=\"nb\">None</span><span class=\"p\">)])</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 30.0.2 (398694a59 2025-02-25)</p>\n<p>Operating system: Ubuntu 20.04.6 LTS (also confirmed on MacOS)</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>The bug is not triggered for different type of references, other than <code>none</code> type.</p>\n</blockquote>",
        "id": 504947747,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741724723
    },
    {
        "content": "<p>f52985 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10353#issuecomment-2716514944\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10353\">issue #10353</a>:</p>\n<blockquote>\n<blockquote>\n<p>Out of curiosity, how have you been finding these bugs and generating these test cases? Are you doing some sort of fuzzing?</p>\n</blockquote>\n<p>Yes, we are! We are using <a href=\"https://github.com/Wasm-DSL/spectec\">SpecTec</a>, a mechanized Wasm specfication framework, for fuzzing.<br>\nIt can directly handle the syntax or validation rules from the specification itself,<br>\nwhich greatly helps automate the process of generating syntactically correct or valid test cases,<br>\nand uncover edge cases in the specification.</p>\n</blockquote>",
        "id": 505032584,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741757093
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10353#issuecomment-2718197695\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10353\">issue #10353</a>:</p>\n<blockquote>\n<p>Ah yes! I just emailed you recently, didn't realize this was your github account :)</p>\n<p>Thanks for filing issues for the bugs you've been finding!</p>\n</blockquote>",
        "id": 505160280,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741791824
    }
]