[
    {
        "content": "<p>adambratschikaye opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10639\">issue #10639</a>:</p>\n<blockquote>\n<p>Full paths in generate error messages are preventing us from producing deterministic build artifacts.</p>\n<p>This is similar to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9553\">https://github.com/bytecodealliance/wasmtime/issues/9553</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9580\">https://github.com/bytecodealliance/wasmtime/pull/9580</a>. When generating term constructors <a href=\"https://github.com/bytecodealliance/wasmtime/blob/07dcdbb744e2cd28f92612d831d252d77a7e6316/cranelift/isle/isle/src/codegen.rs#L456\">here</a> certain cases produce an <code>unreachable!</code> call which embeds the source code file path in the error message. When this is applied to the rules for <code>emit_ret_gpr</code>, <code>emit_ret_xmm</code> and <code>defer_side_effect</code> generated <a href=\"https://github.com/bytecodealliance/wasmtime/blob/07dcdbb744e2cd28f92612d831d252d77a7e6316/cranelift/codegen/meta/src/gen_asm.rs#L429\">here</a>, we end up with the full path (including <code>OUT_DIR</code>) of the generated files embedded in the resulting binary which makes builds non-deterministic. </p>\n<p>I'm happy to put up a fix, either by trying to remove the <code>OUT_DIR</code> prefix or only including the path when a certain env variable is present (as suggested in the above PR). Any opinions on which approach is preferred?<br>\n</p>\n</blockquote>",
        "id": 513613740,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745329266
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10639#issuecomment-2821558932\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10639\">issue #10639</a>:</p>\n<blockquote>\n<p>Thanks for the report! I think it'd be reasonable to make binaries deterministic-by-default so removing <code>$OUT_DIR</code> from the paths by default (rather than having it be opt-in). In any case though a PR would be much appreciated, we're happy to review!</p>\n</blockquote>",
        "id": 513628282,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745332768
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10639\">issue #10639</a>:</p>\n<blockquote>\n<p>Full paths in generate error messages are preventing us from producing deterministic build artifacts.</p>\n<p>This is similar to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9553\">https://github.com/bytecodealliance/wasmtime/issues/9553</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9580\">https://github.com/bytecodealliance/wasmtime/pull/9580</a>. When generating term constructors <a href=\"https://github.com/bytecodealliance/wasmtime/blob/07dcdbb744e2cd28f92612d831d252d77a7e6316/cranelift/isle/isle/src/codegen.rs#L456\">here</a> certain cases produce an <code>unreachable!</code> call which embeds the source code file path in the error message. When this is applied to the rules for <code>emit_ret_gpr</code>, <code>emit_ret_xmm</code> and <code>defer_side_effect</code> generated <a href=\"https://github.com/bytecodealliance/wasmtime/blob/07dcdbb744e2cd28f92612d831d252d77a7e6316/cranelift/codegen/meta/src/gen_asm.rs#L429\">here</a>, we end up with the full path (including <code>OUT_DIR</code>) of the generated files embedded in the resulting binary which makes builds non-deterministic. </p>\n<p>I'm happy to put up a fix, either by trying to remove the <code>OUT_DIR</code> prefix or only including the path when a certain env variable is present (as suggested in the above PR). Any opinions on which approach is preferred?<br>\n</p>\n</blockquote>",
        "id": 513895858,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745420545
    }
]