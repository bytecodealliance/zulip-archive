[
    {
        "content": "<p>jsturtevant opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a> from <code>jsturtevant:wasi-tls-initial</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;<br>\nfixes: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10089\">https://github.com/bytecodealliance/wasmtime/issues/10089</a></p>\n<p>This adds a crate that provides the Wasmtime host implementation for the <a href=\"https://github.com/WebAssembly/wasi-tls\">wasi-tls</a> API.<br>\nThe <a href=\"https://github.com/WebAssembly/wasi-tls\">wasi-tls</a> world allows WebAssembly modules to perform SSL/TLS operations,<br>\nsuch as establishing secure connections to servers. </p>\n<p>This initially implements it with rustls which was already included in the repository.</p>\n<p>There are a few items that still need to be resolved but are not specially related to the implementation but wanted to start the review to make sure things moving in the correct direction.</p>\n<ul>\n<li>add a <code>close-notify</code> function to the wasi-tls wit in the proposal to properly close down the </li>\n<li>resolve importing stable types into unstable features (<a href=\"https://github.com/bytecodealliance/wasm-tools/issues/1995\">https://github.com/bytecodealliance/wasm-tools/issues/1995</a>). Write now I have a workaround on a branch that is being used in rust cargo patch.</li>\n</ul>\n<p>Thanks goes out to @badeend  and @dicej as much of this was based on their prior work.  </p>\n</blockquote>",
        "id": 500764342,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740008451
    },
    {
        "content": "<p><strong>jsturtevant</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 500764344,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740008451
    },
    {
        "content": "<p><strong>jsturtevant</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 500764345,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740008451
    },
    {
        "content": "<p><strong>jsturtevant</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 500764346,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740008452
    },
    {
        "content": "<p>jsturtevant edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;<br>\nfixes: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10089\">https://github.com/bytecodealliance/wasmtime/issues/10089</a></p>\n<p>This adds a crate that provides the Wasmtime host implementation for the <a href=\"https://github.com/WebAssembly/wasi-tls\">wasi-tls</a> API.<br>\nThe <a href=\"https://github.com/WebAssembly/wasi-tls\">wasi-tls</a> world allows WebAssembly modules to perform SSL/TLS operations,<br>\nsuch as establishing secure connections to servers. </p>\n<p>This initially implements it with rustls which was already included in the repository.</p>\n<p>There are a few items that still need to be resolved but are not specially related to the implementation but wanted to start the review to make sure things moving in the correct direction.</p>\n<ul>\n<li>add a <code>close-notify</code> function to the wasi-tls wit in the proposal to properly close down the <a href=\"https://github.com/WebAssembly/wasi-tls/pull/5\">https://github.com/WebAssembly/wasi-tls/pull/5</a> </li>\n<li>resolve importing stable types into unstable features (<a href=\"https://github.com/bytecodealliance/wasm-tools/issues/1995\">https://github.com/bytecodealliance/wasm-tools/issues/1995</a>). Write now I have a workaround on a branch that is being used in rust cargo patch.</li>\n</ul>\n<p>Thanks goes out to @badeend  and @dicej as much of this was based on their prior work.  </p>\n</blockquote>",
        "id": 500772019,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740012846
    },
    {
        "content": "<p>badeend <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#issuecomment-2670879920\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>:</p>\n<blockquote>\n<p>Looking great!</p>\n<p>CI fails because Clippy being Clippy, and I suspect the build fails because there's some missing conditional compilation.</p>\n<p>Aside from that, I;ve left behind some remarks:<br>\n</p>\n</blockquote>",
        "id": 500828337,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740042620
    },
    {
        "content": "<p>badeend submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#pullrequestreview-2629062784\">PR review</a>.</p>",
        "id": 500828379,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740042634
    },
    {
        "content": "<p>badeend created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1963123232\">PR review comment</a>:</p>\n<blockquote>\n<p>Looks like left-over test code</p>\n</blockquote>",
        "id": 500828380,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740042634
    },
    {
        "content": "<p>badeend created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1963106552\">PR review comment</a>:</p>\n<blockquote>\n<p>Regarding this <code>impl AsyncWrite for TcpStreams</code> block and the <code>impl AsyncRead for TcpStreams</code> block below: I'm fine with them existing here, but AFAIK these have nothing to do with TLS right? If so, we could move them into the <a href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/wasi-io/src\">wasi-io</a> subcrate at some point.</p>\n</blockquote>",
        "id": 500828381,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740042635
    },
    {
        "content": "<p>badeend created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1963075276\">PR review comment</a>:</p>\n<blockquote>\n<p>Might be nice to rename references to the term \"TCP\" within this file to something more generic. Since this TLS implementation doesn't actually depend on TCP, and the inner streams may come from anywhere.</p>\n</blockquote>",
        "id": 500828382,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740042635
    },
    {
        "content": "<p>badeend created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1963088490\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think this is cancel-safe. If the <code>.await</code> is canceled, the streamState will be left behind in the <code>Closed</code> state forever. Cancellation may happen when waiting for <a href=\"https://github.com/WebAssembly/wasi-io/blob/main/wit/poll.wit#L46\">multiple Pollables</a> at once.</p>\n</blockquote>",
        "id": 500828383,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740042635
    },
    {
        "content": "<p>jsturtevant submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#pullrequestreview-2630641585\">PR review</a>.</p>",
        "id": 500931610,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740071758
    },
    {
        "content": "<p>jsturtevant created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1964040334\">PR review comment</a>:</p>\n<blockquote>\n<p>The reason for this being the wit file directly is <a href=\"https://github.com/bytecodealliance/wasm-tools/issues/1996#issuecomment-2640748051\">https://github.com/bytecodealliance/wasm-tools/issues/1996#issuecomment-2640748051</a></p>\n</blockquote>",
        "id": 500931611,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740071759
    },
    {
        "content": "<p>jsturtevant submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#pullrequestreview-2630643585\">PR review</a>.</p>",
        "id": 500931875,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740071810
    },
    {
        "content": "<p>jsturtevant created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1964041510\">PR review comment</a>:</p>\n<blockquote>\n<p>this branch contains the temp fix for <a href=\"https://github.com/bytecodealliance/wasm-tools/issues/1995\">https://github.com/bytecodealliance/wasm-tools/issues/1995</a></p>\n</blockquote>",
        "id": 500931876,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740071810
    },
    {
        "content": "<p>jsturtevant submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#pullrequestreview-2630680688\">PR review</a>.</p>",
        "id": 500934810,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740072705
    },
    {
        "content": "<p>jsturtevant created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1964063083\">PR review comment</a>:</p>\n<blockquote>\n<p>correct, not specific to TLS it just enables passing wasi-io streams to libraries that require those traits (i.e. in this case the <code>connect()</code> method for rustls)</p>\n</blockquote>",
        "id": 500934812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740072705
    },
    {
        "content": "<p>jsturtevant submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#pullrequestreview-2630701964\">PR review</a>.</p>",
        "id": 500936434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740073265
    },
    {
        "content": "<p>jsturtevant created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1964075830\">PR review comment</a>:</p>\n<blockquote>\n<p>Will take a look, is there an example of how to test that?</p>\n</blockquote>",
        "id": 500936435,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740073266
    },
    {
        "content": "<p>badeend submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#pullrequestreview-2630751228\">PR review</a>.</p>",
        "id": 500940282,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740074556
    },
    {
        "content": "<p>badeend created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1964105631\">PR review comment</a>:</p>\n<blockquote>\n<p>To reproduce, you could try adjusting the timeout of <code>blocking_finish</code> in <code>crates/test-programs/src/tls.rs</code> to something non-0, but very small, so that both pollables are polled at least once, but the monotonic_clock pollable will finish first. After that, I suspect that the ClientHandshake::finish pollable will never resolve.</p>\n</blockquote>",
        "id": 500940285,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740074556
    },
    {
        "content": "<p>jsturtevant updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 500983451,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740091354
    },
    {
        "content": "<p>jsturtevant submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#pullrequestreview-2631339354\">PR review</a>.</p>",
        "id": 500983503,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740091381
    },
    {
        "content": "<p>jsturtevant created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1964449294\">PR review comment</a>:</p>\n<blockquote>\n<p>updated</p>\n</blockquote>",
        "id": 500983504,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740091381
    },
    {
        "content": "<p>jsturtevant submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#pullrequestreview-2631378244\">PR review</a>.</p>",
        "id": 500985683,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740092354
    },
    {
        "content": "<p>jsturtevant created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1964474634\">PR review comment</a>:</p>\n<blockquote>\n<p>you are indeed correct.  </p>\n</blockquote>",
        "id": 500985684,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740092354
    },
    {
        "content": "<p>jsturtevant updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 501001465,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740100583
    },
    {
        "content": "<p>jsturtevant submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#pullrequestreview-2631592353\">PR review</a>.</p>",
        "id": 501001562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740100652
    },
    {
        "content": "<p>jsturtevant created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1964601955\">PR review comment</a>:</p>\n<blockquote>\n<p>I've pushed an update for this, I tested it locally but working getting a test written for this scenario</p>\n</blockquote>",
        "id": 501001563,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740100653
    },
    {
        "content": "<p>jsturtevant edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1964601955\">PR review comment</a>.</p>",
        "id": 501001652,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740100692
    },
    {
        "content": "<p>jsturtevant updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 501187051,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740171999
    },
    {
        "content": "<p>jsturtevant updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 501188483,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740172660
    },
    {
        "content": "<p>jsturtevant submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#pullrequestreview-2634336938\">PR review</a>.</p>",
        "id": 501191962,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740174266
    },
    {
        "content": "<p>jsturtevant created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1966238652\">PR review comment</a>:</p>\n<blockquote>\n<p>added test that covers this in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249/commits/f13938ee922ef11f1893957d77465d46ae442c14\">https://github.com/bytecodealliance/wasmtime/pull/10249/commits/f13938ee922ef11f1893957d77465d46ae442c14</a></p>\n</blockquote>",
        "id": 501191963,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740174267
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#pullrequestreview-2638543243\">PR review</a>:</p>\n<blockquote>\n<p>This looks great to me <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n<p>In terms of testing, would it be possible to also add a test (or multiple) that deal with the server-side as well. Ideally there'd either be a pre-generated cert check-in to the repo that they use or something generated at test-time perhaps per-test. That might help enable removing the dependency on <code>example.com</code> as well which has been flaky in the past, and while it's not the end of the world to have some flakiness it'd be best to insulate ourselves and have all the networking be purely local. Although I realize it's also good to test \"is the system cert store actually used?\" which necessarily requires external communication basially.</p>\n<p>It might also be interesting, if local certs work, to test a variety of configurations related to invalid certificates to ensure that they do indeed all return an error instead of succeeding the authentication and such.</p>\n</blockquote>",
        "id": 501658540,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740434988
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1968477633\">PR review comment</a>:</p>\n<blockquote>\n<p>For this I might recommend adding a commit with <code>prtest:full</code> somewhere in the commit message to ensure that this can get past CI. I vaguely recall that rustls and/or ring and/or something doesn't compile on riscv64/s390x, hence the conditional here. That'll make the integration of <code>wasmtime-wasi-tls</code> into the CLI a bit hairier if so, but probably still workable.</p>\n</blockquote>",
        "id": 501658541,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740434988
    },
    {
        "content": "<p>jsturtevant <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#issuecomment-2682979493\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>:</p>\n<blockquote>\n<blockquote>\n<p>In terms of testing, would it be possible to also add a test (or multiple) that deal with the server-side as well.</p>\n</blockquote>\n<p>Just to clarify, you mean to implement a server similar to what is done on <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasi-http/tests/all/http_server.rs\">wasi-http</a> but with certs?  We are going to need this for more advance scenarios later so works for me.  I'll get started on it here</p>\n</blockquote>",
        "id": 501886815,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740509506
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#issuecomment-2682991289\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>:</p>\n<blockquote>\n<p>That's one route yeah, another being something similar to <a href=\"https://github.com/bytecodealliance/wasmtime/blob/2ad3bea6ae1762eb5491051a425fcb8ff881811e/crates/test-programs/src/bin/preview2_tcp_streams.rs#L134-L157\">what wasi-sockets does</a> where the client/server are both purely in-wasm and doens't require any external integration. The latter is a bit nicer from a \"share this test suite in more places\" perspective as well, but regardless I think either way is fine in the long run</p>\n</blockquote>",
        "id": 501887840,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740509852
    },
    {
        "content": "<p>jsturtevant <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#issuecomment-2683396053\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>:</p>\n<blockquote>\n<p>sounds good. We didn't add the server side parts to the wasi-tls spec yet but it shouldn't be to hard to do a minimal version as well now that the client side is done.  @badeend wdyt?</p>\n</blockquote>",
        "id": 501918138,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740520982
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#issuecomment-2683400135\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>:</p>\n<blockquote>\n<p>Oh I didn't look too closely at the tls bits here but if the server parts aren't implemented yet I don't mean to add more work here, so I think it's totally reasonable to land without that and plan to add more tests later too.</p>\n</blockquote>",
        "id": 501918453,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740521122
    },
    {
        "content": "<p>badeend <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#issuecomment-2685561717\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>:</p>\n<blockquote>\n<p>I'd prefer not to block this PR on the creation of server TLS connections from within a WASI guest. Creating server TLS connections brings along additional design complexity surrounding the handling of certificates &amp; private keys from within a WASI guest.</p>\n<p>If the goal is to reduce CI flakiness, we could also spin up a local TCP/TLS listener socket outside the guest, just before calling the test, and then connect to that from within the guest test.</p>\n</blockquote>",
        "id": 502089098,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740587041
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#issuecomment-2686059075\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>:</p>\n<blockquote>\n<p>I think let's focus on getting this initial set landed in-tree for now (aka landing the wasm-tools fixes and integrating that here). This'll be a bit flaky without a local server but that can be a follow-up item to do after landing.</p>\n</blockquote>",
        "id": 502132800,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740599880
    },
    {
        "content": "<p>jsturtevant edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;<br>\nfixes: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10089\">https://github.com/bytecodealliance/wasmtime/issues/10089</a></p>\n<p>This adds a crate that provides the Wasmtime host implementation for the <a href=\"https://github.com/WebAssembly/wasi-tls\">wasi-tls</a> API.<br>\nThe <a href=\"https://github.com/WebAssembly/wasi-tls\">wasi-tls</a> world allows WebAssembly modules to perform SSL/TLS operations,<br>\nsuch as establishing secure connections to servers. </p>\n<p>This initially implements it with rustls which was already included in the repository.</p>\n<p>There are a few items that still need to be resolved but are not specially related to the implementation but wanted to start the review to make sure things moving in the correct direction.</p>\n<ul>\n<li>[ ] add a <code>close-notify</code> function to the wasi-tls wit in the proposal to properly close down the <a href=\"https://github.com/WebAssembly/wasi-tls/pull/5\">https://github.com/WebAssembly/wasi-tls/pull/5</a> </li>\n<li>[ ] resolve importing stable types into unstable features (<a href=\"https://github.com/bytecodealliance/wasm-tools/issues/1995\">https://github.com/bytecodealliance/wasm-tools/issues/1995</a>). Write now I have a workaround on a branch that is being used in rust cargo patch.</li>\n</ul>\n<p>Thanks goes out to @badeend  and @dicej as much of this was based on their prior work.  </p>\n</blockquote>",
        "id": 502676665,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740781130
    },
    {
        "content": "<p>jsturtevant edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;<br>\nfixes: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10089\">https://github.com/bytecodealliance/wasmtime/issues/10089</a></p>\n<p>This adds a crate that provides the Wasmtime host implementation for the <a href=\"https://github.com/WebAssembly/wasi-tls\">wasi-tls</a> API.<br>\nThe <a href=\"https://github.com/WebAssembly/wasi-tls\">wasi-tls</a> world allows WebAssembly modules to perform SSL/TLS operations,<br>\nsuch as establishing secure connections to servers. </p>\n<p>This initially implements it with rustls which was already included in the repository.</p>\n<p>There are a few items that still need to be resolved but are not specially related to the implementation but wanted to start the review to make sure things moving in the correct direction.</p>\n<ul>\n<li>[ ] add a <code>close-notify</code> function to the wasi-tls wit in the proposal to properly close down the <a href=\"https://github.com/WebAssembly/wasi-tls/pull/5\">https://github.com/WebAssembly/wasi-tls/pull/5</a> </li>\n<li>[x] resolve importing stable types into unstable features (<a href=\"https://github.com/bytecodealliance/wasm-tools/issues/1995\">https://github.com/bytecodealliance/wasm-tools/issues/1995</a>). Write now I have a workaround on a branch that is being used in rust cargo patch.</li>\n</ul>\n<p>Thanks goes out to @badeend  and @dicej as much of this was based on their prior work.  </p>\n</blockquote>",
        "id": 502676670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740781132
    },
    {
        "content": "<p>jsturtevant <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#issuecomment-2691656005\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>:</p>\n<blockquote>\n<blockquote>\n<p>(aka landing the wasm-tools fixes and integrating that here).</p>\n</blockquote>\n<p>I tried pulling the fix  (<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/2076\">https://github.com/bytecodealliance/wasm-tools/pull/2076</a>) in from the main branch but looks like due to <a href=\"https://github.com/bytecodealliance/wasm-tools/pull/2073\">https://github.com/bytecodealliance/wasm-tools/pull/2073</a>, there were a few missing cases that need to be added to wit-bindgen and here.  Would it be helpful to open PR's to stub those out or is there work being done on them?  No rush/pressure, just want to be helpful if I can.</p>\n</blockquote>",
        "id": 502678125,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740781845
    },
    {
        "content": "<p>jsturtevant updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 502678945,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740782253
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#issuecomment-2691670574\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>:</p>\n<blockquote>\n<p>Good point! I started the update a few days ago but didn't publish it -- <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10314\">https://github.com/bytecodealliance/wasmtime/pull/10314</a> -- I'll work on landing that once all the wasm-tools changes are in, but if you want to rebase on that it can give a preview of what things are likely to look like</p>\n</blockquote>",
        "id": 502679701,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740782663
    },
    {
        "content": "<p>jsturtevant updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 502688270,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740787661
    },
    {
        "content": "<p>jsturtevant updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 502690193,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740788871
    },
    {
        "content": "<p>jsturtevant updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 502690799,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740789282
    },
    {
        "content": "<p>jsturtevant updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 502691980,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740790109
    },
    {
        "content": "<p>jsturtevant submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#pullrequestreview-2652070275\">PR review</a>.</p>",
        "id": 502693897,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740791338
    },
    {
        "content": "<p>jsturtevant created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1976194190\">PR review comment</a>:</p>\n<blockquote>\n<p>made some updates to address this.  but now getting <code>register mapping is currently only implemented for x86_64</code> on some of the other platforms which I were working previously.  I am not sure what this means yet, as I wouldn't have expected the changes to make a difference.</p>\n</blockquote>",
        "id": 502693898,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740791338
    },
    {
        "content": "<p>jsturtevant updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 503121839,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741035379
    },
    {
        "content": "<p>jsturtevant updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 503130435,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741038573
    },
    {
        "content": "<p>jsturtevant updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 503134860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741040260
    },
    {
        "content": "<p>jsturtevant submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#pullrequestreview-2655501577\">PR review</a>.</p>",
        "id": 503136986,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741041121
    },
    {
        "content": "<p>jsturtevant created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1978335235\">PR review comment</a>:</p>\n<blockquote>\n<p>Looked a bit more at this. It wasn't passing prior to my changes.  I am not sure what causes this, if it is expected, or how to debug it.</p>\n<p>@alexcrichton could you give me a pointer to what might be going wrong here?</p>\n</blockquote>",
        "id": 503136987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741041121
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#pullrequestreview-2658026040\">PR review</a>.</p>",
        "id": 503298436,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741102466
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1979701463\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah that's a bad error, but it bottoms out in <code>config.debug_info(true);</code> which isn't supported on Pulley. I'll go try and improve that error.</p>\n</blockquote>",
        "id": 503298437,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741102466
    },
    {
        "content": "<p>jsturtevant updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 503352791,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741118365
    },
    {
        "content": "<p>jsturtevant submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#pullrequestreview-2658905004\">PR review</a>.</p>",
        "id": 503357285,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741119824
    },
    {
        "content": "<p>jsturtevant created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1980178123\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks! Removing that line fixed the issue.  </p>\n</blockquote>",
        "id": 503357286,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741119824
    },
    {
        "content": "<p>jsturtevant updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 503357590,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741119930
    },
    {
        "content": "<p>jsturtevant updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 503903351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741300101
    },
    {
        "content": "<p>jsturtevant submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#pullrequestreview-2665776886\">PR review</a>.</p>",
        "id": 503903505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741300169
    },
    {
        "content": "<p>jsturtevant created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#discussion_r1984137987\">PR review comment</a>:</p>\n<blockquote>\n<p>fixed in <a href=\"https://github.com/bytecodealliance/wasm-tools/releases/tag/v1.227.0\">https://github.com/bytecodealliance/wasm-tools/releases/tag/v1.227.0</a></p>\n</blockquote>",
        "id": 503903506,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741300170
    },
    {
        "content": "<p>jsturtevant edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;<br>\nfixes: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10089\">https://github.com/bytecodealliance/wasmtime/issues/10089</a></p>\n<p>This adds a crate that provides the Wasmtime host implementation for the <a href=\"https://github.com/WebAssembly/wasi-tls\">wasi-tls</a> API.<br>\nThe <a href=\"https://github.com/WebAssembly/wasi-tls\">wasi-tls</a> world allows WebAssembly modules to perform SSL/TLS operations,<br>\nsuch as establishing secure connections to servers. </p>\n<p>This initially implements it with rustls which was already included in the repository.</p>\n<p>There are a few items that still need to be resolved but are not specially related to the implementation but wanted to start the review to make sure things moving in the correct direction.</p>\n<ul>\n<li>[x] add a <code>close-notify</code> function to the wasi-tls wit in the proposal to properly close down the <a href=\"https://github.com/WebAssembly/wasi-tls/pull/5\">https://github.com/WebAssembly/wasi-tls/pull/5</a> </li>\n<li>[x] resolve importing stable types into unstable features (<a href=\"https://github.com/bytecodealliance/wasm-tools/issues/1995\">https://github.com/bytecodealliance/wasm-tools/issues/1995</a>). Write now I have a workaround on a branch that is being used in rust cargo patch.</li>\n</ul>\n<p>Thanks goes out to @badeend  and @dicej as much of this was based on their prior work.  </p>\n</blockquote>",
        "id": 503904016,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741300353
    },
    {
        "content": "<p>jsturtevant updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 504140132,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741366520
    },
    {
        "content": "<p>jsturtevant <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#issuecomment-2707063554\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>:</p>\n<blockquote>\n<p>@badeend @alexcrichton We've merged all the outstand issues and I've rebased to bring in all the changes.  I think this is ready for a final review. Thanks!</p>\n</blockquote>",
        "id": 504151002,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741370084
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 504155101,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741371320
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249#pullrequestreview-2667993651\">PR review</a>:</p>\n<blockquote>\n<p>I pushed a fix for the CI failure, and I double-checked and it looks like everything might actually work on s390x/riscv64 nowadays so I've updated to drop all the #[cfg] related to that. Otherwise looks good <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 504155268,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741371368
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 504155288,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741371374
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 504159625,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741372690
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 504165855,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741374617
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 504165871,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741374623
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10249\">PR #10249</a>.</p>",
        "id": 504172762,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741377045
    }
]