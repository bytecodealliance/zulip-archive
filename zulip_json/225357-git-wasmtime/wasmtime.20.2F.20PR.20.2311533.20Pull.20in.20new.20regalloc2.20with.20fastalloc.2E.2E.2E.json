[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533\">PR #11533</a> from <code>cfallin:regalloc2-0.13.1-fastalloc</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Thanks to @d-sonuga in <a href=\"https://github.com/bytecodealliance/regalloc2/issues/233\">bytecodealliance/regalloc2#233</a>, the fastalloc (single-pass) register allocator now supports arbitrary numbers of non-register-constrained defs, which we use on call instructions after #10502. This should be sufficient to resolve the issues that had led us to disable fastalloc temporarily in #10554.</p>\n<p>This PR reverts that disabling step; adds Cranelift-with-single-pass as a new compiler strategy (alongside Cranelift, Winch, and Cranelift/Pulley) to all of our wast/spec tests and fuzzing; and pulls in the new RA2.</p>\n<p>Adding to our compiler strategy list is perhaps the most controversial thing here, but I believe it's probably appropriate to add the extra dimension here to ensure fastalloc stays working (it's a great feature to have!). Note that this surfaces as a new compiler strategy rather than a separate config dimension (like GC backend is currently) because it applies only to Cranelift, not Winch.</p>\n</blockquote>",
        "id": 536086589,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756147811
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533\">PR #11533</a>.</p>",
        "id": 536086590,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756147811
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533\">PR #11533</a>.</p>",
        "id": 536086591,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756147811
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533\">PR #11533</a>.</p>",
        "id": 536086592,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756147811
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533\">PR #11533</a>.</p>",
        "id": 536086593,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756147812
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533\">PR #11533</a>.</p>",
        "id": 536086595,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756147812
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533\">PR #11533</a>.</p>",
        "id": 536087366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756148078
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533#pullrequestreview-3152660822\">PR review</a>:</p>\n<blockquote>\n<p>Nice! </p>\n<p>Personally though I'd say we can ignore the new compiler strategy part. Fuzzing will already run all <code>*.wast</code> tests will all various options in addition to all the other fuzz targets we have. Given that I feel that's sufficient coverage worth the tradeoff in CI time from running the whole suite with another compiler. Another example is that Pulley for example in theory would want the single-pass option too but that's not modeled here yet (but I think that's niche enough it's definitely not worth spending lots of CI time making sure that works)</p>\n</blockquote>",
        "id": 536087761,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756148211
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533\">PR #11533</a>.</p>",
        "id": 536088359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756148408
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533#issuecomment-3221400107\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533\">PR #11533</a>:</p>\n<blockquote>\n<p>Fair enough! Removed that commit, so now it's just a clean update of RA2 + revert of #10554.</p>\n</blockquote>",
        "id": 536088437,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756148433
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533\">PR #11533</a>.</p>",
        "id": 536088476,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756148445
    },
    {
        "content": "<p>cfallin has disabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533\">PR #11533</a>.</p>",
        "id": 536090982,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756149389
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533\">PR #11533</a>.</p>",
        "id": 536090996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756149392
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533#issuecomment-3221457015\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533\">PR #11533</a>:</p>\n<blockquote>\n<p>The <code>cargo vet</code> CI job failed with a bad download (more Internet weather) and I'm not seeing an option to re-run it; CI itself also appears wedged in that it can't cancel and the \"Record the result\" job is queued but not starting.</p>\n</blockquote>",
        "id": 536091414,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756149528
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533#issuecomment-3221466485\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533\">PR #11533</a>:</p>\n<blockquote>\n<p>The retry button doesn't show up until everything finishes, and CI is overflowing with jobs right now due to a <a href=\"https://github.com/bytecodealliance/wasmtime/queue/main\">very large queue</a> due to the network failures.</p>\n</blockquote>",
        "id": 536091691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756149633
    },
    {
        "content": "<p>cfallin has disabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533\">PR #11533</a>.</p>",
        "id": 536105063,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756154525
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11533\">PR #11533</a>.</p>",
        "id": 536105726,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756154788
    }
]