[
    {
        "content": "<p>rinthnoid opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11716\">issue #11716</a>:</p>\n<blockquote>\n<p>Hi contributors, <br>\n I made some plugins using WASM's component model in rust using cargo component build command and voila it worked perfectly for windows for me.</p>\n<p>But the problem arises when I tried to compile it for android from same program same os (windows) it was hell of a nightmare to be able embed the <code>wasmtime</code> into a rust library and It took plain 3 days to still to figure out that it is somehow not possible for android right now (at least for now) so it just wasted a 3 days and nights <span aria-label=\"expressionless\" class=\"emoji emoji-1f611\" role=\"img\" title=\"expressionless\">:expressionless:</span>.</p>\n<p>I got something like this in error when compiling for android - </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0433</span><span class=\"p\">]:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">unresolved</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">unlinked</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span>\n<span class=\"w\">   </span><span class=\"o\">-</span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">D</span><span class=\"p\">:</span><span class=\"err\">\\</span><span class=\"n\">Programs</span><span class=\"err\">\\</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"err\">\\</span><span class=\"n\">registry</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">1949</span><span class=\"n\">cf8c6b5b557f</span><span class=\"err\">\\</span><span class=\"n\">rustix</span><span class=\"o\">-</span><span class=\"mf\">1.1.2</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">thread</span><span class=\"err\">\\</span><span class=\"n\">prctl</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">257</span><span class=\"p\">:</span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"mi\">257</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">IPCOwner</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linux_raw_sys</span><span class=\"p\">::</span><span class=\"n\">general</span><span class=\"p\">::</span><span class=\"n\">CAP_IPC_OWNER</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                </span><span class=\"o\">^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">unresolved</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">unlinked</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">help</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">if</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">wanted</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">named</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">your</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">Cargo</span><span class=\"p\">.</span><span class=\"n\">toml</span><span class=\"err\">`</span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0433</span><span class=\"p\">]:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">unresolved</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">unlinked</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span>\n<span class=\"w\">   </span><span class=\"o\">-</span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">D</span><span class=\"p\">:</span><span class=\"err\">\\</span><span class=\"n\">Programs</span><span class=\"err\">\\</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"err\">\\</span><span class=\"n\">registry</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">1949</span><span class=\"n\">cf8c6b5b557f</span><span class=\"err\">\\</span><span class=\"n\">rustix</span><span class=\"o\">-</span><span class=\"mf\">1.1.2</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">thread</span><span class=\"err\">\\</span><span class=\"n\">prctl</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">259</span><span class=\"p\">:</span><span class=\"mi\">20</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"mi\">259</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">SystemModule</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linux_raw_sys</span><span class=\"p\">::</span><span class=\"n\">general</span><span class=\"p\">::</span><span class=\"n\">CAP_SYS_MODULE</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                    </span><span class=\"o\">^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">unresolved</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">unlinked</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">help</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">if</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">wanted</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">named</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">your</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">Cargo</span><span class=\"p\">.</span><span class=\"n\">toml</span><span class=\"err\">`</span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0433</span><span class=\"p\">]:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">unresolved</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">unlinked</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span>\n<span class=\"w\">   </span><span class=\"o\">-</span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">D</span><span class=\"p\">:</span><span class=\"err\">\\</span><span class=\"n\">Programs</span><span class=\"err\">\\</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"err\">\\</span><span class=\"n\">registry</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">1949</span><span class=\"n\">cf8c6b5b557f</span><span class=\"err\">\\</span><span class=\"n\">rustix</span><span class=\"o\">-</span><span class=\"mf\">1.1.2</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">thread</span><span class=\"err\">\\</span><span class=\"n\">prctl</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">262</span><span class=\"p\">:</span><span class=\"mi\">19</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"mi\">262</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">SystemRawIO</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linux_raw_sys</span><span class=\"p\">::</span><span class=\"n\">general</span><span class=\"p\">::</span><span class=\"n\">CAP_SYS_RAWIO</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                   </span><span class=\"o\">^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">unresolved</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">unlinked</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">help</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">if</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">wanted</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">named</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">your</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">Cargo</span><span class=\"p\">.</span><span class=\"n\">toml</span><span class=\"err\">`</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n</code></pre></div>\n<p>I also made an easy reproducible example</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// src/main.rs</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">anyhow</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::{</span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">StoreContextMut</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::{</span><span class=\"n\">Component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ResourceTable</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span><span class=\"p\">::{</span><span class=\"n\">p2</span><span class=\"p\">,</span><span class=\"n\">WasiCtx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiCtxView</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiView</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">reqwest</span><span class=\"p\">::{</span><span class=\"n\">blocking</span><span class=\"p\">::</span><span class=\"n\">Client</span><span class=\"p\">,};</span>\n\n<span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">inline</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">r</span><span class=\"p\">#</span><span class=\"s\">\"</span>\n<span class=\"s\">    package component:adder;</span>\n<span class=\"s\">    world example {</span>\n<span class=\"s\">        import log: func(s: string);</span>\n<span class=\"s\">        import fetch-http: func(url: string) -&gt; string;</span>\n<span class=\"s\">        export hello-world: func(name: string) -&gt; string;</span>\n<span class=\"s\">        export get-json: func(url: string) -&gt; string;</span>\n<span class=\"s\">    }</span>\n<span class=\"s\">    \"</span><span class=\"p\">#,</span>\n<span class=\"p\">});</span>\n\n<span class=\"sd\">/// Per-store host state required by wasmtime-wasi.</span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Host</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">WasiCtx</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">table</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">ResourceTable</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">WasiView</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Host</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">ctx</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">WasiCtxView</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">WasiCtxView</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">ctx</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">wasi</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"n\">table</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">table</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">build_host_state</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Host</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Configure the WasiCtx (inherit host stdio so guest prints appear in host console).</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">builder</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiCtx</span><span class=\"p\">::</span><span class=\"n\">builder</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">builder</span><span class=\"p\">.</span><span class=\"n\">inherit_stdio</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">Host</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">builder</span><span class=\"p\">.</span><span class=\"n\">build</span><span class=\"p\">(),</span>\n<span class=\"w\">        </span><span class=\"n\">table</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">ResourceTable</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(),</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Engine configured for the component model (synchronous mode).</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_component_model</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">async_support</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Load the component compiled from your component crate.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Component</span><span class=\"p\">::</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"./adder.wasm\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Linker for host imports; parameterized by our Host state.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Linker</span><span class=\"o\">&lt;</span><span class=\"n\">Host</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Register WASI Preview-2 implementations into the linker (sync API).</span>\n<span class=\"w\">    </span><span class=\"n\">p2</span><span class=\"p\">::</span><span class=\"n\">add_to_linker_sync</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Provide the implementation for the `log` function that the component imports.</span>\n<span class=\"w\">    </span><span class=\"n\">linker</span><span class=\"p\">.</span><span class=\"n\">root</span><span class=\"p\">().</span><span class=\"n\">func_wrap</span><span class=\"p\">(</span><span class=\"s\">\"log\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_cx</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">StoreContextMut</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Host</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,):</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">String</span><span class=\"p\">,)</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Guest says: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"w\">    </span><span class=\"p\">})</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Provide a simple implementation for the `fetch-http` function that the component imports.</span>\n<span class=\"w\">    </span><span class=\"n\">linker</span><span class=\"p\">.</span><span class=\"n\">root</span><span class=\"p\">().</span><span class=\"n\">func_wrap</span><span class=\"p\">(</span><span class=\"s\">\"fetch-http\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_cx</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">StoreContextMut</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Host</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,):</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">String</span><span class=\"p\">,)</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Fetching URL: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">url</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">json_response</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">Client</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">().</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">url</span><span class=\"p\">).</span><span class=\"n\">send</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">resp</span><span class=\"p\">.</span><span class=\"n\">text</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">body</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"fm\">format!</span><span class=\"p\">(</span><span class=\"s\">\"error reading response body: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">e</span><span class=\"p\">),</span>\n<span class=\"w\">            </span><span class=\"p\">},</span>\n<span class=\"w\">            </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"fm\">format!</span><span class=\"p\">(</span><span class=\"s\">\"request error: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">e</span><span class=\"p\">),</span>\n<span class=\"w\">        </span><span class=\"p\">};</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">((</span><span class=\"n\">json_response</span><span class=\"p\">,))</span>\n<span class=\"w\">    </span><span class=\"p\">})</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Create the store (holds our Host state) and instantiate the component.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">host_state</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">build_host_state</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">host_state</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Example</span><span class=\"p\">::</span><span class=\"n\">instantiate</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">linker</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Call the exported function and print the string.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">call_hello_world</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Nezha\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"WASM said: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">json</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">call_get_json</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"https://jsonplaceholder.typicode.com/todos/2\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Fetched JSON: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">json</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>and then use this command - [for emulator but same for other arch like arm64 etc] <br>\n<code>cargo build -v --target x86_64-linux-android</code></p>\n<p>I also tried these things - </p>\n<ul>\n<li>first added the <code>linux_raw_sys</code> -&gt; didn't help just produced more error something like <code>\"use of unresolved module or unlinked</code></li>\n<li>then I disabled the <code>default_feature=false</code> -&gt; It did helped me to compile it for android but now it only support <code>.cwasm</code> which is not bad but it require platform specific comiplation as fast I saw since it was rasing error like <code>this is only compiled for windows, etc</code> and also It is now what I thought when started plugin dev using component model.</li>\n</ul>\n<p>So these are things I tried (took lot of time to research cause there are less and less article and explanation) and failed miserably. And the whole ideas was to create a fast cross platform (specially the mobile devices) plugins for my app cause that will literally change the world for plugin dev if it work on almost all platform without any these errors.</p>\n<h3>Expected Results</h3>\n<p>If I am doing something wrong then please make this thread for the specially for ref material for future programmers so that they can also develop android library embedded with <code>wasmtime runtime</code>. And try to sprinkle as much as info about this so that if you are facing some problems then any android developer can extend this feature for <code>wasmtime</code>.</p>\n<p>Cause right now <code>wasmtime</code> is the only library which support component model fully not other library come near to it. So it will help a lot this new emerging community if people use this then they will likely raise more issue and people contribute more.</p>\n<h3>Actual Results</h3>\n<p>Errors as state above</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: v36.0.2</p>\n<p>Operating system: Windows 11</p>\n<p>Architecture: -</p>\n<h3>Extra Info</h3>\n<p>building for android targets</p>\n<ul>\n<li>cargo build -v --target x86_64-linux-android<br>\netc</li>\n</ul>\n<p>Thanks  you so much for making this awesome support of component model and the feature rich wasm runtime it is really a great deal for me.<br>\n</p>\n</blockquote>",
        "id": 540446300,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758285821
    },
    {
        "content": "<p><a href=\"https://github.com/rinthnoid\">rinthnoid</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11716\">Issue #11716</a>.</p>",
        "id": 540446301,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758285821
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11716\">issue #11716</a>:</p>\n<blockquote>\n<p>Hi contributors, <br>\n I made some plugins using WASM's component model in rust using cargo component build command and voila it worked perfectly for windows for me.</p>\n<p>But the problem arises when I tried to compile it for android from same program same os (windows) it was hell of a nightmare to be able embed the <code>wasmtime</code> into a rust library and It took plain 3 days to still to figure out that it is somehow not possible for android right now (at least for now) so it just wasted a 3 days and nights <span aria-label=\"expressionless\" class=\"emoji emoji-1f611\" role=\"img\" title=\"expressionless\">:expressionless:</span>.</p>\n<p>I got something like this in error when compiling for android - </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0433</span><span class=\"p\">]:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">unresolved</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">unlinked</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span>\n<span class=\"w\">   </span><span class=\"o\">-</span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">D</span><span class=\"p\">:</span><span class=\"err\">\\</span><span class=\"n\">Programs</span><span class=\"err\">\\</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"err\">\\</span><span class=\"n\">registry</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">1949</span><span class=\"n\">cf8c6b5b557f</span><span class=\"err\">\\</span><span class=\"n\">rustix</span><span class=\"o\">-</span><span class=\"mf\">1.1.2</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">thread</span><span class=\"err\">\\</span><span class=\"n\">prctl</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">257</span><span class=\"p\">:</span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"mi\">257</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">IPCOwner</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linux_raw_sys</span><span class=\"p\">::</span><span class=\"n\">general</span><span class=\"p\">::</span><span class=\"n\">CAP_IPC_OWNER</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                </span><span class=\"o\">^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">unresolved</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">unlinked</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">help</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">if</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">wanted</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">named</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">your</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">Cargo</span><span class=\"p\">.</span><span class=\"n\">toml</span><span class=\"err\">`</span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0433</span><span class=\"p\">]:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">unresolved</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">unlinked</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span>\n<span class=\"w\">   </span><span class=\"o\">-</span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">D</span><span class=\"p\">:</span><span class=\"err\">\\</span><span class=\"n\">Programs</span><span class=\"err\">\\</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"err\">\\</span><span class=\"n\">registry</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">1949</span><span class=\"n\">cf8c6b5b557f</span><span class=\"err\">\\</span><span class=\"n\">rustix</span><span class=\"o\">-</span><span class=\"mf\">1.1.2</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">thread</span><span class=\"err\">\\</span><span class=\"n\">prctl</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">259</span><span class=\"p\">:</span><span class=\"mi\">20</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"mi\">259</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">SystemModule</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linux_raw_sys</span><span class=\"p\">::</span><span class=\"n\">general</span><span class=\"p\">::</span><span class=\"n\">CAP_SYS_MODULE</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                    </span><span class=\"o\">^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">unresolved</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">unlinked</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">help</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">if</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">wanted</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">named</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">your</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">Cargo</span><span class=\"p\">.</span><span class=\"n\">toml</span><span class=\"err\">`</span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0433</span><span class=\"p\">]:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">unresolved</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">unlinked</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span>\n<span class=\"w\">   </span><span class=\"o\">-</span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">D</span><span class=\"p\">:</span><span class=\"err\">\\</span><span class=\"n\">Programs</span><span class=\"err\">\\</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"err\">\\</span><span class=\"n\">registry</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">1949</span><span class=\"n\">cf8c6b5b557f</span><span class=\"err\">\\</span><span class=\"n\">rustix</span><span class=\"o\">-</span><span class=\"mf\">1.1.2</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">thread</span><span class=\"err\">\\</span><span class=\"n\">prctl</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">262</span><span class=\"p\">:</span><span class=\"mi\">19</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"mi\">262</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">SystemRawIO</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linux_raw_sys</span><span class=\"p\">::</span><span class=\"n\">general</span><span class=\"p\">::</span><span class=\"n\">CAP_SYS_RAWIO</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                   </span><span class=\"o\">^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">unresolved</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">unlinked</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">help</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">if</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">wanted</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">named</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">linux_raw_sys</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">your</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">Cargo</span><span class=\"p\">.</span><span class=\"n\">toml</span><span class=\"err\">`</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n<span class=\"p\">.</span>\n</code></pre></div>\n<p>I also made an easy reproducible example</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// src/main.rs</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">anyhow</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::{</span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">StoreContextMut</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::{</span><span class=\"n\">Component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ResourceTable</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span><span class=\"p\">::{</span><span class=\"n\">p2</span><span class=\"p\">,</span><span class=\"n\">WasiCtx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiCtxView</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiView</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">reqwest</span><span class=\"p\">::{</span><span class=\"n\">blocking</span><span class=\"p\">::</span><span class=\"n\">Client</span><span class=\"p\">,};</span>\n\n<span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">inline</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">r</span><span class=\"p\">#</span><span class=\"s\">\"</span>\n<span class=\"s\">    package component:adder;</span>\n<span class=\"s\">    world example {</span>\n<span class=\"s\">        import log: func(s: string);</span>\n<span class=\"s\">        import fetch-http: func(url: string) -&gt; string;</span>\n<span class=\"s\">        export hello-world: func(name: string) -&gt; string;</span>\n<span class=\"s\">        export get-json: func(url: string) -&gt; string;</span>\n<span class=\"s\">    }</span>\n<span class=\"s\">    \"</span><span class=\"p\">#,</span>\n<span class=\"p\">});</span>\n\n<span class=\"sd\">/// Per-store host state required by wasmtime-wasi.</span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Host</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">WasiCtx</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">table</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">ResourceTable</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">WasiView</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Host</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">ctx</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">WasiCtxView</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">WasiCtxView</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">ctx</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">wasi</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"n\">table</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">table</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">build_host_state</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Host</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Configure the WasiCtx (inherit host stdio so guest prints appear in host console).</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">builder</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiCtx</span><span class=\"p\">::</span><span class=\"n\">builder</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">builder</span><span class=\"p\">.</span><span class=\"n\">inherit_stdio</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">Host</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">builder</span><span class=\"p\">.</span><span class=\"n\">build</span><span class=\"p\">(),</span>\n<span class=\"w\">        </span><span class=\"n\">table</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">ResourceTable</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(),</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Engine configured for the component model (synchronous mode).</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_component_model</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">async_support</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Load the component compiled from your component crate.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Component</span><span class=\"p\">::</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"./adder.wasm\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Linker for host imports; parameterized by our Host state.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Linker</span><span class=\"o\">&lt;</span><span class=\"n\">Host</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Register WASI Preview-2 implementations into the linker (sync API).</span>\n<span class=\"w\">    </span><span class=\"n\">p2</span><span class=\"p\">::</span><span class=\"n\">add_to_linker_sync</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Provide the implementation for the `log` function that the component imports.</span>\n<span class=\"w\">    </span><span class=\"n\">linker</span><span class=\"p\">.</span><span class=\"n\">root</span><span class=\"p\">().</span><span class=\"n\">func_wrap</span><span class=\"p\">(</span><span class=\"s\">\"log\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_cx</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">StoreContextMut</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Host</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,):</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">String</span><span class=\"p\">,)</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Guest says: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"w\">    </span><span class=\"p\">})</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Provide a simple implementation for the `fetch-http` function that the component imports.</span>\n<span class=\"w\">    </span><span class=\"n\">linker</span><span class=\"p\">.</span><span class=\"n\">root</span><span class=\"p\">().</span><span class=\"n\">func_wrap</span><span class=\"p\">(</span><span class=\"s\">\"fetch-http\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_cx</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">StoreContextMut</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Host</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,):</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">String</span><span class=\"p\">,)</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Fetching URL: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">url</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">json_response</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">Client</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">().</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">url</span><span class=\"p\">).</span><span class=\"n\">send</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">resp</span><span class=\"p\">.</span><span class=\"n\">text</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">body</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"fm\">format!</span><span class=\"p\">(</span><span class=\"s\">\"error reading response body: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">e</span><span class=\"p\">),</span>\n<span class=\"w\">            </span><span class=\"p\">},</span>\n<span class=\"w\">            </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"fm\">format!</span><span class=\"p\">(</span><span class=\"s\">\"request error: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">e</span><span class=\"p\">),</span>\n<span class=\"w\">        </span><span class=\"p\">};</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">((</span><span class=\"n\">json_response</span><span class=\"p\">,))</span>\n<span class=\"w\">    </span><span class=\"p\">})</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Create the store (holds our Host state) and instantiate the component.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">host_state</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">build_host_state</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">host_state</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Example</span><span class=\"p\">::</span><span class=\"n\">instantiate</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">linker</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Call the exported function and print the string.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">call_hello_world</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"Nezha\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"WASM said: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">json</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">call_get_json</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"https://jsonplaceholder.typicode.com/todos/2\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Fetched JSON: {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">json</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>and then use this command - [for emulator but same for other arch like arm64 etc] <br>\n<code>cargo build -v --target x86_64-linux-android</code></p>\n<p>I also tried these things - </p>\n<ul>\n<li>first added the <code>linux_raw_sys</code> -&gt; didn't help just produced more error something like <code>\"use of unresolved module or unlinked</code></li>\n<li>then I disabled the <code>default_feature=false</code> -&gt; It did helped me to compile it for android but now it only support <code>.cwasm</code> which is not bad but it require platform specific comiplation as fast I saw since it was rasing error like <code>this is only compiled for windows, etc</code> and also It is now what I thought when started plugin dev using component model.</li>\n</ul>\n<p>So these are things I tried (took lot of time to research cause there are less and less article and explanation) and failed miserably. And the whole ideas was to create a fast cross platform (specially the mobile devices) plugins for my app cause that will literally change the world for plugin dev if it work on almost all platform without any these errors.</p>\n<h3>Expected Results</h3>\n<p>If I am doing something wrong then please make this thread for the specially for ref material for future programmers so that they can also develop android library embedded with <code>wasmtime runtime</code>. And try to sprinkle as much as info about this so that if you are facing some problems then any android developer can extend this feature for <code>wasmtime</code>.</p>\n<p>Cause right now <code>wasmtime</code> is the only library which support component model fully not other library come near to it. So it will help a lot this new emerging community if people use this then they will likely raise more issue and people contribute more.</p>\n<h3>Actual Results</h3>\n<p>Errors as state above</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: v36.0.2</p>\n<p>Operating system: Windows 11</p>\n<p>Architecture: -</p>\n<h3>Extra Info</h3>\n<p>building for android targets</p>\n<ul>\n<li>cargo build -v --target x86_64-linux-android<br>\netc</li>\n</ul>\n<p>Thanks  you so much for making this awesome support of component model and the feature rich wasm runtime it is really a great deal for me.<br>\n</p>\n</blockquote>",
        "id": 540479911,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758294933
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11716#issuecomment-3312599592\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11716\">issue #11716</a>:</p>\n<blockquote>\n<p>Thanks for the report, but this is not something we can reasonably fix/handle in Wasmtime. Some possible pointers for you, however, are:</p>\n<ul>\n<li>The <code>x86_64-linux-android</code> target is <a href=\"https://docs.wasmtime.dev/stability-tiers.html\">tier 3 for Wasmtime</a> meaning we have no maintainer and no testing for the target. All we verify is that things build on CI. This is a reflection of a lack of expertise in this target, so we're generally unable to help out with build issues.</li>\n<li>The Rust project has <a href=\"https://doc.rust-lang.org/rustc/platform-support/android.html\">official target documentation</a> which is somewhat sparse for Android, but that's where official Rust docs would be about building for Android.</li>\n<li>I understand how build errors can be confusing but your attempted workarounds are drastically changing the meaning of what you're building. It's unlikely you can blindly apply fixes without understanding what they're doing to try to get and end result. For example this is a compilation error in a dependency of Wasmtime, <code>rustix</code>, which is not developed in this repository. While that is still related to Wasmtime insofar as it's a dependency it's unlikely to help finding a resolution by posting this on a dependent of <code>rustix</code> as opposed to <code>rustix</code> itself. Furthermore adding dependencies to your project such as <code>linux_raw_sys</code> has no effect on dependencies, which is why that ended up changing nothing. When you disable features you're removing dependencies from the build, but as you've seen you're changing the meaning of what you're building.</li>\n<li>If you're having issues with cross-compiling cwasms, have you read over documentation at <a href=\"https://docs.wasmtime.dev/examples-pre-compiling-wasm.html\">https://docs.wasmtime.dev/examples-pre-compiling-wasm.html</a>?</li>\n</ul>\n<p>There's unfortunately not really much we can do in this repository here about this. We do not have expertise for Android available to help out. This might be a bug in <code>rustix</code>, but I do not personally have the expertise in that area to say whether it is or not. </p>\n<p>Given that this looks like a general toolchain issue, build configuration issue, or an issue in a dependency on a tier 3 platform, I'm going to close this. Wasmtime does not guarantee that it works on Android at this time due to the tier 3 target status (a result of the lack of expertise amongst maintainers on Android). As such we can't guarantee that free support is available for platforms like this.</p>\n<p>It's fine to continue discussion here, and if a Wasmtime-related fix is necessary I'm happy to reopen.</p>\n</blockquote>",
        "id": 540479915,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758294934
    },
    {
        "content": "<p>Ludea <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11716#issuecomment-3312672930\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11716\">issue #11716</a>:</p>\n<blockquote>\n<p>Relevant issue: <a href=\"https://github.com/bytecodealliance/rustix/issues/1519\">https://github.com/bytecodealliance/rustix/issues/1519</a> </p>\n</blockquote>",
        "id": 540484055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758296147
    },
    {
        "content": "<p>rinthnoid <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11716#issuecomment-3312710596\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11716\">issue #11716</a>:</p>\n<blockquote>\n<p>Thanks @alexcrichton for citing some info for me as well as future developers I think It will help us lot for this direction and will look forward if I will able to learn something with that . </p>\n<p>and Thanks @Ludea for referencing this issue I think it is being followed specially in <code>rustix</code> library finally!! I will follow it there too.<span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span><span aria-label=\"raised hands\" class=\"emoji emoji-1f64c\" role=\"img\" title=\"raised hands\">:raised_hands:</span></p>\n</blockquote>",
        "id": 540486191,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758296868
    }
]