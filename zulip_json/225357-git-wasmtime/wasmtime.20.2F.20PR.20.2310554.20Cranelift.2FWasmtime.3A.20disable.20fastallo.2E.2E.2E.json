[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10554\">PR #10554</a> from <code>cfallin:fastalloc-not-compatible-with-exceptions</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Unfortunately, as discovered by a recent fuzzbug [1], the single-pass register allocator is not compatible with the approach to callsite defs that exception-handling support has forced us to take. In particular, we needed to move all call return-value defs onto the call instruction itself, so calls could be terminators; this unbounded number of defs is made to be a solvable allocation problem by using <code>any</code> constraints, which allow allocation directly into spillslots; but fastalloc appears to error out if it runs out of registers, regardless of this constraint.</p>\n<p>Long-term, we should fix this, but unfortunately I don't have cycles to dive into fastalloc's internals at the moment, and it's (I think) a tier-3 feature. As such, this PR disables its use for now. I've filed a tracking issue in RA2 [2], and referenced this in the Cranelift configuration option docs at least.</p>\n<p>To keep from shifting all fuzzbugs / fuzzing corpii by altering the <code>arbitrary</code> interpretation, I opted to keep the enum the same in the fuzzing crate, and remap <code>SinglePass</code> to <code>Backtracking</code> there. I'm happy to take the other approach and remove the option (thus invalidating all fuzzbugs) if we'd prefer that instead.</p>\n<p>[1]: <a href=\"https://oss-fuzz.com/testcase-detail/5433312476987392\">https://oss-fuzz.com/testcase-detail/5433312476987392</a><br>\n[2]: <a href=\"https://github.com/bytecodealliance/regalloc2/issues/217\">https://github.com/bytecodealliance/regalloc2/issues/217</a></p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 511034377,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744150193
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10554\">PR #10554</a>.</p>",
        "id": 511034379,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744150193
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10554\">PR #10554</a>.</p>",
        "id": 511034380,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744150193
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10554\">PR #10554</a>.</p>",
        "id": 511034383,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744150194
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10554\">PR #10554</a>.</p>",
        "id": 511034384,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744150194
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10554\">PR #10554</a>.</p>",
        "id": 511034385,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744150194
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10554#pullrequestreview-2751541667\">PR review</a>.</p>",
        "id": 511036756,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744151290
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10554\">PR #10554</a>.</p>",
        "id": 511038518,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744152333
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10554\">PR #10554</a>.</p>",
        "id": 511038545,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744152347
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10554\">PR #10554</a>.</p>",
        "id": 511045871,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744156887
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10554\">PR #10554</a>.</p>",
        "id": 511045909,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744156898
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10554\">PR #10554</a>.</p>",
        "id": 511049483,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744158912
    },
    {
        "content": "<p>Robbepop <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10554#issuecomment-3094626036\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10554\">PR #10554</a>:</p>\n<blockquote>\n<p>@cfallin are there plans to re-introduce <code>Singlepass</code> register allocator back into Wasmtime? I am using Wasmtime in differential fuzzing in Wasmi and was using this register allocator due to very annoying time-out issues during fuzzing.<br>\n</p>\n</blockquote>",
        "id": 529697903,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753027946
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10554#issuecomment-3094744772\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10554\">PR #10554</a>:</p>\n<blockquote>\n<p>@Robbepop the issue at <a href=\"https://github.com/bytecodealliance/regalloc2/issues/217\">bytecodealliance/regalloc2#217</a> describes the issue that is preventing us from re-enabling it. As of right now, I have no time to investigate or fix this; I am oversubscribed on too many other things that are higher-priority and that is unlikely to change for the rest of the year. If you or anyone else are willing to dig in and fix this, it would be very much appreciated!</p>\n</blockquote>",
        "id": 529710462,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753042427
    }
]