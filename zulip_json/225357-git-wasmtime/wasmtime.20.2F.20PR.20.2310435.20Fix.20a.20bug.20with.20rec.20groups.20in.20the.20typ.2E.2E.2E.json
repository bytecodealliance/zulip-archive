[
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10435\">PR #10435</a>.</p>",
        "id": 507055274,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742497652
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10435\">PR #10435</a>.</p>",
        "id": 507055275,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742497652
    },
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10435\">PR #10435</a> from <code>fitzgen:rec-group-registration-fuzz-bug</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>And add a bunch more assertions and clean up the trace logging output for the<br>\ntypes registry.</p>\n<p>The bug is that <code>TypeRegistryInner::register_rec_group</code> mistakenly assumed that<br>\na rec group's types would be assigned a contiguous range of<br>\n<code>VMSharedTypeIndex</code>es, computing intra-group type references' indices via adding<br>\nthe rec-group-index to the group's first type's <code>VMSharedTypeIndex</code>. However,<br>\nthis is invalid because the underlying slab maintains a free list and will reuse<br>\nslots after they've been deallocated, leading to non-contiguous<br>\n<code>VMSharedTypeIndex</code>es for the types within a rec group. This bug only affects<br>\nmodules using the GC proposal.</p>\n<p>The fix is to reserve the indices for the rec group's types up front, before<br>\nregistering each type, and store them in a boxed slice. We can index into this<br>\nboxed slice to go from a rec-group-index to <code>VMSharedTypeIndex</code>. Note that this<br>\nallocation is fine because we need, and were already constructing, this exact<br>\nboxed slice of type indices just below anyways.</p>\n<p>Reserving <code>VMSharedTypeIndex</code>es up front does mean that the slab now contains<br>\n<code>Option&lt;Arc&lt;Type&gt;&gt;</code> instead of plain <code>Arc&lt;Type&gt;</code> so that we have a sentinel<br>\nvalue (<code>None</code>) to insert into the slab (so we can reserve a <code>VMSharedTypeIndex</code>)<br>\nduring rec group registration, but before we have actually registered that<br>\nparticular type. This leads to a sprinkle of <code>unwrap()</code>s throughout the<br>\nmodule. It should not, however, lead to additional heap usage, because the sizes<br>\nof <code>Arc&lt;T&gt;</code> and <code>Option&lt;Arc&lt;T&gt;&gt;</code> are the same.</p>\n<p>This bug is found pretty much immediately by the <code>instantiate_many</code> fuzz target,<br>\nnow that the GC proposal is enabled for fuzzing.</p>\n<hr>\n<p>Depends on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10434\">https://github.com/bytecodealliance/wasmtime/pull/10434</a></p>\n</blockquote>",
        "id": 507055276,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742497652
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10435#pullrequestreview-2703850607\">PR review</a>.</p>",
        "id": 507056511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742498054
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10435\">PR #10435</a>.</p>",
        "id": 507059617,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742499186
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10435\">PR #10435</a>.</p>",
        "id": 507059660,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742499200
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10435\">PR #10435</a>.</p>",
        "id": 507065851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742501444
    }
]