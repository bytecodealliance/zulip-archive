[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416\">PR #11416</a>.</p>",
        "id": 533899214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754968465
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416\">PR #11416</a> from <code>alexcrichton:refactor-tables</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This is a pair of commit inspired by semi-related work in Wasmtime to make progress on #11262. I got stuck in one particular area and as I stared more at the code I realized there were deeper issues that needed fixing before I start tackling #11262. Namely this PR fixes bugs such as:</p>\n<ul>\n<li>There were no write barriers on <code>table.init</code>, meaning that overwritten values were leaked.</li>\n<li>There were no write barriers on <code>table.set</code> via the embedder API, meaning overwritten values were leaked.</li>\n<li>The GC referenced passed to <code>table.grow</code> was not properly dropped via the embedder API, meaning that whatever reference that was passed in was leaked.</li>\n<li>Const-expression evaluation disallowed GC, but due to allocation of GC values it's possible to trigger a GC</li>\n<li>When const-expression evaluation triggers a GC it would be problematic during <code>table.init</code> because an instances tables were temporarily removed to help work within the borrow checker.</li>\n</ul>\n<p>All of the above have now been addressed with a set of new tests that assert no leaks and which trigger GC-during-const-eval. More details can be found in the commit messages but my hope with this refactoring is to close out this class of issues or make it more obvious when they show up in the future. Some algorithms were pessimized here by having to repeatedly re-access things from the store, but it's expected that these are not performance hot-spots and feature-complete-ness and correctness is more paramount.</p>\n</blockquote>",
        "id": 533899215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754968466
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416\">PR #11416</a>.</p>",
        "id": 533899216,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754968466
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416\">PR #11416</a>.</p>",
        "id": 533900106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754969189
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416\">PR #11416</a>.</p>",
        "id": 533900318,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754969375
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416#issuecomment-3177684203\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416\">PR #11416</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:api\", \"wasmtime:ref-types\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: wasmtime:ref-types</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 533906599,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754974144
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416#issuecomment-3180115881\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416\">PR #11416</a>:</p>\n<blockquote>\n<p>Looks like instantiation is indeed regressing a bit, so I'll dig in.</p>\n<p>&lt;img width=\"628\" height=\"514\" alt=\"Screenshot 2025-08-12 at 11 21 37â€¯AM\" src=\"<a href=\"https://github.com/user-attachments/assets/120a0743-4143-4ca9-96f8-ae3b2fe4c23e\">https://github.com/user-attachments/assets/120a0743-4143-4ca9-96f8-ae3b2fe4c23e</a>\" /&gt;</p>\n</blockquote>",
        "id": 534015524,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755015714
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416#pullrequestreview-3111798779\">PR review</a>:</p>\n<blockquote>\n<p>LGTM but withholding approval until we figure out the perf regression, since I expect that I will probably need to give this another once-over after resolving that</p>\n</blockquote>",
        "id": 534021010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755017664
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416#discussion_r2270499411\">PR review comment</a>:</p>\n<blockquote>\n<p>Why don't we make <code>grow_gc_ref</code> take an <code>AutoAssertNoGc</code>?</p>\n</blockquote>",
        "id": 534021011,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755017664
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416#discussion_r2270548166\">PR review comment</a>:</p>\n<blockquote>\n<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> </p>\n</blockquote>",
        "id": 534021013,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755017664
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416#discussion_r2270535396\">PR review comment</a>:</p>\n<blockquote>\n<p><span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span> </p>\n</blockquote>",
        "id": 534021014,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755017664
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416#discussion_r2270555257\">PR review comment</a>:</p>\n<blockquote>\n<p>Aside: we should probably add a <code>wasmtime::HeapTopType</code> because the environ version is so useful all over the place and it is really nice to exhaustive match on top types. Then we could expose this helper to embedders too, which seems like it would be useful.</p>\n</blockquote>",
        "id": 534021015,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755017665
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416#discussion_r2270509238\">PR review comment</a>:</p>\n<blockquote>\n<p>Here an elsewhere: we have already been using the convention <code>foo</code> for the generic version and <code>_foo</code> for the opaque version, not <code>foo_</code> for the opaque version. Should be consistent and have underscores at the front.</p>\n</blockquote>",
        "id": 534021016,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755017665
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416#issuecomment-3180212843\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416\">PR #11416</a>:</p>\n<blockquote>\n<blockquote>\n<p>Looks like instantiation is indeed regressing a bit, so I'll dig in.</p>\n</blockquote>\n<p>copying a message I sent Alex in private chat here for posterity:</p>\n<blockquote>\n<p>another idea: basically nothing uses non-constant const-expressions. we could make <code>ConstExpr</code> be something like</p>\n<p><code>rust\nenum ConstExpr {\n    Const(Val),\n    Expr(Vec&lt;ConstOp&gt;),\n}\n</code></p>\n</blockquote>\n</blockquote>",
        "id": 534021208,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755017742
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416#pullrequestreview-3112074768\">PR review</a>.</p>",
        "id": 534029855,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755021420
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416#discussion_r2270697788\">PR review comment</a>:</p>\n<blockquote>\n<p>Heh yeah I've done that historically as well (<code>_foo</code>) but Joel pointed out recently that if we stop using the function for whatever reason it won't get lints about dead code so I started switching to <code>foo_</code> instead. I'll keep it consistent for now internally in Wasmtime.</p>\n</blockquote>",
        "id": 534029856,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755021420
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416#pullrequestreview-3112077256\">PR review</a>.</p>",
        "id": 534029955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755021451
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416#discussion_r2270699150\">PR review comment</a>:</p>\n<blockquote>\n<p>That can't work right now as growth requires the whole <code>dyn VMStore</code> to perform a fiber suspension but <code>AutoAssertNoGc</code> only requires the <code>StoreOpaque</code>. Soon though...</p>\n</blockquote>",
        "id": 534029957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755021452
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416#pullrequestreview-3112120925\">PR review</a>.</p>",
        "id": 534031331,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755021972
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416#discussion_r2270721695\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah yeah good point we should fix everything at once in a follow up.</p>\n</blockquote>",
        "id": 534031333,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755021973
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416\">PR #11416</a>.</p>",
        "id": 534051847,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755030883
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416\">PR #11416</a>.</p>",
        "id": 534052152,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755031037
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416#issuecomment-3180951279\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416\">PR #11416</a>:</p>\n<blockquote>\n<p>@fitzgen ok with the most recent commits I've clawed back all of the performance and then some, so should be good to go.</p>\n<p>This makes me want to generate a Cranelift-compiled function for wasm instance initialization really.</p>\n</blockquote>",
        "id": 534052241,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755031073
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416#pullrequestreview-3112865125\">PR review</a>:</p>\n<blockquote>\n<p>Looks great!</p>\n</blockquote>",
        "id": 534056844,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755033206
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416\">PR #11416</a>.</p>",
        "id": 534063009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755037168
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416\">PR #11416</a>.</p>",
        "id": 534063020,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755037175
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11416\">PR #11416</a>.</p>",
        "id": 534065460,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755039168
    }
]