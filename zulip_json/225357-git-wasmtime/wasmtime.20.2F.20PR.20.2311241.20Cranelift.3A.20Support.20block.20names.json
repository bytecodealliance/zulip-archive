[
    {
        "content": "<p>masnagam opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241\">PR #11241</a> from <code>masnagam:feat-cranelift-codegen-block_name</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This PR implements a feature mentioned in #10766 and allows developers to set meaningful names to blocks.</p>\n<p>Block names are used only in Cranelift <strong>textual</strong> IR representation.<br>\n<code>print!(\"{block}\")</code> does not show the block name.</p>\n<p>The implementaion is naive and allocates a <code>String</code> for each block name.<br>\nSo, it's recommend to use block names only for debugging purposes at this point.<br>\nSomeone may implement more memory efficient mechanism for block names (such as <code>Twine</code> in LLVM) in the future.</p>\n</blockquote>",
        "id": 528864907,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752587010
    },
    {
        "content": "<p><strong>masnagam</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241\">PR #11241</a>.</p>",
        "id": 528864915,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752587011
    },
    {
        "content": "<p><strong>masnagam</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241\">PR #11241</a>.</p>",
        "id": 528864919,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752587011
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241#discussion_r2207579957\">PR review comment</a>:</p>\n<blockquote>\n<p>Putting this into a separate <code>SecondaryMap&lt;Block, String&gt;</code> would reduce memory usage when the block name functionality isn't used and remove unnecessary padding and improve cpu cache efficiency when it is used.</p>\n</blockquote>",
        "id": 528868297,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752587962
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241#pullrequestreview-3020485139\">PR review</a>.</p>",
        "id": 528868299,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752587963
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241#pullrequestreview-3020488743\">PR review</a>.</p>",
        "id": 528868382,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752587990
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241#discussion_r2207581757\">PR review comment</a>:</p>\n<blockquote>\n<p>Also you can represent no name being given as an empty string.</p>\n</blockquote>",
        "id": 528868384,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752587991
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241#pullrequestreview-3020495355\">PR review</a>.</p>",
        "id": 528868567,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752588042
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241#discussion_r2207584351\">PR review comment</a>:</p>\n<blockquote>\n<p>You need to use backticks both before and after.</p>\n</blockquote>",
        "id": 528868568,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752588042
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241#pullrequestreview-3020498928\">PR review</a>.</p>",
        "id": 528868702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752588073
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241#discussion_r2207585803\">PR review comment</a>:</p>\n<blockquote>\n<p>\"It is\" reads better to me.</p>\n</blockquote>",
        "id": 528868704,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752588073
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241#pullrequestreview-3020518960\">PR review</a>.</p>",
        "id": 528869201,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752588206
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241#discussion_r2207593452\">PR review comment</a>:</p>\n<blockquote>\n<p>The block names should probably also be printed in for example <code>jump block1</code>. Also would be nice to support them in the parser too.</p>\n</blockquote>",
        "id": 528869203,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752588206
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241#issuecomment-3074477236\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241\">PR #11241</a>:</p>\n<blockquote>\n<p>Thanks @masnagam for this PR!</p>\n<p>Following on from @bjorn3's helpful comments, I think the main high-level thing that we would need to address to merge this is the round-tripping aspect of textual CLIF. Right now, this PR prints CLIF that can't be re-parsed (in addition to not using the user-provided names everywhere). I think we need to think about entity names from a syntax-design perspective first, come up with a consistent answer that represents all the needed information and can be round-tripped, then go from there.</p>\n<p>A few considerations: entity numbering is deeply embedded in the way that the parser and the in-memory representation both work. It is what lets us have circular references without a separate name-resolution pass; it is what lets us avoid a symbol table. We'll want to re-think this: if entities can have names, then we need a symtab, we need a way to temporarily represent names during parsing and then resolve the references into numeric entity indices (allocating new indices for each name, and avoiding indices already used by the user), and we need to think about whether we want to print names <em>and</em> entity indices in the textual output. (Probably? Otherwise a roundtrip might not preserve them.)</p>\n<p>We can sidestep a bunch of this if names are more like annotations and the entity indices are still the primary syntactic elements. For example, we could print comments alongside block definitions and references that give the names for those blocks. (As an aside, this is how I handle block names in <a href=\"https://github.com/bytecodealliance/waffle/\">waffle</a>, another compiler library I designed that uses a Cranelift-like IR.) I'd personally be in favor of this -- it requires a little more care when writing textual CLIF (one still needs to come up with entity indices) but it keeps the language simpler and still allows for clarity when reading.</p>\n<p>If we go that route, I think the needed changes are:</p>\n<ul>\n<li>Don't replace the entity name, but rather, print the string name as a comment at the end of the line</li>\n<li>Print a comment with a block name whenever a block is referenced in a terminator, jump table (used in <code>br_table</code> instructions), or exception table (used in <code>try_call</code> / <code>try_call_indirect</code> instructions)</li>\n</ul>\n<p>as well as all the other review comments above. What do you think?</p>\n</blockquote>",
        "id": 528906509,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752599406
    },
    {
        "content": "<p>masnagam <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241#issuecomment-3076586631\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241\">PR #11241</a>:</p>\n<blockquote>\n<p>@bjorn3 @cfallin <br>\nThank you for your comments.<br>\nAt this point, there are many issues in my PR that I should have to consider before sending the PR.<br>\nI'd like to close this PR after discussion w/ you and restart investigating Cranelift implementation in depth and reconsidering this feature based on your comments.<br>\nI'll create a new PR if I succeeded to implement this feature.<br>\n(Or ask someone to check my software design before implementing it).</p>\n<p>Currently, I'm trying implementing <a href=\"https://github.com/bee-browser/bee/tree/main/libs/jsruntime/src/backend/clir/compiler\">a JavaScript engine</a> using Cranelift JIT.<br>\nAnd I want to assign meaningful block names (and variable names) for debugging purposes.<br>\nThis is my motivation to want to implement this feature.</p>\n<p>I need time to understand what you wrote because I don't have enough knowledge about Cranelift implementation at this point (as you may have noticed).<br>\nI'll come back here once I've finished investigating relevent code.</p>\n</blockquote>",
        "id": 528973598,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752636386
    },
    {
        "content": "<p>masnagam created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241#discussion_r2209134890\">PR review comment</a>:</p>\n<blockquote>\n<p>oh, right. i completely forgot that...</p>\n</blockquote>",
        "id": 528974027,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752636789
    },
    {
        "content": "<p>masnagam submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241#pullrequestreview-3022979798\">PR review</a>.</p>",
        "id": 528974029,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752636790
    },
    {
        "content": "<p>masnagam closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241\">PR #11241</a>.</p>",
        "id": 528986359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752645892
    },
    {
        "content": "<p>masnagam <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241#issuecomment-3076983095\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11241\">PR #11241</a>:</p>\n<blockquote>\n<p>I spent a few hours for investigating the Cranelift source tree and eventually understood what you wrote in the previous comment.<br>\nAnd I strongly feel the the direction of my change was not good.<br>\nEspecially, I don't like to modify the lexer for clif files.<br>\nProbably, we can handle any block names in clif files by introducing a table for block names.<br>\nBut the change increases complexity and regresses simplicity and maintainability (and throughputs slightly).</p>\n<p>I chekced <a href=\"https://github.com/bytecodealliance/waffle/\">waffle</a> and got some hints from it.<br>\nCurrently, I'm thinking of introducing a supplemental separate file to my JavaScript implementation, which contains a map between block entity IDs (<code>block*</code>) and the corresponding block names.<br>\nWe can easily convert block entity IDs in Craneleft IR textual representation (and its CFG in the DOT format) to corresponding block names by using the map.<br>\nThat's enough for debugging purposes.<br>\nProbably a similar map can be introduced for variable names.</p>\n<p>Thank you for your kindly support :)<br>\nI close this PR.</p>\n</blockquote>",
        "id": 528986360,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752645892
    }
]