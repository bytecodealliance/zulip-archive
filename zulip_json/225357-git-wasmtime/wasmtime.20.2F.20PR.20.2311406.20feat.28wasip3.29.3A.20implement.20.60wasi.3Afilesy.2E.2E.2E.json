[
    {
        "content": "<p>rvolosatovs opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a> from <code>rvolosatovs:feat/wasip3-filesystem</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Refs <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/issues/228\">https://github.com/bytecodealliance/wasip3-prototyping/issues/228</a></p>\n<p>Looks like reads will benefit from quite a bit of refactoring, which I did not manage to get to this week yet.<br>\nKeeping this open as draft for now until that's done.</p>\n</blockquote>",
        "id": 533504715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754675363
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>:</p>\n<blockquote>\n<p>Refs <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/issues/228\">https://github.com/bytecodealliance/wasip3-prototyping/issues/228</a></p>\n<p>Looks like reads will benefit from quite a bit of refactoring, which I did not manage to get to this week yet.<br>\nKeeping this open as draft for now until that's done (I'll get back to it next week)</p>\n</blockquote>",
        "id": 533504755,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754675384
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533505406,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754675722
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533505528,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754675781
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533506266,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754676115
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406#discussion_r2264171852\">PR review comment</a>:</p>\n<blockquote>\n<p>Similar to above, mind filing an issue for this? (unless the intention is to fill out in this PR)</p>\n</blockquote>",
        "id": 533544848,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754701680
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406#pullrequestreview-3102359878\">PR review</a>.</p>",
        "id": 533544849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754701680
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406#discussion_r2264172929\">PR review comment</a>:</p>\n<blockquote>\n<p>Is this a difference from WASIp3 intentionally? Or just an artifact of a test doing two invalid things at once and which error is coming out is now different?</p>\n</blockquote>",
        "id": 533544850,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754701680
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406#discussion_r2264171102\">PR review comment</a>:</p>\n<blockquote>\n<p>mind filing an issue for this if the intention is to leave this before landing?</p>\n</blockquote>",
        "id": 533544851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754701681
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406#discussion_r2264174294\">PR review comment</a>:</p>\n<blockquote>\n<p>Where it makes sense for types like this I think it'd also be reasonable to use the cap-std types directly and avoid having a layer of abstraction which is wasmtime-wasi specific (e.g. directly convert bindgen-generated types to cap-std types).</p>\n<p>I don't think it makes sense for all types, but for some like this it might be reasonable to skip the extra enum here.</p>\n</blockquote>",
        "id": 533544853,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754701681
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533767994,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754912051
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406#pullrequestreview-3105415704\">PR review</a>.</p>",
        "id": 533768112,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754912087
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406#discussion_r2266436158\">PR review comment</a>:</p>\n<blockquote>\n<p>I've tried to preserve existing behavior as much as possible originally, but have since changed that and documented in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406/commits/0418f5432d93be38dad8f8dd71926a911b3a8933\">https://github.com/bytecodealliance/wasmtime/pull/11406/commits/0418f5432d93be38dad8f8dd71926a911b3a8933</a></p>\n</blockquote>",
        "id": 533768113,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754912087
    },
    {
        "content": "<p>rvolosatovs <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406#issuecomment-3174396365\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>:</p>\n<blockquote>\n<p>Unfortunately, I'm running into a runtime panic in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406/commits/54384721d13fcf5eecdc11a57eeb2c2a1c3e73c9\">https://github.com/bytecodealliance/wasmtime/pull/11406/commits/54384721d13fcf5eecdc11a57eeb2c2a1c3e73c9</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">p3</span><span class=\"p\">::</span><span class=\"n\">p3_filesystem_file_read_write</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">component</span><span class=\"o\">/</span><span class=\"n\">concurrent</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">81</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">:</span>\n<span class=\"nc\">attempted</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">recursively</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">tls</span><span class=\"p\">::</span><span class=\"n\">get</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">when</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">pointer</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">present</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">already</span><span class=\"w\"> </span><span class=\"n\">taken</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">tls</span><span class=\"p\">::</span><span class=\"n\">get</span><span class=\"err\">`</span>\n</code></pre></div>\n<p>I've ignored the test for now <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406/commits/f8dc7e0c088178b3346bab261e2f73720944f29c\">https://github.com/bytecodealliance/wasmtime/pull/11406/commits/f8dc7e0c088178b3346bab261e2f73720944f29c</a> and will file an issue in a bit</p>\n</blockquote>",
        "id": 533768722,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754912232
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>:</p>\n<blockquote>\n<p>Refs <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/issues/228\">https://github.com/bytecodealliance/wasip3-prototyping/issues/228</a></p>\n<p>~Looks like reads will benefit from quite a bit of refactoring, which I did not manage to get to this week yet.<br>\nKeeping this open as draft for now until that's done (I'll get back to it next week)~</p>\n<p>Unlike <a href=\"https://github.com/bytecodealliance/wasip3-prototyping\">https://github.com/bytecodealliance/wasip3-prototyping</a>, read tasks both for <code>wasi:sockets</code> and <code>wasi:filesystem</code> are \"orphaned\", i.e. there's no parent-child relationship enforcement and therefore reads may continue <em>after</em> the resource the read was called on is dropped. For example, currently guests can continue reading from a file after dropping it. </p>\n<p>I'm planning to enforce the parent-child relationship for both <code>wasi:sockets</code> and <code>wasi:filesystem</code> in a follow-up, which would be done in a similar way to <code>wasi:http</code> <a href=\"https://github.com/WebAssembly/wasi-http/blob/ad500ba30bdfd57e04bdabdcd0480111681bf017/wit-0.3.0-draft/types.wit#L420-L423\">https://github.com/WebAssembly/wasi-http/blob/ad500ba30bdfd57e04bdabdcd0480111681bf017/wit-0.3.0-draft/types.wit#L420-L423</a></p>\n</blockquote>",
        "id": 533773343,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754912427
    },
    {
        "content": "<p>rvolosatovs edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406#issuecomment-3174396365\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>:</p>\n<blockquote>\n<p>Unfortunately, I'm running into a runtime panic in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406/commits/54384721d13fcf5eecdc11a57eeb2c2a1c3e73c9\">https://github.com/bytecodealliance/wasmtime/pull/11406/commits/54384721d13fcf5eecdc11a57eeb2c2a1c3e73c9</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">p3</span><span class=\"p\">::</span><span class=\"n\">p3_filesystem_file_read_write</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">component</span><span class=\"o\">/</span><span class=\"n\">concurrent</span><span class=\"o\">/</span><span class=\"n\">tls</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">81</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">:</span>\n<span class=\"nc\">attempted</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">recursively</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">tls</span><span class=\"p\">::</span><span class=\"n\">get</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">when</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">pointer</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">present</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">already</span><span class=\"w\"> </span><span class=\"n\">taken</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">tls</span><span class=\"p\">::</span><span class=\"n\">get</span><span class=\"err\">`</span>\n</code></pre></div>\n<p>I've ignored the test for now <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406/commits/f8dc7e0c088178b3346bab261e2f73720944f29c\">https://github.com/bytecodealliance/wasmtime/pull/11406/commits/f8dc7e0c088178b3346bab261e2f73720944f29c</a> and ~will file an issue in a bit~ filed and issue: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11412\">https://github.com/bytecodealliance/wasmtime/issues/11412</a></p>\n</blockquote>",
        "id": 533774699,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754912746
    },
    {
        "content": "<p><strong>rvolosatovs</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a> as ready for review.</p>",
        "id": 533774990,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754912810
    },
    {
        "content": "<p><strong>rvolosatovs</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-wasi-reviewers\">wasmtime-wasi-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533774996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754912811
    },
    {
        "content": "<p><strong>rvolosatovs</strong> requested <a href=\"https://github.com/dicej\">dicej</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533774999,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754912811
    },
    {
        "content": "<p><strong>rvolosatovs</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533775000,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754912811
    },
    {
        "content": "<p><strong>rvolosatovs</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533775001,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754912811
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533784957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754916098
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>:</p>\n<blockquote>\n<p>Refs <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/issues/228\">https://github.com/bytecodealliance/wasip3-prototyping/issues/228</a></p>\n<p>~Looks like reads will benefit from quite a bit of refactoring, which I did not manage to get to this week yet.<br>\nKeeping this open as draft for now until that's done (I'll get back to it next week)~</p>\n<p>~Unlike <a href=\"https://github.com/bytecodealliance/wasip3-prototyping\">https://github.com/bytecodealliance/wasip3-prototyping</a>, read tasks both for <code>wasi:sockets</code> and <code>wasi:filesystem</code> are \"orphaned\", i.e. there's no parent-child relationship enforcement and therefore reads may continue <em>after</em> the resource the read was called on is dropped. For example, currently guests can continue reading from a file after dropping it. ~</p>\n<p>~I'm planning to enforce the parent-child relationship for both <code>wasi:sockets</code> and <code>wasi:filesystem</code> in a follow-up, which would be done in a similar way to <code>wasi:http</code> <a href=\"https://github.com/WebAssembly/wasi-http/blob/ad500ba30bdfd57e04bdabdcd0480111681bf017/wit-0.3.0-draft/types.wit#L420-L423~\">https://github.com/WebAssembly/wasi-http/blob/ad500ba30bdfd57e04bdabdcd0480111681bf017/wit-0.3.0-draft/types.wit#L420-L423~</a></p>\n</blockquote>",
        "id": 533784995,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754916118
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>:</p>\n<blockquote>\n<p>Refs <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/issues/228\">https://github.com/bytecodealliance/wasip3-prototyping/issues/228</a></p>\n<p>~Looks like reads will benefit from quite a bit of refactoring, which I did not manage to get to this week yet.<br>\nKeeping this open as draft for now until that's done (I'll get back to it next week)~</p>\n<p>~Unlike <a href=\"https://github.com/bytecodealliance/wasip3-prototyping\">https://github.com/bytecodealliance/wasip3-prototyping</a>, read tasks both for <code>wasi:sockets</code> and <code>wasi:filesystem</code> are \"orphaned\", i.e. there's no parent-child relationship enforcement and therefore reads may continue <em>after</em> the resource the read was called on is dropped. For example, currently guests can continue reading from a file after dropping it.~</p>\n<p>~I'm planning to enforce the parent-child relationship for both <code>wasi:sockets</code> and <code>wasi:filesystem</code> in a follow-up, which would be done in a similar way to <code>wasi:http</code> <a href=\"https://github.com/WebAssembly/wasi-http/blob/ad500ba30bdfd57e04bdabdcd0480111681bf017/wit-0.3.0-draft/types.wit#L420-L423~\">https://github.com/WebAssembly/wasi-http/blob/ad500ba30bdfd57e04bdabdcd0480111681bf017/wit-0.3.0-draft/types.wit#L420-L423~</a></p>\n</blockquote>",
        "id": 533785017,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754916125
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533785562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754916324
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533785769,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754916389
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533786332,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754916580
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406#pullrequestreview-3106197066\">PR review</a>:</p>\n<blockquote>\n<p>I'll take a look at this panic</p>\n</blockquote>",
        "id": 533807796,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754922779
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406#discussion_r2266971908\">PR review comment</a>:</p>\n<blockquote>\n<p>Was this necessary to pass tests? Ideally I'd like to avoid abstractions like this and as-is I'm not sure that this is doing much because a strong reference to the <code>TaskTable</code> is held in all subtasks meaning that it'll never get dropped until the file is already dropped otherwise. For filesystems this is also problematic because aborting a task does not guarantee its destruction, you'd still have to await the handle in some form (we don't support this right now) due to the fact that the other task still needs to be dropped. For filesystem things that's also hard because it can often involve a <code>spawn_blocking</code> which itself contains a strong reference to the file in question and isn't cancellable once it's started.</p>\n<p>More-or-less my hypothesis is that this isn't doing anything right now other than adding overhead for task-tracking because it's only dropped when a file is already being dropped. Otherwise I'm not sure we're prepared to give such a guarantee for filesystems that the host descriptor is closed once the WASI descriptor is closed.</p>\n</blockquote>",
        "id": 533807797,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754922779
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406#pullrequestreview-3106344124\">PR review</a>.</p>",
        "id": 533814403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754924913
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406#discussion_r2267077941\">PR review comment</a>:</p>\n<blockquote>\n<p>The drop of a descriptor explicitly makes sure to \"drain\" the task table <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406/files#diff-0e2974d9a17b9ade0679e01bc627e119e1956a7bc903a9f10530f10b5865c2cfR621\">https://github.com/bytecodealliance/wasmtime/pull/11406/files#diff-0e2974d9a17b9ade0679e01bc627e119e1956a7bc903a9f10530f10b5865c2cfR621</a></p>\n<p>I'm happy to drop <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406/commits/40415b52f79a33c376a2a875ffecb1d0a01c7903\">https://github.com/bytecodealliance/wasmtime/pull/11406/commits/40415b52f79a33c376a2a875ffecb1d0a01c7903</a> though and perhaps talk through this later today?</p>\n</blockquote>",
        "id": 533814406,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754924914
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533814526,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754924949
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533814574,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754924966
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533834965,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754932070
    },
    {
        "content": "<p>rvolosatovs <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406#issuecomment-3175967127\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>:</p>\n<blockquote>\n<p>@alexcrichton this should be ready for a repeated review now</p>\n</blockquote>",
        "id": 533835179,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754932158
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533920922,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754982914
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533921620,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754983228
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533922105,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754983435
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533924493,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754984476
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533925506,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754984923
    },
    {
        "content": "<p>rvolosatovs has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533926469,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754985366
    },
    {
        "content": "<p>rvolosatovs merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11406\">PR #11406</a>.</p>",
        "id": 533931655,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754987407
    }
]