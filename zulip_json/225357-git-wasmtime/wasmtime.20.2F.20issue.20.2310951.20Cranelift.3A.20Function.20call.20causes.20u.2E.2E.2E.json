[
    {
        "content": "<p>akldc opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10951\">issue #10951</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">optimize</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">opt_level</span><span class=\"o\">=</span><span class=\"n\">none</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">preserve_frame_pointers</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">enable_multi_ret_implicit_sret</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"nc\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">ss0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">explicit_slot</span><span class=\"w\"> </span><span class=\"mi\">32</span>\n<span class=\"w\">    </span><span class=\"n\">ss1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">explicit_slot</span><span class=\"w\"> </span><span class=\"mi\">32</span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0xbdea39e5631c0104d92f26de921e6dbf</span>\n\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">5608073308517523622</span>\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">f32x4</span><span class=\"w\"> </span><span class=\"n\">const0</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss0</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss0</span><span class=\"o\">+</span><span class=\"mi\">8</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss0</span><span class=\"o\">+</span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss0</span><span class=\"o\">+</span><span class=\"mi\">24</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss1</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss1</span><span class=\"o\">+</span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">i16x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f64x2</span><span class=\"w\"> </span><span class=\"n\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"nc\">fast</span>\n<span class=\"w\">    </span><span class=\"n\">fn0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">u1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">sig0</span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x00110022003300440055006600770088</span>\n\n<span class=\"n\">block0</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mh\">0x1f96_3ea8_4eb6_5f81</span>\n<span class=\"w\">    </span><span class=\"n\">v11</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i16x8</span><span class=\"w\"> </span><span class=\"n\">const0</span>\n<span class=\"w\">    </span><span class=\"n\">v13</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">f32x4</span><span class=\"w\"> </span><span class=\"n\">const0</span>\n<span class=\"w\">    </span><span class=\"n\">v26</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fvpromote_low</span><span class=\"w\"> </span><span class=\"n\">v13</span>\n<span class=\"w\">    </span><span class=\"n\">v45</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">fn0</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\">  </span><span class=\"n\">v11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v26</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">print</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span>\n</code></pre></div>\n<h3>Result</h3>\n<p>Run this test case on four architectures.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">x86</span><span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x00110022003300440055006600770088</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x3805401980000000380dc02200000000</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">aarch64</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x00110022003300440055006600770088</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x3805401980000000380dc02200000000</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">riscv64</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x000000000000002e0000555500770088</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x00005555568fb3100000000000000000</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">s390x</span><span class=\"w\">  </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x00110022003300440055006600770088</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x3805401980000000380dc02200000000</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>If you remove the instruction <code>v45 = call fn0(v1)</code> and re-run the case, it works as expected.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">x86</span><span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x00110022003300440055006600770088</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x3805401980000000380dc02200000000</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">aarch64</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x00110022003300440055006600770088</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x3805401980000000380dc02200000000</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">riscv64</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x00110022003300440055006600770088</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x3805401980000000380dc02200000000</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">s390x</span><span class=\"w\">  </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x00110022003300440055006600770088</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x3805401980000000380dc02200000000</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>So, on the riscv64 architecture, calling the function <code>u1:1</code> changes the values of <code>v11</code> and <code>v26</code>.</p>\n</blockquote>",
        "id": 522780754,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749217332
    },
    {
        "content": "<p><a href=\"https://github.com/akldc\">akldc</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10951\">Issue #10951</a>.</p>",
        "id": 522780755,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749217332
    },
    {
        "content": "<p><a href=\"https://github.com/akldc\">akldc</a> added the cranelift label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10951\">Issue #10951</a>.</p>",
        "id": 522780756,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749217332
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the cranelift:area:riscv64 label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10951\">Issue #10951</a>.</p>",
        "id": 522794052,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749221295
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10951#issuecomment-2967747952\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10951\">issue #10951</a>:</p>\n<blockquote>\n<p>cc <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11026\">https://github.com/bytecodealliance/wasmtime/pull/11026</a> which has a test that I ignored on riscv64 and may be related to this issue (unsure though)</p>\n</blockquote>",
        "id": 523806850,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749751198
    },
    {
        "content": "<p>akldc <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10951#issuecomment-2970666403\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10951\">issue #10951</a>:</p>\n<blockquote>\n<p>@alexcrichton It seems that the bug in #11024 has been fixed, but this issue still remains.</p>\n</blockquote>",
        "id": 523962832,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749826641
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10951#issuecomment-2970675794\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10951\">issue #10951</a>:</p>\n<blockquote>\n<p>Oh that's expected yeah, the test I added in that PR failed on riscv64 so I had to ignore it on riscv64, and my suspicion is that it was related to one of the issues you opened. (the bugfix was only for x86)</p>\n</blockquote>",
        "id": 523963419,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749826840
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10951#issuecomment-2974228730\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10951\">issue #10951</a>:</p>\n<blockquote>\n<p>Ah this one turned out to be a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11048\">relatively easy fix</a>!</p>\n</blockquote>",
        "id": 524143005,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750005691
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10951\">issue #10951</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">optimize</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">opt_level</span><span class=\"o\">=</span><span class=\"n\">none</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">preserve_frame_pointers</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">enable_multi_ret_implicit_sret</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"nc\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">ss0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">explicit_slot</span><span class=\"w\"> </span><span class=\"mi\">32</span>\n<span class=\"w\">    </span><span class=\"n\">ss1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">explicit_slot</span><span class=\"w\"> </span><span class=\"mi\">32</span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0xbdea39e5631c0104d92f26de921e6dbf</span>\n\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">5608073308517523622</span>\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">f32x4</span><span class=\"w\"> </span><span class=\"n\">const0</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss0</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss0</span><span class=\"o\">+</span><span class=\"mi\">8</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss0</span><span class=\"o\">+</span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss0</span><span class=\"o\">+</span><span class=\"mi\">24</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss1</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss1</span><span class=\"o\">+</span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">i16x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f64x2</span><span class=\"w\"> </span><span class=\"n\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"nc\">fast</span>\n<span class=\"w\">    </span><span class=\"n\">fn0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">u1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">sig0</span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x00110022003300440055006600770088</span>\n\n<span class=\"n\">block0</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mh\">0x1f96_3ea8_4eb6_5f81</span>\n<span class=\"w\">    </span><span class=\"n\">v11</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i16x8</span><span class=\"w\"> </span><span class=\"n\">const0</span>\n<span class=\"w\">    </span><span class=\"n\">v13</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">f32x4</span><span class=\"w\"> </span><span class=\"n\">const0</span>\n<span class=\"w\">    </span><span class=\"n\">v26</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fvpromote_low</span><span class=\"w\"> </span><span class=\"n\">v13</span>\n<span class=\"w\">    </span><span class=\"n\">v45</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">fn0</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\">  </span><span class=\"n\">v11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v26</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">print</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span>\n</code></pre></div>\n<h3>Result</h3>\n<p>Run this test case on four architectures.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">x86</span><span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x00110022003300440055006600770088</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x3805401980000000380dc02200000000</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">aarch64</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x00110022003300440055006600770088</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x3805401980000000380dc02200000000</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">riscv64</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x000000000000002e0000555500770088</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x00005555568fb3100000000000000000</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">s390x</span><span class=\"w\">  </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x00110022003300440055006600770088</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x3805401980000000380dc02200000000</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>If you remove the instruction <code>v45 = call fn0(v1)</code> and re-run the case, it works as expected.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">x86</span><span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x00110022003300440055006600770088</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x3805401980000000380dc02200000000</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">aarch64</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x00110022003300440055006600770088</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x3805401980000000380dc02200000000</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">riscv64</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x00110022003300440055006600770088</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x3805401980000000380dc02200000000</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">s390x</span><span class=\"w\">  </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mh\">0x00110022003300440055006600770088</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x3805401980000000380dc02200000000</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>So, on the riscv64 architecture, calling the function <code>u1:1</code> changes the values of <code>v11</code> and <code>v26</code>.</p>\n</blockquote>",
        "id": 524150637,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750015206
    }
]