[
    {
        "content": "<p>gaaraw opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11330\">issue #11330</a>:</p>\n<blockquote>\n<h3>Phenomenon description</h3>\n<p>Hello, I have observed different temporal variations between different runtime tools, related to the backend they are using. The specific performance is as follows:</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th style=\"text-align: center;\">pr19005.wasm</th>\n<th style=\"text-align: center;\">pr19005_test.wasm</th>\n<th style=\"text-align: center;\">multiple</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>wasmtime</strong></td>\n<td style=\"text-align: center;\"><strong>0.007931</strong></td>\n<td style=\"text-align: center;\"><strong>0.250915</strong></td>\n<td style=\"text-align: center;\"><strong>31.6x</strong></td>\n</tr>\n<tr>\n<td><strong>wasmer_cranelift</strong></td>\n<td style=\"text-align: center;\"><strong>0.013363</strong></td>\n<td style=\"text-align: center;\"><strong>0.262407</strong></td>\n<td style=\"text-align: center;\"><strong>19.6x</strong></td>\n</tr>\n<tr>\n<td>wasmer_llvm</td>\n<td style=\"text-align: center;\">0.014017</td>\n<td style=\"text-align: center;\">0.018488</td>\n<td style=\"text-align: center;\">1.3x</td>\n</tr>\n<tr>\n<td>wasmedge_jit</td>\n<td style=\"text-align: center;\">0.020752</td>\n<td style=\"text-align: center;\">0.027414</td>\n<td style=\"text-align: center;\">1.3x</td>\n</tr>\n<tr>\n<td>wamr_llvm_jit</td>\n<td style=\"text-align: center;\">0.016472</td>\n<td style=\"text-align: center;\">0.024946</td>\n<td style=\"text-align: center;\">1.5x</td>\n</tr>\n</tbody>\n</table>\n<p>The data is in seconds, and each data is the result of ten executions and averages.</p>\n<p>The first two use <code>cranelift</code> as the backend, and the last three use <code>llvm</code> as the backend.<br>\nThere are five files in the <code>test_case.zip</code>, and when you execute <code>pr19005.wasm</code> compiled from C source code and <code>pr19005_test.wasm</code> obtained after simple modifications, the results are shown in the table, and the time increase multiple is marked in the last column.</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt; Modification process: &lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"n\">Lines</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"o\">-</span><span class=\"mi\">26</span>\n<span class=\"mi\">17</span><span class=\"w\">          </span><span class=\"p\">(</span><span class=\"k\">loop</span><span class=\"w\">  </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">3</span>\n<span class=\"mi\">18</span><span class=\"w\">            </span><span class=\"p\">(</span><span class=\"n\">br_if</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"o\">@</span><span class=\"mi\">2</span><span class=\"p\">;)</span>\n<span class=\"mi\">19</span><span class=\"w\">              </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"mi\">20</span><span class=\"w\">            </span><span class=\"p\">(</span><span class=\"n\">br_if</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"o\">@</span><span class=\"mi\">3</span><span class=\"p\">;)</span>\n<span class=\"mi\">21</span><span class=\"w\">              </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">ne</span>\n<span class=\"mi\">22</span><span class=\"w\">                </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">tee</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"mi\">23</span><span class=\"w\">                  </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">add</span>\n<span class=\"mi\">24</span><span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"mi\">25</span><span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"p\">)))</span>\n<span class=\"mi\">26</span><span class=\"w\">                </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">266</span><span class=\"p\">))))</span>\n</code></pre></div>\n<p>Copy the loop and paste right next to it</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">pr19005_test</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"n\">Lines</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"o\">-</span><span class=\"mi\">36</span>\n<span class=\"mi\">17</span><span class=\"w\">          </span><span class=\"p\">(</span><span class=\"k\">loop</span><span class=\"w\">  </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">3</span>\n<span class=\"mi\">18</span><span class=\"w\">            </span><span class=\"p\">(</span><span class=\"n\">br_if</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"o\">@</span><span class=\"mi\">2</span><span class=\"p\">;)</span>\n<span class=\"mi\">19</span><span class=\"w\">              </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"mi\">20</span><span class=\"w\">            </span><span class=\"p\">(</span><span class=\"n\">br_if</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"o\">@</span><span class=\"mi\">3</span><span class=\"p\">;)</span>\n<span class=\"mi\">21</span><span class=\"w\">              </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">ne</span>\n<span class=\"mi\">22</span><span class=\"w\">                </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">tee</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"mi\">23</span><span class=\"w\">                  </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">add</span>\n<span class=\"mi\">24</span><span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"mi\">25</span><span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"p\">)))</span>\n<span class=\"mi\">26</span><span class=\"w\">                </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">266</span><span class=\"p\">))))</span>\n<span class=\"mi\">27</span><span class=\"w\">          </span><span class=\"p\">(</span><span class=\"k\">loop</span><span class=\"w\">  </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">3</span>\n<span class=\"mi\">28</span><span class=\"w\">            </span><span class=\"p\">(</span><span class=\"n\">br_if</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"o\">@</span><span class=\"mi\">2</span><span class=\"p\">;)</span>\n<span class=\"mi\">29</span><span class=\"w\">              </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"mi\">30</span><span class=\"w\">            </span><span class=\"p\">(</span><span class=\"n\">br_if</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"o\">@</span><span class=\"mi\">3</span><span class=\"p\">;)</span>\n<span class=\"mi\">31</span><span class=\"w\">              </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">ne</span>\n<span class=\"mi\">32</span><span class=\"w\">                </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">tee</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"mi\">33</span><span class=\"w\">                  </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">add</span>\n<span class=\"mi\">34</span><span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"mi\">35</span><span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"p\">)))</span>\n<span class=\"mi\">36</span><span class=\"w\">                </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">266</span><span class=\"p\">))))</span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/user-attachments/files/21452657/test_case.zip\">test_case.zip</a></p>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">Compile</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"n\">files</span>\n<span class=\"n\">emcc</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">O2</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">WASM</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n\n<span class=\"n\">wasm2wat</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n\n<span class=\"n\">wat2wasm</span><span class=\"w\"> </span><span class=\"n\">pr19005_test</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">pr19005_test</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">Execute</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">collect</span><span class=\"w\"> </span><span class=\"n\">data</span>\n<span class=\"n\">perf</span><span class=\"w\"> </span><span class=\"n\">stat</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">task</span><span class=\"o\">-</span><span class=\"n\">clock</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">perf</span><span class=\"w\"> </span><span class=\"n\">stat</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">task</span><span class=\"o\">-</span><span class=\"n\">clock</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">wasmer</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">perf</span><span class=\"w\"> </span><span class=\"n\">stat</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">task</span><span class=\"o\">-</span><span class=\"n\">clock</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">wasmer</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">llvm</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">perf</span><span class=\"w\"> </span><span class=\"n\">stat</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">task</span><span class=\"o\">-</span><span class=\"n\">clock</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">wasmedge</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">enable</span><span class=\"o\">-</span><span class=\"n\">jit</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">perf</span><span class=\"w\"> </span><span class=\"n\">stat</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">task</span><span class=\"o\">-</span><span class=\"n\">clock</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">build_llvm_jit</span><span class=\"o\">/</span><span class=\"n\">iwasm</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">pr19005_test</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">same</span>\n</code></pre></div>\n<h3>Analysis</h3>\n<p>The added second loop doesn't really work in the use case. Before the second loop is executed, the value of <code>local 0</code> is equal to 266, so <code>local 0</code> in the second loop can only exit the loop after the loop exceeds 2&lt;sup&gt;32&lt;/sup&gt; and returns to itself. <br>\nFor this change, I observed that the time change was not noticeable when using <code>LLVM</code> as the backend, but there was a significant increase in time when using <code>cranelift</code> as the backend.</p>\n<p>I suspect this may involve two backend optimization strategies for the code.</p>\n<h3>Versions and Environment</h3>\n<p>The runtime tools are all built on release and use <code>JIT</code>mode.</p>\n<ul>\n<li>wasmtime: 35.0.0 (9c2e6f17c 2025-06-17)</li>\n<li>wasmer: 6.0.1</li>\n<li>wasmedge: 0.14.1</li>\n<li>WAMR: iwasm 2.4.0</li>\n<li>emcc: 4.0.10 (b7dc6e5747465580df5984e723b9d1f10d8e804b)</li>\n<li>wabt: 1.0.27</li>\n<li>llvm: 18.1.8</li>\n<li>Host OS: Ubuntu 22.04.5 LTS x64</li>\n<li>CPU: 12th Gen Intel® Core™ i7-12700 × 20</li>\n</ul>\n<h3>Extra Info</h3>\n<p>If you need any other relevant information, please let me know and I will do my best to provide it. Looking forward to your reply! Thank you!<br>\n</p>\n</blockquote>",
        "id": 531094166,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753604778
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11330\">issue #11330</a>:</p>\n<blockquote>\n<h3>Phenomenon description</h3>\n<p>Hello, I have observed different temporal variations between different runtime tools, related to the backend they are using. The specific performance is as follows:</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th style=\"text-align: center;\">pr19005.wasm</th>\n<th style=\"text-align: center;\">pr19005_test.wasm</th>\n<th style=\"text-align: center;\">multiple</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>wasmtime</strong></td>\n<td style=\"text-align: center;\"><strong>0.007931</strong></td>\n<td style=\"text-align: center;\"><strong>0.250915</strong></td>\n<td style=\"text-align: center;\"><strong>31.6x</strong></td>\n</tr>\n<tr>\n<td><strong>wasmer_cranelift</strong></td>\n<td style=\"text-align: center;\"><strong>0.013363</strong></td>\n<td style=\"text-align: center;\"><strong>0.262407</strong></td>\n<td style=\"text-align: center;\"><strong>19.6x</strong></td>\n</tr>\n<tr>\n<td>wasmer_llvm</td>\n<td style=\"text-align: center;\">0.014017</td>\n<td style=\"text-align: center;\">0.018488</td>\n<td style=\"text-align: center;\">1.3x</td>\n</tr>\n<tr>\n<td>wasmedge_jit</td>\n<td style=\"text-align: center;\">0.020752</td>\n<td style=\"text-align: center;\">0.027414</td>\n<td style=\"text-align: center;\">1.3x</td>\n</tr>\n<tr>\n<td>wamr_llvm_jit</td>\n<td style=\"text-align: center;\">0.016472</td>\n<td style=\"text-align: center;\">0.024946</td>\n<td style=\"text-align: center;\">1.5x</td>\n</tr>\n</tbody>\n</table>\n<p>The data is in seconds, and each data is the result of ten executions and averages.</p>\n<p>The first two use <code>cranelift</code> as the backend, and the last three use <code>llvm</code> as the backend.<br>\nThere are five files in the <code>test_case.zip</code>, and when you execute <code>pr19005.wasm</code> compiled from C source code and <code>pr19005_test.wasm</code> obtained after simple modifications, the results are shown in the table, and the time increase multiple is marked in the last column.</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt; Modification process: &lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"n\">Lines</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"o\">-</span><span class=\"mi\">26</span>\n<span class=\"mi\">17</span><span class=\"w\">          </span><span class=\"p\">(</span><span class=\"k\">loop</span><span class=\"w\">  </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">3</span>\n<span class=\"mi\">18</span><span class=\"w\">            </span><span class=\"p\">(</span><span class=\"n\">br_if</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"o\">@</span><span class=\"mi\">2</span><span class=\"p\">;)</span>\n<span class=\"mi\">19</span><span class=\"w\">              </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"mi\">20</span><span class=\"w\">            </span><span class=\"p\">(</span><span class=\"n\">br_if</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"o\">@</span><span class=\"mi\">3</span><span class=\"p\">;)</span>\n<span class=\"mi\">21</span><span class=\"w\">              </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">ne</span>\n<span class=\"mi\">22</span><span class=\"w\">                </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">tee</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"mi\">23</span><span class=\"w\">                  </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">add</span>\n<span class=\"mi\">24</span><span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"mi\">25</span><span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"p\">)))</span>\n<span class=\"mi\">26</span><span class=\"w\">                </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">266</span><span class=\"p\">))))</span>\n</code></pre></div>\n<p>Copy the loop and paste right next to it</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">pr19005_test</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"n\">Lines</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"o\">-</span><span class=\"mi\">36</span>\n<span class=\"mi\">17</span><span class=\"w\">          </span><span class=\"p\">(</span><span class=\"k\">loop</span><span class=\"w\">  </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">3</span>\n<span class=\"mi\">18</span><span class=\"w\">            </span><span class=\"p\">(</span><span class=\"n\">br_if</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"o\">@</span><span class=\"mi\">2</span><span class=\"p\">;)</span>\n<span class=\"mi\">19</span><span class=\"w\">              </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"mi\">20</span><span class=\"w\">            </span><span class=\"p\">(</span><span class=\"n\">br_if</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"o\">@</span><span class=\"mi\">3</span><span class=\"p\">;)</span>\n<span class=\"mi\">21</span><span class=\"w\">              </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">ne</span>\n<span class=\"mi\">22</span><span class=\"w\">                </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">tee</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"mi\">23</span><span class=\"w\">                  </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">add</span>\n<span class=\"mi\">24</span><span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"mi\">25</span><span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"p\">)))</span>\n<span class=\"mi\">26</span><span class=\"w\">                </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">266</span><span class=\"p\">))))</span>\n<span class=\"mi\">27</span><span class=\"w\">          </span><span class=\"p\">(</span><span class=\"k\">loop</span><span class=\"w\">  </span><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">3</span>\n<span class=\"mi\">28</span><span class=\"w\">            </span><span class=\"p\">(</span><span class=\"n\">br_if</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"o\">@</span><span class=\"mi\">2</span><span class=\"p\">;)</span>\n<span class=\"mi\">29</span><span class=\"w\">              </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"mi\">30</span><span class=\"w\">            </span><span class=\"p\">(</span><span class=\"n\">br_if</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"o\">@</span><span class=\"mi\">3</span><span class=\"p\">;)</span>\n<span class=\"mi\">31</span><span class=\"w\">              </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">ne</span>\n<span class=\"mi\">32</span><span class=\"w\">                </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">tee</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"mi\">33</span><span class=\"w\">                  </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"n\">add</span>\n<span class=\"mi\">34</span><span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"mi\">35</span><span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"p\">)))</span>\n<span class=\"mi\">36</span><span class=\"w\">                </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">266</span><span class=\"p\">))))</span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/user-attachments/files/21452657/test_case.zip\">test_case.zip</a></p>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">Compile</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"n\">files</span>\n<span class=\"n\">emcc</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">O2</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">WASM</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n\n<span class=\"n\">wasm2wat</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n\n<span class=\"n\">wat2wasm</span><span class=\"w\"> </span><span class=\"n\">pr19005_test</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">pr19005_test</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">Execute</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">collect</span><span class=\"w\"> </span><span class=\"n\">data</span>\n<span class=\"n\">perf</span><span class=\"w\"> </span><span class=\"n\">stat</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">task</span><span class=\"o\">-</span><span class=\"n\">clock</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">perf</span><span class=\"w\"> </span><span class=\"n\">stat</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">task</span><span class=\"o\">-</span><span class=\"n\">clock</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">wasmer</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">perf</span><span class=\"w\"> </span><span class=\"n\">stat</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">task</span><span class=\"o\">-</span><span class=\"n\">clock</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">wasmer</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">llvm</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">perf</span><span class=\"w\"> </span><span class=\"n\">stat</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">task</span><span class=\"o\">-</span><span class=\"n\">clock</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">wasmedge</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">enable</span><span class=\"o\">-</span><span class=\"n\">jit</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">perf</span><span class=\"w\"> </span><span class=\"n\">stat</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">task</span><span class=\"o\">-</span><span class=\"n\">clock</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">build_llvm_jit</span><span class=\"o\">/</span><span class=\"n\">iwasm</span><span class=\"w\"> </span><span class=\"n\">pr19005</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">pr19005_test</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">same</span>\n</code></pre></div>\n<h3>Analysis</h3>\n<p>The added second loop doesn't really work in the use case. Before the second loop is executed, the value of <code>local 0</code> is equal to 266, so <code>local 0</code> in the second loop can only exit the loop after the loop exceeds 2&lt;sup&gt;32&lt;/sup&gt; and returns to itself. <br>\nFor this change, I observed that the time change was not noticeable when using <code>LLVM</code> as the backend, but there was a significant increase in time when using <code>cranelift</code> as the backend.</p>\n<p>I suspect this may involve two backend optimization strategies for the code.</p>\n<h3>Versions and Environment</h3>\n<p>The runtime tools are all built on release and use <code>JIT</code>mode.</p>\n<ul>\n<li>wasmtime: 35.0.0 (9c2e6f17c 2025-06-17)</li>\n<li>wasmer: 6.0.1</li>\n<li>wasmedge: 0.14.1</li>\n<li>WAMR: iwasm 2.4.0</li>\n<li>emcc: 4.0.10 (b7dc6e5747465580df5984e723b9d1f10d8e804b)</li>\n<li>wabt: 1.0.27</li>\n<li>llvm: 18.1.8</li>\n<li>Host OS: Ubuntu 22.04.5 LTS x64</li>\n<li>CPU: 12th Gen Intel® Core™ i7-12700 × 20</li>\n</ul>\n<h3>Extra Info</h3>\n<p>If you need any other relevant information, please let me know and I will do my best to provide it. Looking forward to your reply! Thank you!<br>\n</p>\n</blockquote>",
        "id": 531388693,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753713798
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11330#issuecomment-3127565089\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11330\">issue #11330</a>:</p>\n<blockquote>\n<p>Thanks for the report, but Wasmtime and Cranelift, like peer runtimes on the web, are designed to efficiently run ahead-of-time optimized WebAssembly code. It's expected that you can craft modules that natively-optimized code will perform much better on. Cranelift does not attempt to be as optimizing of a compiler as LLVM, instead we rely on LLVM to do said optimizations and Cranelift takes it the \"final mile\" to machine code.</p>\n<p>I'm going to close this because arbitrary modifications of WebAssembly files are known to produce un-optimized code. I understand that LLVM can see through these modifications and make things fast, but it's not a bug that Cranelift does not. Cranelift is intended to compiler-optimized code, and in this situation you're generating non-compiler-optimized code.</p>\n<p>It's also worth noting that the reason Cranelift has this approach is that all modules in practice are optimized by LLVM. There is no use case we are aware of for intentionally not running an optimizing compiler like LLVM while also expecting the code to rust fast in Wasmtime.</p>\n</blockquote>",
        "id": 531388696,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753713799
    },
    {
        "content": "<p>gaaraw <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11330#issuecomment-3130395147\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11330\">issue #11330</a>:</p>\n<blockquote>\n<p>Thank you for your answer, it has deepened my understanding of cranelift.</p>\n</blockquote>",
        "id": 531499067,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753757054
    },
    {
        "content": "<p>pchickey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11330#issuecomment-3127565089\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11330\">issue #11330</a>:</p>\n<blockquote>\n<p>Thanks for the report, but Wasmtime and Cranelift, like peer runtimes on the web, are designed to efficiently run ahead-of-time optimized WebAssembly code. It's expected that you can craft modules that natively-optimized code will perform much better on. Cranelift does not attempt to be as optimizing of a compiler as LLVM, instead we rely on LLVM to do said optimizations and Cranelift takes it the \"final mile\" to machine code.</p>\n<p>I'm going to close this because arbitrary modifications of WebAssembly files are known to produce un-optimized code. I understand that LLVM can see through these modifications and make things fast, but it's not a bug that Cranelift does not. Cranelift is intended to compiler-optimized code, and in this situation you're generating non-compiler-optimized code.</p>\n<p>It's also worth noting that the reason Cranelift has this approach is that all modules in practice are optimized by LLVM. There is no use case we are aware of for intentionally not running an optimizing compiler like LLVM while also expecting the code to run fast in Wasmtime.</p>\n</blockquote>",
        "id": 531511995,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753764915
    }
]