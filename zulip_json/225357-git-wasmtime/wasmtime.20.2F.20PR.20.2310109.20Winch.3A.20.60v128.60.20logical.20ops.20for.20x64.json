[
    {
        "content": "<p>MarinPostma edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>.</p>",
        "id": 495799954,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737756067
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>.</p>",
        "id": 495800816,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737756452
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>.</p>",
        "id": 495801094,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737756563
    },
    {
        "content": "<p>MarinPostma edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>:</p>\n<blockquote>\n<p>implement <code>v128</code> simd logical operations:</p>\n<ul>\n<li><code>v128.not</code></li>\n<li><code>v128.and</code></li>\n<li><code>v128.andnot</code></li>\n<li><code>v128.or</code></li>\n<li><code>v128.xor</code></li>\n</ul>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/8093\">https://github.com/bytecodealliance/wasmtime/issues/8093</a></p>\n</blockquote>",
        "id": 495801135,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737756589
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#issuecomment-2613525690\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>:</p>\n<blockquote>\n<p>Moving my review over to @saulecabrera who knows this better than I</p>\n</blockquote>",
        "id": 495804422,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737758222
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/saulecabrera\">saulecabrera</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>.</p>",
        "id": 495804435,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737758230
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#issuecomment-2613604878\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @saulecabrera</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"winch\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>saulecabrera: winch</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 495811109,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737762284
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>.</p>",
        "id": 495873779,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737813892
    },
    {
        "content": "<p>MarinPostma edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>:</p>\n<blockquote>\n<p>implement <code>v128</code> simd logical operations:</p>\n<ul>\n<li><code>v128.not</code></li>\n<li><code>v128.and</code></li>\n<li><code>v128.andnot</code></li>\n<li><code>v128.or</code></li>\n<li><code>v128.xor</code></li>\n<li><code>v128.bitselect</code></li>\n</ul>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/8093\">https://github.com/bytecodealliance/wasmtime/issues/8093</a></p>\n</blockquote>",
        "id": 495873798,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737813908
    },
    {
        "content": "<p>MarinPostma edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>:</p>\n<blockquote>\n<p>implement <code>v128</code> simd logical operations:</p>\n<ul>\n<li><code>v128.not</code></li>\n<li><code>v128.and</code></li>\n<li><code>v128.andnot</code></li>\n<li><code>v128.or</code></li>\n<li><code>v128.xor</code></li>\n<li><code>v128.bitselect</code></li>\n<li><code>v128.any_true</code></li>\n</ul>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/8093\">https://github.com/bytecodealliance/wasmtime/issues/8093</a></p>\n</blockquote>",
        "id": 495879047,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737818365
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>.</p>",
        "id": 495879052,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737818370
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>.</p>",
        "id": 495883911,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737822051
    },
    {
        "content": "<p>MarinPostma edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>:</p>\n<blockquote>\n<p>implement <code>v128</code> simd logical operations:</p>\n<ul>\n<li><code>v128.not</code></li>\n<li><code>v128.and</code></li>\n<li><code>v128.andnot</code></li>\n<li><code>v128.or</code></li>\n<li><code>v128.xor</code></li>\n<li><code>v128.bitselect</code></li>\n<li><code>v128.any_true</code></li>\n<li><code>v128.load8_lane</code></li>\n<li><code>v128.load16_lane</code></li>\n<li><code>v128.load32_lane</code></li>\n<li><code>v128.load64_lane</code></li>\n</ul>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/8093\">https://github.com/bytecodealliance/wasmtime/issues/8093</a></p>\n</blockquote>",
        "id": 495883937,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737822081
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>.</p>",
        "id": 495890504,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737826918
    },
    {
        "content": "<p>MarinPostma edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>:</p>\n<blockquote>\n<p>implement <code>v128</code> simd logical operations:</p>\n<ul>\n<li><code>v128.not</code></li>\n<li><code>v128.and</code></li>\n<li><code>v128.andnot</code></li>\n<li><code>v128.or</code></li>\n<li><code>v128.xor</code></li>\n<li><code>v128.bitselect</code></li>\n<li><code>v128.any_true</code></li>\n<li><code>v128.load8_lane</code></li>\n<li><code>v128.load16_lane</code></li>\n<li><code>v128.load32_lane</code></li>\n<li><code>v128.load64_lane</code></li>\n<li><code>v128.store8_lane</code></li>\n<li><code>v128.store16_lane</code></li>\n<li><code>v128.store32_lane</code></li>\n<li><code>v128.store64_lane</code></li>\n</ul>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/8093\">https://github.com/bytecodealliance/wasmtime/issues/8093</a></p>\n</blockquote>",
        "id": 495890579,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737826945
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>.</p>",
        "id": 496102835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737978494
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#pullrequestreview-2575432599\">PR review</a>.</p>",
        "id": 496123138,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737984810
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#discussion_r1930525547\">PR review comment</a>:</p>\n<blockquote>\n<p>Instead of introducing new load/stored methods, I'd suggest calling <code>wasm_load</code> and <code>wasm_store</code>. This approach would probably require modifying the existing <code>LoadKind</code> definition in case the current definition can't represent the semantics of lane loading/storing. That's the approach we've followed for other vector loads (e.g., <code>load_splat</code>)</p>\n<p>1 main reason:</p>\n<ul>\n<li>Wasm loads/stores are critical, from the sandboxing perspective, and we're trying to keep the implementation as tight as possible, reusing the existing methods makes auditing them and maintaining them much easier. </li>\n</ul>\n</blockquote>",
        "id": 496123139,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737984810
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#discussion_r1930533002\">PR review comment</a>:</p>\n<blockquote>\n<p>A small remark on naming: to be consistent with the rest of the naming in the MacroAssembler for type-specific instructions, perhaps we could consider prefixing all these methods with <code>v128_</code>? e.g., <code>v128_or</code>, similar to float operations, e.g., <code>float_abs</code></p>\n</blockquote>",
        "id": 496123140,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737984810
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#discussion_r1930536534\">PR review comment</a>:</p>\n<blockquote>\n<p>We need to check that the host/target supports AVX for all of these methods: </p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">flags</span><span class=\"p\">.</span><span class=\"n\">has_avx</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">bail</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">CodeGenError</span><span class=\"p\">::</span><span class=\"n\">UnimplementedForNoAvx</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 496123141,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737984811
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>.</p>",
        "id": 496205711,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738009435
    },
    {
        "content": "<p>MarinPostma <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#issuecomment-2616817964\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>:</p>\n<blockquote>\n<p>@saulecabrera it should be good now. I have take the opportunity to tighten store/loads even more regarding atomics operation. Having the <code>MemOpKind</code> as a separate arg meant that we could declare many opeartion as atomics, but that would have no effect.</p>\n</blockquote>",
        "id": 496206108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738009575
    },
    {
        "content": "<p>MarinPostma edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#issuecomment-2616817964\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>:</p>\n<blockquote>\n<p>@saulecabrera it should be good now. I have taken the opportunity to tighten store/loads even more regarding atomics operation. Having the <code>MemOpKind</code> as a separate arg meant that we could declare many opeartion as atomics, but that would have no effect.</p>\n</blockquote>",
        "id": 496217930,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738014817
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#pullrequestreview-2578122072\">PR review</a>:</p>\n<blockquote>\n<p>LGTM, thanks!</p>\n</blockquote>",
        "id": 496325862,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738068163
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#issuecomment-2618898803\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>:</p>\n<blockquote>\n<p>There's a conflict, once resolved, we can land this one. </p>\n</blockquote>",
        "id": 496325924,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738068186
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>.</p>",
        "id": 496365798,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738079039
    },
    {
        "content": "<p>MarinPostma <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#issuecomment-2619372746\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>:</p>\n<blockquote>\n<p>done</p>\n</blockquote>",
        "id": 496365980,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738079083
    },
    {
        "content": "<p>MarinPostma <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#issuecomment-2619805654\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>:</p>\n<blockquote>\n<p>looks like a spurious failure? @saulecabrera </p>\n</blockquote>",
        "id": 496402713,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738090097
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#issuecomment-2619839404\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>:</p>\n<blockquote>\n<p>it's a bit hidden (alas) but I think that failure was non-spurious: <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/13016537423/job/36307106911\">https://github.com/bytecodealliance/wasmtime/actions/runs/13016537423/job/36307106911</a></p>\n</blockquote>",
        "id": 496405636,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738091128
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#issuecomment-2619854151\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>:</p>\n<blockquote>\n<p>Yeah, doesn't seem to be spurious. You need to update the spec tests here <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wast-util/src/lib.rs#L492\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/wast-util/src/lib.rs#L492</a> to include the ones that you enabled, so that it's marked as expected that these tests should fail on architectures that don't support AVX+. I believe this is mostly for for darwin x86_64, which runs via Rosetta and therefore there's no AVX support. </p>\n</blockquote>",
        "id": 496406967,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738091609
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>.</p>",
        "id": 496431422,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738101532
    },
    {
        "content": "<p>MarinPostma <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#issuecomment-2620145543\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>:</p>\n<blockquote>\n<p>I think I have fixed it, but I don't have a mac to try it right now. Thanks!</p>\n</blockquote>",
        "id": 496431740,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738101694
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#pullrequestreview-2579758564\">PR review</a>.</p>",
        "id": 496453697,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738114460
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#discussion_r1933088438\">PR review comment</a>:</p>\n<blockquote>\n<p>The failures that CI are related to the <code>vpinsr*</code>instruction, which are emitted here. We need to add <code>self.ensure_has_avx()?</code> to get CI green. </p>\n</blockquote>",
        "id": 496453698,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738114461
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#discussion_r1933088438\">PR review comment</a>.</p>",
        "id": 496453787,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738114550
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>.</p>",
        "id": 496507034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738144033
    },
    {
        "content": "<p>MarinPostma submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#pullrequestreview-2580724703\">PR review</a>.</p>",
        "id": 496524032,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738149475
    },
    {
        "content": "<p>MarinPostma created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109#discussion_r1933696754\">PR review comment</a>:</p>\n<blockquote>\n<p>I setup the action on my fork, all tests pass now. worry for the back and forth <span aria-label=\"sweat\" class=\"emoji emoji-1f613\" role=\"img\" title=\"sweat\">:sweat:</span> </p>\n</blockquote>",
        "id": 496524034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738149475
    },
    {
        "content": "<p>saulecabrera merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10109\">PR #10109</a>.</p>",
        "id": 496534645,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738153017
    }
]