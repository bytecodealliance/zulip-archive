[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239\">PR #11239</a> from <code>fitzgen:tarjan-scc</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit implements [Tarjan's algorithm] for finding strongly-connected components.</p>\n<p>This algorithm takes <code>O(V+E)</code> time and uses <code>O(V+E)</code> space.</p>\n<p>Tarjan's algorithm is usually presented as a recursive algorithm, but we do not trust the input and cannot recurse over it for fear of blowing the stack. Therefore, this implementation is iterative.</p>\n<p>This will be used to do bottom-up inlining in Wasmtime's compilation orchestration.</p>\n<p>[Tarjan's algorithm]: <a href=\"https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm\">https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm</a></p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 528764585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752541924
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239\">PR #11239</a>.</p>",
        "id": 528764589,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752541925
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239\">PR #11239</a>.</p>",
        "id": 528764590,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752541925
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239\">PR #11239</a>.</p>",
        "id": 528764591,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752541925
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239\">PR #11239</a>.</p>",
        "id": 528764655,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752541984
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239\">PR #11239</a>.</p>",
        "id": 528851677,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752583427
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239#issuecomment-3073829013\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239\">PR #11239</a>:</p>\n<blockquote>\n<p>I'm feeling a bit overwhelmed recently so I'm going to re-roll  review.</p>\n</blockquote>",
        "id": 528873256,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752589377
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239\">PR #11239</a>.</p>",
        "id": 528873305,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752589387
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239\">PR #11239</a>.</p>",
        "id": 528873307,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752589387
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239#issuecomment-3074240051\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239\">PR #11239</a>:</p>\n<blockquote>\n<p>(I'm happy to cover this one as a \"core compiler algorithms PR\" unless you really want it, Andrew!)</p>\n</blockquote>",
        "id": 528892819,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752594906
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239#issuecomment-3074300967\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239\">PR #11239</a>:</p>\n<blockquote>\n<p>Go for it!</p>\n</blockquote>",
        "id": 528896410,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752596046
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239#discussion_r2207964023\">PR review comment</a>:</p>\n<blockquote>\n<p>Just a little optimization thing but perhaps we could use a length hint (perhaps from <code>Iterator::size_hint</code>) to pre-allocate using <code>with_capacity</code>?</p>\n</blockquote>",
        "id": 528900256,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752597253
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239#discussion_r2207971931\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we reuse <code>self.nodes(component)</code> here and below?</p>\n</blockquote>",
        "id": 528900257,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752597253
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239#pullrequestreview-3021162315\">PR review</a>:</p>\n<blockquote>\n<p>Very nice! A few thoughts below but overall LGTM.</p>\n</blockquote>",
        "id": 528900258,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752597253
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239#discussion_r2207985941\">PR review comment</a>:</p>\n<blockquote>\n<p>This is a neat iterator chain but I wonder if it would be clearer in imperative style in this case (vs. the chaining and nested if-expression returning an option) -- something like:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">successor</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">successors</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">stack</span><span class=\"p\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">DfsEvent</span><span class=\"p\">::</span><span class=\"n\">AfterEdge</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">successor</span><span class=\"p\">));</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"n\">seen</span><span class=\"p\">(</span><span class=\"n\">successor</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">stack</span><span class=\"p\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">DfsEvent</span><span class=\"p\">::</span><span class=\"n\">Pre</span><span class=\"p\">(</span><span class=\"n\">successor</span><span class=\"p\">));</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 528900259,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752597254
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239#discussion_r2208070460\">PR review comment</a>:</p>\n<blockquote>\n<p>That technically implies an extra bounds check unless LLVM optimizes it away, but I can factor out the range conversion and indexing bits into a shared helper.</p>\n</blockquote>",
        "id": 528906067,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752599247
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239#pullrequestreview-3021342818\">PR review</a>.</p>",
        "id": 528906068,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752599247
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239#pullrequestreview-3021361424\">PR review</a>.</p>",
        "id": 528906677,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752599470
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239#discussion_r2208084781\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, good point! Not a huge deal, just noticed the duplication.</p>\n</blockquote>",
        "id": 528906679,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752599471
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239#pullrequestreview-3021361732\">PR review</a>.</p>",
        "id": 528906695,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752599477
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239#discussion_r2208084978\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah this is a reflection of how it was originally written and then modified as I found and fixed bugs. Should have moved it over to pushes already.</p>\n</blockquote>",
        "id": 528906696,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752599478
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239\">PR #11239</a>.</p>",
        "id": 528908384,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752600073
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239\">PR #11239</a>.</p>",
        "id": 528908440,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752600096
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11239\">PR #11239</a>.</p>",
        "id": 528914446,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752602326
    }
]