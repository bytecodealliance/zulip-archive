[
    {
        "content": "<p>wingo opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607\">issue #11607</a>:</p>\n<blockquote>\n<p>Consider this test for an open <code>Descriptor</code> on a directory, <code>dirfd</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">            </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span><span class=\"n\">dirfd</span><span class=\"p\">.</span><span class=\"n\">create_directory_at</span><span class=\"p\">(</span><span class=\"s\">\"\"</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">()).</span><span class=\"k\">await</span><span class=\"p\">,</span>\n<span class=\"w\">                       </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">ErrorCode</span><span class=\"p\">::</span><span class=\"n\">Invalid</span><span class=\"p\">));</span>\n</code></pre></div>\n<p>I think <code>Invalid</code> is the right error.  However instead the error is <code>NoEntry</code>, which corresponds to <a href=\"https://man7.org/linux/man-pages/man2/statx.2.html#ERRORS\">this <code>statx</code> documentation</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">       </span><span class=\"n\">ENOENT</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">pathname</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">exist</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">pathname</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">empty</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">AT_EMPTY_PATH</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">specified</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>I think that these \"at\" WASI interfaces should instead avoid syscalling for <code>\"\"</code>, and instead return <code>Invalid</code>.</p>\n</blockquote>",
        "id": 537690150,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756997090
    },
    {
        "content": "<p><a href=\"https://github.com/wingo\">wingo</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607\">Issue #11607</a>.</p>",
        "id": 537690152,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756997090
    },
    {
        "content": "<p>wingo edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607\">issue #11607</a>:</p>\n<blockquote>\n<p>Consider this test for an open <code>Descriptor</code> on a directory, <code>dirfd</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">            </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span><span class=\"n\">dirfd</span><span class=\"p\">.</span><span class=\"n\">create_directory_at</span><span class=\"p\">(</span><span class=\"s\">\"\"</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">()).</span><span class=\"k\">await</span><span class=\"p\">,</span>\n<span class=\"w\">                       </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">ErrorCode</span><span class=\"p\">::</span><span class=\"n\">Invalid</span><span class=\"p\">));</span>\n</code></pre></div>\n<p>I think <code>Invalid</code> is the right error.  However instead the error is <code>NoEntry</code>, which corresponds to <a href=\"https://man7.org/linux/man-pages/man2/statx.2.html#ERRORS\">this <code>statx</code> documentation</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">       </span><span class=\"n\">ENOENT</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">pathname</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">exist</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">pathname</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">empty</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">AT_EMPTY_PATH</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">specified</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>I think that these \"at\" WASI interfaces should instead avoid syscalling for <code>\"\"</code>, and instead return <code>Invalid</code>.</p>\n</blockquote>",
        "id": 537690404,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756997155
    },
    {
        "content": "<p>wingo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607#issuecomment-3254124241\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607\">issue #11607</a>:</p>\n<blockquote>\n<p>Same issue for <code>stat-at(\"\")</code>, <code>open-at(\"\")</code>, <code>readlink-at(\"\")</code>, <code>remove-directory-at(\"\")</code>, possibly others.</p>\n</blockquote>",
        "id": 537692685,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756997824
    },
    {
        "content": "<p>wingo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607#issuecomment-3254128206\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607\">issue #11607</a>:</p>\n<blockquote>\n<p>For me the solution probably goes through something like <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11524#issuecomment-3253843726\">https://github.com/bytecodealliance/wasmtime/issues/11524#issuecomment-3253843726</a>.</p>\n</blockquote>",
        "id": 537692902,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756997884
    },
    {
        "content": "<p>wingo edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607#issuecomment-3254124241\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607\">issue #11607</a>:</p>\n<blockquote>\n<p>Same issue for <code>stat-at(\"\")</code>, <code>open-at(\"\")</code>, <code>readlink-at(\"\")</code>, <code>remove-directory-at(\"\")</code>, <code>metadata-hash-at(\"\")</code>, possibly others.</p>\n</blockquote>",
        "id": 537695588,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756998537
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasi:impl label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607\">Issue #11607</a>.</p>",
        "id": 537745981,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757017080
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasi label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607\">Issue #11607</a>.</p>",
        "id": 537745982,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757017080
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607#issuecomment-3267922068\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607\">issue #11607</a>:</p>\n<blockquote>\n<p>What would be the motivation for returning <code>Invalid</code> here?</p>\n<p>wasi-filesystem is unfortunately not an advantageous place to have novel opinions about how filesystem APIs should work, because it is constrained by compatibility requirements with underlying host implementations on one side, and in the expectations of applications on the other. If Linux returns <code>ENOENT</code> for <code>statx</code> and <code>openat</code> and friends when given empty strings, then that makes it more likely to be compatible with existing applications than <code>EINVAL</code>.</p>\n</blockquote>",
        "id": 538310956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757363782
    },
    {
        "content": "<p>wingo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607#issuecomment-3269135609\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607\">issue #11607</a>:</p>\n<blockquote>\n<p><code>NoEntry</code> to me implies an error originating in the filesystem: some component leading up to the leaf is not present.  However here we have no leaf and in fact no path, and because we don't expose an <code>AT_EMPTY_PATH</code> interface, passing <code>\"\"</code> is simply invalid.  If you were designing it today, <code>Invalid</code> is the right return.</p>\n<p>I am sympathetic to the compatibility concern but I think that's more a wasi-libc question; in this case, wasmtime is fabricating the <code>ENOENT</code>, it does not come from the kernel.</p>\n</blockquote>",
        "id": 538362022,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757400636
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607#issuecomment-3280303700\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607\">issue #11607</a>:</p>\n<blockquote>\n<p>If we use <code>Invalid</code> here, and wish wasi-libc to translate it to <code>ENOENT</code>, then wasi-libc would need to be able to distinguish an <code>Invalid</code> that was caused by an empty path string from an <code>Invalid</code> with any other cause. I suppose that's doable, but it seems awkward to have it redo the error checking the host does.</p>\n</blockquote>",
        "id": 538842389,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757592888
    },
    {
        "content": "<p>wingo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607#issuecomment-3284466056\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11607\">issue #11607</a>:</p>\n<blockquote>\n<p>Ah, true.  I guess the question is, do you want wasi-libc to translate to <code>ENOENT</code> ?  I didn't think that would be necessary, but I can see the value of wasi-filesystem being as close to POSIX as possible if the goal is to have the thinnest wasi-libc.</p>\n<p>You know what, thank you for humoring me here, but posix <code>mkdirat</code> specifies <code>ENOENT</code> for empty-string, so I think I am just barking up the wrong tree: <a href=\"https://pubs.opengroup.org/onlinepubs/9699919799.2013edition/functions/mkdir.html\">https://pubs.opengroup.org/onlinepubs/9699919799.2013edition/functions/mkdir.html</a>.  Propose to close this bug as invalid.</p>\n</blockquote>",
        "id": 539019032,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757668815
    }
]