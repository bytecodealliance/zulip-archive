[
    {
        "content": "<p>Heap-Hop opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113\">PR #10113</a> from <code>Heap-Hop:fix_stream_blocking</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;<br>\nissue #9667 </p>\n<p>The <code>InputStream::ready</code> can be prematurely triggered by <code>io::ErrorKind::WouldBlock</code>. This PR fixes <code>blocking_read</code> to return the correct data.</p>\n</blockquote>",
        "id": 495846945,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737791098
    },
    {
        "content": "<p><strong>Heap-Hop</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113\">PR #10113</a>.</p>",
        "id": 495846946,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737791099
    },
    {
        "content": "<p><strong>Heap-Hop</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113\">PR #10113</a>.</p>",
        "id": 495846947,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737791099
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113#pullrequestreview-2574072974\">PR review</a>.</p>",
        "id": 495896993,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737832174
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113#issuecomment-2614069686\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113\">PR #10113</a>:</p>\n<blockquote>\n<p>Thanks. As you said in the other thread, there's no real way to test this operation from inside because it blocks. I am fine landing this without a test.</p>\n</blockquote>",
        "id": 495897106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737832253
    },
    {
        "content": "<p>badeend <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113#issuecomment-2614113237\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113\">PR #10113</a>:</p>\n<blockquote>\n<p>The change seems fine indeed.</p>\n<p>Aside from <code>blocking_read</code>, its counterpart of the writable side (<code>write_ready</code>) probably needs similar treatment as well. I think it should loop while <code>check_write</code> returns <code>Ok(0)</code>.</p>\n</blockquote>",
        "id": 495908718,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737842505
    },
    {
        "content": "<p>Heap-Hop <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113#issuecomment-2614250134\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113\">PR #10113</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"k\">loop</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"c1\">// This `ready` call may return early due to `io::ErrorKind::WouldBlock`.</span>\n<span class=\"w\">            </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">ready</span><span class=\"p\">().</span><span class=\"k\">await</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">is_empty</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"k\">continue</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>Can we ensure that there won't be infinite or excessive invalid loops here?</p>\n</blockquote>",
        "id": 495942083,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737875744
    },
    {
        "content": "<p>badeend <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113#issuecomment-2614256340\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113\">PR #10113</a>:</p>\n<blockquote>\n<p>As a fail-safe, you could keep track of the number of iterations and return a trap if it exceeds _{some number}_. The reason I suggest to trap as opposed to return an empty buffer, is because after a certain threshold it's more likely to be a bug in the <code>InputStream</code> implementation.</p>\n</blockquote>",
        "id": 495943527,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737877062
    },
    {
        "content": "<p>Heap-Hop <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113#issuecomment-2614269838\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113\">PR #10113</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/5dfccc078bb3dcad152d37013dde8067f197e6e7/crates/wasi/src/tcp.rs#L844-L850\">https://github.com/bytecodealliance/wasmtime/blob/5dfccc078bb3dcad152d37013dde8067f197e6e7/crates/wasi/src/tcp.rs#L844-L850</a></p>\n<p>I noticed that <code>io::ErrorKind::WouldBlock</code> is already handled here. <br>\nHowever, considering that this trait might still be implemented elsewhere, it indeed makes sense to perform a loop in <code>check_write</code>.</p>\n</blockquote>",
        "id": 495946238,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737879638
    },
    {
        "content": "<p>Heap-Hop <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113#issuecomment-2614273211\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113\">PR #10113</a>:</p>\n<blockquote>\n<blockquote>\n<p>you could keep track of the number of iterations and return a trap if it exceeds {some number}. </p>\n</blockquote>\n<p>I believe this requires further discussion before implementation.<br>\nHow to determine the maximum value and how to define the error. </p>\n</blockquote>",
        "id": 495946827,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737880193
    },
    {
        "content": "<p>Heap-Hop edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113#issuecomment-2614273211\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113\">PR #10113</a>:</p>\n<blockquote>\n<blockquote>\n<p>you could keep track of the number of iterations and return a trap if it exceeds {some number}. </p>\n</blockquote>\n<p>I believe this requires further discussion before implementation.<br>\nHow to determine the <code>number</code> and how to define the error. </p>\n</blockquote>",
        "id": 495946978,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737880283
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113#issuecomment-2616110541\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113\">PR #10113</a>:</p>\n<blockquote>\n<p>I think it'd be reasonable to pick a small arbitrary number, for example 10, as the limit of turns of the loop. If something is spuriously readable/writable 10 times in a row that seems indicative of a bug</p>\n</blockquote>",
        "id": 496153245,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737992626
    },
    {
        "content": "<p>Heap-Hop updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113\">PR #10113</a>.</p>",
        "id": 496260863,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738042204
    },
    {
        "content": "<p>Heap-Hop edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113\">PR #10113</a>.</p>",
        "id": 496261034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738042340
    },
    {
        "content": "<p>Heap-Hop edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113\">PR #10113</a>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;<br>\nissue #9667 </p>\n<p>The <code>InputStream::ready</code> can be prematurely triggered by <code>io::ErrorKind::WouldBlock</code>. This PR ensure that <code>blocking_</code> functions return a valid non-empty result.</p>\n</blockquote>",
        "id": 496261115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738042427
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113#issuecomment-2627817143\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113\">PR #10113</a>:</p>\n<blockquote>\n<p>I believe the test failure can be fixed by checking if the blocking_read size is zero, and in such a case avoiding the loop entirely or basically doing the read once and returning the result instead of turning the loop again. </p>\n</blockquote>",
        "id": 497049927,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738342909
    },
    {
        "content": "<p>Heap-Hop updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113\">PR #10113</a>.</p>",
        "id": 497353899,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738569387
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10113\">PR #10113</a>.</p>",
        "id": 497418182,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1738585111
    }
]