[
    {
        "content": "<p>alexcrichton assigned fitzgen to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11749\">issue #11749</a>.</p>",
        "id": 541857853,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759030324
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11749\">issue #11749</a>:</p>\n<blockquote>\n<p>This input:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (type $a (array (mut i64)))\n  (elem declare externref)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func $f2\n    (local (ref null any))\n    data.drop 0\n    call $f2\n\n    local.get 0\n    ref.test nullref\n    unreachable\n  )\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func (export \"\") unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func (export \"entry\") (result externref)\n    call $f1\n\n    i32.const 0\n    array.new_default $a\n    i32.const 0\n    array.new_default $a\n    elem.drop 0\n    unreachable\n  )\n  (func $f1 call $f2 call $f2)\n  (data)\n)\n</code></pre></div>\n<p>fails with this command:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Ccache</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">pulley64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Oopt</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wfunction</span><span class=\"o\">-</span><span class=\"n\">references</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wgc</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wunknown</span><span class=\"o\">-</span><span class=\"n\">imports</span><span class=\"o\">-</span><span class=\"n\">default</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">entry</span><span class=\"w\"> </span><span class=\"n\">testcase0</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n<span class=\"o\">..</span><span class=\"p\">.</span>\n\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">environ</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">builtin</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">353</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">:</span>\n<span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"bp\">Self</span><span class=\"p\">::</span><span class=\"n\">len</span><span class=\"p\">()</span>\n<span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n</code></pre></div>\n<p>I believe the cause of this is <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11630\">https://github.com/bytecodealliance/wasmtime/pull/11630</a> so cc @fitzgen </p>\n</blockquote>",
        "id": 541857856,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759030325
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the fuzz-bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11749\">Issue #11749</a>.</p>",
        "id": 541857857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759030325
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11749#issuecomment-3342239041\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11749\">issue #11749</a>:</p>\n<blockquote>\n<p>The test here is super brittle  and I did my best to reduce it but was unable to go much further. I've written a more custom test at <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11750\">https://github.com/bytecodealliance/wasmtime/pull/11750</a> which reproduces this at a much lower level much quicker. </p>\n<p>@fitzgen would you be ok looking into this? I'm assuming the index bits are fresh enough in your head it might be easier that way, but I can also give it a stab too.</p>\n</blockquote>",
        "id": 541857926,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759030416
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11749#issuecomment-3348151794\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11749\">issue #11749</a>:</p>\n<blockquote>\n<blockquote>\n<p><a href=\"https://github.com/fitzgen\">@fitzgen</a> would you be ok looking into this? I'm assuming the index bits are fresh enough in your head it might be easier that way, but I can also give it a stab too.</p>\n</blockquote>\n<p>Yeah I can look into this, thanks for the ping</p>\n</blockquote>",
        "id": 542098095,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759166586
    },
    {
        "content": "<p>fitzgen closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11749\">issue #11749</a>:</p>\n<blockquote>\n<p>This input:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (type $a (array (mut i64)))\n  (elem declare externref)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func $f2\n    (local (ref null any))\n    data.drop 0\n    call $f2\n\n    local.get 0\n    ref.test nullref\n    unreachable\n  )\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func (export \"\") unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func unreachable)\n  (func (export \"entry\") (result externref)\n    call $f1\n\n    i32.const 0\n    array.new_default $a\n    i32.const 0\n    array.new_default $a\n    elem.drop 0\n    unreachable\n  )\n  (func $f1 call $f2 call $f2)\n  (data)\n)\n</code></pre></div>\n<p>fails with this command:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Ccache</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">pulley64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Oopt</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wfunction</span><span class=\"o\">-</span><span class=\"n\">references</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wgc</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Wunknown</span><span class=\"o\">-</span><span class=\"n\">imports</span><span class=\"o\">-</span><span class=\"n\">default</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">entry</span><span class=\"w\"> </span><span class=\"n\">testcase0</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n<span class=\"o\">..</span><span class=\"p\">.</span>\n\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">environ</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">builtin</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">353</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">:</span>\n<span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"bp\">Self</span><span class=\"p\">::</span><span class=\"n\">len</span><span class=\"p\">()</span>\n<span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n</code></pre></div>\n<p>I believe the cause of this is <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11630\">https://github.com/bytecodealliance/wasmtime/pull/11630</a> so cc @fitzgen </p>\n</blockquote>",
        "id": 542351391,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759260168
    }
]