[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/dicej\">dicej</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11460\">PR #11460</a>.</p>",
        "id": 535189194,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755630879
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11460\">PR #11460</a> from <code>alexcrichton:memory-growth-async</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This is an analog of <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11442\">https://github.com/bytecodealliance/wasmtime/pull/11442</a> but for memories. This had a little more<br>\nimpact due to memories being hooked into GC operations. Further<br>\nrefactoring of GC operations to make them safer/more-async is deferred<br>\nto a future PR and for now it's \"no worse than before\". This is another<br>\nstep towards <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11430\">https://github.com/bytecodealliance/wasmtime/pull/11430</a> and enables removing a longstanding <code>unsafe</code> block<br>\nin <code>runtime/memory.rs</code> which previously could not be removed.</p>\n<p>One semantic change from this is that growth of a shared memory no<br>\nlonger uses an async limiter. This is done to keep growth of a shared<br>\nmemory consistent with creation of a shared memory where no limits are<br>\napplied. This is due to the cross-store nature of shared memories which<br>\nmeans that we can't tie growth to any one particular store. This<br>\nadditionally fixes an issue where an rwlock write guard was otherwise<br>\nheld across a <code>.await</code> point which creates a non-<code>Send</code> future, closing<br>\na possible soundness hole in Wasmtime.</p>\n</blockquote>",
        "id": 535189195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755630879
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11460\">PR #11460</a>.</p>",
        "id": 535189196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755630879
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11460#issuecomment-3201925847\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11460\">PR #11460</a>:</p>\n<blockquote>\n<p>Note that the first commit here is from <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11459\">https://github.com/bytecodealliance/wasmtime/pull/11459</a></p>\n</blockquote>",
        "id": 535189228,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755630896
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11460\">PR #11460</a>.</p>",
        "id": 535189419,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755631014
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11460#issuecomment-3202147322\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11460\">PR #11460</a>:</p>\n<blockquote>\n<blockquote>\n<p>One semantic change from this is that growth of a shared memory no<br>\nlonger uses an async limiter. This is done to keep growth of a shared<br>\nmemory consistent with creation of a shared memory where no limits are<br>\napplied. This is due to the cross-store nature of shared memories which<br>\nmeans that we can't tie growth to any one particular store.</p>\n</blockquote>\n<p>Seems like we should call the async limiter of the store that is doing the growth, that way an embedder could still guarantee that all growth is limited from a holistic system point of view, even if one particular store's limiter doesn't handle all the grow calls.</p>\n<p>Mind filing a follow up issue for this?</p>\n</blockquote>",
        "id": 535199899,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755635800
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11460#issuecomment-3202156569\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11460\">PR #11460</a>:</p>\n<blockquote>\n<p>That's theoretically possible yeah but it's already preexisting that the resource limiter isn't used when a <code>SharedMemory</code> is created through the embedder API. There's also still the issue that the rwlock write guard can't be held across an await point which would be a much more invasive change.</p>\n<p>I've added a note to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4245\">https://github.com/bytecodealliance/wasmtime/issues/4245</a> to accompany similar issues in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4240\">https://github.com/bytecodealliance/wasmtime/issues/4240</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4244\">https://github.com/bytecodealliance/wasmtime/issues/4244</a></p>\n</blockquote>",
        "id": 535200300,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755636025
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11460#pullrequestreview-3133766067\">PR review</a>.</p>",
        "id": 535200606,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755636176
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11460#discussion_r2286284999\">PR review comment</a>:</p>\n<blockquote>\n<p>Mind adding a safety comment while you're here?</p>\n</blockquote>",
        "id": 535200607,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755636176
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11460\">PR #11460</a>.</p>",
        "id": 535201780,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755636804
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11460\">PR #11460</a>.</p>",
        "id": 535201791,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755636810
    },
    {
        "content": "<p>alexcrichton has disabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11460\">PR #11460</a>.</p>",
        "id": 535204286,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755638059
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11460\">PR #11460</a>.</p>",
        "id": 535205652,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755638854
    }
]