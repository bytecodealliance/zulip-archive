[
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasm-proposal:component-model-async label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11243\">Issue #11243</a>.</p>",
        "id": 528882966,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752591891
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11243\">issue #11243</a>:</p>\n<blockquote>\n<p>Currently in the component-model-async implementation all future/stream reads/writes have items moved into a helper task and everything is coordinated via channels. This means that there's no way to cancel an active read/write  of a future/stream in a way that the outcome of the cancellation is deterministically known. Cancelling a write may or may not write the values that were previously sent, and cancelling a read may or may not drop a value already read. Supporting this will require new APIs in Wasmtime in addition to new infrastructure within the future/stream implementation.</p>\n</blockquote>",
        "id": 528882967,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752591891
    },
    {
        "content": "<p>rvolosatovs <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11243#issuecomment-3269360443\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11243\">issue #11243</a>:</p>\n<blockquote>\n<p>@alexcrichton @dicej has this been addressed now or is there still work to be done?</p>\n</blockquote>",
        "id": 538371445,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757404016
    },
    {
        "content": "<p>dicej closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11243\">issue #11243</a>:</p>\n<blockquote>\n<p>Currently in the component-model-async implementation all future/stream reads/writes have items moved into a helper task and everything is coordinated via channels. This means that there's no way to cancel an active read/write  of a future/stream in a way that the outcome of the cancellation is deterministically known. Cancelling a write may or may not write the values that were previously sent, and cancelling a read may or may not drop a value already read. Supporting this will require new APIs in Wasmtime in addition to new infrastructure within the future/stream implementation.</p>\n</blockquote>",
        "id": 538433488,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757423253
    },
    {
        "content": "<p>dicej <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11243#issuecomment-3270668385\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11243\">issue #11243</a>:</p>\n<blockquote>\n<p>AFAIK, yes.  I'm going to close this, but feel free to reopen it if appropriate, Alex.</p>\n</blockquote>",
        "id": 538433489,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757423254
    }
]