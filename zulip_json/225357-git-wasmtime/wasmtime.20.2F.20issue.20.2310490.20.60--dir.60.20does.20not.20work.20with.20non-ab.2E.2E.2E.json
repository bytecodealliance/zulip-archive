[
    {
        "content": "<p><a href=\"https://github.com/folkertdev\">folkertdev</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10490\">Issue #10490</a>.</p>",
        "id": 509020447,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743336891
    },
    {
        "content": "<p>folkertdev opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10490\">issue #10490</a>:</p>\n<blockquote>\n<p>I'm trying to write a runner in <code>.cargo/config.toml</code> that passes a subdirectory to wasmtime. I'd like that path to be relative, so it works anywhere, not just on my machine. However, I can't get this to work:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[target.wasm32-wasip2]</span>\n<span class=\"n\">runner</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"wasmtime --dir ./my-subdir\"</span>\n</code></pre></div>\n<p>this command works on the command line (but won't in the <code>cargo/config.toml</code> because the <code>$PWD</code> variable is not expanded)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"s\">\"$PWD/test-libz-rs-sys\"</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">deps</span><span class=\"o\">/</span><span class=\"n\">test_libz_rs_sys</span><span class=\"o\">-</span><span class=\"n\">b4a8595daba8c0ca</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<p>but this does not</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"s\">\"./test-libz-rs-sys\"</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">deps</span><span class=\"o\">/</span><span class=\"n\">test_libz_rs_sys</span><span class=\"o\">-</span><span class=\"n\">b4a8595daba8c0ca</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<p>nor does this</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"s\">\"test-libz-rs-sys\"</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">deps</span><span class=\"o\">/</span><span class=\"n\">test_libz_rs_sys</span><span class=\"o\">-</span><span class=\"n\">b4a8595daba8c0ca</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<p>I've seen that just <code>\".\"</code> is accepted, so I'm confused why <code>\"./test-libz-rs-sys\"</code> does not work. It would be really convenient if the path is expanded (though maybe there are security issues that I'm overlooking?). In any case the current behavior is unexpected (to me).</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: <code>wasmtime 31.0.0 (7a9be587f 2025-03-20)</code></p>\n<p>Operating system: linux</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?<br>\n</p>\n</blockquote>",
        "id": 509020449,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743336892
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10490#issuecomment-2764569062\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10490\">issue #10490</a>:</p>\n<blockquote>\n<p>The matching of open calls to pre-opened directories happens inside wasi-libc, not inside wasmtime: <a href=\"https://github.com/WebAssembly/wasi-libc/blob/main/libc-bottom-half/sources/preopens.c\">https://github.com/WebAssembly/wasi-libc/blob/main/libc-bottom-half/sources/preopens.c</a> Additionally wasi doesn't have any concept of a current working directory, so if you have a pre-opened directory with a relative path, you can only access it from the wasm module by using a relative path when opening.</p>\n</blockquote>",
        "id": 509026879,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743342069
    },
    {
        "content": "<p>folkertdev <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10490#issuecomment-2764579951\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10490\">issue #10490</a>:</p>\n<blockquote>\n<p>Ok, knowing a bit more about the internal implementation makes the current behavior make more sense. In hindsight the documentation also says that, but that's not what I read before.</p>\n<p>So then, should a <code>runner</code> like in my example work somehow (idk, with a new flag that expands the path)? In our case we need  that because we use a rust workspace, and hence need to open paths relative to <code>CARGO_MANIFEST_DIR</code>.</p>\n</blockquote>",
        "id": 509029124,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743343671
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10490#issuecomment-2767077126\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10490\">issue #10490</a>:</p>\n<blockquote>\n<p>Under the hood here the basic idea is that a host path is presented to the guest under some name. The guest is then responsible for translating all of its path accesses as relative to whatever has been provided. The meaning of <code>--dir foo</code> means that the host directory \"foo\" is presented to the guest as \"foo\" as well. You can also pass <code>--dir foo::bar</code> though to use the host directory \"foo\" but the guest directory \"bar\". I realize though I might also be reiterating things you already know here.</p>\n<p>What it means for your runner though sort of depends, but my guess is that there's probably not a great answer at this time. Ideally what would happen is you would interpose yourself when passing paths to the guest so the guest would open a wasm-specific path. It looks like you're \"just\" running <code>cargo test</code> though and that's what's not working, and in such a situation there's not much recourse for changing wasm's understanding of <code>CARGO_MANIFEST_DIR</code>, a compile-time variable.</p>\n<p>In lieu of that though one thing I do is I typically have <code>--dir .</code> set in my <code>runner</code> command-line. It's a bad approximation of sorts but it gets <code>cargo test</code> working mostly so long as you don't use absolute paths.</p>\n</blockquote>",
        "id": 509275118,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743446026
    },
    {
        "content": "<p>folkertdev closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10490\">issue #10490</a>:</p>\n<blockquote>\n<p>I'm trying to write a runner in <code>.cargo/config.toml</code> that passes a subdirectory to wasmtime. I'd like that path to be relative, so it works anywhere, not just on my machine. However, I can't get this to work:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[target.wasm32-wasip2]</span>\n<span class=\"n\">runner</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"wasmtime --dir ./my-subdir\"</span>\n</code></pre></div>\n<p>this command works on the command line (but won't in the <code>cargo/config.toml</code> because the <code>$PWD</code> variable is not expanded)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"s\">\"$PWD/test-libz-rs-sys\"</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">deps</span><span class=\"o\">/</span><span class=\"n\">test_libz_rs_sys</span><span class=\"o\">-</span><span class=\"n\">b4a8595daba8c0ca</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<p>but this does not</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"s\">\"./test-libz-rs-sys\"</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">deps</span><span class=\"o\">/</span><span class=\"n\">test_libz_rs_sys</span><span class=\"o\">-</span><span class=\"n\">b4a8595daba8c0ca</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<p>nor does this</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"s\">\"test-libz-rs-sys\"</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasip2</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">deps</span><span class=\"o\">/</span><span class=\"n\">test_libz_rs_sys</span><span class=\"o\">-</span><span class=\"n\">b4a8595daba8c0ca</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<p>I've seen that just <code>\".\"</code> is accepted, so I'm confused why <code>\"./test-libz-rs-sys\"</code> does not work. It would be really convenient if the path is expanded (though maybe there are security issues that I'm overlooking?). In any case the current behavior is unexpected (to me).</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: <code>wasmtime 31.0.0 (7a9be587f 2025-03-20)</code></p>\n<p>Operating system: linux</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?<br>\n</p>\n</blockquote>",
        "id": 509276053,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743446341
    },
    {
        "content": "<p>folkertdev <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10490#issuecomment-2767089238\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10490\">issue #10490</a>:</p>\n<blockquote>\n<p>Yeah the part I was missing is that it's the literal string that gets mapped, not some understanding of the file system. </p>\n<p>Well, we've hardcoded the path for github CI now, that will have to do.</p>\n</blockquote>",
        "id": 509276059,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743446342
    }
]