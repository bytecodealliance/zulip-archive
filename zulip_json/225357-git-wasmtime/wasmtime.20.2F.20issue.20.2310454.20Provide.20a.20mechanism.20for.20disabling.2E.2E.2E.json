[
    {
        "content": "<p>Stebalien opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10454\">issue #10454</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Provide some mechanism for disabling on-by-default config options without having to enable their associated cargo feature flags.</p>\n<h4>Benefit</h4>\n<p>The wasmtime <a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html\">Config</a> has a bunch of options like <a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.wasm_reference_types\">Config::wasm_reference_types</a> that are enabled by-default if the corresponding cargo feature is enabled. Unfortunately, these config options are gated by the same feature flags making it impossible to turn them off without enabling the underlying cargo feature.</p>\n<p>This is fine when building an application, but is a problem for library authors. If a library author wants to configure wasmtime in a specific way, they need to enable features (in cargo) they don't actually want so they can disable them in the config. Unfortunately, there's no way to actually _detect_ if the feature has been enabled.</p>\n<h4>Implementation</h4>\n<p>The simplest solution is to provide some form of <code>Config::minimal()</code> constructor (or something like that) that turns off all optional features. New versions of wasmtime may make some of these features mandatory, but, IMO, that's fine. I'm mostly looking for predictability.</p>\n<h4>Alternatives</h4>\n<p>Another option is to let users call all config methods even if the associated capabilities are disabled via cargo features:</p>\n<ol>\n<li>Remove the <code>#[cfg(feature = ...)]</code> gates on all <code>Config</code> methods and their associated fields in the config.</li>\n<li>Return an error from <code>Engine::new</code> if unsupported features are requested.</li>\n</ol>\n<p>The main drawback is that we'll lose the compile-time check on whether or not the feature is enabled.</p>\n</blockquote>",
        "id": 507343813,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742582109
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10454#issuecomment-2744184757\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10454\">issue #10454</a>:</p>\n<blockquote>\n<p>Your motivation definitely makes sense, however I think the alternative you describe is probably the best approach here, mainly because</p>\n<ol>\n<li>\n<p>I think that a <code>Config::minimal()</code> is a little too ambiguous and some people might think it means \"good config for embedded use with minimal platform assumptions\" while other might think it means \"good config for my target platform with minimal wasm features\" and I don't think it is worth trying to word-smith our way out of that kind of confusion or whatever and that trying to make everyone happy will make no one happy.</p>\n</li>\n<li>\n<p>We already do some config validation during engine creation and return errors if incompatible config options are set and things like that.</p>\n</li>\n</ol>\n</blockquote>",
        "id": 507345173,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742582641
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10454#issuecomment-2744199262\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10454\">issue #10454</a>:</p>\n<blockquote>\n<p>Agreed yeah, I think it'd be reasonable to un-gate most of the <code>Config</code> methods and have them always available</p>\n</blockquote>",
        "id": 507346469,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742583114
    },
    {
        "content": "<p>Stebalien <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10454#issuecomment-2744210268\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10454\">issue #10454</a>:</p>\n<blockquote>\n<p>I'm quite happy with either option and I'm happy to take a stab at implementing this.</p>\n</blockquote>",
        "id": 507347093,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742583360
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10454#issuecomment-2744255089\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10454\">issue #10454</a>:</p>\n<blockquote>\n<blockquote>\n<p>I'm quite happy with either option and I'm happy to take a stab at implementing this.</p>\n</blockquote>\n<p>Great! Let me know (here or zulip) if you need any pointers or anything like that <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 507350624,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742584785
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10454#issuecomment-2744314392\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10454\">issue #10454</a>:</p>\n<blockquote>\n<p>Would it make sense to have a method which returns a <code>Config</code> containing exactly the features in the lime1 target (as defined in the tool convensions repo) without any other features enabled?</p>\n</blockquote>",
        "id": 507355968,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742586801
    },
    {
        "content": "<p>Stebalien <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10454#issuecomment-2744375383\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10454\">issue #10454</a>:</p>\n<blockquote>\n<p>I have a PR here (<a href=\"https://github.com/bytecodealliance/wasmtime/pull/10455\">https://github.com/bytecodealliance/wasmtime/pull/10455</a>) but I need a small clarification on the default status of reference types with the \"gc\" feature disabled.</p>\n</blockquote>",
        "id": 507360639,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742588610
    }
]