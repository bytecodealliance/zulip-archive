[
    {
        "content": "<p>anlavandier opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11705\">issue #11705</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>#11628 adds support for accessing the store in <code>bindgen!</code>-generated import function in traits. This is great but currently even when generating with <code>async: false</code> this is gated behind the <code>component-model-async</code> feature which is itself requires <code>std</code>. The proposed feature would be to un-gate the improvements of the aforementioned PR #11628 for synchronous imports.</p>\n<h4>Benefit</h4>\n<p>This would allow users using <code>wasmtime</code> in <code>no_std</code> embedded systems to also access the store in their generated import functions.</p>\n<h4>Implementation</h4>\n<p>I don't know all of the implications but the discussions in #11590 suggest that un-gating the <code>Access</code> struct would be a start.</p>\n<h4>Alternatives</h4>\n<p>Without this feature, <code>no_std</code> that need/want to access the store in their imports have to do so outside of the component-model. </p>\n</blockquote>",
        "id": 539960927,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758099081
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasm-proposal:component-model label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11705\">Issue #11705</a>.</p>",
        "id": 540028395,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758118867
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasmtime:platform-support label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11705\">Issue #11705</a>.</p>",
        "id": 540028396,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758118867
    },
    {
        "content": "<p>anlavandier edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11705\">issue #11705</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>#11628 adds support for accessing the store in <code>bindgen!</code>-generated import function in traits. This is great but currently even when generating with <code>async: false</code> this is gated behind the <code>component-model-async</code> feature which is itself requires <code>std</code>. The proposed feature would be to un-gate the improvements of the aforementioned PR #11628 for synchronous imports.</p>\n<h4>Benefit</h4>\n<p>This would allow users using <code>wasmtime</code> in <code>no_std</code> embedded systems to also access the store in their generated import functions.</p>\n<h4>Implementation</h4>\n<p>I don't know all of the implications but the discussions in #11590 suggest that un-gating the <code>Access</code> struct would be a start.</p>\n<h4>Alternatives</h4>\n<p>Without this feature, <code>no_std</code> users that need/want to access the store in their imports have to do so outside of the component-model. </p>\n</blockquote>",
        "id": 540035579,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758120449
    },
    {
        "content": "<p>anlavandier <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11705#issuecomment-3319624954\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11705\">issue #11705</a>:</p>\n<blockquote>\n<p>@alexcrichton I looked briefly at the code base and it seems like the <code>Access</code> struct is pretty deeply intermixed with async functionality. After some testing, making the <code>component-model-async</code> feature <code>no_std</code> compatible is also probably not happening. Do you think that coming up with an <code>AccessSync</code> struct that only replicates what's needed from <code>Access</code> to work with <code>imports: store</code> functions and resources could be possible ?</p>\n</blockquote>",
        "id": 540829780,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758553651
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11705#issuecomment-3329524645\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11705\">issue #11705</a>:</p>\n<blockquote>\n<p>Code-wise it's pretty intertwined right now yeah, but conceptually there shouldn't be any need to couple the two together. I'd rather not add a new type to the preexisting matrix of types and instead work on getting <code>Access</code> exposed even when <code>component-model-async</code> is disabled.</p>\n</blockquote>",
        "id": 541262507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1758728421
    }
]