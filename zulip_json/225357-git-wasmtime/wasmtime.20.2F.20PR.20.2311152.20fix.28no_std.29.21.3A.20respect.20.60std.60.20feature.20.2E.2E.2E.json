[
    {
        "content": "<p>salmans opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a> from <code>salmans:win-unix-no-std</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This PR fixes feature flag handling to properly respect the std feature when targeting Windows/Unix platforms.</p>\n<p>Breaking Change: This fix will disable standard library features for dependents that use wasmtime with <code>default-features = false</code>.</p>\n<p>Changes:</p>\n<p>- Updated feature dependencies in <code>Cargo.toml</code> files to conditionally enable std-dependent features<br>\n  - Added proper feature gating in runtime modules for <code>no_std</code> compatibility<br>\n  - Modified VM system module to respect the std feature flag on Windows/Unix targets</p>\n<p>The fix ensures that when wasmtime is used without default features, it properly builds in <code>no_std</code> on all supported platforms.</p>\n</blockquote>",
        "id": 526153238,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751059101
    },
    {
        "content": "<p>salmans submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#pullrequestreview-2967997887\">PR review</a>.</p>",
        "id": 526153327,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751059170
    },
    {
        "content": "<p>salmans created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2172887453\">PR review comment</a>:</p>\n<blockquote>\n<p>It's not clear what the dependency on <code>rustix</code> does here. The code compiles and passes all tests without it. Should we remove these lines?</p>\n</blockquote>",
        "id": 526153328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751059170
    },
    {
        "content": "<p>salmans submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#pullrequestreview-2968002032\">PR review</a>.</p>",
        "id": 526153584,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751059343
    },
    {
        "content": "<p>salmans created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2172889994\">PR review comment</a>:</p>\n<blockquote>\n<p>We could implement and provide <code>no_std</code> variations of <code>mod unix</code> and <code>mod windows</code> instead of leaving it up to the user (These are the existing implementations: <a href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/wasmtime/src/runtime/vm/sys\">https://github.com/bytecodealliance/wasmtime/tree/main/crates/wasmtime/src/runtime/vm/sys</a>).</p>\n</blockquote>",
        "id": 526153585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751059343
    },
    {
        "content": "<p>salmans updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 526155114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751060428
    },
    {
        "content": "<p>salmans updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 526156624,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751061707
    },
    {
        "content": "<p>salmans updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 526158106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751062966
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#issuecomment-3014502205\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>:</p>\n<blockquote>\n<p>Thanks for the PR! Could you elaborate on the motivation for this change as well? For example I'm not aware of a target that's <code>cfg(unix)</code> or <code>cfg(windows)</code> and doesn't have <code>std</code>.</p>\n</blockquote>",
        "id": 526158662,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751063504
    },
    {
        "content": "<p>salmans submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#pullrequestreview-2968102263\">PR review</a>.</p>",
        "id": 526158801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751063644
    },
    {
        "content": "<p>salmans created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2172944156\">PR review comment</a>:</p>\n<blockquote>\n<p>I made this change to fix <code>cargo check -p wasmtime --no-default-features --features async,std</code> (previously <code>cargo check -p wasmtime --no-default-features --features async</code>) but I'm not sure if that's an expected behavior change.</p>\n</blockquote>",
        "id": 526158802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751063644
    },
    {
        "content": "<p>salmans <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#issuecomment-3014512931\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>:</p>\n<blockquote>\n<p>@alexcrichton I’m experimenting with running Wasmtime (with Pulley) in the Windows kernel. The goal is to use WebAssembly to enable limited changes to kernel logic without requiring a full software update or system restart. I’m exploring Wasm as a potential alternative to eBPF for Windows.</p>\n</blockquote>",
        "id": 526159290,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751064078
    },
    {
        "content": "<p><strong>salmans</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a> as ready for review.</p>",
        "id": 526159346,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751064129
    },
    {
        "content": "<p><strong>salmans</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 526159347,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751064130
    },
    {
        "content": "<p><strong>salmans</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 526159348,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751064130
    },
    {
        "content": "<p><strong>salmans</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 526159349,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751064130
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#issuecomment-3019393016\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>:</p>\n<blockquote>\n<p>Oh nice! Do you know if there's a <code>#[cfg]</code> specific to the target that you're working with that this could be keyed on instead of <code>feature = \"std\"</code>? While the breakage here isn't the end of the world and something we could document, I'd prefer to shape the change a bit differently. For example there's no testing on CI that a no_std build works on Linux/Windows so this is something that will likely easily regress over time.</p>\n</blockquote>",
        "id": 526416757,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751293801
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#pullrequestreview-2971480004\">PR review</a>.</p>",
        "id": 526417679,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751294059
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2175228361\">PR review comment</a>:</p>\n<blockquote>\n<p>mmap and the like is put behind the <code>mm</code> feature. It likely passes without because of the</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[target.</span><span class=\"s1\">'cfg(unix)'</span><span class=\"k\">.dependencies]</span>\n<span class=\"n\">rustix</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">optional</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"mm\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"param\"</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>elsewhere in this file.</p>\n</blockquote>",
        "id": 526417681,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751294060
    },
    {
        "content": "<p>salmans <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#issuecomment-3019921026\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>:</p>\n<blockquote>\n<p>No, I don't think there's any specific target for (windows/unix) kernel. But just to clarify, are you suggesting that turning off <code>std</code> should still pull in standard library to avoid issues like the ones with CI? If so, an alternative solution that I can think of is to guard no_std with a new flag like <code>override-std</code> or <code>force-no-std</code>.</p>\n</blockquote>",
        "id": 526442534,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751301691
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#pullrequestreview-2972220616\">PR review</a>:</p>\n<blockquote>\n<p>Sorry I can be more clear, my concern was a big vague there. I originally had the gut reaction of \"this feels weird\" but I'm effectively getting over that gut reaction. There's still changes I'd like to see in this PR, but I can try to be more clear about them. I've left various review comments below.</p>\n</blockquote>",
        "id": 526460851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751307896
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2175642778\">PR review comment</a>:</p>\n<blockquote>\n<p>One change I'd like to see in this PR is that the <code>std</code> feature should not be necessary to just build the crate, even on Linux/Windows targets. In essence these CI changes shouldn't be necessary.</p>\n<p>I tested locally and sketched out <a href=\"https://github.com/salmans/wasmtime/pull/1\">https://github.com/salmans/wasmtime/pull/1</a> which I believe would enable backing out these CI changes and would ensure that <code>std</code> is not a necessary feature even on Linux/Windows targets.</p>\n</blockquote>",
        "id": 526460852,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751307897
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2175641365\">PR review comment</a>:</p>\n<blockquote>\n<p>Can you clarify why this change was necessary? I believe the <code>std</code> feature here is off-by-default and never enabled by Wasmtime?</p>\n</blockquote>",
        "id": 526460854,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751307897
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2175645739\">PR review comment</a>:</p>\n<blockquote>\n<p>Mind applying this diff:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/crates/wasmtime/src/runtime/fiber.rs b/crates/wasmtime/src/runtime/fiber.rs</span>\n<span class=\"gh\">index 4dcd59e532..8aa0033c4f 100644</span>\n<span class=\"gd\">--- a/crates/wasmtime/src/runtime/fiber.rs</span>\n<span class=\"gi\">+++ b/crates/wasmtime/src/runtime/fiber.rs</span>\n<span class=\"gu\">@@ -343,9 +343,7 @@ impl&lt;T&gt; StoreContextMut&lt;'_, T&gt; {</span>\n<span class=\"w\"> </span>        self,\n<span class=\"w\"> </span>        f: impl FnOnce(StoreContextMut&lt;'_, T&gt;) -&gt; Pin&lt;Box&lt;dyn Future&lt;Output = R&gt; + Send + '_&gt;&gt;,\n<span class=\"w\"> </span>    ) -&gt; Result&lt;R&gt; {\n<span class=\"gd\">-        BlockingContext::with(self.0, |store, cx| {</span>\n<span class=\"gd\">-            cx.block_on(f(StoreContextMut(store)).as_mut())</span>\n<span class=\"gd\">-        })</span>\n<span class=\"gi\">+        self.with_blocking(|store, cx| cx.block_on(f(store).as_mut()))</span>\n<span class=\"w\"> </span>    }\n\n<span class=\"w\"> </span>    /// Creates a `BlockingContext` suitable for blocking on futures or\n<span class=\"gu\">@@ -354,7 +352,6 @@ impl&lt;T&gt; StoreContextMut&lt;'_, T&gt; {</span>\n<span class=\"w\"> </span>    /// # Panics\n<span class=\"w\"> </span>    ///\n<span class=\"w\"> </span>    /// Panics if this is invoked outside the context of a fiber.\n<span class=\"gd\">-    #[allow(dead_code)]</span>\n<span class=\"w\"> </span>    pub(crate) fn with_blocking&lt;R&gt;(\n<span class=\"w\"> </span>        self,\n<span class=\"w\"> </span>        f: impl FnOnce(StoreContextMut&lt;'_, T&gt;, &amp;mut BlockingContext&lt;'_, '_&gt;) -&gt; R,\n</code></pre></div>\n<p>to work around the need for the annotation? A bit of a hack but hopefully not too bad.</p>\n</blockquote>",
        "id": 526460856,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751307897
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2175649433\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah it's fine to drop <code>rustix/mm</code> here due to our preexisting dep directive and if <code>dep:rustix</code> can be dropped that also seems reasonable. It's perhaps already included elsewhere.</p>\n</blockquote>",
        "id": 526460857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751307897
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2175648692\">PR review comment</a>:</p>\n<blockquote>\n<p>While theoretically possible this would primarily require an implementation of TLS in a no_std context which, as far as I know, isn't available?</p>\n</blockquote>",
        "id": 526460858,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751307897
    },
    {
        "content": "<p>salmans updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 526482798,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751315670
    },
    {
        "content": "<p>salmans submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#pullrequestreview-2972581872\">PR review</a>.</p>",
        "id": 526482861,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751315702
    },
    {
        "content": "<p>salmans created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2175851545\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks you!</p>\n</blockquote>",
        "id": 526482862,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751315703
    },
    {
        "content": "<p>salmans submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#pullrequestreview-2972649472\">PR review</a>.</p>",
        "id": 526484576,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751316518
    },
    {
        "content": "<p>salmans created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2175897769\">PR review comment</a>:</p>\n<blockquote>\n<p>You're right, we don't need that change. My bad!</p>\n</blockquote>",
        "id": 526484578,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751316518
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 526484845,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751316631
    },
    {
        "content": "<p>salmans updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 526485230,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751316830
    },
    {
        "content": "<p>salmans updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 526486111,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751317234
    },
    {
        "content": "<p>salmans submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#pullrequestreview-2972759391\">PR review</a>.</p>",
        "id": 526487826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751318092
    },
    {
        "content": "<p>salmans created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2175977494\">PR review comment</a>:</p>\n<blockquote>\n<p>The change resolves almost all CI issues except for stack switching checks: <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/15983572956/job/45083266148?pr=11152\">https://github.com/bytecodealliance/wasmtime/actions/runs/15983572956/job/45083266148?pr=11152</a></p>\n</blockquote>",
        "id": 526487827,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751318092
    },
    {
        "content": "<p>salmans updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 526635131,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751383846
    },
    {
        "content": "<p>salmans <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#issuecomment-3024601077\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>:</p>\n<blockquote>\n<p>@alexcrichton after more experimentation on Windows, I realized <code>win.rs</code> in <code>jit-icache-coherence</code> pulls <code>std</code>. I'm happy to explore a no_std implementation for it in a separate PR but for now, I just pushed a new <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152/commits/3587cfa95dfcb53cf52ad4667b9159010c7e71ed\">commit</a> to disable icache coherence in Windows no_std. If that change makes sense, I'm going to address the remaining CI issues before finalizing the PR. Thanks again for your help!</p>\n</blockquote>",
        "id": 526638919,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751385092
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#issuecomment-3025101893\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>:</p>\n<blockquote>\n<p>For the stack switching issues can you update the <code>stack-switching</code> cargo feature to require <code>std</code>? </p>\n</blockquote>",
        "id": 526662766,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751394435
    },
    {
        "content": "<p>salmans updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 526664815,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751395426
    },
    {
        "content": "<p>salmans updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 526667142,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751396488
    },
    {
        "content": "<p>salmans updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 526667655,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751396707
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2178695214\">PR review comment</a>:</p>\n<blockquote>\n<p>For this it's a pretty critical operation here to manage the icache so we'll want to avoid this <code>#[cfg]</code> which makes it difficult to see when it's used and when it isn't. I think the best solution here might be to sidestep the problem entirely and update <a href=\"https://github.com/bytecodealliance/wasmtime/blob/5ac3f799820812b70b88411d9e9ac1833a98069c/crates/wasmtime/build.rs#L12\">this line</a> to take the <code>std</code> feature into account. For example that could be <code>(unix || windows) &amp;&amp; cfg!(feature = \"std\")</code> or something like that. A comment there would be good to explain that if <code>std</code> is disabled then it's not supported in Wasmtime right now to interact with the OS which means that it's no longer supported.</p>\n</blockquote>",
        "id": 526693663,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751410536
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#pullrequestreview-2977183248\">PR review</a>.</p>",
        "id": 526693665,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751410536
    },
    {
        "content": "<p>salmans submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#pullrequestreview-2979646068\">PR review</a>.</p>",
        "id": 526829156,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751470124
    },
    {
        "content": "<p>salmans created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2180365226\">PR review comment</a>:</p>\n<blockquote>\n<p>I tried that change but it doesn't solve the problem: Wasmtime still pulls <code>std</code> through <code>jit-icache-coherence</code> in <code>no_std</code> Windows.<br>\nAnother possible solution is to use <code>libc</code> in <code>jit-icache-coherence</code> for <code>no_std</code> Windows at this <a href=\"https://github.com/bytecodealliance/wasmtime/blob/5ac3f799820812b70b88411d9e9ac1833a98069c/crates/jit-icache-coherence/src/lib.rs#L82\">line</a>. For that, we could add a new <code>std</code> feature flag to <code>jit-icache-coherence</code> and enable it if <code>std</code> in <code>wasmtime</code> is enabled.</p>\n</blockquote>",
        "id": 526829157,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751470124
    },
    {
        "content": "<p>salmans updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 526850172,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751477554
    },
    {
        "content": "<p>salmans submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#pullrequestreview-2980074992\">PR review</a>.</p>",
        "id": 526850848,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751477862
    },
    {
        "content": "<p>salmans created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2180625188\">PR review comment</a>:</p>\n<blockquote>\n<p>I just pushed a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152/commits/ceae3ffa2e00abd0aa1086c55c22f4cce10e7019\">new commit</a> that implements the change suggested above but happy to implement a different solution if this is problematic.</p>\n</blockquote>",
        "id": 526850849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751477862
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 527075196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751578026
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#pullrequestreview-2984734179\">PR review</a>.</p>",
        "id": 527075413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751578162
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2183778985\">PR review comment</a>:</p>\n<blockquote>\n<p>Your commit looks reasonable, thanks for doing that! I'll apologize again though about how this is a bit messy. I'd prefer to avoid having the crate be sort of half-std/half-not, so I think I've come up with an idea to sidestep this entirely which is to include the icache crate only if <code>std</code> is enabled in Wasmtime itself. That solves the concerns I have about things getting a bit weird sometimes and the only remaining issue is various CI bits and how well this works out. I've pushed up a commit to this PR which implements what I was thinking of and I'll watch CI to see if my strategy won't work due to something I haven't thought of</p>\n</blockquote>",
        "id": 527075414,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751578162
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 527075488,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751578204
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 527075545,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751578227
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 527077130,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751579012
    },
    {
        "content": "<p>salmans submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#pullrequestreview-2984757607\">PR review</a>.</p>",
        "id": 527077300,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751579098
    },
    {
        "content": "<p>salmans created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2183794443\">PR review comment</a>:</p>\n<blockquote>\n<p>Not at all! I appreciate your help and the time you've put into this. Okay, I'll wait for CI and merge the changes into the branch as soon as I see green. Thanks again!</p>\n</blockquote>",
        "id": 527077301,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751579098
    },
    {
        "content": "<p>salmans edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2183794443\">PR review comment</a>.</p>",
        "id": 527077571,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751579221
    },
    {
        "content": "<p>salmans submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#pullrequestreview-2984772923\">PR review</a>.</p>",
        "id": 527077812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751579375
    },
    {
        "content": "<p>salmans created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#discussion_r2183800767\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, that's right. I'm resolving this for now but will explore that space for a potential future PR.</p>\n</blockquote>",
        "id": 527077814,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751579375
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152#pullrequestreview-2984777361\">PR review</a>.</p>",
        "id": 527078216,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751579589
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 527078226,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751579595
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11152\">PR #11152</a>.</p>",
        "id": 527081598,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751581795
    }
]