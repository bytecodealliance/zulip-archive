[
    {
        "content": "<p>liupeidong0620 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344\">issue #11344</a>:</p>\n<blockquote>\n<h1>Description</h1>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">I</span><span class=\"o\">'</span><span class=\"na\">m</span><span class=\"w\"> </span><span class=\"n\">embedding</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">library</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"w\"> </span><span class=\"n\">host</span><span class=\"w\"> </span><span class=\"n\">application</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">WebAssembly</span><span class=\"w\"> </span><span class=\"n\">plugins</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">However</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">when</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"w\"> </span><span class=\"n\">host</span><span class=\"w\"> </span><span class=\"n\">program</span><span class=\"w\"> </span><span class=\"n\">encounters</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">fatal</span><span class=\"w\"> </span><span class=\"n\">signal</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">g</span><span class=\"p\">.,</span><span class=\"w\"> </span><span class=\"n\">SIGSEGV</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">should</span><span class=\"w\"> </span><span class=\"n\">generate</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">core</span><span class=\"w\"> </span><span class=\"n\">dump</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">signal</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">being</span><span class=\"w\"> </span><span class=\"n\">intercepted</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">internal</span><span class=\"w\"> </span><span class=\"n\">signal</span><span class=\"w\"> </span><span class=\"n\">handling</span><span class=\"w\"> </span><span class=\"n\">mechanism</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">This</span><span class=\"w\"> </span><span class=\"n\">prevents</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"w\"> </span><span class=\"n\">core</span><span class=\"w\"> </span><span class=\"n\">dump</span><span class=\"w\"> </span><span class=\"n\">generation</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">makes</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">difficult</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">capture</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">actual</span><span class=\"w\"> </span><span class=\"n\">crash</span><span class=\"w\"> </span><span class=\"n\">stack</span><span class=\"w\"> </span><span class=\"n\">trace</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">debugging</span><span class=\"p\">.</span>\n\n<span class=\"n\">How</span><span class=\"w\"> </span><span class=\"n\">can</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">properly</span><span class=\"w\"> </span><span class=\"n\">configure</span><span class=\"w\"> </span><span class=\"n\">signal</span><span class=\"w\"> </span><span class=\"n\">handling</span><span class=\"w\"> </span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">different</span><span class=\"w\"> </span><span class=\"n\">signals</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">especially</span><span class=\"w\"> </span><span class=\"n\">fatal</span><span class=\"w\"> </span><span class=\"n\">ones</span><span class=\"w\"> </span><span class=\"n\">like</span><span class=\"w\"> </span><span class=\"n\">SIGSEGV</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SIGABRT</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">handled</span><span class=\"w\"> </span><span class=\"n\">correctly</span><span class=\"err\">â€”</span><span class=\"n\">allowing</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">host</span><span class=\"w\"> </span><span class=\"n\">application</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">generate</span><span class=\"w\"> </span><span class=\"n\">core</span><span class=\"w\"> </span><span class=\"n\">dumps</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">print</span><span class=\"w\"> </span><span class=\"n\">stack</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">still</span><span class=\"w\"> </span><span class=\"n\">allowing</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">handle</span><span class=\"w\"> </span><span class=\"n\">WebAssembly</span><span class=\"o\">-</span><span class=\"n\">related</span><span class=\"w\"> </span><span class=\"n\">traps</span><span class=\"o\">?</span>\n</code></pre></div>\n<h1>wasmtime version</h1>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">v30</span><span class=\"p\">.</span><span class=\"mf\">0.2</span><span class=\"o\">-</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">c</span><span class=\"o\">-</span><span class=\"n\">api</span><span class=\"p\">.</span><span class=\"n\">tar</span><span class=\"p\">.</span><span class=\"n\">xz</span>\n</code></pre></div>\n<h1>code</h1>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"p\">....</span>\n<span class=\"c1\">// init wasmtime</span>\n\n<span class=\"c1\">// Capture exception signals and print stack information</span>\n<span class=\"cp\">#ifndef _WIN32</span>\n<span class=\"w\">  </span><span class=\"o\">::</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">InstallFailureSignalHandler</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"o\">::</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">InstallFailureWriter</span><span class=\"p\">([](</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">LOG</span><span class=\"p\">(</span><span class=\"n\">ERROR</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"Failure:\"</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">INFO</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">WARNING</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">ERROR</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FATAL</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">});</span>\n<span class=\"cp\">#endif</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h1>The host app's coredump stack information is incorrect.</h1>\n<p><div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>E0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.475342<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>Aborted<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">1753669027</span><span class=\"w\"> </span><span class=\"o\">(</span>unix<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"o\">)</span><span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"s2\">\"date -d @1753669027\"</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span>you<span class=\"w\"> </span>are<span class=\"w\"> </span>using<span class=\"w\"> </span>GNU<span class=\"w\"> </span>date<span class=\"w\"> </span>***\nE0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.477213<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:PC:<span class=\"w\"> </span>@<span class=\"w\">                </span>0x0<span class=\"w\"> </span><span class=\"o\">(</span>unknown<span class=\"o\">)</span>\nE0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.477321<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>SIGSEGV<span class=\"w\"> </span><span class=\"o\">(</span>@0xffffffffffffffef<span class=\"o\">)</span><span class=\"w\"> </span>received<span class=\"w\"> </span>by<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">108417</span><span class=\"w\"> </span><span class=\"o\">(</span>TID<span class=\"w\"> </span>0x7fa9931ff700<span class=\"o\">)</span><span class=\"w\"> </span>from<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">18446744073709551599</span><span class=\"p\">;</span><span class=\"w\"> </span>stack<span class=\"w\"> </span>trace:<span class=\"w\"> </span>***\nE0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.479700<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:<span class=\"w\">    </span>@<span class=\"w\">           </span>0xf311f0<span class=\"w\"> </span>wasmtime::runtime::vm::sys::unix::signals::trap_handler::hfe532cb8288e83d6\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 531733697,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753842723
    },
    {
        "content": "<p>liupeidong0620 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344\">issue #11344</a>:</p>\n<blockquote>\n<h1>Description</h1>\n<p>I'm embedding wasmtime as a library in my host application to run WebAssembly plugins. However, when my host program encounters a fatal signal (e.g., SIGSEGV) and should generate a core dump, the signal is being intercepted by wasmtime's internal signal handling mechanism. This prevents the default core dump generation and makes it difficult to capture the actual crash stack trace for debugging.</p>\n<p>How can I properly configure signal handling so that different signals (especially fatal ones like SIGSEGV, SIGABRT) are handled correctlyâ€”allowing the host application to generate core dumps and print stack information as expected, while still allowing wasmtime to handle WebAssembly-related traps?</p>\n<h1>wasmtime version</h1>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">v30</span><span class=\"p\">.</span><span class=\"mf\">0.2</span><span class=\"o\">-</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">c</span><span class=\"o\">-</span><span class=\"n\">api</span><span class=\"p\">.</span><span class=\"n\">tar</span><span class=\"p\">.</span><span class=\"n\">xz</span>\n</code></pre></div>\n<h1>code</h1>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"p\">....</span>\n<span class=\"c1\">// init wasmtime</span>\n\n<span class=\"c1\">// Capture exception signals and print stack information</span>\n<span class=\"cp\">#ifndef _WIN32</span>\n<span class=\"w\">  </span><span class=\"o\">::</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">InstallFailureSignalHandler</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"o\">::</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">InstallFailureWriter</span><span class=\"p\">([](</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">LOG</span><span class=\"p\">(</span><span class=\"n\">ERROR</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"Failure:\"</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">INFO</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">WARNING</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">ERROR</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FATAL</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">});</span>\n<span class=\"cp\">#endif</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h1>The host app's coredump stack information is incorrect.</h1>\n<p><div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>E0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.475342<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>Aborted<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">1753669027</span><span class=\"w\"> </span><span class=\"o\">(</span>unix<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"o\">)</span><span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"s2\">\"date -d @1753669027\"</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span>you<span class=\"w\"> </span>are<span class=\"w\"> </span>using<span class=\"w\"> </span>GNU<span class=\"w\"> </span>date<span class=\"w\"> </span>***\nE0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.477213<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:PC:<span class=\"w\"> </span>@<span class=\"w\">                </span>0x0<span class=\"w\"> </span><span class=\"o\">(</span>unknown<span class=\"o\">)</span>\nE0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.477321<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>SIGSEGV<span class=\"w\"> </span><span class=\"o\">(</span>@0xffffffffffffffef<span class=\"o\">)</span><span class=\"w\"> </span>received<span class=\"w\"> </span>by<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">108417</span><span class=\"w\"> </span><span class=\"o\">(</span>TID<span class=\"w\"> </span>0x7fa9931ff700<span class=\"o\">)</span><span class=\"w\"> </span>from<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">18446744073709551599</span><span class=\"p\">;</span><span class=\"w\"> </span>stack<span class=\"w\"> </span>trace:<span class=\"w\"> </span>***\nE0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.479700<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:<span class=\"w\">    </span>@<span class=\"w\">           </span>0xf311f0<span class=\"w\"> </span>wasmtime::runtime::vm::sys::unix::signals::trap_handler::hfe532cb8288e83d6\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 531733746,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753842746
    },
    {
        "content": "<p>liupeidong0620 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344\">issue #11344</a>:</p>\n<blockquote>\n<h1>Description</h1>\n<p>I'm embedding wasmtime as a library in my host application to run WebAssembly plugins. However, when my host program encounters a fatal signal (e.g., SIGSEGV) and should generate a core dump, the signal is being intercepted by wasmtime's internal signal handling mechanism. This prevents the default core dump generation and makes it difficult to capture the actual crash stack trace for debugging.</p>\n<p>How can I properly configure signal handling so that different signals (especially fatal ones like SIGSEGV, SIGABRT) are handled correctlyâ€”allowing the host application to generate core dumps and print stack information as expected, while still allowing wasmtime to handle WebAssembly-related traps?</p>\n<h1>wasmtime version</h1>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">v30</span><span class=\"p\">.</span><span class=\"mf\">0.2</span><span class=\"o\">-</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">c</span><span class=\"o\">-</span><span class=\"n\">api</span><span class=\"p\">.</span><span class=\"n\">tar</span><span class=\"p\">.</span><span class=\"n\">xz</span>\n</code></pre></div>\n<h1>Code initialization process</h1>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"p\">....</span>\n<span class=\"c1\">// init wasmtime</span>\n\n<span class=\"c1\">// Capture exception signals and print stack information</span>\n<span class=\"cp\">#ifndef _WIN32</span>\n<span class=\"w\">  </span><span class=\"o\">::</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">InstallFailureSignalHandler</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"o\">::</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">InstallFailureWriter</span><span class=\"p\">([](</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">LOG</span><span class=\"p\">(</span><span class=\"n\">ERROR</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"Failure:\"</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">INFO</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">WARNING</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">ERROR</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FATAL</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">});</span>\n<span class=\"cp\">#endif</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h1>The host app's coredump stack information is incorrect.</h1>\n<p><div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>E0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.475342<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>Aborted<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">1753669027</span><span class=\"w\"> </span><span class=\"o\">(</span>unix<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"o\">)</span><span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"s2\">\"date -d @1753669027\"</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span>you<span class=\"w\"> </span>are<span class=\"w\"> </span>using<span class=\"w\"> </span>GNU<span class=\"w\"> </span>date<span class=\"w\"> </span>***\nE0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.477213<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:PC:<span class=\"w\"> </span>@<span class=\"w\">                </span>0x0<span class=\"w\"> </span><span class=\"o\">(</span>unknown<span class=\"o\">)</span>\nE0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.477321<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>SIGSEGV<span class=\"w\"> </span><span class=\"o\">(</span>@0xffffffffffffffef<span class=\"o\">)</span><span class=\"w\"> </span>received<span class=\"w\"> </span>by<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">108417</span><span class=\"w\"> </span><span class=\"o\">(</span>TID<span class=\"w\"> </span>0x7fa9931ff700<span class=\"o\">)</span><span class=\"w\"> </span>from<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">18446744073709551599</span><span class=\"p\">;</span><span class=\"w\"> </span>stack<span class=\"w\"> </span>trace:<span class=\"w\"> </span>***\nE0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.479700<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:<span class=\"w\">    </span>@<span class=\"w\">           </span>0xf311f0<span class=\"w\"> </span>wasmtime::runtime::vm::sys::unix::signals::trap_handler::hfe532cb8288e83d6\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 531733799,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753842790
    },
    {
        "content": "<p>liupeidong0620 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344\">issue #11344</a>:</p>\n<blockquote>\n<h1>Description</h1>\n<p>I'm embedding wasmtime as a library in my host application to run WebAssembly plugins. However, when my host program encounters a fatal signal (e.g., SIGSEGV) and should generate a core dump, the signal is being intercepted by wasmtime's internal signal handling mechanism. This prevents the default core dump generation and makes it difficult to capture the actual crash stack trace for debugging.</p>\n<p>How can I properly configure signal handling so that different signals (especially fatal ones like SIGSEGV, SIGABRT) are handled correctlyâ€”allowing the host application to generate core dumps and print stack information as expected, while still allowing wasmtime to handle WebAssembly-related traps?</p>\n<h1>wasmtime version</h1>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">v30</span><span class=\"p\">.</span><span class=\"mf\">0.2</span><span class=\"o\">-</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">c</span><span class=\"o\">-</span><span class=\"n\">api</span><span class=\"p\">.</span><span class=\"n\">tar</span><span class=\"p\">.</span><span class=\"n\">xz</span>\n</code></pre></div>\n<h1>linux system</h1>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">uname</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">a</span>\n<span class=\"n\">Linux</span><span class=\"w\"> </span><span class=\"mi\">384</span><span class=\"n\">a4bbb</span><span class=\"o\">-</span><span class=\"n\">d3bb</span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"n\">a96</span><span class=\"o\">-</span><span class=\"n\">ae4e</span><span class=\"o\">-</span><span class=\"mi\">5529</span><span class=\"n\">fd44a702</span><span class=\"w\"> </span><span class=\"mf\">3.10.0</span><span class=\"o\">-</span><span class=\"mf\">1062.9.1.</span><span class=\"n\">el7</span><span class=\"p\">.</span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">SMP</span><span class=\"w\"> </span><span class=\"n\">Fri</span><span class=\"w\"> </span><span class=\"n\">Dec</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"p\">:</span><span class=\"mi\">49</span><span class=\"p\">:</span><span class=\"mi\">49</span><span class=\"w\"> </span><span class=\"n\">UTC</span><span class=\"w\"> </span><span class=\"mi\">2019</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">GNU</span><span class=\"o\">/</span><span class=\"n\">Linux</span>\n\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">cat</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">etc</span><span class=\"o\">/</span><span class=\"n\">redhat</span><span class=\"o\">-</span><span class=\"n\">release</span>\n<span class=\"n\">CentOS</span><span class=\"w\"> </span><span class=\"n\">Linux</span><span class=\"w\"> </span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"mf\">7.3.1611</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Core</span><span class=\"p\">)</span>\n</code></pre></div>\n<h1>Code initialization process</h1>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"p\">....</span>\n<span class=\"c1\">// init wasmtime</span>\n\n<span class=\"c1\">// Capture exception signals and print stack information</span>\n<span class=\"cp\">#ifndef _WIN32</span>\n<span class=\"w\">  </span><span class=\"o\">::</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">InstallFailureSignalHandler</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"o\">::</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">InstallFailureWriter</span><span class=\"p\">([](</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">LOG</span><span class=\"p\">(</span><span class=\"n\">ERROR</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"Failure:\"</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">INFO</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">WARNING</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">ERROR</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FATAL</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">});</span>\n<span class=\"cp\">#endif</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h1>The host app's coredump stack information is incorrect.</h1>\n<p><div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>E0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.475342<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>Aborted<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">1753669027</span><span class=\"w\"> </span><span class=\"o\">(</span>unix<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"o\">)</span><span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"s2\">\"date -d @1753669027\"</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span>you<span class=\"w\"> </span>are<span class=\"w\"> </span>using<span class=\"w\"> </span>GNU<span class=\"w\"> </span>date<span class=\"w\"> </span>***\nE0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.477213<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:PC:<span class=\"w\"> </span>@<span class=\"w\">                </span>0x0<span class=\"w\"> </span><span class=\"o\">(</span>unknown<span class=\"o\">)</span>\nE0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.477321<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>SIGSEGV<span class=\"w\"> </span><span class=\"o\">(</span>@0xffffffffffffffef<span class=\"o\">)</span><span class=\"w\"> </span>received<span class=\"w\"> </span>by<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">108417</span><span class=\"w\"> </span><span class=\"o\">(</span>TID<span class=\"w\"> </span>0x7fa9931ff700<span class=\"o\">)</span><span class=\"w\"> </span>from<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">18446744073709551599</span><span class=\"p\">;</span><span class=\"w\"> </span>stack<span class=\"w\"> </span>trace:<span class=\"w\"> </span>***\nE0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.479700<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:<span class=\"w\">    </span>@<span class=\"w\">           </span>0xf311f0<span class=\"w\"> </span>wasmtime::runtime::vm::sys::unix::signals::trap_handler::hfe532cb8288e83d6\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 531736663,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753844691
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344#issuecomment-3134784739\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344\">issue #11344</a>:</p>\n<blockquote>\n<p>On Unix, Wasmtime is using SIGSEGV and SIGILL internally as part of its implementation, unless you disable it in the Config with <a href=\"https://docs.wasmtime.dev/api/wasmtime/struct.Config.html#method.signals_based_traps\">https://docs.wasmtime.dev/api/wasmtime/struct.Config.html#method.signals_based_traps</a>. Wasmtime will install its own signal handler over the top of a previously existing one, and if wasmtime's signal handler is unable to handle the trap (because it comes from code which is not native cranelift code), the existing handler will then be called: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasmtime/src/runtime/vm/sys/unix/signals.rs#L229\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasmtime/src/runtime/vm/sys/unix/signals.rs#L229</a>. So, when you see the wasmtime signals::trap_handler on the stack in your backtrace, thats the reason why. Unfortunately, the Unix signal handler API doesn't have any mechanisms to gracefully defer to another handler without first putting wasmtime's on the stack, and we do not provide a way for wasmtime to call the previous handler via a tail call where you won't first see signals::trap_handler on the stack. It may be possible to implement such a thing for particular operating systems and architectures, but it would likely be pretty fragile, so I'd be pretty cautious about doing so.</p>\n</blockquote>",
        "id": 531742674,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753848258
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344#issuecomment-3134890788\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344\">issue #11344</a>:</p>\n<blockquote>\n<p>Is the core dump library you're using open source, and if so could you link to an example of it? The code Pat linked to should attempt to forward to the next handler, but that's either (a) not working or (b) the wasmtime signal handler is itself segfaulting and so that forwarding behavior was never hit. It may also be the case that the best option to forward to another handler is to always execute <a href=\"https://github.com/bytecodealliance/wasmtime/blob/7074afb633446d1f0ef0d246deaaa2cbe5b457c9/crates/wasmtime/src/runtime/vm/sys/unix/signals.rs#L255\">this line</a> which is to re-run the faulting instruction with a different handler entirely. </p>\n<p>In any case if you have an example of the core dump library you're using (or better yet a repro we could run) that'd help digging in to see what's going on. Failing that if you're able to attach a debugger (maybe by manually forcing a segfault?) it might be useful to get a backtrace at the fault, then continue to the next fault (if any) and see where execution goes and get backtraces along the way.</p>\n</blockquote>",
        "id": 531750864,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753852934
    },
    {
        "content": "<p>liupeidong0620 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344#issuecomment-3154515651\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344\">issue #11344</a>:</p>\n<blockquote>\n<h2>example</h2>\n<ol>\n<li>Tendis uses the wasmtime library</li>\n<li>Manually generating a core dump (redis-cli -h 127.0.0.1 -p 51002 hget testkey subkey)</li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\">#</span>\nhttps://github.com/liupeidong0620/Tendis/commit/3326339ef486173e743988cf8f76db442fb9b348\n\n<span class=\"c1\"># build</span>\n\ngit<span class=\"w\"> </span>clone<span class=\"w\"> </span>https://github.com/liupeidong0620/Tendis.git\n<span class=\"nb\">cd</span><span class=\"w\"> </span>Tendis\ngit<span class=\"w\"> </span>checkout<span class=\"w\"> </span>-b<span class=\"w\"> </span>dev<span class=\"w\"> </span>origin/dev\n\ngit<span class=\"w\"> </span>submodule<span class=\"w\"> </span>update<span class=\"w\"> </span>--init<span class=\"w\"> </span>--recursive\nmkdir<span class=\"w\"> </span>build\n<span class=\"nb\">cd</span><span class=\"w\"> </span>build<span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"w\"> </span>cmake<span class=\"w\"> </span>..\nmake<span class=\"w\"> </span>-j12\n\n<span class=\"c1\"># run</span>\nmkdir<span class=\"w\"> </span>./home/db\n<span class=\"nb\">cd</span><span class=\"w\"> </span>..\n<span class=\"w\"> </span>./build/bin/tendisplus<span class=\"w\"> </span>./tendisplus.conf\n\n\n<span class=\"c1\"># redis request</span>\n\nredis-cli<span class=\"w\"> </span>-h<span class=\"w\"> </span><span class=\"m\">127</span>.0.0.1<span class=\"w\"> </span>-p<span class=\"w\"> </span><span class=\"m\">51002</span><span class=\"w\"> </span>hget<span class=\"w\"> </span>testkey<span class=\"w\"> </span>subkey\n\n<span class=\"c1\"># generate coredump</span>\n\n<span class=\"c1\"># tail -f home/log/tendisplus.INFO</span>\nW0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.126920<span class=\"w\"> </span><span class=\"m\">99353</span><span class=\"w\"> </span>index_manager.cpp:342<span class=\"o\">]</span><span class=\"w\"> </span>index<span class=\"w\"> </span>manager<span class=\"w\"> </span>running...\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127179<span class=\"w\"> </span><span class=\"m\">99354</span><span class=\"w\"> </span>server_entry.cpp:1971<span class=\"o\">]</span><span class=\"w\"> </span>serverCron<span class=\"w\"> </span>thread<span class=\"w\"> </span>starts,<span class=\"w\"> </span>hz:10\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127231<span class=\"w\"> </span><span class=\"m\">99355</span><span class=\"w\"> </span>server_entry.cpp:1911<span class=\"o\">]</span><span class=\"w\"> </span>bgcompact<span class=\"w\"> </span>thread<span class=\"w\"> </span>running...\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127594<span class=\"w\"> </span><span class=\"m\">99320</span><span class=\"w\"> </span>network.cpp:380<span class=\"o\">]</span><span class=\"w\"> </span>add<span class=\"w\"> </span>netIoThread,<span class=\"w\"> </span>i:7,<span class=\"w\"> </span>threadId:139981001582336\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.132004<span class=\"w\"> </span><span class=\"m\">99089</span><span class=\"w\"> </span>server_entry.cpp:870<span class=\"o\">]</span><span class=\"w\"> </span>ServerEntry::startup<span class=\"w\"> </span>sucess.\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.123395<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>Aborted<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">1754384749</span><span class=\"w\"> </span><span class=\"o\">(</span>unix<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"o\">)</span><span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"s2\">\"date -d @1754384749\"</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span>you<span class=\"w\"> </span>are<span class=\"w\"> </span>using<span class=\"w\"> </span>GNU<span class=\"w\"> </span>date<span class=\"w\"> </span>***\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.124835<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:PC:<span class=\"w\"> </span>@<span class=\"w\">                </span>0x0<span class=\"w\"> </span><span class=\"o\">(</span>unknown<span class=\"o\">)</span>\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.124886<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>SIGSEGV<span class=\"w\"> </span><span class=\"o\">(</span>@0xffffffffffffffe8<span class=\"o\">)</span><span class=\"w\"> </span>received<span class=\"w\"> </span>by<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">99089</span><span class=\"w\"> </span><span class=\"o\">(</span>TID<span class=\"w\"> </span>0x7f4ffffe8700<span class=\"o\">)</span><span class=\"w\"> </span>from<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">18446744073709551592</span><span class=\"p\">;</span><span class=\"w\"> </span>stack<span class=\"w\"> </span>trace:<span class=\"w\"> </span>***\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.125391<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:<span class=\"w\">    </span>@<span class=\"w\">          </span>0x1c7e3f7<span class=\"w\"> </span>google::<span class=\"o\">(</span>anonymous<span class=\"w\"> </span>namespace<span class=\"o\">)</span>::FailureSignalHandler<span class=\"o\">()</span>\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.126637<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:<span class=\"w\">    </span>@<span class=\"w\">           </span>0xa2e360<span class=\"w\"> </span>wasmtime::runtime::vm::sys::unix::signals::trap_handler::hfe532cb8288e83d6\n</code></pre></div>\n<p>@alexcrichton </p>\n</blockquote>",
        "id": 532882170,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754388246
    },
    {
        "content": "<p>liupeidong0620 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344#issuecomment-3154515651\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344\">issue #11344</a>:</p>\n<blockquote>\n<h2>example</h2>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\">#  Code changes:</span>\n<span class=\"m\">1</span>.<span class=\"w\"> </span>Tendis<span class=\"w\"> </span>uses<span class=\"w\"> </span>the<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>library\n<span class=\"m\">2</span>.<span class=\"w\"> </span>Manually<span class=\"w\"> </span>generating<span class=\"w\"> </span>a<span class=\"w\"> </span>core<span class=\"w\"> </span>dump<span class=\"w\"> </span><span class=\"o\">(</span>redis-cli<span class=\"w\"> </span>-h<span class=\"w\"> </span><span class=\"m\">127</span>.0.0.1<span class=\"w\"> </span>-p<span class=\"w\"> </span><span class=\"m\">51002</span><span class=\"w\"> </span>hget<span class=\"w\"> </span>testkey<span class=\"w\"> </span>subkey<span class=\"o\">)</span>\n\nhttps://github.com/liupeidong0620/Tendis/commit/3326339ef486173e743988cf8f76db442fb9b348\n\n<span class=\"c1\"># system</span>\n\n<span class=\"c1\"># cat /etc/redhat-release</span>\nCentOS<span class=\"w\"> </span>Linux<span class=\"w\"> </span>release<span class=\"w\"> </span><span class=\"m\">7</span>.3.1611<span class=\"w\"> </span><span class=\"o\">(</span>Core<span class=\"o\">)</span>\n<span class=\"c1\"># gcc --version</span>\ngcc<span class=\"w\"> </span><span class=\"o\">(</span>GCC<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"m\">11</span>.2.1<span class=\"w\"> </span><span class=\"m\">20220127</span><span class=\"w\"> </span><span class=\"o\">(</span>Red<span class=\"w\"> </span>Hat<span class=\"w\"> </span><span class=\"m\">11</span>.2.1-9<span class=\"o\">)</span>\nCopyright<span class=\"w\"> </span><span class=\"o\">(</span>C<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"m\">2021</span><span class=\"w\"> </span>Free<span class=\"w\"> </span>Software<span class=\"w\"> </span>Foundation,<span class=\"w\"> </span>Inc.\nThis<span class=\"w\"> </span>is<span class=\"w\"> </span>free<span class=\"w\"> </span>software<span class=\"p\">;</span><span class=\"w\"> </span>see<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"nb\">source</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>copying<span class=\"w\"> </span>conditions.<span class=\"w\">  </span>There<span class=\"w\"> </span>is<span class=\"w\"> </span>NO\nwarranty<span class=\"p\">;</span><span class=\"w\"> </span>not<span class=\"w\"> </span>even<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>MERCHANTABILITY<span class=\"w\"> </span>or<span class=\"w\"> </span>FITNESS<span class=\"w\"> </span>FOR<span class=\"w\"> </span>A<span class=\"w\"> </span>PARTICULAR<span class=\"w\"> </span>PURPOSE.\n\n<span class=\"c1\"># build</span>\n\ngit<span class=\"w\"> </span>clone<span class=\"w\"> </span>https://github.com/liupeidong0620/Tendis.git\n<span class=\"nb\">cd</span><span class=\"w\"> </span>Tendis\ngit<span class=\"w\"> </span>checkout<span class=\"w\"> </span>-b<span class=\"w\"> </span>dev<span class=\"w\"> </span>origin/dev\n\ngit<span class=\"w\"> </span>submodule<span class=\"w\"> </span>update<span class=\"w\"> </span>--init<span class=\"w\"> </span>--recursive\nmkdir<span class=\"w\"> </span>build\n<span class=\"nb\">cd</span><span class=\"w\"> </span>build<span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"w\"> </span>cmake<span class=\"w\"> </span>..\nmake<span class=\"w\"> </span>-j12\n\n<span class=\"c1\"># run</span>\nmkdir<span class=\"w\"> </span>./home/db\n<span class=\"nb\">cd</span><span class=\"w\"> </span>..\n<span class=\"w\"> </span>./build/bin/tendisplus<span class=\"w\"> </span>./tendisplus.conf\n\n\n<span class=\"c1\"># redis request</span>\n\nredis-cli<span class=\"w\"> </span>-h<span class=\"w\"> </span><span class=\"m\">127</span>.0.0.1<span class=\"w\"> </span>-p<span class=\"w\"> </span><span class=\"m\">51002</span><span class=\"w\"> </span>hget<span class=\"w\"> </span>testkey<span class=\"w\"> </span>subkey\n\n<span class=\"c1\"># generate coredump</span>\n\n<span class=\"c1\"># tail -f home/log/tendisplus.INFO</span>\nW0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.126920<span class=\"w\"> </span><span class=\"m\">99353</span><span class=\"w\"> </span>index_manager.cpp:342<span class=\"o\">]</span><span class=\"w\"> </span>index<span class=\"w\"> </span>manager<span class=\"w\"> </span>running...\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127179<span class=\"w\"> </span><span class=\"m\">99354</span><span class=\"w\"> </span>server_entry.cpp:1971<span class=\"o\">]</span><span class=\"w\"> </span>serverCron<span class=\"w\"> </span>thread<span class=\"w\"> </span>starts,<span class=\"w\"> </span>hz:10\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127231<span class=\"w\"> </span><span class=\"m\">99355</span><span class=\"w\"> </span>server_entry.cpp:1911<span class=\"o\">]</span><span class=\"w\"> </span>bgcompact<span class=\"w\"> </span>thread<span class=\"w\"> </span>running...\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127594<span class=\"w\"> </span><span class=\"m\">99320</span><span class=\"w\"> </span>network.cpp:380<span class=\"o\">]</span><span class=\"w\"> </span>add<span class=\"w\"> </span>netIoThread,<span class=\"w\"> </span>i:7,<span class=\"w\"> </span>threadId:139981001582336\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.132004<span class=\"w\"> </span><span class=\"m\">99089</span><span class=\"w\"> </span>server_entry.cpp:870<span class=\"o\">]</span><span class=\"w\"> </span>ServerEntry::startup<span class=\"w\"> </span>sucess.\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.123395<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>Aborted<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">1754384749</span><span class=\"w\"> </span><span class=\"o\">(</span>unix<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"o\">)</span><span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"s2\">\"date -d @1754384749\"</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span>you<span class=\"w\"> </span>are<span class=\"w\"> </span>using<span class=\"w\"> </span>GNU<span class=\"w\"> </span>date<span class=\"w\"> </span>***\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.124835<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:PC:<span class=\"w\"> </span>@<span class=\"w\">                </span>0x0<span class=\"w\"> </span><span class=\"o\">(</span>unknown<span class=\"o\">)</span>\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.124886<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>SIGSEGV<span class=\"w\"> </span><span class=\"o\">(</span>@0xffffffffffffffe8<span class=\"o\">)</span><span class=\"w\"> </span>received<span class=\"w\"> </span>by<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">99089</span><span class=\"w\"> </span><span class=\"o\">(</span>TID<span class=\"w\"> </span>0x7f4ffffe8700<span class=\"o\">)</span><span class=\"w\"> </span>from<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">18446744073709551592</span><span class=\"p\">;</span><span class=\"w\"> </span>stack<span class=\"w\"> </span>trace:<span class=\"w\"> </span>***\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.125391<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:<span class=\"w\">    </span>@<span class=\"w\">          </span>0x1c7e3f7<span class=\"w\"> </span>google::<span class=\"o\">(</span>anonymous<span class=\"w\"> </span>namespace<span class=\"o\">)</span>::FailureSignalHandler<span class=\"o\">()</span>\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.126637<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:<span class=\"w\">    </span>@<span class=\"w\">           </span>0xa2e360<span class=\"w\"> </span>wasmtime::runtime::vm::sys::unix::signals::trap_handler::hfe532cb8288e83d6\n</code></pre></div>\n<p>@alexcrichton </p>\n</blockquote>",
        "id": 532882511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754388365
    },
    {
        "content": "<p>liupeidong0620 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344#issuecomment-3154515651\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344\">issue #11344</a>:</p>\n<blockquote>\n<h2>example</h2>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\">#  Code changes:</span>\n<span class=\"m\">1</span>.<span class=\"w\"> </span>Tendis<span class=\"w\"> </span>uses<span class=\"w\"> </span>the<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>library\n<span class=\"m\">2</span>.<span class=\"w\"> </span>Manually<span class=\"w\"> </span>generating<span class=\"w\"> </span>a<span class=\"w\"> </span>core<span class=\"w\"> </span>dump<span class=\"w\"> </span><span class=\"o\">(</span>redis-cli<span class=\"w\"> </span>-h<span class=\"w\"> </span><span class=\"m\">127</span>.0.0.1<span class=\"w\"> </span>-p<span class=\"w\"> </span><span class=\"m\">51002</span><span class=\"w\"> </span>hget<span class=\"w\"> </span>testkey<span class=\"w\"> </span>subkey<span class=\"o\">)</span>\n\nhttps://github.com/liupeidong0620/Tendis/commit/3326339ef486173e743988cf8f76db442fb9b348\n\n<span class=\"c1\"># system</span>\n\n<span class=\"c1\"># cat /etc/redhat-release</span>\nCentOS<span class=\"w\"> </span>Linux<span class=\"w\"> </span>release<span class=\"w\"> </span><span class=\"m\">7</span>.3.1611<span class=\"w\"> </span><span class=\"o\">(</span>Core<span class=\"o\">)</span>\n<span class=\"c1\"># gcc --version</span>\ngcc<span class=\"w\"> </span><span class=\"o\">(</span>GCC<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"m\">11</span>.2.1<span class=\"w\"> </span><span class=\"m\">20220127</span><span class=\"w\"> </span><span class=\"o\">(</span>Red<span class=\"w\"> </span>Hat<span class=\"w\"> </span><span class=\"m\">11</span>.2.1-9<span class=\"o\">)</span>\nCopyright<span class=\"w\"> </span><span class=\"o\">(</span>C<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"m\">2021</span><span class=\"w\"> </span>Free<span class=\"w\"> </span>Software<span class=\"w\"> </span>Foundation,<span class=\"w\"> </span>Inc.\nThis<span class=\"w\"> </span>is<span class=\"w\"> </span>free<span class=\"w\"> </span>software<span class=\"p\">;</span><span class=\"w\"> </span>see<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"nb\">source</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>copying<span class=\"w\"> </span>conditions.<span class=\"w\">  </span>There<span class=\"w\"> </span>is<span class=\"w\"> </span>NO\nwarranty<span class=\"p\">;</span><span class=\"w\"> </span>not<span class=\"w\"> </span>even<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>MERCHANTABILITY<span class=\"w\"> </span>or<span class=\"w\"> </span>FITNESS<span class=\"w\"> </span>FOR<span class=\"w\"> </span>A<span class=\"w\"> </span>PARTICULAR<span class=\"w\"> </span>PURPOSE.\n\n<span class=\"c1\"># build</span>\n\ngit<span class=\"w\"> </span>clone<span class=\"w\"> </span>https://github.com/liupeidong0620/Tendis.git\n<span class=\"nb\">cd</span><span class=\"w\"> </span>Tendis\ngit<span class=\"w\"> </span>checkout<span class=\"w\"> </span>-b<span class=\"w\"> </span>dev<span class=\"w\"> </span>origin/dev\n\ngit<span class=\"w\"> </span>submodule<span class=\"w\"> </span>update<span class=\"w\"> </span>--init<span class=\"w\"> </span>--recursive\nmkdir<span class=\"w\"> </span>build\n<span class=\"nb\">cd</span><span class=\"w\"> </span>build<span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"w\"> </span>cmake<span class=\"w\"> </span>..\nmake<span class=\"w\"> </span>-j12\n\n<span class=\"c1\"># run</span>\n<span class=\"nb\">cd</span><span class=\"w\"> </span>..\nmkdir<span class=\"w\"> </span>./home/db\n\n<span class=\"w\"> </span>./build/bin/tendisplus<span class=\"w\"> </span>./tendisplus.conf\n\n\n<span class=\"c1\"># redis request</span>\n\nredis-cli<span class=\"w\"> </span>-h<span class=\"w\"> </span><span class=\"m\">127</span>.0.0.1<span class=\"w\"> </span>-p<span class=\"w\"> </span><span class=\"m\">51002</span><span class=\"w\"> </span>hget<span class=\"w\"> </span>testkey<span class=\"w\"> </span>subkey\n\n<span class=\"c1\"># generate coredump</span>\n\n<span class=\"c1\"># tail -f home/log/tendisplus.INFO</span>\nW0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.126920<span class=\"w\"> </span><span class=\"m\">99353</span><span class=\"w\"> </span>index_manager.cpp:342<span class=\"o\">]</span><span class=\"w\"> </span>index<span class=\"w\"> </span>manager<span class=\"w\"> </span>running...\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127179<span class=\"w\"> </span><span class=\"m\">99354</span><span class=\"w\"> </span>server_entry.cpp:1971<span class=\"o\">]</span><span class=\"w\"> </span>serverCron<span class=\"w\"> </span>thread<span class=\"w\"> </span>starts,<span class=\"w\"> </span>hz:10\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127231<span class=\"w\"> </span><span class=\"m\">99355</span><span class=\"w\"> </span>server_entry.cpp:1911<span class=\"o\">]</span><span class=\"w\"> </span>bgcompact<span class=\"w\"> </span>thread<span class=\"w\"> </span>running...\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127594<span class=\"w\"> </span><span class=\"m\">99320</span><span class=\"w\"> </span>network.cpp:380<span class=\"o\">]</span><span class=\"w\"> </span>add<span class=\"w\"> </span>netIoThread,<span class=\"w\"> </span>i:7,<span class=\"w\"> </span>threadId:139981001582336\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.132004<span class=\"w\"> </span><span class=\"m\">99089</span><span class=\"w\"> </span>server_entry.cpp:870<span class=\"o\">]</span><span class=\"w\"> </span>ServerEntry::startup<span class=\"w\"> </span>sucess.\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.123395<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>Aborted<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">1754384749</span><span class=\"w\"> </span><span class=\"o\">(</span>unix<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"o\">)</span><span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"s2\">\"date -d @1754384749\"</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span>you<span class=\"w\"> </span>are<span class=\"w\"> </span>using<span class=\"w\"> </span>GNU<span class=\"w\"> </span>date<span class=\"w\"> </span>***\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.124835<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:PC:<span class=\"w\"> </span>@<span class=\"w\">                </span>0x0<span class=\"w\"> </span><span class=\"o\">(</span>unknown<span class=\"o\">)</span>\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.124886<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>SIGSEGV<span class=\"w\"> </span><span class=\"o\">(</span>@0xffffffffffffffe8<span class=\"o\">)</span><span class=\"w\"> </span>received<span class=\"w\"> </span>by<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">99089</span><span class=\"w\"> </span><span class=\"o\">(</span>TID<span class=\"w\"> </span>0x7f4ffffe8700<span class=\"o\">)</span><span class=\"w\"> </span>from<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">18446744073709551592</span><span class=\"p\">;</span><span class=\"w\"> </span>stack<span class=\"w\"> </span>trace:<span class=\"w\"> </span>***\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.125391<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:<span class=\"w\">    </span>@<span class=\"w\">          </span>0x1c7e3f7<span class=\"w\"> </span>google::<span class=\"o\">(</span>anonymous<span class=\"w\"> </span>namespace<span class=\"o\">)</span>::FailureSignalHandler<span class=\"o\">()</span>\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.126637<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:<span class=\"w\">    </span>@<span class=\"w\">           </span>0xa2e360<span class=\"w\"> </span>wasmtime::runtime::vm::sys::unix::signals::trap_handler::hfe532cb8288e83d6\n</code></pre></div>\n<p>@alexcrichton </p>\n</blockquote>",
        "id": 532882738,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754388441
    },
    {
        "content": "<p>liupeidong0620 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344#issuecomment-3154515651\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344\">issue #11344</a>:</p>\n<blockquote>\n<h2>example</h2>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\">#  Code changes:</span>\n<span class=\"m\">1</span>.<span class=\"w\"> </span>Tendis<span class=\"w\"> </span>uses<span class=\"w\"> </span>the<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>library\n<span class=\"m\">2</span>.<span class=\"w\"> </span>Manually<span class=\"w\"> </span>generating<span class=\"w\"> </span>a<span class=\"w\"> </span>core<span class=\"w\"> </span>dump<span class=\"w\"> </span><span class=\"o\">(</span>redis-cli<span class=\"w\"> </span>-h<span class=\"w\"> </span><span class=\"m\">127</span>.0.0.1<span class=\"w\"> </span>-p<span class=\"w\"> </span><span class=\"m\">51002</span><span class=\"w\"> </span>hget<span class=\"w\"> </span>testkey<span class=\"w\"> </span>subkey<span class=\"o\">)</span>\n\nhttps://github.com/liupeidong0620/Tendis/commit/3326339ef486173e743988cf8f76db442fb9b348\n\n<span class=\"c1\"># system</span>\n\n<span class=\"c1\"># cat /etc/redhat-release</span>\nCentOS<span class=\"w\"> </span>Linux<span class=\"w\"> </span>release<span class=\"w\"> </span><span class=\"m\">7</span>.3.1611<span class=\"w\"> </span><span class=\"o\">(</span>Core<span class=\"o\">)</span>\n<span class=\"c1\"># gcc --version</span>\ngcc<span class=\"w\"> </span><span class=\"o\">(</span>GCC<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"m\">11</span>.2.1<span class=\"w\"> </span><span class=\"m\">20220127</span><span class=\"w\"> </span><span class=\"o\">(</span>Red<span class=\"w\"> </span>Hat<span class=\"w\"> </span><span class=\"m\">11</span>.2.1-9<span class=\"o\">)</span>\nCopyright<span class=\"w\"> </span><span class=\"o\">(</span>C<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"m\">2021</span><span class=\"w\"> </span>Free<span class=\"w\"> </span>Software<span class=\"w\"> </span>Foundation,<span class=\"w\"> </span>Inc.\nThis<span class=\"w\"> </span>is<span class=\"w\"> </span>free<span class=\"w\"> </span>software<span class=\"p\">;</span><span class=\"w\"> </span>see<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"nb\">source</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>copying<span class=\"w\"> </span>conditions.<span class=\"w\">  </span>There<span class=\"w\"> </span>is<span class=\"w\"> </span>NO\nwarranty<span class=\"p\">;</span><span class=\"w\"> </span>not<span class=\"w\"> </span>even<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>MERCHANTABILITY<span class=\"w\"> </span>or<span class=\"w\"> </span>FITNESS<span class=\"w\"> </span>FOR<span class=\"w\"> </span>A<span class=\"w\"> </span>PARTICULAR<span class=\"w\"> </span>PURPOSE.\n\n<span class=\"c1\"># build</span>\n\ngit<span class=\"w\"> </span>clone<span class=\"w\"> </span>https://github.com/liupeidong0620/Tendis.git\n<span class=\"nb\">cd</span><span class=\"w\"> </span>Tendis\ngit<span class=\"w\"> </span>checkout<span class=\"w\"> </span>-b<span class=\"w\"> </span>dev<span class=\"w\"> </span>origin/dev\n\ngit<span class=\"w\"> </span>submodule<span class=\"w\"> </span>update<span class=\"w\"> </span>--init<span class=\"w\"> </span>--recursive\nmkdir<span class=\"w\"> </span>build\n<span class=\"nb\">cd</span><span class=\"w\"> </span>build<span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"w\"> </span>cmake<span class=\"w\"> </span>..\nmake<span class=\"w\"> </span>-j12\n\n<span class=\"c1\"># run</span>\n<span class=\"nb\">cd</span><span class=\"w\"> </span>..\nmkdir<span class=\"w\"> </span>./home/db\n\n<span class=\"w\"> </span>./build/bin/tendisplus<span class=\"w\"> </span>./tendisplus.conf\n\n\n<span class=\"c1\"># redis request</span>\n\nredis-cli<span class=\"w\"> </span>-h<span class=\"w\"> </span><span class=\"m\">127</span>.0.0.1<span class=\"w\"> </span>-p<span class=\"w\"> </span><span class=\"m\">51002</span><span class=\"w\"> </span>hget<span class=\"w\"> </span>testkey<span class=\"w\"> </span>subkey\n\n<span class=\"c1\"># generate coredump</span>\n\n<span class=\"c1\"># tail -f home/log/tendisplus.INFO</span>\nW0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.126920<span class=\"w\"> </span><span class=\"m\">99353</span><span class=\"w\"> </span>index_manager.cpp:342<span class=\"o\">]</span><span class=\"w\"> </span>index<span class=\"w\"> </span>manager<span class=\"w\"> </span>running...\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127179<span class=\"w\"> </span><span class=\"m\">99354</span><span class=\"w\"> </span>server_entry.cpp:1971<span class=\"o\">]</span><span class=\"w\"> </span>serverCron<span class=\"w\"> </span>thread<span class=\"w\"> </span>starts,<span class=\"w\"> </span>hz:10\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127231<span class=\"w\"> </span><span class=\"m\">99355</span><span class=\"w\"> </span>server_entry.cpp:1911<span class=\"o\">]</span><span class=\"w\"> </span>bgcompact<span class=\"w\"> </span>thread<span class=\"w\"> </span>running...\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127594<span class=\"w\"> </span><span class=\"m\">99320</span><span class=\"w\"> </span>network.cpp:380<span class=\"o\">]</span><span class=\"w\"> </span>add<span class=\"w\"> </span>netIoThread,<span class=\"w\"> </span>i:7,<span class=\"w\"> </span>threadId:139981001582336\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.132004<span class=\"w\"> </span><span class=\"m\">99089</span><span class=\"w\"> </span>server_entry.cpp:870<span class=\"o\">]</span><span class=\"w\"> </span>ServerEntry::startup<span class=\"w\"> </span>sucess.\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.123395<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>Aborted<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">1754384749</span><span class=\"w\"> </span><span class=\"o\">(</span>unix<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"o\">)</span><span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"s2\">\"date -d @1754384749\"</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span>you<span class=\"w\"> </span>are<span class=\"w\"> </span>using<span class=\"w\"> </span>GNU<span class=\"w\"> </span>date<span class=\"w\"> </span>***\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.124835<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:PC:<span class=\"w\"> </span>@<span class=\"w\">                </span>0x0<span class=\"w\"> </span><span class=\"o\">(</span>unknown<span class=\"o\">)</span>\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.124886<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>SIGSEGV<span class=\"w\"> </span><span class=\"o\">(</span>@0xffffffffffffffe8<span class=\"o\">)</span><span class=\"w\"> </span>received<span class=\"w\"> </span>by<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">99089</span><span class=\"w\"> </span><span class=\"o\">(</span>TID<span class=\"w\"> </span>0x7f4ffffe8700<span class=\"o\">)</span><span class=\"w\"> </span>from<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">18446744073709551592</span><span class=\"p\">;</span><span class=\"w\"> </span>stack<span class=\"w\"> </span>trace:<span class=\"w\"> </span>***\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.125391<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:<span class=\"w\">    </span>@<span class=\"w\">          </span>0x1c7e3f7<span class=\"w\"> </span>google::<span class=\"o\">(</span>anonymous<span class=\"w\"> </span>namespace<span class=\"o\">)</span>::FailureSignalHandler<span class=\"o\">()</span>\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.126637<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:<span class=\"w\">    </span>@<span class=\"w\">           </span>0xa2e360<span class=\"w\"> </span>wasmtime::runtime::vm::sys::unix::signals::trap_handler::hfe532cb8288e83d6\n\n<span class=\"c1\"># glog lib code (main.cpp)</span>\n\n<span class=\"c1\">#ifndef _WIN32</span>\n<span class=\"w\">  </span>::google::InstallFailureSignalHandler<span class=\"o\">()</span><span class=\"p\">;</span>\n<span class=\"w\">  </span>::google::InstallFailureWriter<span class=\"o\">([](</span>const<span class=\"w\"> </span>char*<span class=\"w\"> </span>data,<span class=\"w\"> </span>int<span class=\"w\"> </span>size<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">    </span>LOG<span class=\"o\">(</span>ERROR<span class=\"o\">)</span><span class=\"w\"> </span>&lt;&lt;<span class=\"w\"> </span><span class=\"s2\">\"Failure:\"</span><span class=\"w\"> </span><span class=\"s\">&lt;&lt; std::st</span>ring<span class=\"o\">(</span>data,<span class=\"w\"> </span>size<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"w\">    </span>google::FlushLogFiles<span class=\"o\">(</span>google::INFO<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"w\">    </span>google::FlushLogFiles<span class=\"o\">(</span>google::WARNING<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"w\">    </span>google::FlushLogFiles<span class=\"o\">(</span>google::ERROR<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"w\">    </span>google::FlushLogFiles<span class=\"o\">(</span>google::FATAL<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"o\">})</span><span class=\"p\">;</span>\n<span class=\"c1\">#endif</span>\n</code></pre></div>\n<p>@alexcrichton </p>\n</blockquote>",
        "id": 532883186,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754388638
    },
    {
        "content": "<p>liupeidong0620 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344#issuecomment-3154515651\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344\">issue #11344</a>:</p>\n<blockquote>\n<h2>example</h2>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\">#  Code changes:</span>\n<span class=\"m\">1</span>.<span class=\"w\"> </span>Tendis<span class=\"w\"> </span>uses<span class=\"w\"> </span>the<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>library\n<span class=\"m\">2</span>.<span class=\"w\"> </span>Manually<span class=\"w\"> </span>generating<span class=\"w\"> </span>a<span class=\"w\"> </span>core<span class=\"w\"> </span>dump<span class=\"w\"> </span><span class=\"o\">(</span>redis-cli<span class=\"w\"> </span>-h<span class=\"w\"> </span><span class=\"m\">127</span>.0.0.1<span class=\"w\"> </span>-p<span class=\"w\"> </span><span class=\"m\">51002</span><span class=\"w\"> </span>hget<span class=\"w\"> </span>testkey<span class=\"w\"> </span>subkey<span class=\"o\">)</span>\n\nhttps://github.com/liupeidong0620/Tendis/commit/3326339ef486173e743988cf8f76db442fb9b348\n\n<span class=\"c1\"># system</span>\n\n<span class=\"c1\"># cat /etc/redhat-release</span>\nCentOS<span class=\"w\"> </span>Linux<span class=\"w\"> </span>release<span class=\"w\"> </span><span class=\"m\">7</span>.3.1611<span class=\"w\"> </span><span class=\"o\">(</span>Core<span class=\"o\">)</span>\n<span class=\"c1\"># gcc --version</span>\ngcc<span class=\"w\"> </span><span class=\"o\">(</span>GCC<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"m\">11</span>.2.1<span class=\"w\"> </span><span class=\"m\">20220127</span><span class=\"w\"> </span><span class=\"o\">(</span>Red<span class=\"w\"> </span>Hat<span class=\"w\"> </span><span class=\"m\">11</span>.2.1-9<span class=\"o\">)</span>\nCopyright<span class=\"w\"> </span><span class=\"o\">(</span>C<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"m\">2021</span><span class=\"w\"> </span>Free<span class=\"w\"> </span>Software<span class=\"w\"> </span>Foundation,<span class=\"w\"> </span>Inc.\nThis<span class=\"w\"> </span>is<span class=\"w\"> </span>free<span class=\"w\"> </span>software<span class=\"p\">;</span><span class=\"w\"> </span>see<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"nb\">source</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>copying<span class=\"w\"> </span>conditions.<span class=\"w\">  </span>There<span class=\"w\"> </span>is<span class=\"w\"> </span>NO\nwarranty<span class=\"p\">;</span><span class=\"w\"> </span>not<span class=\"w\"> </span>even<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>MERCHANTABILITY<span class=\"w\"> </span>or<span class=\"w\"> </span>FITNESS<span class=\"w\"> </span>FOR<span class=\"w\"> </span>A<span class=\"w\"> </span>PARTICULAR<span class=\"w\"> </span>PURPOSE.\n\n<span class=\"c1\"># build</span>\n\ngit<span class=\"w\"> </span>clone<span class=\"w\"> </span>https://github.com/liupeidong0620/Tendis.git\n<span class=\"nb\">cd</span><span class=\"w\"> </span>Tendis\ngit<span class=\"w\"> </span>checkout<span class=\"w\"> </span>-b<span class=\"w\"> </span>dev<span class=\"w\"> </span>origin/dev\n\ngit<span class=\"w\"> </span>submodule<span class=\"w\"> </span>update<span class=\"w\"> </span>--init<span class=\"w\"> </span>--recursive\nmkdir<span class=\"w\"> </span>build\n<span class=\"nb\">cd</span><span class=\"w\"> </span>build<span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"w\"> </span>cmake<span class=\"w\"> </span>..\nmake<span class=\"w\"> </span>-j12\n\n<span class=\"c1\"># run</span>\n<span class=\"nb\">cd</span><span class=\"w\"> </span>..\nmkdir<span class=\"w\"> </span>./home/db\n\n<span class=\"w\"> </span>./build/bin/tendisplus<span class=\"w\"> </span>./tendisplus.conf\n\n\n<span class=\"c1\"># redis request</span>\n\n./bin/redis-cli<span class=\"w\"> </span>-h<span class=\"w\"> </span><span class=\"m\">127</span>.0.0.1<span class=\"w\"> </span>-p<span class=\"w\"> </span><span class=\"m\">51002</span><span class=\"w\"> </span>hget<span class=\"w\"> </span>testkey<span class=\"w\"> </span>subkey\n\n<span class=\"c1\"># generate coredump</span>\n\n<span class=\"c1\"># tail -f home/log/tendisplus.INFO</span>\nW0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.126920<span class=\"w\"> </span><span class=\"m\">99353</span><span class=\"w\"> </span>index_manager.cpp:342<span class=\"o\">]</span><span class=\"w\"> </span>index<span class=\"w\"> </span>manager<span class=\"w\"> </span>running...\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127179<span class=\"w\"> </span><span class=\"m\">99354</span><span class=\"w\"> </span>server_entry.cpp:1971<span class=\"o\">]</span><span class=\"w\"> </span>serverCron<span class=\"w\"> </span>thread<span class=\"w\"> </span>starts,<span class=\"w\"> </span>hz:10\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127231<span class=\"w\"> </span><span class=\"m\">99355</span><span class=\"w\"> </span>server_entry.cpp:1911<span class=\"o\">]</span><span class=\"w\"> </span>bgcompact<span class=\"w\"> </span>thread<span class=\"w\"> </span>running...\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127594<span class=\"w\"> </span><span class=\"m\">99320</span><span class=\"w\"> </span>network.cpp:380<span class=\"o\">]</span><span class=\"w\"> </span>add<span class=\"w\"> </span>netIoThread,<span class=\"w\"> </span>i:7,<span class=\"w\"> </span>threadId:139981001582336\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.132004<span class=\"w\"> </span><span class=\"m\">99089</span><span class=\"w\"> </span>server_entry.cpp:870<span class=\"o\">]</span><span class=\"w\"> </span>ServerEntry::startup<span class=\"w\"> </span>sucess.\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.123395<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>Aborted<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">1754384749</span><span class=\"w\"> </span><span class=\"o\">(</span>unix<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"o\">)</span><span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"s2\">\"date -d @1754384749\"</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span>you<span class=\"w\"> </span>are<span class=\"w\"> </span>using<span class=\"w\"> </span>GNU<span class=\"w\"> </span>date<span class=\"w\"> </span>***\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.124835<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:PC:<span class=\"w\"> </span>@<span class=\"w\">                </span>0x0<span class=\"w\"> </span><span class=\"o\">(</span>unknown<span class=\"o\">)</span>\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.124886<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>SIGSEGV<span class=\"w\"> </span><span class=\"o\">(</span>@0xffffffffffffffe8<span class=\"o\">)</span><span class=\"w\"> </span>received<span class=\"w\"> </span>by<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">99089</span><span class=\"w\"> </span><span class=\"o\">(</span>TID<span class=\"w\"> </span>0x7f4ffffe8700<span class=\"o\">)</span><span class=\"w\"> </span>from<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">18446744073709551592</span><span class=\"p\">;</span><span class=\"w\"> </span>stack<span class=\"w\"> </span>trace:<span class=\"w\"> </span>***\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.125391<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:<span class=\"w\">    </span>@<span class=\"w\">          </span>0x1c7e3f7<span class=\"w\"> </span>google::<span class=\"o\">(</span>anonymous<span class=\"w\"> </span>namespace<span class=\"o\">)</span>::FailureSignalHandler<span class=\"o\">()</span>\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.126637<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:<span class=\"w\">    </span>@<span class=\"w\">           </span>0xa2e360<span class=\"w\"> </span>wasmtime::runtime::vm::sys::unix::signals::trap_handler::hfe532cb8288e83d6\n\n<span class=\"c1\"># glog lib code (main.cpp)</span>\n\n<span class=\"c1\">#ifndef _WIN32</span>\n<span class=\"w\">  </span>::google::InstallFailureSignalHandler<span class=\"o\">()</span><span class=\"p\">;</span>\n<span class=\"w\">  </span>::google::InstallFailureWriter<span class=\"o\">([](</span>const<span class=\"w\"> </span>char*<span class=\"w\"> </span>data,<span class=\"w\"> </span>int<span class=\"w\"> </span>size<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">    </span>LOG<span class=\"o\">(</span>ERROR<span class=\"o\">)</span><span class=\"w\"> </span>&lt;&lt;<span class=\"w\"> </span><span class=\"s2\">\"Failure:\"</span><span class=\"w\"> </span><span class=\"s\">&lt;&lt; std::st</span>ring<span class=\"o\">(</span>data,<span class=\"w\"> </span>size<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"w\">    </span>google::FlushLogFiles<span class=\"o\">(</span>google::INFO<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"w\">    </span>google::FlushLogFiles<span class=\"o\">(</span>google::WARNING<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"w\">    </span>google::FlushLogFiles<span class=\"o\">(</span>google::ERROR<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"w\">    </span>google::FlushLogFiles<span class=\"o\">(</span>google::FATAL<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"o\">})</span><span class=\"p\">;</span>\n<span class=\"c1\">#endif</span>\n</code></pre></div>\n<p>@alexcrichton </p>\n</blockquote>",
        "id": 532884066,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754389064
    },
    {
        "content": "<p>liupeidong0620 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344#issuecomment-3154515651\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344\">issue #11344</a>:</p>\n<blockquote>\n<h2>example</h2>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\">#  Code changes:</span>\n<span class=\"m\">1</span>.<span class=\"w\"> </span>Tendis<span class=\"w\"> </span>uses<span class=\"w\"> </span>the<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>library\n<span class=\"m\">2</span>.<span class=\"w\"> </span>Manually<span class=\"w\"> </span>generating<span class=\"w\"> </span>a<span class=\"w\"> </span>core<span class=\"w\"> </span>dump<span class=\"w\"> </span><span class=\"o\">(</span>redis-cli<span class=\"w\"> </span>-h<span class=\"w\"> </span><span class=\"m\">127</span>.0.0.1<span class=\"w\"> </span>-p<span class=\"w\"> </span><span class=\"m\">51002</span><span class=\"w\"> </span>hget<span class=\"w\"> </span>testkey<span class=\"w\"> </span>subkey<span class=\"o\">)</span>\n\nhttps://github.com/liupeidong0620/Tendis/commit/3326339ef486173e743988cf8f76db442fb9b348\n\n<span class=\"c1\"># system</span>\n\n<span class=\"c1\"># cat /etc/redhat-release</span>\nCentOS<span class=\"w\"> </span>Linux<span class=\"w\"> </span>release<span class=\"w\"> </span><span class=\"m\">7</span>.3.1611<span class=\"w\"> </span><span class=\"o\">(</span>Core<span class=\"o\">)</span>\n<span class=\"c1\"># Upgrading the gcc version using scl is very simple</span>\n<span class=\"c1\"># gcc --version</span>\ngcc<span class=\"w\"> </span><span class=\"o\">(</span>GCC<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"m\">11</span>.2.1<span class=\"w\"> </span><span class=\"m\">20220127</span><span class=\"w\"> </span><span class=\"o\">(</span>Red<span class=\"w\"> </span>Hat<span class=\"w\"> </span><span class=\"m\">11</span>.2.1-9<span class=\"o\">)</span>\nCopyright<span class=\"w\"> </span><span class=\"o\">(</span>C<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"m\">2021</span><span class=\"w\"> </span>Free<span class=\"w\"> </span>Software<span class=\"w\"> </span>Foundation,<span class=\"w\"> </span>Inc.\nThis<span class=\"w\"> </span>is<span class=\"w\"> </span>free<span class=\"w\"> </span>software<span class=\"p\">;</span><span class=\"w\"> </span>see<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"nb\">source</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>copying<span class=\"w\"> </span>conditions.<span class=\"w\">  </span>There<span class=\"w\"> </span>is<span class=\"w\"> </span>NO\nwarranty<span class=\"p\">;</span><span class=\"w\"> </span>not<span class=\"w\"> </span>even<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>MERCHANTABILITY<span class=\"w\"> </span>or<span class=\"w\"> </span>FITNESS<span class=\"w\"> </span>FOR<span class=\"w\"> </span>A<span class=\"w\"> </span>PARTICULAR<span class=\"w\"> </span>PURPOSE.\n\n<span class=\"c1\"># build</span>\n\ngit<span class=\"w\"> </span>clone<span class=\"w\"> </span>https://github.com/liupeidong0620/Tendis.git\n<span class=\"nb\">cd</span><span class=\"w\"> </span>Tendis\ngit<span class=\"w\"> </span>checkout<span class=\"w\"> </span>-b<span class=\"w\"> </span>dev<span class=\"w\"> </span>origin/dev\n\ngit<span class=\"w\"> </span>submodule<span class=\"w\"> </span>update<span class=\"w\"> </span>--init<span class=\"w\"> </span>--recursive\nmkdir<span class=\"w\"> </span>build\n<span class=\"nb\">cd</span><span class=\"w\"> </span>build<span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"w\"> </span>cmake<span class=\"w\"> </span>..\nmake<span class=\"w\"> </span>-j12\n\n<span class=\"c1\"># run</span>\n<span class=\"nb\">cd</span><span class=\"w\"> </span>..\nmkdir<span class=\"w\"> </span>./home/db\n\n<span class=\"w\"> </span>./build/bin/tendisplus<span class=\"w\"> </span>./tendisplus.conf\n\n\n<span class=\"c1\"># redis request</span>\n\n./bin/redis-cli<span class=\"w\"> </span>-h<span class=\"w\"> </span><span class=\"m\">127</span>.0.0.1<span class=\"w\"> </span>-p<span class=\"w\"> </span><span class=\"m\">51002</span><span class=\"w\"> </span>hget<span class=\"w\"> </span>testkey<span class=\"w\"> </span>subkey\n\n<span class=\"c1\"># generate coredump</span>\n\n<span class=\"c1\"># tail -f home/log/tendisplus.INFO</span>\nW0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.126920<span class=\"w\"> </span><span class=\"m\">99353</span><span class=\"w\"> </span>index_manager.cpp:342<span class=\"o\">]</span><span class=\"w\"> </span>index<span class=\"w\"> </span>manager<span class=\"w\"> </span>running...\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127179<span class=\"w\"> </span><span class=\"m\">99354</span><span class=\"w\"> </span>server_entry.cpp:1971<span class=\"o\">]</span><span class=\"w\"> </span>serverCron<span class=\"w\"> </span>thread<span class=\"w\"> </span>starts,<span class=\"w\"> </span>hz:10\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127231<span class=\"w\"> </span><span class=\"m\">99355</span><span class=\"w\"> </span>server_entry.cpp:1911<span class=\"o\">]</span><span class=\"w\"> </span>bgcompact<span class=\"w\"> </span>thread<span class=\"w\"> </span>running...\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.127594<span class=\"w\"> </span><span class=\"m\">99320</span><span class=\"w\"> </span>network.cpp:380<span class=\"o\">]</span><span class=\"w\"> </span>add<span class=\"w\"> </span>netIoThread,<span class=\"w\"> </span>i:7,<span class=\"w\"> </span>threadId:139981001582336\nI0805<span class=\"w\"> </span><span class=\"m\">17</span>:04:52.132004<span class=\"w\"> </span><span class=\"m\">99089</span><span class=\"w\"> </span>server_entry.cpp:870<span class=\"o\">]</span><span class=\"w\"> </span>ServerEntry::startup<span class=\"w\"> </span>sucess.\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.123395<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>Aborted<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">1754384749</span><span class=\"w\"> </span><span class=\"o\">(</span>unix<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"o\">)</span><span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"s2\">\"date -d @1754384749\"</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span>you<span class=\"w\"> </span>are<span class=\"w\"> </span>using<span class=\"w\"> </span>GNU<span class=\"w\"> </span>date<span class=\"w\"> </span>***\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.124835<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:PC:<span class=\"w\"> </span>@<span class=\"w\">                </span>0x0<span class=\"w\"> </span><span class=\"o\">(</span>unknown<span class=\"o\">)</span>\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.124886<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>SIGSEGV<span class=\"w\"> </span><span class=\"o\">(</span>@0xffffffffffffffe8<span class=\"o\">)</span><span class=\"w\"> </span>received<span class=\"w\"> </span>by<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">99089</span><span class=\"w\"> </span><span class=\"o\">(</span>TID<span class=\"w\"> </span>0x7f4ffffe8700<span class=\"o\">)</span><span class=\"w\"> </span>from<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">18446744073709551592</span><span class=\"p\">;</span><span class=\"w\"> </span>stack<span class=\"w\"> </span>trace:<span class=\"w\"> </span>***\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.125391<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:<span class=\"w\">    </span>@<span class=\"w\">          </span>0x1c7e3f7<span class=\"w\"> </span>google::<span class=\"o\">(</span>anonymous<span class=\"w\"> </span>namespace<span class=\"o\">)</span>::FailureSignalHandler<span class=\"o\">()</span>\nE0805<span class=\"w\"> </span><span class=\"m\">17</span>:05:49.126637<span class=\"w\"> </span><span class=\"m\">99265</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:<span class=\"w\">    </span>@<span class=\"w\">           </span>0xa2e360<span class=\"w\"> </span>wasmtime::runtime::vm::sys::unix::signals::trap_handler::hfe532cb8288e83d6\n\n<span class=\"c1\"># glog lib code (main.cpp)</span>\n\n<span class=\"c1\">#ifndef _WIN32</span>\n<span class=\"w\">  </span>::google::InstallFailureSignalHandler<span class=\"o\">()</span><span class=\"p\">;</span>\n<span class=\"w\">  </span>::google::InstallFailureWriter<span class=\"o\">([](</span>const<span class=\"w\"> </span>char*<span class=\"w\"> </span>data,<span class=\"w\"> </span>int<span class=\"w\"> </span>size<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">    </span>LOG<span class=\"o\">(</span>ERROR<span class=\"o\">)</span><span class=\"w\"> </span>&lt;&lt;<span class=\"w\"> </span><span class=\"s2\">\"Failure:\"</span><span class=\"w\"> </span><span class=\"s\">&lt;&lt; std::st</span>ring<span class=\"o\">(</span>data,<span class=\"w\"> </span>size<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"w\">    </span>google::FlushLogFiles<span class=\"o\">(</span>google::INFO<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"w\">    </span>google::FlushLogFiles<span class=\"o\">(</span>google::WARNING<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"w\">    </span>google::FlushLogFiles<span class=\"o\">(</span>google::ERROR<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"w\">    </span>google::FlushLogFiles<span class=\"o\">(</span>google::FATAL<span class=\"o\">)</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"o\">})</span><span class=\"p\">;</span>\n<span class=\"c1\">#endif</span>\n</code></pre></div>\n<p>@alexcrichton </p>\n</blockquote>",
        "id": 532884399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754389230
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344#issuecomment-3155716323\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344\">issue #11344</a>:</p>\n<blockquote>\n<p>Thanks! I was able to reproduce using just the glog library. Looks like this is an issue where libunwind, the default unwinder that's using, can't unwind Rust frames from Wasmtime on the stack correctly. This is in turn due to the lack of unwinding information due to our C API artifacts being built with <code>-Cpanic=abort</code>. I've confirmed locally that building the C API with <code>-Cforce-unwind-tables</code> fixes the issue as it ensures there's unwind information for libunwind to use.</p>\n<p>I plan on updating our default C API artifacts to include this as I think it's reasonable to have, but in the meantime you can build your own copy of the C API with <code>RUSTFLAGS=-Cforce-unwind-tables</code> too.</p>\n</blockquote>",
        "id": 532942945,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754408608
    },
    {
        "content": "<p>liupeidong0620 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11344\">issue #11344</a>:</p>\n<blockquote>\n<h1>Description</h1>\n<p>I'm embedding wasmtime as a library in my host application to run WebAssembly plugins. However, when my host program encounters a fatal signal (e.g., SIGSEGV) and should generate a core dump, the signal is being intercepted by wasmtime's internal signal handling mechanism. This prevents the default core dump generation and makes it difficult to capture the actual crash stack trace for debugging.</p>\n<p>How can I properly configure signal handling so that different signals (especially fatal ones like SIGSEGV, SIGABRT) are handled correctlyâ€”allowing the host application to generate core dumps and print stack information as expected, while still allowing wasmtime to handle WebAssembly-related traps?</p>\n<h1>wasmtime version</h1>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">v30</span><span class=\"p\">.</span><span class=\"mf\">0.2</span><span class=\"o\">-</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">c</span><span class=\"o\">-</span><span class=\"n\">api</span><span class=\"p\">.</span><span class=\"n\">tar</span><span class=\"p\">.</span><span class=\"n\">xz</span>\n</code></pre></div>\n<h1>linux system</h1>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">uname</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">a</span>\n<span class=\"n\">Linux</span><span class=\"w\"> </span><span class=\"mi\">384</span><span class=\"n\">a4bbb</span><span class=\"o\">-</span><span class=\"n\">d3bb</span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"n\">a96</span><span class=\"o\">-</span><span class=\"n\">ae4e</span><span class=\"o\">-</span><span class=\"mi\">5529</span><span class=\"n\">fd44a702</span><span class=\"w\"> </span><span class=\"mf\">3.10.0</span><span class=\"o\">-</span><span class=\"mf\">1062.9.1.</span><span class=\"n\">el7</span><span class=\"p\">.</span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">SMP</span><span class=\"w\"> </span><span class=\"n\">Fri</span><span class=\"w\"> </span><span class=\"n\">Dec</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"p\">:</span><span class=\"mi\">49</span><span class=\"p\">:</span><span class=\"mi\">49</span><span class=\"w\"> </span><span class=\"n\">UTC</span><span class=\"w\"> </span><span class=\"mi\">2019</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">GNU</span><span class=\"o\">/</span><span class=\"n\">Linux</span>\n\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">cat</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">etc</span><span class=\"o\">/</span><span class=\"n\">redhat</span><span class=\"o\">-</span><span class=\"n\">release</span>\n<span class=\"n\">CentOS</span><span class=\"w\"> </span><span class=\"n\">Linux</span><span class=\"w\"> </span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"mf\">7.3.1611</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Core</span><span class=\"p\">)</span>\n</code></pre></div>\n<h1>Code initialization process</h1>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"p\">....</span>\n<span class=\"c1\">// init wasmtime</span>\n\n<span class=\"c1\">// Capture exception signals and print stack information</span>\n<span class=\"cp\">#ifndef _WIN32</span>\n<span class=\"w\">  </span><span class=\"o\">::</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">InstallFailureSignalHandler</span><span class=\"p\">();</span>\n<span class=\"w\">  </span><span class=\"o\">::</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">InstallFailureWriter</span><span class=\"p\">([](</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">LOG</span><span class=\"p\">(</span><span class=\"n\">ERROR</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"Failure:\"</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">INFO</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">WARNING</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">ERROR</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FlushLogFiles</span><span class=\"p\">(</span><span class=\"n\">google</span><span class=\"o\">::</span><span class=\"n\">FATAL</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">});</span>\n<span class=\"cp\">#endif</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h1>The host app's coredump stack information is incorrect.</h1>\n<p><div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>E0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.475342<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>Aborted<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"m\">1753669027</span><span class=\"w\"> </span><span class=\"o\">(</span>unix<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"o\">)</span><span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"s2\">\"date -d @1753669027\"</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span>you<span class=\"w\"> </span>are<span class=\"w\"> </span>using<span class=\"w\"> </span>GNU<span class=\"w\"> </span>date<span class=\"w\"> </span>***\nE0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.477213<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:PC:<span class=\"w\"> </span>@<span class=\"w\">                </span>0x0<span class=\"w\"> </span><span class=\"o\">(</span>unknown<span class=\"o\">)</span>\nE0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.477321<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:***<span class=\"w\"> </span>SIGSEGV<span class=\"w\"> </span><span class=\"o\">(</span>@0xffffffffffffffef<span class=\"o\">)</span><span class=\"w\"> </span>received<span class=\"w\"> </span>by<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">108417</span><span class=\"w\"> </span><span class=\"o\">(</span>TID<span class=\"w\"> </span>0x7fa9931ff700<span class=\"o\">)</span><span class=\"w\"> </span>from<span class=\"w\"> </span>PID<span class=\"w\"> </span><span class=\"m\">18446744073709551599</span><span class=\"p\">;</span><span class=\"w\"> </span>stack<span class=\"w\"> </span>trace:<span class=\"w\"> </span>***\nE0728<span class=\"w\"> </span><span class=\"m\">10</span>:17:07.479700<span class=\"w\"> </span><span class=\"m\">108776</span><span class=\"w\"> </span>main.cpp:124<span class=\"o\">]</span><span class=\"w\"> </span>Failure:<span class=\"w\">    </span>@<span class=\"w\">           </span>0xf311f0<span class=\"w\"> </span>wasmtime::runtime::vm::sys::unix::signals::trap_handler::hfe532cb8288e83d6\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 533010992,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754444615
    }
]