[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272\">PR #11272</a> from <code>abrown:asm-features</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This adds full boolean term support for instructions emitted in the new assembler (terms like <code>(_64b | compat) &amp; avx2</code>). Despite doing more checks, this may be quicker too: instead of building up a <code>SmallVec&lt;InstructionSet&gt;</code> to compare against, this generates Rust code like the following that queries what features are available in the target via the <code>AvailableFeatures</code> trait:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[must_use]</span><span class=\"w\"> </span><span class=\"c1\">// cranelift/assembler-x64/meta/src/generate/inst.rs:227</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">is_available</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">features</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"n\">AvailableFeatures</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"p\">.</span><span class=\"n\">_64b</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">features</span><span class=\"p\">.</span><span class=\"n\">compat</span><span class=\"p\">())</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">features</span><span class=\"p\">.</span><span class=\"n\">avx2</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"c1\">// cranelift/assembler-x64/meta/src/generate/inst.rs:232</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>With all of this in place, this PR has a large mechanical translation of all the old, incorrect feature definitions (<code>_64b | compat | avx2</code>) into their new, correct definitions (<code>(_64b | compat) &amp; avx2</code>). I expect this will see a lot more use of this when using more instructions from AVX512, AVX10, APX, etc.</p>\n</blockquote>",
        "id": 529367407,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752793297
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272\">PR #11272</a>.</p>",
        "id": 529367408,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752793297
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272\">PR #11272</a>.</p>",
        "id": 529367409,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752793298
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272#pullrequestreview-3031251147\">PR review</a>.</p>",
        "id": 529367921,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752793693
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272#discussion_r2214465871\">PR review comment</a>:</p>\n<blockquote>\n<p>So this is a bit unfortunate at the moment: we've lost the ability to see why this check has failed. I mulled this over for a bit, thinking how we can get this back. One option is to have the assembler just \"return the right string\" through some other method which we can paste in here. But I'm leaning toward adding a Inst::features() -&gt; Features, much like we had before, but that would return a boolean term like the one we have available at the meta level. Though this would duplicate the some of Features, it would return an enum that is more widely usable than a string while I still have all of this paged in.</p>\n<p>Either option, \"return a string\" or \"return a Features\", is really fine at this poing and I'm interested in feedback. Also, this seems like something that could get fixed up in a follow-on PR.</p>\n</blockquote>",
        "id": 529367922,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752793693
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272#discussion_r2214465871\">PR review comment</a>.</p>",
        "id": 529367986,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752793729
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272#issuecomment-3085791973\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272\">PR #11272</a>:</p>\n<blockquote>\n<p>I do expect this to fail in Winch: something about how we're using <code>-Ccranelift-has-avx2</code> in <a href=\"https://github.com/bytecodealliance/wasmtime/blob/3c9305c0bb8d614b37f8d121aa115c2fd822296e/tests/disas/winch/x64/i8x16/splat/param_avx2.wat\"><code>param_av2.wat</code></a> doesn't seem to propagate the right features into the ISA flags used here:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/3c9305c0bb8d614b37f8d121aa115c2fd822296e/winch/codegen/src/isa/x64/masm.rs#L3205-L3208\">https://github.com/bytecodealliance/wasmtime/blob/3c9305c0bb8d614b37f8d121aa115c2fd822296e/winch/codegen/src/isa/x64/masm.rs#L3205-L3208</a></p>\n</blockquote>",
        "id": 529368267,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752793908
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272#pullrequestreview-3043760715\">PR review</a>.</p>",
        "id": 530179096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753200341
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272#discussion_r2223059171\">PR review comment</a>:</p>\n<blockquote>\n<p><code>Inst::features</code> sounds reasonable to me. Implementation-wise I might recommend a different representation of <code>Features</code> that doesn't use <code>Box</code> internally but instead uses <code>&amp;'static ...</code> and put everything into <code>const</code>s. That way there's no need to actually allocate anything and it's all just pointing at a bunch of static data (which is in theory deduplicated across functions too)</p>\n</blockquote>",
        "id": 530179097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753200341
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272#discussion_r2223063856\">PR review comment</a>:</p>\n<blockquote>\n<p>I think the discrepancy here with Winch is <code>use_avx2</code> vs <code>has_avx2</code> perhaps? Here I think it'd be reasonable to switch to <code>has_*</code> (for other methods too) where <code>use_*</code> affects codegen but <code>has_*</code> is the literal CPU features (in theory)</p>\n</blockquote>",
        "id": 530179497,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753200469
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272#pullrequestreview-3043767627\">PR review</a>.</p>",
        "id": 530179498,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753200469
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272\">PR #11272</a>.</p>",
        "id": 532996700,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754431965
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272#pullrequestreview-3089863393\">PR review</a>.</p>",
        "id": 532996727,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754431990
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272#discussion_r2255448129\">PR review comment</a>:</p>\n<blockquote>\n<p>See de476c2.</p>\n</blockquote>",
        "id": 532996728,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754431991
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272#pullrequestreview-3089864046\">PR review</a>.</p>",
        "id": 532996766,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754432018
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272#discussion_r2255448592\">PR review comment</a>:</p>\n<blockquote>\n<p>See f529126.</p>\n</blockquote>",
        "id": 532996767,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754432018
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272\">PR #11272</a>.</p>",
        "id": 532996914,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754432127
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272#pullrequestreview-3090025820\">PR review</a>.</p>",
        "id": 533005017,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754439080
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11272\">PR #11272</a>.</p>",
        "id": 533121620,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754492233
    }
]