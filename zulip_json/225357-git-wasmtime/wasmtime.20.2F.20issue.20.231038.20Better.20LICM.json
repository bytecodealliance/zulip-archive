[
    {
        "content": "<p>fitzgen closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1038\">issue #1038</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/cranelift/issues/133\">bytecodealliance/cranelift#133</a> and <a href=\"https://github.com/bytecodealliance/cranelift/issues/138\">bytecodealliance/cranelift#138</a> started some work toward improving LICM, in particular to better handle loops that end in the middles of ebbs; see the actual PRs for more discussion. </p>\n<p>I've now merged those patches into a branch here:</p>\n<p><a href=\"https://github.com/CraneStation/cranelift/tree/better_licm\">https://github.com/CraneStation/cranelift/tree/better_licm</a></p>\n</blockquote>",
        "id": 546727350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761237993
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1038#issuecomment-3438052761\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1038\">issue #1038</a>:</p>\n<blockquote>\n<p>We have a new LICM implementation as part of the egraphs midend work that landed a year or two ago, so I don't think this issue is relevant anymore. If anyone identifies suboptimal behavior in our new LICM implementation, please open an issue with example code showing it and we can discuss improvements in that new issue.</p>\n</blockquote>",
        "id": 546727352,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761237993
    }
]