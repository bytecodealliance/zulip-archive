[
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750\">PR #10750</a>.</p>",
        "id": 516776807,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746657354
    },
    {
        "content": "<p>saulecabrera opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750\">PR #10750</a> from <code>saulecabrera:winch-aarch64-run-more-tests</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Closes <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9566\">https://github.com/bytecodealliance/wasmtime/issues/9566</a></p>\n<p>This commit takes inspiration from<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/pull/10738/files\">https://github.com/bytecodealliance/wasmtime/pull/10738/files</a></p>\n<p>During the 2025-05-07 Cranelift meeting we discussed potential avenues to start running wast tests for winch-aarch64. One potential idea was to declare an allowlist of tests that should be exectued and potentially ignore everyhing else. Although that idea works, I decided to diverge a bit from it, in favor of introducing a very strict classification of the state of tests for aarch64, namely, in this commit tests are classified as:</p>\n<ul>\n<li>Run and expected to pass</li>\n<li>Run and exepected to fail in a recoverable way</li>\n<li>Don't run since it's known that they produce an unrecoverable error e.g., segafault.</li>\n</ul>\n<p>This approach is probably more verbose than the one discussed in the meeting, however, I think it's easier to have a global view of that status for aarch64 and potentially other backends in the future.</p>\n<p>@alexcrichton curious to see what do you think. </p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 516776808,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746657354
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750\">PR #10750</a>.</p>",
        "id": 516776809,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746657354
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750\">PR #10750</a>.</p>",
        "id": 516776973,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746657439
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750#pullrequestreview-2823372837\">PR review</a>.</p>",
        "id": 516777927,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746658023
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750#discussion_r2078594220\">PR review comment</a>:</p>\n<blockquote>\n<p>Could the platform-independent tests, the ones that fail on all platforms, be deduplicated between here and x64?</p>\n</blockquote>",
        "id": 516777928,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746658023
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750\">PR #10750</a>.</p>",
        "id": 516781295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746660028
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750#discussion_r2078647965\">PR review comment</a>:</p>\n<blockquote>\n<p>Sure, yeah. Added that in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750/commits/0d4784bc61f6b7a5350b2e91d0ec7df85880cae3\">https://github.com/bytecodealliance/wasmtime/pull/10750/commits/0d4784bc61f6b7a5350b2e91d0ec7df85880cae3</a></p>\n</blockquote>",
        "id": 516781320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746660045
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750#pullrequestreview-2823447075\">PR review</a>.</p>",
        "id": 516781321,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746660045
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750#issuecomment-2861073482\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750\">PR #10750</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 516790664,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746666328
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750#issuecomment-2863466807\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750\">PR #10750</a>:</p>\n<blockquote>\n<p>The failure in CI happens because <code>wasmtime_test_util::wast::Compiler::should_fail</code> gets invoked from <code>wasmtime_test</code> macro, and as far as I understand, <code>#[cfg(target_arch=\"...\")]</code> in macro code will resolve to the host, not to the target, which ends up returning <code>true</code> for <code>should_fail</code>, but since we're cross compiling (aarch64 -&gt; x64), in reality the test passes and the <code>#[should_panic]</code> predicate is not met. </p>\n<p>Prior to this change this was not an issue, since we were only taking x64 into account for Winch. </p>\n</blockquote>",
        "id": 516924247,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746718216
    },
    {
        "content": "<p>saulecabrera edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750#issuecomment-2863466807\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750\">PR #10750</a>:</p>\n<blockquote>\n<p>The failure in CI happens because <code>wasmtime_test_util::wast::Compiler::should_fail</code> gets invoked from the <code>wasmtime_test</code> macro, and as far as I understand, <code>#[cfg(target_arch=\"...\")]</code> in macro code will resolve to the host, not to the target, which ends up returning <code>true</code> for <code>should_fail</code>, but since we're cross compiling (aarch64 -&gt; x64), in reality the test passes and the <code>#[should_panic]</code> predicate is not met. </p>\n<p>Prior to this change this was not an issue, since we were only taking x64 into account for Winch. </p>\n</blockquote>",
        "id": 516924301,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746718231
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750#issuecomment-2863537873\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750\">PR #10750</a>:</p>\n<blockquote>\n<p>Bah I was afraid of this happening at some point...</p>\n<p>Could we perhaps delay <a href=\"https://github.com/bytecodealliance/wasmtime/blob/19000eea134cea26bcff281ef6c4f918503cfe9d/crates/test-macros/src/wasmtime_test.rs#L265-L269\">this</a> to happening at runtime? We've got the two structures there at test-run-time so we should be able to run the same code. I'd prefer to not catch panics so it means though that all tests would have to return <code>Result&lt;()&gt;</code> and the runtime result of <code>should_fail</code> would result in expecting an error or not, however.</p>\n</blockquote>",
        "id": 516928753,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746719419
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750#issuecomment-2863653055\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750\">PR #10750</a>:</p>\n<blockquote>\n<p>Yeah, I'll try that. I remember we had discussed this, I just wasn't sure if there was a strong preference regarding catching panics.</p>\n</blockquote>",
        "id": 516937574,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746722039
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750#issuecomment-2863657536\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750\">PR #10750</a>:</p>\n<blockquote>\n<p>Personally I'd say I have a weak preference, if that's the best solution maintenance-wise I'd go with catching panics</p>\n</blockquote>",
        "id": 516937904,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746722159
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750\">PR #10750</a>.</p>",
        "id": 516959220,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746729631
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750\">PR #10750</a>.</p>",
        "id": 516959340,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746729679
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750#issuecomment-2863963650\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750\">PR #10750</a>:</p>\n<blockquote>\n<p>Ok, ended up going with emitting the call to <code>Compiler::should_fail</code> at runtime. Would you mind taking another look?</p>\n</blockquote>",
        "id": 516959492,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746729733
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750#pullrequestreview-2826559087\">PR review</a>.</p>",
        "id": 516993163,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746745142
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750#discussion_r2080596231\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this use <code>result.unwrap()</code> to print the error on failure?</p>\n</blockquote>",
        "id": 516993164,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746745143
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750\">PR #10750</a>.</p>",
        "id": 517102960,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746794783
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750\">PR #10750</a>.</p>",
        "id": 517107218,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746795999
    },
    {
        "content": "<p>saulecabrera merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10750\">PR #10750</a>.</p>",
        "id": 517114721,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746798195
    }
]