[
    {
        "content": "<p>rahulchaphalkar opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918\">PR #10918</a> from <code>rahulchaphalkar:custom-print</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This PR implements custom print logic for <code>lock</code> instruction, and reworks the existing logic for <code>custom_visit</code> to be more in the form of <code>.custom(Visit | Display)</code>. The <code>custom_visit</code> logic was originally implemented in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887\">https://github.com/bytecodealliance/wasmtime/pull/10887</a> and the changes are made based on some of these comments <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10887#discussion_r2121785272\">https://github.com/bytecodealliance/wasmtime/pull/10887#discussion_r2121785272</a></p>\n<p>The <code>Display</code> logic will be used for compare instructions as well.<br>\n@abrown</p>\n</blockquote>",
        "id": 522246428,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749001301
    },
    {
        "content": "<p><strong>rahulchaphalkar</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918\">PR #10918</a>.</p>",
        "id": 522246429,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749001301
    },
    {
        "content": "<p><strong>rahulchaphalkar</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918\">PR #10918</a>.</p>",
        "id": 522246431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749001301
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918\">PR #10918</a>.</p>",
        "id": 522390216,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749051282
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918#pullrequestreview-2897318523\">PR review</a>:</p>\n<blockquote>\n<p>I think the important bits are mostly here, most of the comments below are smaller Rust issues. The one real issue here is _where_ we put the logic... see below.</p>\n</blockquote>",
        "id": 522407371,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749055986
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918#discussion_r2126957277\">PR review comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    Encode,\n</code></pre></div>\n<p>We don't need <code>None</code> here because <code>Custom</code> can be empty.</p>\n</blockquote>",
        "id": 522407373,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749055986
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918#discussion_r2126962957\">PR review comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>pub struct Custom(Vec&lt;CustomOperation&gt;);\n</code></pre></div>\n<p>No need for this to be <code>pub</code> if you have <code>iter</code> below.</p>\n</blockquote>",
        "id": 522407377,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749055986
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918#discussion_r2126963842\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    /// Indicate this instruction as needing custom processing.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 522407378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749055986
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918#discussion_r2126961438\">PR review comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        if !custom.is_empty() {\n            write!(f, \" custom({custom})\")?;\n        }\n</code></pre></div>\n<p>Since we already have <code>Display</code> implemented for <code>Custom</code>.</p>\n</blockquote>",
        "id": 522407379,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749055986
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918#discussion_r2126966413\">PR review comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        custom: Custom::default(),\n</code></pre></div>\n<p>We could <code>#[derive(Default)]</code> to create the empty set or we could create a <code>Custom::empty() -&gt; Self</code> function if we want to be more clear.</p>\n</blockquote>",
        "id": 522407380,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749055986
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918#discussion_r2126968697\">PR review comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>mod custom;\n</code></pre></div>\n<p>No need to publicize this; we re-publish the types we want to be public in the <code>pub use custom::...</code> below.</p>\n</blockquote>",
        "id": 522407382,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749055986
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918#discussion_r2126981113\">PR review comment</a>:</p>\n<blockquote>\n<p>These might not be needed ever, but probably aren't used now (?). Can we remove them?</p>\n</blockquote>",
        "id": 522407383,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749055987
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918#discussion_r2126993261\">PR review comment</a>:</p>\n<blockquote>\n<p>As mentioned above, this should move to <code>cranelift_assembler_x64::custom::display</code>. And, just like <code>visit</code>, we will (1) want to have a function for each instruction that needs the custom display logic and (2) pass through the whole instruction, in case we need more information in the future:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">display</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">lock_addb</span><span class=\"p\">(</span><span class=\"n\">inst</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">lock_addb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">lock_addw</span><span class=\"p\">(</span><span class=\"n\">inst</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">lock_addw</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"w\">  </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">lock_subb</span><span class=\"p\">(</span><span class=\"n\">inst</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">lock_subb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">lock_subw</span><span class=\"p\">(</span><span class=\"n\">inst</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">lock_subw</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Two thoughts about this:<br>\n- this could be quite repetitive so we might want to use a macro<br>\n- eventually we probably want the signature <code>(&amp;&lt;inst&gt;) -&gt; String</code> to be a bit more expansive, i.e., to return the entire display string and not just the altered mnemonic, but this is probably OK for now.</p>\n</blockquote>",
        "id": 522407384,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749055987
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918#discussion_r2126976414\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    /// Whether or not this instruction uses custom, external functions\n    /// instead of Rust code generated by this crate.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 522407385,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749055987
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918#discussion_r2127037068\">PR review comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>mod custom;\n</code></pre></div>\n<p>?</p>\n</blockquote>",
        "id": 522407386,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749055987
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918#discussion_r2126973781\">PR review comment</a>:</p>\n<blockquote>\n<p>We don't want any implementation of the actual custom functions to live in this crate; we want them to live in the parent crate, <code>cranelift-assembler-x64</code>, in the <code>custom</code> module. So that <code>custom</code> module, which you modified to contain a <code>visit</code> sub-module, should also contain a <code>display</code> sub-module and eventually an <code>encode</code> module, once we need it.</p>\n</blockquote>",
        "id": 522407387,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749055987
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918#discussion_r2127002274\">PR review comment</a>:</p>\n<blockquote>\n<p>This should look more like the logic with <code>visit</code> above: if we have a custom <code>display</code> function, then we emit something like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">fmtln</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"let inst_name = crate::custom::display::{}(self)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"p\">());</span>\n</code></pre></div>\n<p>And then, in this case, we would use <code>inst_name</code> later in the generated code instead of the already-known <code>inst_name</code> we have here.</p>\n</blockquote>",
        "id": 522407388,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749055987
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918#discussion_r2127003183\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    use crate::{Fixed, Gpr, GprMem, RegisterVisitor, Registers, gpr};\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 522407389,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749055987
    },
    {
        "content": "<p>rahulchaphalkar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918\">PR #10918</a>.</p>",
        "id": 522675983,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749161282
    },
    {
        "content": "<p>rahulchaphalkar <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918#issuecomment-2946518328\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918\">PR #10918</a>:</p>\n<blockquote>\n<p>Ready for review, addressed feedback</p>\n</blockquote>",
        "id": 522676265,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749161449
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918#pullrequestreview-2902791205\">PR review</a>:</p>\n<blockquote>\n<p>Thanks! This looks good. I'll put this in the merge queue but if @alexcrichton has any further suggestions we could follow this up in the <code>compare</code> PR.</p>\n</blockquote>",
        "id": 522678883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749163314
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918#pullrequestreview-2902870515\">PR review</a>.</p>",
        "id": 522680279,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749164359
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10918\">PR #10918</a>.</p>",
        "id": 522682057,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749165616
    }
]