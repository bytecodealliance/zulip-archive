[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175\">PR #11175</a> from <code>fitzgen:issue-11162-no-hash-sets-in-drc</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This removes the explicit <code>HashSet</code>s used to represent the over-approximated-stack-roots and precise-stack-roots sets and replaces them with an intrusive, singly-linked list and a mark bit in the object headers respectively. The new list implementation also subsumes the old bump chunk that sat in front of the old over-approximated-stack-roots hash set.</p>\n<p>This shaves off about 25% of the time it takes to run the test case in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141\">https://github.com/bytecodealliance/wasmtime/issues/11141</a> for me locally.</p>\n<p>This also ended up being a nice simplification of the DRC collector, which in turn allowed us to further simplify the <code>GcHeap</code> trait, since we no longer ever need to GC before passing GC refs into Wasm.</p>\n<p>Fixes <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11162\">https://github.com/bytecodealliance/wasmtime/issues/11162</a></p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 526872287,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751486946
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175\">PR #11175</a>.</p>",
        "id": 526872290,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751486947
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175\">PR #11175</a>.</p>",
        "id": 526872291,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751486947
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175\">PR #11175</a>.</p>",
        "id": 526872294,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751486947
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175\">PR #11175</a>.</p>",
        "id": 526872295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751486948
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175\">PR #11175</a>.</p>",
        "id": 526872371,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751486991
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#pullrequestreview-2980492293\">PR review</a>.</p>",
        "id": 526872500,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751487049
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#discussion_r2180890055\">PR review comment</a>:</p>\n<blockquote>\n<p>This was such a silly bug but it made me feel like I was losing my mind :facepalm: </p>\n</blockquote>",
        "id": 526872501,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751487049
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#discussion_r2180908751\">PR review comment</a>:</p>\n<blockquote>\n<p>s/table/list/</p>\n</blockquote>",
        "id": 526875007,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751488314
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#pullrequestreview-2980516748\">PR review</a>:</p>\n<blockquote>\n<p>This looks generally good to me -- nice speedups too! Just a few thoughts below.</p>\n</blockquote>",
        "id": 526875008,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751488314
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#discussion_r2180900643\">PR review comment</a>:</p>\n<blockquote>\n<p>Do we want to defer this list-head update until after the code below sets up the object at the head? Otherwise there's a risk the intermediate state is visible -- perhaps fine (we're not a concurrent mutator) but if e.g. a trap occurs or we add some kind of observability mechanism it might present an edge case, especially as we delegate the setup to helpers. Basically it seems cleaner to me to keep the \"making it live is the last store\" pattern here.</p>\n</blockquote>",
        "id": 526875009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751488314
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#discussion_r2180907223\">PR review comment</a>:</p>\n<blockquote>\n<p>s/approximized/approximated/</p>\n</blockquote>",
        "id": 526875010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751488314
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#discussion_r2180908605\">PR review comment</a>:</p>\n<blockquote>\n<p>s/logivally/logically/</p>\n</blockquote>",
        "id": 526875011,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751488314
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#discussion_r2180908364\">PR review comment</a>:</p>\n<blockquote>\n<p>s/table/list/ ?</p>\n</blockquote>",
        "id": 526875012,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751488314
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#discussion_r2180920061\">PR review comment</a>:</p>\n<blockquote>\n<p>The function name here says <code>u26</code> but the comment, and the function above as well, say <code>u27</code> / <code>27-bit</code> -- they should match I think?</p>\n</blockquote>",
        "id": 526875013,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751488314
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#discussion_r2180916140\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not sure I see why we load this value twice -- can we use <code>next</code> below when we patch the prev link?</p>\n</blockquote>",
        "id": 526875014,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751488314
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#discussion_r2180919951\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this method be removed entirely in favor taking a <code>bit: bool</code> parameter in <code>set_in_over_approximated_stack_roots</code> above? That way the callers would inherit the comment of \"no need to update the over approximated set\" which I think would make more sense in the context of callers than here.</p>\n</blockquote>",
        "id": 526875132,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751488373
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#pullrequestreview-2980523815\">PR review</a>:</p>\n<blockquote>\n<p>Really like how this worked out, especially how it simplifies passing GC references into wasm</p>\n</blockquote>",
        "id": 526875133,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751488374
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#discussion_r2180905282\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this expand on what's being marked?</p>\n</blockquote>",
        "id": 526875134,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751488374
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#pullrequestreview-2980744406\">PR review</a>.</p>",
        "id": 526885351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751493328
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#discussion_r2181041732\">PR review comment</a>:</p>\n<blockquote>\n<p>It shouldn't matter either way -- as you mention, there isn't any concurrency here -- but happy to swap things around.</p>\n</blockquote>",
        "id": 526885353,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751493328
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#pullrequestreview-2980791297\">PR review</a>.</p>",
        "id": 526887437,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751494639
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#discussion_r2181071470\">PR review comment</a>:</p>\n<blockquote>\n<p><code>VMGcRef</code> doesn't implement <code>Clone</code> since cloning a <code>VMGcRef</code> potentially needs to run barriers, so we have dedicated methods to clone with those barriers if necessary. However, inside the GC implementation that isn't really a concern so we have <code>unchecked_copy</code> for these cases that don't need barriers. That said, when the GC ref is wrapped in an <code>Option</code> like it is here, it can be a bit of a mouthful, and we would have to do <code>next.as_ref().map(|r| r.unchecked_copy())</code>. So I figured I'd just grab it from the header twice and let LLVM clean things up.</p>\n</blockquote>",
        "id": 526887440,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751494639
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175\">PR #11175</a>.</p>",
        "id": 526888379,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751495194
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175\">PR #11175</a>.</p>",
        "id": 526888797,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751495441
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175#issuecomment-3029966494\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175\">PR #11175</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:api\", \"wasmtime:ref-types\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: wasmtime:ref-types</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 526900431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751504718
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175\">PR #11175</a>.</p>",
        "id": 527024600,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751556504
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175\">PR #11175</a>.</p>",
        "id": 527024757,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751556546
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175\">PR #11175</a>.</p>",
        "id": 527041945,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751562455
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11175\">PR #11175</a>.</p>",
        "id": 527046961,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751564581
    }
]