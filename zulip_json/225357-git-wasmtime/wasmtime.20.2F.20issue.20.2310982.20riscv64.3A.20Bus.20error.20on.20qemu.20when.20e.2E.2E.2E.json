[
    {
        "content": "<p>akldc opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10982\">issue #10982</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">optimize</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">opt_level</span><span class=\"o\">=</span><span class=\"n\">none</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">preserve_frame_pointers</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">enable_multi_ret_implicit_sret</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\">  </span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"nc\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">ss1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">explicit_slot</span><span class=\"w\"> </span><span class=\"mi\">32</span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x138570c7f69308b3f282b35c6e347036</span>\n\n<span class=\"n\">block0</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">2844296266602371941</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss1</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss1</span><span class=\"o\">+</span><span class=\"mi\">8</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss1</span><span class=\"o\">+</span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss1</span><span class=\"o\">+</span><span class=\"mi\">24</span>\n<span class=\"w\">    </span><span class=\"n\">v27</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stack_addr</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ss1</span><span class=\"o\">+</span><span class=\"mi\">5</span>\n<span class=\"w\">    </span><span class=\"n\">v28</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">atomic_cas</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v27</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v8</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v28</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">print</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Target Architecture: riscv64<br>\nEnvironment: <code>qemu-riscv64</code> to emulate execution on an x86 machine.</p>\n<h3>Results</h3>\n<p>When executing this test case, qemu crashes with a bus error and returns exit code -7.</p>\n</blockquote>",
        "id": 523104794,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749479480
    },
    {
        "content": "<p><a href=\"https://github.com/akldc\">akldc</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10982\">Issue #10982</a>.</p>",
        "id": 523104797,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749479481
    },
    {
        "content": "<p><a href=\"https://github.com/akldc\">akldc</a> added the cranelift label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10982\">Issue #10982</a>.</p>",
        "id": 523104799,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749479481
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the cranelift:area:riscv64 label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10982\">Issue #10982</a>.</p>",
        "id": 523105132,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749479601
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10982#issuecomment-2956012223\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10982\">issue #10982</a>:</p>\n<blockquote>\n<p>atomic_cas is implemented using lr/sc, which require the argument to be aligned to the size of the value that is being swapped, so in your case it has to be 8 bytes aligned. <code>stack_addr.i64 ss1+5</code> is only 1 byte aligned however, so you get a trap.</p>\n</blockquote>",
        "id": 523107108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749480252
    },
    {
        "content": "<p>akldc <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10982#issuecomment-2957766512\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10982\">issue #10982</a>:</p>\n<blockquote>\n<p>@bjorn3 <br>\nThanks for the explanation. <br>\nI've found another case with unaligned access, but instead of trapping, it runs normally â€” though the result differs from other architectures.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">optimize</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">opt_level</span><span class=\"o\">=</span><span class=\"n\">none</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">preserve_frame_pointers</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">enable_multi_ret_implicit_sret</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"kt\">i16</span><span class=\"w\"> </span><span class=\"n\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">    </span><span class=\"n\">ss0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">explicit_slot</span><span class=\"w\"> </span><span class=\"mi\">32</span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0xddbdc3ce969edd942a5e015b5cc8e67d</span>\n\n<span class=\"n\">block0</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i16</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">19180</span>\n<span class=\"w\">    </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mh\">0x4022_9130_1451_b514</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss0</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss0</span><span class=\"o\">+</span><span class=\"mi\">8</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss0</span><span class=\"o\">+</span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss0</span><span class=\"o\">+</span><span class=\"mi\">24</span>\n<span class=\"w\">    </span><span class=\"n\">v15</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stack_addr</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ss0</span><span class=\"o\">+</span><span class=\"mi\">3</span>\n<span class=\"w\">    </span><span class=\"n\">v16</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v15</span>\n<span class=\"w\">    </span><span class=\"n\">v17</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">atomic_cas</span><span class=\"p\">.</span><span class=\"kt\">i16</span><span class=\"w\"> </span><span class=\"n\">v15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v16</span><span class=\"p\">,</span><span class=\"n\">v17</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">print</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">x86</span><span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5887634353547194388</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">12308</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">aarch64</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5887634353547194388</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">12308</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">riscv64</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5887634353547194388</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"p\">]</span>\n</code></pre></div>\n</blockquote>",
        "id": 523211122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749534820
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10982\">issue #10982</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">optimize</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">opt_level</span><span class=\"o\">=</span><span class=\"n\">none</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">preserve_frame_pointers</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n<span class=\"w\">    </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">enable_multi_ret_implicit_sret</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\">  </span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"nc\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">ss1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">explicit_slot</span><span class=\"w\"> </span><span class=\"mi\">32</span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x138570c7f69308b3f282b35c6e347036</span>\n\n<span class=\"n\">block0</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">2844296266602371941</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss1</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss1</span><span class=\"o\">+</span><span class=\"mi\">8</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss1</span><span class=\"o\">+</span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss1</span><span class=\"o\">+</span><span class=\"mi\">24</span>\n<span class=\"w\">    </span><span class=\"n\">v27</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stack_addr</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ss1</span><span class=\"o\">+</span><span class=\"mi\">5</span>\n<span class=\"w\">    </span><span class=\"n\">v28</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">atomic_cas</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v27</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v8</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v28</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">print</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Target Architecture: riscv64<br>\nEnvironment: <code>qemu-riscv64</code> to emulate execution on an x86 machine.</p>\n<h3>Results</h3>\n<p>When executing this test case, qemu crashes with a bus error and returns exit code -7.</p>\n</blockquote>",
        "id": 524143540,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750006320
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10982#issuecomment-2974250020\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10982\">issue #10982</a>:</p>\n<blockquote>\n<p>I believe this is generally expected behavior where it's effectively UB to do atomics with unaligned addresses. In the i64 case the native instructions generate a fault, and in the i16 case the polyfill for what the platform doesn't support doesn't work correctly. Given that I believe this is all expected behavior, so I'm going to close this.</p>\n</blockquote>",
        "id": 524143541,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750006320
    }
]