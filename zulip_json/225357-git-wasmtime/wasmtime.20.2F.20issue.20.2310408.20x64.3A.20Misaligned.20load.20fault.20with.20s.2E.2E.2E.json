[
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the cranelift:area:x64 label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10408\">Issue #10408</a>.</p>",
        "id": 506177064,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742223520
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the fuzz-bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10408\">Issue #10408</a>.</p>",
        "id": 506177065,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742223520
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10408\">issue #10408</a>:</p>\n<blockquote>\n<p>Currently on the <code>main</code> branch this fails:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Oopt</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">misc_testsuite</span><span class=\"o\">/</span><span class=\"n\">issue4890</span><span class=\"p\">.</span><span class=\"n\">wast</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">script</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">misc_testsuite</span><span class=\"o\">/</span><span class=\"n\">issue4890</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"o\">'</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">directive</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">misc_testsuite</span><span class=\"o\">/</span><span class=\"n\">issue4890</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"p\">:</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">           </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mh\">0x2f</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">&gt;</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">out</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">bounds</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"n\">access</span>\n</code></pre></div>\n<p>This test shouldn't fail, however, and it should pass. Bisection points to #10316 (ddaaed60aea235b7047de25db050224d26a28060).</p>\n<p>Using <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10405\">https://github.com/bytecodealliance/wasmtime/pull/10405</a> I get</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"n\">objdump</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">cwasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">traps</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">addresses</span>\n<span class=\"mi\">00000000</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]::</span><span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n<span class=\"w\">         </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">pushq</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"w\">         </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"w\">         </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">movl</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span>\n<span class=\"w\">         </span><span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addq</span><span class=\"w\">    </span><span class=\"mh\">0x50</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span>\n<span class=\"w\">         </span><span class=\"n\">b</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">movl</span><span class=\"w\">    </span><span class=\"cp\">$</span><span class=\"mh\">0x80000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8d</span>\n<span class=\"w\">        </span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">movd</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r8d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">xmm1</span>\n<span class=\"w\">        </span><span class=\"mi\">16</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">xmm1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">xmm0</span>\n<span class=\"w\">        </span><span class=\"mi\">1</span><span class=\"n\">a</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">andnps</span><span class=\"w\">  </span><span class=\"mh\">0xf</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rip</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">xmm0</span>\n<span class=\"w\">        </span><span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">andps</span><span class=\"w\">   </span><span class=\"mi\">1</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">xmm1</span>\n<span class=\"w\">            </span><span class=\"err\">╰─╼</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MemoryOutOfBounds</span>\n<span class=\"w\">        </span><span class=\"mi\">26</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">orps</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">xmm1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">xmm0</span>\n<span class=\"w\">        </span><span class=\"mi\">29</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"w\">        </span><span class=\"mi\">2</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">popq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"w\">        </span><span class=\"mi\">2</span><span class=\"n\">d</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">retq</span>\n<span class=\"w\">        </span><span class=\"mi\">2</span><span class=\"n\">e</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"mi\">32</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"mi\">34</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"mi\">36</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"mi\">38</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"mi\">3</span><span class=\"n\">a</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"mi\">3</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"mi\">3</span><span class=\"n\">e</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>and the bug here is indeed that <code>MemoryOutOfBounds</code> trap happening. That's due to misalignment though instead of something being out-of-bounds so we're erroneously catching the segfault.</p>\n<p>cc @abrown @rahulchaphalkar <br>\n</p>\n</blockquote>",
        "id": 506177072,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742223521
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10408#issuecomment-2729847003\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10408\">issue #10408</a>:</p>\n<blockquote>\n<p>I'll note that this is NOT on the release-31.0.0 branch, so this does not affect the pending release in a few days, so we have ~6 weeks to fix this.</p>\n</blockquote>",
        "id": 506177258,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742223562
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10408#issuecomment-2729915545\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10408\">issue #10408</a>:</p>\n<blockquote>\n<p>I tried double-checking just now, but ideally we wouldn't catch segfaults related to misalignment at all. I'm not sure if misalignment faults look different from normal segfaults though at the hardware level, but at the libc level they seem to look the same. Debugging some fields in <code>siginfo_t</code> I get:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">si_code</span><span class=\"o\">=</span><span class=\"mi\">128</span>\n<span class=\"n\">si_errno</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n<span class=\"n\">si_signo</span><span class=\"o\">=</span><span class=\"mi\">11</span>\n<span class=\"n\">si_trapno</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n</code></pre></div>\n<p>where it looks like nothing is alignment-vs-unmapped here. The <code>si_code</code> means \"is from the kernel\" and si_signo is SIGSEGV.</p>\n</blockquote>",
        "id": 506182130,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742224578
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10408#issuecomment-2730880558\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10408\">issue #10408</a>:</p>\n<blockquote>\n<p>Hm ok correction: the release-31.0.0 branch does contain <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10273\">https://github.com/bytecodealliance/wasmtime/pull/10273</a> (e33c4269589a4f97c572d579240b3349534872fa) which may be affected by this. This test itself does not literally fail on the release branch. Manually auditing rules I don't think that load-sinking behavior is reachable from <code>x64_orpd</code>, all arguments are always <code>Xmm</code> except for the <code>bor</code> instruction in Cranelift which isn't supported on floats in wasm anyway.</p>\n</blockquote>",
        "id": 506257036,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742244390
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10408\">issue #10408</a>:</p>\n<blockquote>\n<p>Currently on the <code>main</code> branch this fails:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Oopt</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">misc_testsuite</span><span class=\"o\">/</span><span class=\"n\">issue4890</span><span class=\"p\">.</span><span class=\"n\">wast</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">script</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">misc_testsuite</span><span class=\"o\">/</span><span class=\"n\">issue4890</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"o\">'</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">directive</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">misc_testsuite</span><span class=\"o\">/</span><span class=\"n\">issue4890</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"p\">:</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">           </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mh\">0x2f</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">&gt;</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">out</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">bounds</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"n\">access</span>\n</code></pre></div>\n<p>This test shouldn't fail, however, and it should pass. Bisection points to #10316 (ddaaed60aea235b7047de25db050224d26a28060).</p>\n<p>Using <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10405\">https://github.com/bytecodealliance/wasmtime/pull/10405</a> I get</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"n\">objdump</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">cwasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">traps</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">addresses</span>\n<span class=\"mi\">00000000</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]::</span><span class=\"n\">function</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n<span class=\"w\">         </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">pushq</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"w\">         </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"w\">         </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">movl</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span>\n<span class=\"w\">         </span><span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addq</span><span class=\"w\">    </span><span class=\"mh\">0x50</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span>\n<span class=\"w\">         </span><span class=\"n\">b</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">movl</span><span class=\"w\">    </span><span class=\"cp\">$</span><span class=\"mh\">0x80000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8d</span>\n<span class=\"w\">        </span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">movd</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r8d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">xmm1</span>\n<span class=\"w\">        </span><span class=\"mi\">16</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">xmm1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">xmm0</span>\n<span class=\"w\">        </span><span class=\"mi\">1</span><span class=\"n\">a</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">andnps</span><span class=\"w\">  </span><span class=\"mh\">0xf</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rip</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">xmm0</span>\n<span class=\"w\">        </span><span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">andps</span><span class=\"w\">   </span><span class=\"mi\">1</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">xmm1</span>\n<span class=\"w\">            </span><span class=\"err\">╰─╼</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MemoryOutOfBounds</span>\n<span class=\"w\">        </span><span class=\"mi\">26</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">orps</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">xmm1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">xmm0</span>\n<span class=\"w\">        </span><span class=\"mi\">29</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"w\">        </span><span class=\"mi\">2</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">popq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"w\">        </span><span class=\"mi\">2</span><span class=\"n\">d</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">retq</span>\n<span class=\"w\">        </span><span class=\"mi\">2</span><span class=\"n\">e</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"mi\">32</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"mi\">34</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"mi\">36</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"mi\">38</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"mi\">3</span><span class=\"n\">a</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"mi\">3</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"mi\">3</span><span class=\"n\">e</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>and the bug here is indeed that <code>MemoryOutOfBounds</code> trap happening. That's due to misalignment though instead of something being out-of-bounds so we're erroneously catching the segfault.</p>\n<p>cc @abrown @rahulchaphalkar <br>\n</p>\n</blockquote>",
        "id": 506500588,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742309049
    }
]