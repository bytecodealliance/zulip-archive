[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10579\">PR #10579</a> from <code>cfallin:fix-isle-2</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This arrived as a fuzzbug [1] with some very interesting optimization behavior. The test case has sequences of <code>(select _ x x)</code> operators -- that is, conditional selects with both inputs the same -- that are chained together sequentially. A few aspects of the egraph framework and our optimization rules conspired to create exponential blowup:</p>\n<ul>\n<li>\n<p>We have a rewrite rule for <code>(select _ x x) -&gt; x</code>, but we do not subsume; this means that we create an eclass for both. This in itself is not a problem; however...</p>\n</li>\n<li>\n<p>We have some <em>other</em> rules that look through the inputs to the select to detect other cases (e.g.: select between constants 1 and 0, or 0 and 0, or ...), so we traverse both inputs;</p>\n</li>\n<li>\n<p>And we also do nested rewrites, so when the rewrite rule for <code>(select _ x x) -&gt; x</code> fires, and the <code>x</code> is itself another select in a long chain of selects, we traverse all possible paths (through first or second args) to the roots. In effect we get an eclass that has the ultimate root and then 2^n combinations of <code>select</code> nodes on top of that.</p>\n</li>\n</ul>\n<p>This got worse with the recent change to canonicalize less (for simpler/cheaper compilation), hence the fuzzbug timeouts.</p>\n<p>This PR includes a few fixes, all complementary to each other:</p>\n<ul>\n<li>\n<p>The <code>(select _ x x) -&gt; x</code> rule now subsumes; this is another case where we have a strictly better rewrite and so we should short-circuit the eclass blowup.</p>\n</li>\n<li>\n<p>The rewrite runner sorts and dedups returned value numbers; in debugging the above I noticed we were getting two rules producing the same rewritten value and we were adding the same value twice with two union nodes.</p>\n</li>\n<li>\n<p>The rewriter keeps a total eclass size per root and limits the total eclass size to a fixed limit (currently 5). We thus now have limits in three different axes: depth of eager rewrites (5); number of returned matches (also 5); and total size of eclass (5). The first two don't necessarily imply the third because we otherwise can keep unioning on top of an eclass and (as seen above) see exponential blowup.</p>\n</li>\n</ul>\n<p>[1]: <a href=\"https://oss-fuzz.com/testcase-detail/4806924172591104\">https://oss-fuzz.com/testcase-detail/4806924172591104</a></p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 512191563,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744673591
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10579\">PR #10579</a>.</p>",
        "id": 512191564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744673591
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10579\">PR #10579</a>.</p>",
        "id": 512191566,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744673591
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10579\">PR #10579</a>.</p>",
        "id": 512191567,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744673591
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10579#issuecomment-2803567710\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10579\">PR #10579</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 512207670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744683459
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10579#pullrequestreview-2769080148\">PR review</a>.</p>",
        "id": 512365890,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744734639
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10579\">PR #10579</a>.</p>",
        "id": 512370391,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744735948
    }
]