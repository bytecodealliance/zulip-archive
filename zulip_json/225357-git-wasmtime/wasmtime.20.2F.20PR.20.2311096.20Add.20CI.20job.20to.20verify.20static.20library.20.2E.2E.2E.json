[
    {
        "content": "<p>thedevyashsaini opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11096\">PR #11096</a> from <code>thedevyashsaini:main</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This PR introduces a dedicated CI job (<code>build-static-lib</code>) that verifies the static library build of Wasmtime by passing <code>-DWASMEDGE_BUILD_STATIC_LIB=ON</code> to CMake.</p>\n<h3>Changes:</h3>\n<ul>\n<li>Added a standalone <code>build-static-lib</code> job in <code>.github/workflows/main.yml</code>, triggered alongside regular builds.</li>\n<li>This job uses a fixed Rust toolchain (<code>stable</code>) and target (<code>x86_64-unknown-linux-gnu</code>).</li>\n<li>It runs independently of the main matrix-based <code>build</code> job to avoid cache conflicts or artifact overrides.</li>\n<li>Static build logic is activated via <code>static=true</code> passed to <code>ci/build-release-artifacts.sh</code>.</li>\n</ul>\n<h3>Motivation:</h3>\n<p>Static library builds can fail due to symbol collisions or source file name conflicts. CI coverage ensures we catch such regressions early.</p>\n<h3>Related:</h3>\n<p>Fixes <a href=\"https://github.com/WasmEdge/WasmEdge/issues/3608\">#3608</a><br>\nRefs <a href=\"https://github.com/WasmEdge/WasmEdge/pull/3607#issuecomment-2254381977\">this comment</a> suggesting the need for a <code>STATIC_LIB=ON</code> build in CI.<br>\n</p>\n</blockquote>",
        "id": 525154359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750506758
    },
    {
        "content": "<p><strong>thedevyashsaini</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11096\">PR #11096</a>.</p>",
        "id": 525154361,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750506758
    },
    {
        "content": "<p><strong>thedevyashsaini</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11096\">PR #11096</a>.</p>",
        "id": 525154362,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750506758
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11096#issuecomment-2993728989\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11096\">PR #11096</a>:</p>\n<blockquote>\n<p>@thedevyashsaini did you mean to send this PR to the WasmEdge project instead of Wasmtime?</p>\n</blockquote>",
        "id": 525174669,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750533088
    },
    {
        "content": "<p>thedevyashsaini <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11096#issuecomment-2993736379\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11096\">PR #11096</a>:</p>\n<blockquote>\n<p>@alexcrichton yeaah, this started as a fix for WasmEdge and somewhere down the rabbit hole I ended up static linking Wasmtime by instinct <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span><br>\nThat said - the CI test might still be useful here, but feel free to shut it down if it's out of scope...</p>\n</blockquote>",
        "id": 525175367,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750534278
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11096#issuecomment-2993810153\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11096\">PR #11096</a>:</p>\n<blockquote>\n<p>Ok, in that case I'm going to close this beacuse I don't think this does what you think it does in terms of testing. AFAIK this doesn't actually do anything on CI as the cmake option you specify here isn't read anywhere. As a result I'm going to close this.</p>\n</blockquote>",
        "id": 525182523,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750547116
    },
    {
        "content": "<p>alexcrichton closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11096\">PR #11096</a>.</p>",
        "id": 525182524,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750547116
    },
    {
        "content": "<p>thedevyashsaini <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11096#issuecomment-2993954301\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11096\">PR #11096</a>:</p>\n<blockquote>\n<p>@alexcrichton </p>\n<blockquote>\n<p>Totally understand closing this — thanks for reviewing!</p>\n<p>Just wanted to clarify one point you mentioned:</p>\n<blockquote>\n<p>“the cmake option you specify here isn’t read anywhere…”</p>\n</blockquote>\n<p>I believe it <em>is</em> wired through the CI scripts. Here’s the flow I followed:</p>\n<ul>\n<li>\n<p>In <code>.github/workflows/main.yml</code> (line \\~1115), the job runs:</p>\n<p><code>bash\nstatic=true ./ci/build-release-artifacts.sh release x86_64-unknown-linux-gnu\n</code></p>\n</li>\n<li>\n<p>Then inside <code>ci/build-release-artifacts.sh</code> the \"static\" option is checked, around line 69:</p>\n<p><code>bash\nif [[ \"$static\" == \"true\" ]]; then\n  cmake_flags=\"$cmake_flags -DWASMEDGE_BUILD_STATIC_LIB=ON\"\nfi\n</code></p>\n</li>\n<li>\n<p>These <code>$cmake_flags</code> are passed into the <code>cmake</code> command at line \\~82:</p>\n<p><code>bash\ncmake \\\n  -G Ninja \\\n  ../../crates/c-api \\\n  $cmake_flags \\\n  ...\n</code></p>\n</li>\n<li>\n<p>So <code>-DWASMEDGE_BUILD_STATIC_LIB=ON</code> <em>should</em> be included in the build, unless I’ve misunderstood something else upstream (like the flag not being handled in the actual CMakeLists).</p>\n</li>\n</ul>\n<p>In any case, totally fair to close this if it's not useful — just thought I'd clarify in case this ends up being worth revisiting later. Cheers! </p>\n</blockquote>\n</blockquote>",
        "id": 525196059,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750571235
    },
    {
        "content": "<p>thedevyashsaini deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11096#issuecomment-2993954301\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11096\">PR #11096</a>:</p>\n<blockquote>\n<p>@alexcrichton </p>\n<blockquote>\n<p>Totally understand closing this — thanks for reviewing!</p>\n<p>Just wanted to clarify one point you mentioned:</p>\n<blockquote>\n<p>“the cmake option you specify here isn’t read anywhere…”</p>\n</blockquote>\n<p>I believe it <em>is</em> wired through the CI scripts. Here’s the flow I followed:</p>\n<ul>\n<li>\n<p>In <code>.github/workflows/main.yml</code> (line \\~1115), the job runs:</p>\n<p><code>bash\nstatic=true ./ci/build-release-artifacts.sh release x86_64-unknown-linux-gnu\n</code></p>\n</li>\n<li>\n<p>Then inside <code>ci/build-release-artifacts.sh</code> the \"static\" option is checked, around line 69:</p>\n<p><code>bash\nif [[ \"$static\" == \"true\" ]]; then\n  cmake_flags=\"$cmake_flags -DWASMEDGE_BUILD_STATIC_LIB=ON\"\nfi\n</code></p>\n</li>\n<li>\n<p>These <code>$cmake_flags</code> are passed into the <code>cmake</code> command at line \\~82:</p>\n<p><code>bash\ncmake \\\n  -G Ninja \\\n  ../../crates/c-api \\\n  $cmake_flags \\\n  ...\n</code></p>\n</li>\n<li>\n<p>So <code>-DWASMEDGE_BUILD_STATIC_LIB=ON</code> <em>should</em> be included in the build, unless I’ve misunderstood something else upstream (like the flag not being handled in the actual CMakeLists).</p>\n</li>\n</ul>\n<p>In any case, totally fair to close this if it's not useful — just thought I'd clarify in case this ends up being worth revisiting later. Cheers! </p>\n</blockquote>\n</blockquote>",
        "id": 525196136,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750571321
    },
    {
        "content": "<p>thedevyashsaini <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11096#issuecomment-2993955700\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11096\">PR #11096</a>:</p>\n<blockquote>\n<p>Thanks for the review! Yep, just realized <code>-DWASMEDGE_BUILD_STATIC_LIB</code> isn’t defined in Wasmtime’s CMake. Appreciate the clarification!<br>\n</p>\n</blockquote>",
        "id": 525196228,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750571466
    }
]