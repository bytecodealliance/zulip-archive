[
    {
        "content": "<p>liupeidong0620 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10333\">issue #10333</a>:</p>\n<blockquote>\n<h1>question</h1>\n<ol>\n<li>I created multiple wasm_wasmtime_plugin_t</li>\n<li>Each thread runs a wasm_wasmtime_plugin_t</li>\n<li>Is this thread safe?</li>\n<li>The wasmtime_func_call function calls the malloc function exported by wasm. Is this thread safe?</li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"c1\">// Load the same wasm program and create multiple wasm_wasmtime_plugin_t instances</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_engine_t</span><span class=\"w\">           </span><span class=\"o\">*</span><span class=\"n\">vm_engine</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_module_t</span><span class=\"w\">       </span><span class=\"o\">*</span><span class=\"k\">module</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_store_t</span><span class=\"w\">        </span><span class=\"o\">*</span><span class=\"n\">store</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_context_t</span><span class=\"w\">      </span><span class=\"o\">*</span><span class=\"n\">context</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_linker_t</span><span class=\"w\">       </span><span class=\"o\">*</span><span class=\"n\">linker</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_instance_t</span><span class=\"w\">      </span><span class=\"n\">instance</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_memory_t</span><span class=\"w\">        </span><span class=\"n\">memory</span><span class=\"p\">;</span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_plugin_t</span><span class=\"p\">;</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"p\">....</span>\n<span class=\"n\">wasm_wasmtime_plugin_t</span><span class=\"w\"> </span><span class=\"n\">plugins</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">];</span>\n<span class=\"c1\">// Load the same wasm program and create multiple wasm_wasmtime_plugin_t instances</span>\n\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">thread</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">([</span><span class=\"n\">plugin_num</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">       </span><span class=\"c1\">//  Is it thread safe?</span>\n<span class=\"w\">        </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_func_call</span><span class=\"p\">(</span><span class=\"n\">plugins</span><span class=\"p\">[</span><span class=\"n\">plugin_num</span><span class=\"p\">]</span><span class=\"o\">-&gt;</span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">func</span><span class=\"p\">.</span><span class=\"n\">of</span><span class=\"p\">.</span><span class=\"n\">func</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">param_num</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">,</span>\n<span class=\"w\">                               </span><span class=\"n\">has_result</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">});</span>\n<span class=\"p\">}</span>\n<span class=\"c1\">// wait thread ok</span>\n<span class=\"p\">....</span>\n\n\n<span class=\"p\">}</span>\n</code></pre></div>\n<h1>code (wasm_wasmtime_plugin_t initialization process, specific code)</h1>\n<p><div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"c1\">// wasmtime_vm.h</span>\n\n<span class=\"cp\">#pragma once</span>\n\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;wasi.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;wasm.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;wasmtime.h&gt;</span>\n\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">\"wasm_base.h\"</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">\"wasm_api.h\"</span>\n\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;string&gt;</span>\n\n<span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_engine_t</span><span class=\"w\">           </span><span class=\"o\">*</span><span class=\"n\">vm_engine</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_module_t</span><span class=\"w\">       </span><span class=\"o\">*</span><span class=\"k\">module</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_store_t</span><span class=\"w\">        </span><span class=\"o\">*</span><span class=\"n\">store</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_context_t</span><span class=\"w\">      </span><span class=\"o\">*</span><span class=\"n\">context</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_linker_t</span><span class=\"w\">       </span><span class=\"o\">*</span><span class=\"n\">linker</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_instance_t</span><span class=\"w\">      </span><span class=\"n\">instance</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_memory_t</span><span class=\"w\">        </span><span class=\"n\">memory</span><span class=\"p\">;</span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_plugin_t</span><span class=\"p\">;</span>\n\n<span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"w\">                </span><span class=\"n\">name</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_func_callback_t</span><span class=\"w\"> </span><span class=\"n\">cb</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int8_t</span><span class=\"w\">                   </span><span class=\"n\">param_num</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valkind_t</span><span class=\"w\">           </span><span class=\"n\">param_type</span><span class=\"p\">[</span><span class=\"n\">MAX_WASM_API_ARG</span><span class=\"p\">];</span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_host_api_t</span><span class=\"p\">;</span>\n\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">WasmtimeVM</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"n\">WasmBaseVM</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"k\">public</span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">WasmtimeVM</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">wasm_file</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">wasm_name</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// load wasm and init</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"nf\">wasm_call</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">func_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"n\">has_result</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">param_type</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">...);</span><span class=\"w\"> </span><span class=\"c1\">// call wasm func</span>\n\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"nf\">wasm_memory_alloc</span><span class=\"p\">(</span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nf\">wasm_get_memory</span><span class=\"p\">(</span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">addr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"o\">~</span><span class=\"n\">WasmtimeVM</span><span class=\"p\">();</span>\n\n\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">setCtxId</span><span class=\"p\">(</span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">wasm_ctx_id</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">wasm_ctx_id_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_ctx_id</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"nf\">getCtxId</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">wasm_ctx_id_</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"nf\">get_wasm_name</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">wasm_name_</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"nf\">get_wasm_id</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">id_</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">set_wasm_id</span><span class=\"p\">(</span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">id_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"k\">private</span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_functype_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">wasmtime_host_api_func</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_host_api_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">api</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">wasmtime_report_error</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">message</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasmtime_error_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasm_trap_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"nf\">wasm_wasmtime_has</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">wasm_wasmtime_plugin_t</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">plugin</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">wasm_ctx_id_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">wasm_name_</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">id_</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n\n<span class=\"c1\">// wasmtime_vm.cc</span>\n\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">\"wasmtime_vm.h\"</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;iostream&gt;</span>\n\n<span class=\"cp\">#define DEFINE_WASM_API(NAME, ARG_CHECK) \\</span>\n<span class=\"cp\">    static wasm_trap_t* wasmtime_##NAME( \\</span>\n<span class=\"cp\">        void *env, \\</span>\n<span class=\"cp\">        wasmtime_caller_t *caller, \\</span>\n<span class=\"cp\">        const wasmtime_val_t *args, \\</span>\n<span class=\"cp\">        size_t nargs, \\</span>\n<span class=\"cp\">        wasmtime_val_t *results, \\</span>\n<span class=\"cp\">        size_t nresults \\</span>\n<span class=\"cp\">    ) { \\</span>\n<span class=\"cp\">        ARG_CHECK \\</span>\n<span class=\"cp\">        results[0].kind = WASMTIME_I32; \\</span>\n<span class=\"cp\">        results[0].of.i32 = res; \\</span>\n<span class=\"cp\">        return NULL; \\</span>\n<span class=\"cp\">    }</span>\n<span class=\"cp\">#define DEFINE_WASM_NAME(NAME, ARG) \\</span>\n<span class=\"cp\">    {#NAME, wasmtime_##NAME, ARG},</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_VOID \\</span>\n<span class=\"cp\">    0, {}</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_VOID(NAME) \\</span>\n<span class=\"cp\">    int32_t res = NAME();</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_1 \\</span>\n<span class=\"cp\">    1, { \\</span>\n<span class=\"cp\">    WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_1(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_2 \\</span>\n<span class=\"cp\">    2, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_2(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_3 \\</span>\n<span class=\"cp\">    3, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_3(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t p2 = args[2].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1, p2);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_4 \\</span>\n<span class=\"cp\">    4, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, WASM_I32, WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_4(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t p2 = args[2].of.i32; \\</span>\n<span class=\"cp\">    int32_t p3 = args[3].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1, p2, p3);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_5 \\</span>\n<span class=\"cp\">    5, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, WASM_I32, WASM_I32, WASM_I32,  \\</span>\n<span class=\"cp\">}</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_5(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t p2 = args[2].of.i32; \\</span>\n<span class=\"cp\">    int32_t p3 = args[3].of.i32; \\</span>\n<span class=\"cp\">    int32_t p4 = args[4].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1, p2, p3, p4);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_6 \\</span>\n<span class=\"cp\">    6, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, WASM_I32, WASM_I32, WASM_I32,  \\</span>\n<span class=\"cp\">    WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_6(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t p2 = args[2].of.i32; \\</span>\n<span class=\"cp\">    int32_t p3 = args[3].of.i32; \\</span>\n<span class=\"cp\">    int32_t p4 = args[4].of.i32; \\</span>\n<span class=\"cp\">    int32_t p5 = args[5].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1, p2, p3, p4, p5);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_7 \\</span>\n<span class=\"cp\">    7, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, WASM_I32, WASM_I32, WASM_I32,  \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_7(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t p2 = args[2].of.i32; \\</span>\n<span class=\"cp\">    int32_t p3 = args[3].of.i32; \\</span>\n<span class=\"cp\">    int32_t p4 = args[4].of.i32; \\</span>\n<span class=\"cp\">    int32_t p5 = args[5].of.i32; \\</span>\n<span class=\"cp\">    int32_t p6 = args[6].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1, p2, p3, p4, p5, p6);</span>\n\n<span class=\"n\">DEFINE_WASM_API</span><span class=\"p\">(</span><span class=\"n\">tendis_get_buffer_bytes</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"n\">DEFINE_WASM_API_ARG_CHECK_I32_4</span><span class=\"p\">(</span><span class=\"n\">tendis_get_buffer_bytes</span><span class=\"p\">))</span>\n\n<span class=\"n\">DEFINE_WASM_API</span><span class=\"p\">(</span><span class=\"n\">tendis_set_buffer_bytes</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"n\">DEFINE_WASM_API_ARG_CHECK_I32_4</span><span class=\"p\">(</span><span class=\"n\">tendis_set_buffer_bytes</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_host_api_t</span><span class=\"w\"> </span><span class=\"n\">host_apis</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">DEFINE_WASM_NAME</span><span class=\"p\">(</span><span class=\"n\">tendis_get_buffer_bytes</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DEFINE_WASM_NAME_ARG_I32_4</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">DEFINE_WASM_NAME</span><span class=\"p\">(</span><span class=\"n\">tendis_set_buffer_bytes</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DEFINE_WASM_NAME_ARG_I32_4</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">wasmtime_val_t</span><span class=\"w\">   </span><span class=\"n\">param_int32</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">}};</span>\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">wasmtime_val_t</span><span class=\"w\">   </span><span class=\"n\">param_int32_int32</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">}};</span>\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">wasmtime_val_t</span><span class=\"w\">   </span><span class=\"n\">param_int32_int32_int32</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"p\">};</span>\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">wasmtime_val_t</span><span class=\"w\">   </span><span class=\"n\">param_int32_int32_int32_int32</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"p\">};</span>\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">wasmtime_val_t</span><span class=\"w\">   </span><span class=\"n\">param_int32_int32_int32_int32_int32</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"p\">};</span>\n\n<span class=\"n\">wasm_functype_t</span><span class=\"w\"> </span><span class=\"o\">*</span>\n<span class=\"nf\">WasmtimeVM::wasmtime_host_api_func</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_host_api_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">api</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\">                </span><span class=\"n\">i</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valtype_vec_t</span><span class=\"w\"> </span><span class=\"n\">param_vec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">result_vec</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valtype_t</span><span class=\"w\">    </span><span class=\"o\">*</span><span class=\"n\">param</span><span class=\"p\">[</span><span class=\"n\">MAX_WASM_API_ARG</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valtype_t</span><span class=\"w\">    </span><span class=\"o\">*</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_functype_t</span><span class=\"w\">   </span><span class=\"o\">*</span><span class=\"n\">f</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">api</span><span class=\"o\">-&gt;</span><span class=\"n\">param_num</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">param</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_valtype_new</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"o\">-&gt;</span><span class=\"n\">param_type</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_valtype_new</span><span class=\"p\">(</span><span class=\"n\">WASM_I32</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valtype_vec_new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">param_vec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">api</span><span class=\"o\">-&gt;</span><span class=\"n\">param_num</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">param</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valtype_vec_new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">result_vec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_functype_new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">param_vec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">result_vec</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span>\n<span class=\"nf\">WasmtimeVM::wasmtime_report_error</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">message</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_error_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasm_trap_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">trap</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_byte_vec_t</span><span class=\"w\"> </span><span class=\"n\">error_message</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">wasmtime_error_message</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">wasmtime_error_delete</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">wasm_trap_message</span><span class=\"p\">(</span><span class=\"n\">trap</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">wasm_trap_delete</span><span class=\"p\">(</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"p\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">error_message</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error_message</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_byte_vec_delete</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">WasmtimeVM::load</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">bytecode</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">wasm_name</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">size_t</span><span class=\"w\">                        </span><span class=\"n\">i</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">bool</span><span class=\"w\">                          </span><span class=\"n\">ok</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_engine_t</span><span class=\"w\">                </span><span class=\"o\">*</span><span class=\"n\">vm_engine</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_trap_t</span><span class=\"w\">                  </span><span class=\"o\">*</span><span class=\"n\">trap</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_module_t</span><span class=\"w\">            </span><span class=\"o\">*</span><span class=\"k\">module</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_store_t</span><span class=\"w\">             </span><span class=\"o\">*</span><span class=\"n\">store</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_context_t</span><span class=\"w\">           </span><span class=\"o\">*</span><span class=\"n\">context</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_linker_t</span><span class=\"w\">            </span><span class=\"o\">*</span><span class=\"n\">linker</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi_config_t</span><span class=\"w\">                </span><span class=\"o\">*</span><span class=\"n\">wasi_config</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_error_t</span><span class=\"w\">             </span><span class=\"o\">*</span><span class=\"n\">error</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_extern_t</span><span class=\"w\">             </span><span class=\"n\">item</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"n\">plugin</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_plugin_t</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_name_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_name</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"n\">vm_engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_engine_new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">vm_engine</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"failed to new engine\"</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">-1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"c1\">//wasmtime_module_deserialize();</span>\n<span class=\"w\">    </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_module_new</span><span class=\"p\">(</span><span class=\"n\">vm_engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">uint8_t</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">bytecode</span><span class=\"p\">.</span><span class=\"n\">c_str</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">bytecode</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">module</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"c1\">//error = wasmtime_module_deserialize(vm_engine, (const uint8_t*) bytecode.c_str(), bytecode.size(), &amp;module);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">wasmtime_report_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to new module: \"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">-2</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_store_new</span><span class=\"p\">(</span><span class=\"n\">vm_engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">-3</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">context</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_store_context</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">wasi_config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasi_config_new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">-4</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">wasi_config_inherit_env</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasi_config_inherit_stdin</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasi_config_inherit_stdout</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasi_config_inherit_stderr</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_context_set_wasi</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">wasmtime_report_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to init</span>\n<span class=\"p\">[</span><span class=\"n\">message</span><span class=\"w\"> </span><span class=\"n\">truncated</span><span class=\"p\">]</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 503445700,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741161771
    },
    {
        "content": "<p>liupeidong0620 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10333\">issue #10333</a>:</p>\n<blockquote>\n<h1>question</h1>\n<ol>\n<li>I created multiple wasm_wasmtime_plugin_t</li>\n<li>Each thread runs a wasm_wasmtime_plugin_t</li>\n<li>Is this thread safe?</li>\n<li>The wasmtime_func_call function calls the malloc function exported by wasm. Is this thread safe?</li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"c1\">// Load the same wasm program and create multiple wasm_wasmtime_plugin_t instances</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_engine_t</span><span class=\"w\">           </span><span class=\"o\">*</span><span class=\"n\">vm_engine</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_module_t</span><span class=\"w\">       </span><span class=\"o\">*</span><span class=\"k\">module</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_store_t</span><span class=\"w\">        </span><span class=\"o\">*</span><span class=\"n\">store</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_context_t</span><span class=\"w\">      </span><span class=\"o\">*</span><span class=\"n\">context</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_linker_t</span><span class=\"w\">       </span><span class=\"o\">*</span><span class=\"n\">linker</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_instance_t</span><span class=\"w\">      </span><span class=\"n\">instance</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_memory_t</span><span class=\"w\">        </span><span class=\"n\">memory</span><span class=\"p\">;</span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_plugin_t</span><span class=\"p\">;</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"p\">....</span>\n<span class=\"n\">wasm_wasmtime_plugin_t</span><span class=\"w\"> </span><span class=\"n\">plugins</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">];</span>\n<span class=\"c1\">// Load the same wasm program and create multiple wasm_wasmtime_plugin_t instances</span>\n\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">thread</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">([</span><span class=\"n\">plugin_num</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">       </span><span class=\"c1\">//  Is it thread safe?</span>\n<span class=\"w\">        </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_func_call</span><span class=\"p\">(</span><span class=\"n\">plugins</span><span class=\"p\">[</span><span class=\"n\">plugin_num</span><span class=\"p\">]</span><span class=\"o\">-&gt;</span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">func</span><span class=\"p\">.</span><span class=\"n\">of</span><span class=\"p\">.</span><span class=\"n\">func</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">param_num</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">,</span>\n<span class=\"w\">                               </span><span class=\"n\">has_result</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">});</span>\n<span class=\"p\">}</span>\n<span class=\"c1\">// wait thread ok</span>\n<span class=\"p\">....</span>\n\n\n<span class=\"p\">}</span>\n</code></pre></div>\n<h1>code (wasm_wasmtime_plugin_t initialization process, specific code)</h1>\n<p><div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"c1\">// wasmtime_vm.h</span>\n\n<span class=\"cp\">#pragma once</span>\n\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;wasi.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;wasm.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;wasmtime.h&gt;</span>\n\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">\"wasm_base.h\"</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">\"wasm_api.h\"</span>\n\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;string&gt;</span>\n\n<span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_engine_t</span><span class=\"w\">           </span><span class=\"o\">*</span><span class=\"n\">vm_engine</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_module_t</span><span class=\"w\">       </span><span class=\"o\">*</span><span class=\"k\">module</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_store_t</span><span class=\"w\">        </span><span class=\"o\">*</span><span class=\"n\">store</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_context_t</span><span class=\"w\">      </span><span class=\"o\">*</span><span class=\"n\">context</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_linker_t</span><span class=\"w\">       </span><span class=\"o\">*</span><span class=\"n\">linker</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_instance_t</span><span class=\"w\">      </span><span class=\"n\">instance</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_memory_t</span><span class=\"w\">        </span><span class=\"n\">memory</span><span class=\"p\">;</span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_plugin_t</span><span class=\"p\">;</span>\n\n<span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"w\">                </span><span class=\"n\">name</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_func_callback_t</span><span class=\"w\"> </span><span class=\"n\">cb</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int8_t</span><span class=\"w\">                   </span><span class=\"n\">param_num</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valkind_t</span><span class=\"w\">           </span><span class=\"n\">param_type</span><span class=\"p\">[</span><span class=\"n\">MAX_WASM_API_ARG</span><span class=\"p\">];</span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_host_api_t</span><span class=\"p\">;</span>\n\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">WasmtimeVM</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"n\">WasmBaseVM</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"k\">public</span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">WasmtimeVM</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">wasm_file</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">wasm_name</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// load wasm and init</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"nf\">wasm_call</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">func_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"n\">has_result</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">param_type</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">...);</span><span class=\"w\"> </span><span class=\"c1\">// call wasm func</span>\n\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"nf\">wasm_memory_alloc</span><span class=\"p\">(</span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nf\">wasm_get_memory</span><span class=\"p\">(</span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">addr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"o\">~</span><span class=\"n\">WasmtimeVM</span><span class=\"p\">();</span>\n\n\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">setCtxId</span><span class=\"p\">(</span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">wasm_ctx_id</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">wasm_ctx_id_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_ctx_id</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"nf\">getCtxId</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">wasm_ctx_id_</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"nf\">get_wasm_name</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">wasm_name_</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"nf\">get_wasm_id</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">id_</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">set_wasm_id</span><span class=\"p\">(</span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">id_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"k\">private</span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_functype_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">wasmtime_host_api_func</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_host_api_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">api</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">wasmtime_report_error</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">message</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasmtime_error_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasm_trap_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"nf\">wasm_wasmtime_has</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">wasm_wasmtime_plugin_t</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">plugin</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">wasm_ctx_id_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">wasm_name_</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">id_</span><span class=\"p\">;</span>\n\n<span class=\"w\">  </span><span class=\"n\">wasmtime_val_t</span><span class=\"w\">   </span><span class=\"n\">param_int32</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">}};</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_val_t</span><span class=\"w\">   </span><span class=\"n\">param_int32_int32</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">}};</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_val_t</span><span class=\"w\">   </span><span class=\"n\">param_int32_int32_int32</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_val_t</span><span class=\"w\">   </span><span class=\"n\">param_int32_int32_int32_int32</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_val_t</span><span class=\"w\">   </span><span class=\"n\">param_int32_int32_int32_int32_int32</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"p\">};</span>\n<span class=\"p\">};</span>\n\n<span class=\"c1\">// wasmtime_vm.cc</span>\n\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">\"wasmtime_vm.h\"</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;iostream&gt;</span>\n\n<span class=\"cp\">#define DEFINE_WASM_API(NAME, ARG_CHECK) \\</span>\n<span class=\"cp\">    static wasm_trap_t* wasmtime_##NAME( \\</span>\n<span class=\"cp\">        void *env, \\</span>\n<span class=\"cp\">        wasmtime_caller_t *caller, \\</span>\n<span class=\"cp\">        const wasmtime_val_t *args, \\</span>\n<span class=\"cp\">        size_t nargs, \\</span>\n<span class=\"cp\">        wasmtime_val_t *results, \\</span>\n<span class=\"cp\">        size_t nresults \\</span>\n<span class=\"cp\">    ) { \\</span>\n<span class=\"cp\">        ARG_CHECK \\</span>\n<span class=\"cp\">        results[0].kind = WASMTIME_I32; \\</span>\n<span class=\"cp\">        results[0].of.i32 = res; \\</span>\n<span class=\"cp\">        return NULL; \\</span>\n<span class=\"cp\">    }</span>\n<span class=\"cp\">#define DEFINE_WASM_NAME(NAME, ARG) \\</span>\n<span class=\"cp\">    {#NAME, wasmtime_##NAME, ARG},</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_VOID \\</span>\n<span class=\"cp\">    0, {}</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_VOID(NAME) \\</span>\n<span class=\"cp\">    int32_t res = NAME();</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_1 \\</span>\n<span class=\"cp\">    1, { \\</span>\n<span class=\"cp\">    WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_1(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_2 \\</span>\n<span class=\"cp\">    2, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_2(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_3 \\</span>\n<span class=\"cp\">    3, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_3(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t p2 = args[2].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1, p2);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_4 \\</span>\n<span class=\"cp\">    4, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, WASM_I32, WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_4(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t p2 = args[2].of.i32; \\</span>\n<span class=\"cp\">    int32_t p3 = args[3].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1, p2, p3);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_5 \\</span>\n<span class=\"cp\">    5, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, WASM_I32, WASM_I32, WASM_I32,  \\</span>\n<span class=\"cp\">}</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_5(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t p2 = args[2].of.i32; \\</span>\n<span class=\"cp\">    int32_t p3 = args[3].of.i32; \\</span>\n<span class=\"cp\">    int32_t p4 = args[4].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1, p2, p3, p4);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_6 \\</span>\n<span class=\"cp\">    6, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, WASM_I32, WASM_I32, WASM_I32,  \\</span>\n<span class=\"cp\">    WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_6(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t p2 = args[2].of.i32; \\</span>\n<span class=\"cp\">    int32_t p3 = args[3].of.i32; \\</span>\n<span class=\"cp\">    int32_t p4 = args[4].of.i32; \\</span>\n<span class=\"cp\">    int32_t p5 = args[5].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1, p2, p3, p4, p5);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_7 \\</span>\n<span class=\"cp\">    7, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, WASM_I32, WASM_I32, WASM_I32,  \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_7(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t p2 = args[2].of.i32; \\</span>\n<span class=\"cp\">    int32_t p3 = args[3].of.i32; \\</span>\n<span class=\"cp\">    int32_t p4 = args[4].of.i32; \\</span>\n<span class=\"cp\">    int32_t p5 = args[5].of.i32; \\</span>\n<span class=\"cp\">    int32_t p6 = args[6].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1, p2, p3, p4, p5, p6);</span>\n\n<span class=\"n\">DEFINE_WASM_API</span><span class=\"p\">(</span><span class=\"n\">tendis_get_buffer_bytes</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"n\">DEFINE_WASM_API_ARG_CHECK_I32_4</span><span class=\"p\">(</span><span class=\"n\">tendis_get_buffer_bytes</span><span class=\"p\">))</span>\n\n<span class=\"n\">DEFINE_WASM_API</span><span class=\"p\">(</span><span class=\"n\">tendis_set_buffer_bytes</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"n\">DEFINE_WASM_API_ARG_CHECK_I32_4</span><span class=\"p\">(</span><span class=\"n\">tendis_set_buffer_bytes</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_host_api_t</span><span class=\"w\"> </span><span class=\"n\">host_apis</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">DEFINE_WASM_NAME</span><span class=\"p\">(</span><span class=\"n\">tendis_get_buffer_bytes</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DEFINE_WASM_NAME_ARG_I32_4</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">DEFINE_WASM_NAME</span><span class=\"p\">(</span><span class=\"n\">tendis_set_buffer_bytes</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DEFINE_WASM_NAME_ARG_I32_4</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n\n<span class=\"n\">wasm_functype_t</span><span class=\"w\"> </span><span class=\"o\">*</span>\n<span class=\"nf\">WasmtimeVM::wasmtime_host_api_func</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_host_api_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">api</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\">                </span><span class=\"n\">i</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valtype_vec_t</span><span class=\"w\"> </span><span class=\"n\">param_vec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">result_vec</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valtype_t</span><span class=\"w\">    </span><span class=\"o\">*</span><span class=\"n\">param</span><span class=\"p\">[</span><span class=\"n\">MAX_WASM_API_ARG</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valtype_t</span><span class=\"w\">    </span><span class=\"o\">*</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_functype_t</span><span class=\"w\">   </span><span class=\"o\">*</span><span class=\"n\">f</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">api</span><span class=\"o\">-&gt;</span><span class=\"n\">param_num</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">param</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_valtype_new</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"o\">-&gt;</span><span class=\"n\">param_type</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_valtype_new</span><span class=\"p\">(</span><span class=\"n\">WASM_I32</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valtype_vec_new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">param_vec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">api</span><span class=\"o\">-&gt;</span><span class=\"n\">param_num</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">param</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valtype_vec_new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">result_vec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_functype_new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">param_vec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">result_vec</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span>\n<span class=\"nf\">WasmtimeVM::wasmtime_report_error</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">message</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_error_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasm_trap_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">trap</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_byte_vec_t</span><span class=\"w\"> </span><span class=\"n\">error_message</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">wasmtime_error_message</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">wasmtime_error_delete</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">wasm_trap_message</span><span class=\"p\">(</span><span class=\"n\">trap</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">wasm_trap_delete</span><span class=\"p\">(</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"p\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">error_message</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error_message</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_byte_vec_delete</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">WasmtimeVM::load</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">bytecode</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">wasm_name</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">size_t</span><span class=\"w\">                        </span><span class=\"n\">i</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">bool</span><span class=\"w\">                          </span><span class=\"n\">ok</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_engine_t</span><span class=\"w\">                </span><span class=\"o\">*</span><span class=\"n\">vm_engine</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_trap_t</span><span class=\"w\">                  </span><span class=\"o\">*</span><span class=\"n\">trap</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_module_t</span><span class=\"w\">            </span><span class=\"o\">*</span><span class=\"k\">module</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_store_t</span><span class=\"w\">             </span><span class=\"o\">*</span><span class=\"n\">store</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_context_t</span><span class=\"w\">           </span><span class=\"o\">*</span><span class=\"n\">context</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_linker_t</span><span class=\"w\">            </span><span class=\"o\">*</span><span class=\"n\">linker</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi_config_t</span><span class=\"w\">                </span><span class=\"o\">*</span><span class=\"n\">wasi_config</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_error_t</span><span class=\"w\">             </span><span class=\"o\">*</span><span class=\"n\">error</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_extern_t</span><span class=\"w\">             </span><span class=\"n\">item</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"n\">plugin</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_plugin_t</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_name_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_name</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"n\">vm_engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_engine_new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">vm_engine</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"failed to new engine\"</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">-1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"c1\">//wasmtime_module_deserialize();</span>\n<span class=\"w\">    </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_module_new</span><span class=\"p\">(</span><span class=\"n\">vm_engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">uint8_t</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">bytecode</span><span class=\"p\">.</span><span class=\"n\">c_str</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">bytecode</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">module</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"c1\">//error = wasmtime_module_deserialize(vm_engine, (const uint8_t*) bytecode.c_str(), bytecode.size(), &amp;module);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">wasmtime_report_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to new module: \"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">-2</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_store_new</span><span class=\"p\">(</span><span class=\"n\">vm_engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">-3</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">context</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_store_context</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">wasi_config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasi_config_new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">-4</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">wasi_config_inherit_env</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasi_config_inherit_stdin</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasi_config_inherit_stdout</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasi_config_inherit_stderr</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_context_set_wasi</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">wasmtime_report_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to init WASI: \"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">err</span>\n<span class=\"p\">[</span><span class=\"n\">message</span><span class=\"w\"> </span><span class=\"n\">truncated</span><span class=\"p\">]</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 503469928,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741169181
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10333#issuecomment-2701277687\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10333\">issue #10333</a>:</p>\n<blockquote>\n<p>When it comes to thread safety and the C/C++ API (and/or C/C++ in general) you're sort of in the wild west where you'll have to start from basics and build everything up yourself. There is <a href=\"https://docs.wasmtime.dev/c-api/wasmtime_8h.html\">basic documentation</a> of thread safety in the C API and you can also browse the <a href=\"https://docs.rs/wasmtime/latest/wasmtime/\">Rust API documentation</a> to better understand thread safety.</p>\n<p>tl;dr; \"engine\" is threadsafe, \"store\", and everything that refers to it, must only be used in one thread at a time. Your example at the top is only safe so long as nothing else on the main thread uses the store while it's in use by a child thread.</p>\n</blockquote>",
        "id": 503548715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741188499
    },
    {
        "content": "<p>liupeidong0620 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10333\">issue #10333</a>:</p>\n<blockquote>\n<h1>question</h1>\n<ol>\n<li>I created multiple wasm_wasmtime_plugin_t</li>\n<li>Each thread runs a wasm_wasmtime_plugin_t</li>\n<li>Is this thread safe?</li>\n<li>The wasmtime_func_call function calls the malloc function exported by wasm. Is this thread safe?</li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"c1\">// Load the same wasm program and create multiple wasm_wasmtime_plugin_t instances</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_engine_t</span><span class=\"w\">           </span><span class=\"o\">*</span><span class=\"n\">vm_engine</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_module_t</span><span class=\"w\">       </span><span class=\"o\">*</span><span class=\"k\">module</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_store_t</span><span class=\"w\">        </span><span class=\"o\">*</span><span class=\"n\">store</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_context_t</span><span class=\"w\">      </span><span class=\"o\">*</span><span class=\"n\">context</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_linker_t</span><span class=\"w\">       </span><span class=\"o\">*</span><span class=\"n\">linker</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_instance_t</span><span class=\"w\">      </span><span class=\"n\">instance</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_memory_t</span><span class=\"w\">        </span><span class=\"n\">memory</span><span class=\"p\">;</span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_plugin_t</span><span class=\"p\">;</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"p\">....</span>\n<span class=\"n\">wasm_wasmtime_plugin_t</span><span class=\"w\"> </span><span class=\"n\">plugins</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">];</span>\n<span class=\"c1\">// Load the same wasm program and create multiple wasm_wasmtime_plugin_t instances</span>\n\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">std</span><span class=\"o\">::</span><span class=\"kr\">thread</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">([</span><span class=\"n\">plugin_num</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">       </span><span class=\"c1\">//  Is it thread safe?</span>\n<span class=\"w\">        </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_func_call</span><span class=\"p\">(</span><span class=\"n\">plugins</span><span class=\"p\">[</span><span class=\"n\">plugin_num</span><span class=\"p\">]</span><span class=\"o\">-&gt;</span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">func</span><span class=\"p\">.</span><span class=\"n\">of</span><span class=\"p\">.</span><span class=\"n\">func</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">param_num</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">,</span>\n<span class=\"w\">                               </span><span class=\"n\">has_result</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">});</span>\n<span class=\"p\">}</span>\n<span class=\"c1\">// wait thread ok</span>\n<span class=\"p\">....</span>\n\n\n<span class=\"p\">}</span>\n</code></pre></div>\n<h1>code (wasm_wasmtime_plugin_t initialization process, specific code)</h1>\n<p><div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"c1\">// wasmtime_vm.h</span>\n\n<span class=\"cp\">#pragma once</span>\n\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;wasi.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;wasm.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;wasmtime.h&gt;</span>\n\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">\"wasm_base.h\"</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">\"wasm_api.h\"</span>\n\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;string&gt;</span>\n\n<span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_engine_t</span><span class=\"w\">           </span><span class=\"o\">*</span><span class=\"n\">vm_engine</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_module_t</span><span class=\"w\">       </span><span class=\"o\">*</span><span class=\"k\">module</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_store_t</span><span class=\"w\">        </span><span class=\"o\">*</span><span class=\"n\">store</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_context_t</span><span class=\"w\">      </span><span class=\"o\">*</span><span class=\"n\">context</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_linker_t</span><span class=\"w\">       </span><span class=\"o\">*</span><span class=\"n\">linker</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_instance_t</span><span class=\"w\">      </span><span class=\"n\">instance</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_memory_t</span><span class=\"w\">        </span><span class=\"n\">memory</span><span class=\"p\">;</span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_plugin_t</span><span class=\"p\">;</span>\n\n<span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"w\">                </span><span class=\"n\">name</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_func_callback_t</span><span class=\"w\"> </span><span class=\"n\">cb</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int8_t</span><span class=\"w\">                   </span><span class=\"n\">param_num</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valkind_t</span><span class=\"w\">           </span><span class=\"n\">param_type</span><span class=\"p\">[</span><span class=\"n\">MAX_WASM_API_ARG</span><span class=\"p\">];</span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_host_api_t</span><span class=\"p\">;</span>\n\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">WasmtimeVM</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"k\">public</span><span class=\"w\"> </span><span class=\"n\">WasmBaseVM</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"k\">public</span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">WasmtimeVM</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">wasm_file</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">wasm_name</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// load wasm and init</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"nf\">wasm_call</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">func_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"n\">has_result</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">param_type</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">...);</span><span class=\"w\"> </span><span class=\"c1\">// call wasm func</span>\n\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"nf\">wasm_memory_alloc</span><span class=\"p\">(</span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nf\">wasm_get_memory</span><span class=\"p\">(</span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">addr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"o\">~</span><span class=\"n\">WasmtimeVM</span><span class=\"p\">();</span>\n\n\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">setCtxId</span><span class=\"p\">(</span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">wasm_ctx_id</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">wasm_ctx_id_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_ctx_id</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"nf\">getCtxId</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">wasm_ctx_id_</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"nf\">get_wasm_name</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">wasm_name_</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"nf\">get_wasm_id</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">id_</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">virtual</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">set_wasm_id</span><span class=\"p\">(</span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">id_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"k\">private</span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_functype_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">wasmtime_host_api_func</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_host_api_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">api</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">wasmtime_report_error</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">message</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasmtime_error_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasm_trap_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"nf\">wasm_wasmtime_has</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">wasm_wasmtime_plugin_t</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">plugin</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">wasm_ctx_id_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">wasm_name_</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int32_t</span><span class=\"w\"> </span><span class=\"n\">id_</span><span class=\"p\">;</span>\n\n<span class=\"w\">  </span><span class=\"n\">wasmtime_val_t</span><span class=\"w\">   </span><span class=\"n\">param_int32</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">}};</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_val_t</span><span class=\"w\">   </span><span class=\"n\">param_int32_int32</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">}};</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_val_t</span><span class=\"w\">   </span><span class=\"n\">param_int32_int32_int32</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_val_t</span><span class=\"w\">   </span><span class=\"n\">param_int32_int32_int32_int32</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_val_t</span><span class=\"w\">   </span><span class=\"n\">param_int32_int32_int32_int32_int32</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_I32</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"p\">};</span>\n<span class=\"p\">};</span>\n\n<span class=\"c1\">// wasmtime_vm.cc</span>\n\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">\"wasmtime_vm.h\"</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;iostream&gt;</span>\n\n<span class=\"cp\">#define DEFINE_WASM_API(NAME, ARG_CHECK) \\</span>\n<span class=\"cp\">    static wasm_trap_t* wasmtime_##NAME( \\</span>\n<span class=\"cp\">        void *env, \\</span>\n<span class=\"cp\">        wasmtime_caller_t *caller, \\</span>\n<span class=\"cp\">        const wasmtime_val_t *args, \\</span>\n<span class=\"cp\">        size_t nargs, \\</span>\n<span class=\"cp\">        wasmtime_val_t *results, \\</span>\n<span class=\"cp\">        size_t nresults \\</span>\n<span class=\"cp\">    ) { \\</span>\n<span class=\"cp\">        ARG_CHECK \\</span>\n<span class=\"cp\">        results[0].kind = WASMTIME_I32; \\</span>\n<span class=\"cp\">        results[0].of.i32 = res; \\</span>\n<span class=\"cp\">        return NULL; \\</span>\n<span class=\"cp\">    }</span>\n<span class=\"cp\">#define DEFINE_WASM_NAME(NAME, ARG) \\</span>\n<span class=\"cp\">    {#NAME, wasmtime_##NAME, ARG},</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_VOID \\</span>\n<span class=\"cp\">    0, {}</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_VOID(NAME) \\</span>\n<span class=\"cp\">    int32_t res = NAME();</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_1 \\</span>\n<span class=\"cp\">    1, { \\</span>\n<span class=\"cp\">    WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_1(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_2 \\</span>\n<span class=\"cp\">    2, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_2(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_3 \\</span>\n<span class=\"cp\">    3, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_3(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t p2 = args[2].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1, p2);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_4 \\</span>\n<span class=\"cp\">    4, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, WASM_I32, WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_4(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t p2 = args[2].of.i32; \\</span>\n<span class=\"cp\">    int32_t p3 = args[3].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1, p2, p3);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_5 \\</span>\n<span class=\"cp\">    5, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, WASM_I32, WASM_I32, WASM_I32,  \\</span>\n<span class=\"cp\">}</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_5(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t p2 = args[2].of.i32; \\</span>\n<span class=\"cp\">    int32_t p3 = args[3].of.i32; \\</span>\n<span class=\"cp\">    int32_t p4 = args[4].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1, p2, p3, p4);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_6 \\</span>\n<span class=\"cp\">    6, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, WASM_I32, WASM_I32, WASM_I32,  \\</span>\n<span class=\"cp\">    WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_6(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t p2 = args[2].of.i32; \\</span>\n<span class=\"cp\">    int32_t p3 = args[3].of.i32; \\</span>\n<span class=\"cp\">    int32_t p4 = args[4].of.i32; \\</span>\n<span class=\"cp\">    int32_t p5 = args[5].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1, p2, p3, p4, p5);</span>\n\n<span class=\"cp\">#define DEFINE_WASM_NAME_ARG_I32_7 \\</span>\n<span class=\"cp\">    7, { \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, WASM_I32, WASM_I32, WASM_I32,  \\</span>\n<span class=\"cp\">    WASM_I32, WASM_I32, }</span>\n<span class=\"cp\">#define DEFINE_WASM_API_ARG_CHECK_I32_7(NAME) \\</span>\n<span class=\"cp\">    int32_t p0 = args[0].of.i32; \\</span>\n<span class=\"cp\">    int32_t p1 = args[1].of.i32; \\</span>\n<span class=\"cp\">    int32_t p2 = args[2].of.i32; \\</span>\n<span class=\"cp\">    int32_t p3 = args[3].of.i32; \\</span>\n<span class=\"cp\">    int32_t p4 = args[4].of.i32; \\</span>\n<span class=\"cp\">    int32_t p5 = args[5].of.i32; \\</span>\n<span class=\"cp\">    int32_t p6 = args[6].of.i32; \\</span>\n<span class=\"cp\">    int32_t res = NAME(p0, p1, p2, p3, p4, p5, p6);</span>\n\n<span class=\"n\">DEFINE_WASM_API</span><span class=\"p\">(</span><span class=\"n\">tendis_get_buffer_bytes</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"n\">DEFINE_WASM_API_ARG_CHECK_I32_4</span><span class=\"p\">(</span><span class=\"n\">tendis_get_buffer_bytes</span><span class=\"p\">))</span>\n\n<span class=\"n\">DEFINE_WASM_API</span><span class=\"p\">(</span><span class=\"n\">tendis_set_buffer_bytes</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"n\">DEFINE_WASM_API_ARG_CHECK_I32_4</span><span class=\"p\">(</span><span class=\"n\">tendis_set_buffer_bytes</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_host_api_t</span><span class=\"w\"> </span><span class=\"n\">host_apis</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">DEFINE_WASM_NAME</span><span class=\"p\">(</span><span class=\"n\">tendis_get_buffer_bytes</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DEFINE_WASM_NAME_ARG_I32_4</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">DEFINE_WASM_NAME</span><span class=\"p\">(</span><span class=\"n\">tendis_set_buffer_bytes</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DEFINE_WASM_NAME_ARG_I32_4</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n\n<span class=\"n\">wasm_functype_t</span><span class=\"w\"> </span><span class=\"o\">*</span>\n<span class=\"nf\">WasmtimeVM::wasmtime_host_api_func</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_host_api_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">api</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\">                </span><span class=\"n\">i</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valtype_vec_t</span><span class=\"w\"> </span><span class=\"n\">param_vec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">result_vec</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valtype_t</span><span class=\"w\">    </span><span class=\"o\">*</span><span class=\"n\">param</span><span class=\"p\">[</span><span class=\"n\">MAX_WASM_API_ARG</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valtype_t</span><span class=\"w\">    </span><span class=\"o\">*</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_functype_t</span><span class=\"w\">   </span><span class=\"o\">*</span><span class=\"n\">f</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">api</span><span class=\"o\">-&gt;</span><span class=\"n\">param_num</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">param</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_valtype_new</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"o\">-&gt;</span><span class=\"n\">param_type</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_valtype_new</span><span class=\"p\">(</span><span class=\"n\">WASM_I32</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valtype_vec_new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">param_vec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">api</span><span class=\"o\">-&gt;</span><span class=\"n\">param_num</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">param</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_valtype_vec_new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">result_vec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_functype_new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">param_vec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">result_vec</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span>\n<span class=\"nf\">WasmtimeVM::wasmtime_report_error</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">message</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_error_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasm_trap_t</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">trap</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_byte_vec_t</span><span class=\"w\"> </span><span class=\"n\">error_message</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">wasmtime_error_message</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">wasmtime_error_delete</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">wasm_trap_message</span><span class=\"p\">(</span><span class=\"n\">trap</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">wasm_trap_delete</span><span class=\"p\">(</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"p\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">error_message</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error_message</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_byte_vec_delete</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">error_message</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">WasmtimeVM::load</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">bytecode</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">wasm_name</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">size_t</span><span class=\"w\">                        </span><span class=\"n\">i</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">bool</span><span class=\"w\">                          </span><span class=\"n\">ok</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_engine_t</span><span class=\"w\">                </span><span class=\"o\">*</span><span class=\"n\">vm_engine</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_trap_t</span><span class=\"w\">                  </span><span class=\"o\">*</span><span class=\"n\">trap</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_module_t</span><span class=\"w\">            </span><span class=\"o\">*</span><span class=\"k\">module</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_store_t</span><span class=\"w\">             </span><span class=\"o\">*</span><span class=\"n\">store</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_context_t</span><span class=\"w\">           </span><span class=\"o\">*</span><span class=\"n\">context</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_linker_t</span><span class=\"w\">            </span><span class=\"o\">*</span><span class=\"n\">linker</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi_config_t</span><span class=\"w\">                </span><span class=\"o\">*</span><span class=\"n\">wasi_config</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_error_t</span><span class=\"w\">             </span><span class=\"o\">*</span><span class=\"n\">error</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_extern_t</span><span class=\"w\">             </span><span class=\"n\">item</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"n\">plugin</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">wasm_wasmtime_plugin_t</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasm_name_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_name</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"n\">vm_engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasm_engine_new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">vm_engine</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"failed to new engine\"</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">-1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"c1\">//wasmtime_module_deserialize();</span>\n<span class=\"w\">    </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_module_new</span><span class=\"p\">(</span><span class=\"n\">vm_engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">uint8_t</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">bytecode</span><span class=\"p\">.</span><span class=\"n\">c_str</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">bytecode</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">module</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"c1\">//error = wasmtime_module_deserialize(vm_engine, (const uint8_t*) bytecode.c_str(), bytecode.size(), &amp;module);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">wasmtime_report_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to new module: \"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">-2</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_store_new</span><span class=\"p\">(</span><span class=\"n\">vm_engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">-3</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">context</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_store_context</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">wasi_config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasi_config_new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">-4</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">wasi_config_inherit_env</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasi_config_inherit_stdin</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasi_config_inherit_stdout</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">wasi_config_inherit_stderr</span><span class=\"p\">(</span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_context_set_wasi</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi_config</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">wasmtime_report_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to init WASI: \"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">err</span>\n<span class=\"p\">[</span><span class=\"n\">message</span><span class=\"w\"> </span><span class=\"n\">truncated</span><span class=\"p\">]</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 503672779,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741224903
    },
    {
        "content": "<p>liupeidong0620 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10333#issuecomment-2702499856\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10333\">issue #10333</a>:</p>\n<blockquote>\n<p>Thanks</p>\n</blockquote>",
        "id": 503672780,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741224904
    }
]