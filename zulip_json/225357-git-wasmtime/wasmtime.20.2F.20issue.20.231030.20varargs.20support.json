[
    {
        "content": "<p>Jakersnell <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030#issuecomment-2062120557\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030\">issue #1030</a>:</p>\n<blockquote>\n<p>Are there any updates with this? Implementing varargs as a frontend with Cranelift is extremely cumbersome.  </p>\n</blockquote>",
        "id": 433865521,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713384151
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030#issuecomment-2062157073\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030\">issue #1030</a>:</p>\n<blockquote>\n<p>There hasn't been any change since the last comment here. Also do you need just support for calling variadic functions or also defining them? The former is a lot easier to support than the latter.</p>\n</blockquote>",
        "id": 433868748,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713385345
    },
    {
        "content": "<p>Jakersnell <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030#issuecomment-2062440958\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030\">issue #1030</a>:</p>\n<blockquote>\n<p>Specifically calling them, although both would be nice.</p>\n</blockquote>",
        "id": 433878226,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713389600
    },
    {
        "content": "<p>Jakersnell deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030#issuecomment-2062440958\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030\">issue #1030</a>:</p>\n<blockquote>\n<p>Specifically calling them, although both would be nice.</p>\n</blockquote>",
        "id": 433880266,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713390582
    },
    {
        "content": "<p>Jakersnell <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030#issuecomment-2062474308\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030\">issue #1030</a>:</p>\n<blockquote>\n<p>Just calling them.</p>\n</blockquote>",
        "id": 433880337,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713390608
    },
    {
        "content": "<p>rakivo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030#issuecomment-2954185795\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030\">issue #1030</a>:</p>\n<blockquote>\n<p>Is this even possible to call vararg functions from Cranelift today? I've tried patching up the signature every call but without setting up <code>al</code> properly this won't work correctly.</p>\n</blockquote>",
        "id": 522989635,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749403263
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030#issuecomment-2954221918\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030\">issue #1030</a>:</p>\n<blockquote>\n<p>I believe <code>al</code> is an upper bound on the number of float args, so if you deny float args entirely, it shouldn't matter what value is in <code>al</code>.</p>\n</blockquote>",
        "id": 522994023,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749408378
    },
    {
        "content": "<p>rakivo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030#issuecomment-2954236147\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030\">issue #1030</a>:</p>\n<blockquote>\n<p>I am trying to integrate Cranelift as a backend to my language, and I've been trying all day to generate a simple printf call code using Cranelift but nothing works.</p>\n<p>Here's for example an internal IR my compiler generates for some input:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">printf</span><span class=\"w\"> </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">void</span><span class=\"p\">;</span>\n\n<span class=\"n\">main</span><span class=\"w\"> </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"o\">@</span><span class=\"n\">entry</span><span class=\"w\"> </span><span class=\"p\">(#</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">preds</span><span class=\"o\">=</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">succs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">[]</span>\n<span class=\"w\">  </span><span class=\"o\">%</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">alloca</span><span class=\"w\"> </span><span class=\"kt\">i32</span>\n<span class=\"w\">  </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0_</span><span class=\"k\">i32</span>\n<span class=\"w\">  </span><span class=\"n\">br</span><span class=\"w\"> </span><span class=\"mi\">0_</span><span class=\"k\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">2</span>\n\n<span class=\"o\">@</span><span class=\"n\">then</span><span class=\"w\"> </span><span class=\"p\">(#</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">preds</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">succs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">[]</span>\n<span class=\"w\">  </span><span class=\"o\">%</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1_</span><span class=\"k\">i32</span>\n<span class=\"w\">  </span><span class=\"o\">%</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2_</span><span class=\"k\">i32</span>\n<span class=\"w\">  </span><span class=\"n\">br</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"mi\">2</span><span class=\"p\">]}</span>\n\n<span class=\"o\">@</span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">(#</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">preds</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">succs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">[]</span>\n<span class=\"w\">  </span><span class=\"o\">%</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3_</span><span class=\"k\">i32</span>\n<span class=\"w\">  </span><span class=\"o\">%</span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4_</span><span class=\"k\">i32</span>\n<span class=\"w\">  </span><span class=\"n\">br</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"mi\">3</span><span class=\"p\">]}</span>\n\n<span class=\"o\">@</span><span class=\"n\">merge</span><span class=\"w\"> </span><span class=\"p\">(#</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">preds</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">succs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"x = %d</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"y = %d</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">br</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">4</span>\n\n<span class=\"o\">@</span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"p\">(#</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">preds</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">succs</span><span class=\"o\">=</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">[]</span>\n<span class=\"w\">  </span><span class=\"n\">ret</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>And this is the result of a Cranelift module translating the IR above:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"nc\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">ss0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">explicit_slot</span><span class=\"w\"> </span><span class=\"mi\">4</span>\n<span class=\"w\">    </span><span class=\"n\">gv0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">symbol</span><span class=\"w\"> </span><span class=\"n\">colocated</span><span class=\"w\"> </span><span class=\"n\">userextname1</span>\n<span class=\"w\">    </span><span class=\"n\">gv1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">symbol</span><span class=\"w\"> </span><span class=\"n\">colocated</span><span class=\"w\"> </span><span class=\"n\">userextname2</span>\n<span class=\"w\">    </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">system_v</span>\n<span class=\"w\">    </span><span class=\"n\">sig1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">system_v</span>\n<span class=\"w\">    </span><span class=\"n\">sig2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">system_v</span>\n<span class=\"w\">    </span><span class=\"n\">sig3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">system_v</span>\n<span class=\"w\">    </span><span class=\"n\">fn0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">u0</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">sig1</span>\n<span class=\"w\">    </span><span class=\"n\">fn1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">u0</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">sig3</span>\n\n<span class=\"n\">block0</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v11</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stack_addr</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ss0</span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">brif</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block3</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n\n<span class=\"n\">block1</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">v11</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v4</span>\n\n<span class=\"n\">block2</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"n\">v6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">2</span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block4</span><span class=\"p\">(</span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span>\n\n<span class=\"n\">block3</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">4</span>\n<span class=\"w\">    </span><span class=\"n\">v7</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">3</span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block4</span><span class=\"p\">(</span><span class=\"n\">v8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span>\n\n<span class=\"n\">block4</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v9</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">symbol_value</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">gv0</span>\n<span class=\"w\">    </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">fn0</span><span class=\"p\">(</span><span class=\"n\">v9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">v10</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">symbol_value</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">gv1</span>\n<span class=\"w\">    </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">fn1</span><span class=\"p\">(</span><span class=\"n\">v10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>After linking it: <code>clang -no-pie ./examples/simple-phi.o -o simple-phi</code>, it prints this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span>\n<span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span>\n</code></pre></div>\n<p>Where's the <code>y = 0</code> comming from?</p>\n<p><code>objdump -d -M intel ./examples/simple-phi.o</code> outputs this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">examples</span><span class=\"o\">/</span><span class=\"n\">simple</span><span class=\"o\">-</span><span class=\"n\">phi</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">:</span><span class=\"w\">     </span><span class=\"nc\">file</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"n\">elf64</span><span class=\"o\">-</span><span class=\"n\">x86</span><span class=\"o\">-</span><span class=\"mi\">64</span>\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">text</span><span class=\"p\">:</span>\n\n<span class=\"mi\">0000000000000000</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">main</span><span class=\"o\">&gt;</span><span class=\"p\">:</span>\n<span class=\"w\">   </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">55</span><span class=\"w\">                      </span><span class=\"n\">push</span><span class=\"w\">   </span><span class=\"n\">rbp</span>\n<span class=\"w\">   </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"n\">rsp</span>\n<span class=\"w\">   </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\">             </span><span class=\"n\">sub</span><span class=\"w\">    </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"mh\">0x20</span>\n<span class=\"w\">   </span><span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\">          </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">QWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rsp</span><span class=\"o\">+</span><span class=\"mh\">0x10</span><span class=\"p\">],</span><span class=\"n\">rbx</span>\n<span class=\"w\">   </span><span class=\"n\">d</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">4</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"mi\">74</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"w\">          </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">QWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rsp</span><span class=\"o\">+</span><span class=\"mh\">0x18</span><span class=\"p\">],</span><span class=\"n\">r14</span>\n<span class=\"w\">  </span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">33</span><span class=\"w\"> </span><span class=\"n\">d2</span><span class=\"w\">                   </span><span class=\"n\">xor</span><span class=\"w\">    </span><span class=\"n\">edx</span><span class=\"p\">,</span><span class=\"n\">edx</span>\n<span class=\"w\">  </span><span class=\"mi\">14</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">4</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">34</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"w\">             </span><span class=\"n\">lea</span><span class=\"w\">    </span><span class=\"n\">r14</span><span class=\"p\">,[</span><span class=\"n\">rsp</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"mi\">18</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"n\">c7</span><span class=\"w\"> </span><span class=\"mi\">06</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">DWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">r14</span><span class=\"p\">],</span><span class=\"mh\">0x0</span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"n\">f</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"n\">d2</span><span class=\"w\">                   </span><span class=\"n\">test</span><span class=\"w\">   </span><span class=\"n\">edx</span><span class=\"p\">,</span><span class=\"n\">edx</span>\n<span class=\"w\">  </span><span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">jne</span><span class=\"w\">    </span><span class=\"mi\">3</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">main</span><span class=\"o\">+</span><span class=\"mh\">0x3a</span><span class=\"o\">&gt;</span>\n<span class=\"w\">  </span><span class=\"mi\">27</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"nc\">be</span><span class=\"w\"> </span><span class=\"mi\">04</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">          </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">esi</span><span class=\"p\">,</span><span class=\"mh\">0x4</span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"n\">bb</span><span class=\"w\"> </span><span class=\"mi\">03</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">r11d</span><span class=\"p\">,</span><span class=\"mh\">0x3</span>\n<span class=\"w\">  </span><span class=\"mi\">32</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">4</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">db</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">rbx</span><span class=\"p\">,</span><span class=\"n\">r11</span>\n<span class=\"w\">  </span><span class=\"mi\">35</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"nc\">e9</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">          </span><span class=\"n\">jmp</span><span class=\"w\">    </span><span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">main</span><span class=\"o\">+</span><span class=\"mh\">0x48</span><span class=\"o\">&gt;</span>\n<span class=\"w\">  </span><span class=\"mi\">3</span><span class=\"n\">a</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"nc\">be</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">          </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">esi</span><span class=\"p\">,</span><span class=\"mh\">0x1</span>\n<span class=\"w\">  </span><span class=\"mi\">3</span><span class=\"n\">f</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"n\">bb</span><span class=\"w\"> </span><span class=\"mi\">02</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">r11d</span><span class=\"p\">,</span><span class=\"mh\">0x2</span>\n<span class=\"w\">  </span><span class=\"mi\">45</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">4</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">db</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">rbx</span><span class=\"p\">,</span><span class=\"n\">r11</span>\n<span class=\"w\">  </span><span class=\"mi\">48</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">lea</span><span class=\"w\">    </span><span class=\"n\">rdi</span><span class=\"p\">,[</span><span class=\"n\">rip</span><span class=\"o\">+</span><span class=\"mh\">0x0</span><span class=\"p\">]</span><span class=\"w\">        </span><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">main</span><span class=\"o\">+</span><span class=\"mh\">0x4f</span><span class=\"o\">&gt;</span>\n<span class=\"w\">  </span><span class=\"mi\">4</span><span class=\"n\">f</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"n\">b8</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">movabs</span><span class=\"w\"> </span><span class=\"n\">rax</span><span class=\"p\">,</span><span class=\"mh\">0x0</span>\n<span class=\"w\">  </span><span class=\"mi\">56</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span>\n<span class=\"w\">  </span><span class=\"mi\">59</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"nc\">ff</span><span class=\"w\"> </span><span class=\"n\">d0</span><span class=\"w\">                   </span><span class=\"n\">call</span><span class=\"w\">   </span><span class=\"n\">rax</span>\n<span class=\"w\">  </span><span class=\"mi\">5</span><span class=\"n\">b</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">lea</span><span class=\"w\">    </span><span class=\"n\">rdi</span><span class=\"p\">,[</span><span class=\"n\">rip</span><span class=\"o\">+</span><span class=\"mh\">0x0</span><span class=\"p\">]</span><span class=\"w\">        </span><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"mi\">62</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">main</span><span class=\"o\">+</span><span class=\"mh\">0x62</span><span class=\"o\">&gt;</span>\n<span class=\"w\">  </span><span class=\"mi\">62</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"n\">b8</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">movabs</span><span class=\"w\"> </span><span class=\"n\">rax</span><span class=\"p\">,</span><span class=\"mh\">0x0</span>\n<span class=\"w\">  </span><span class=\"mi\">69</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span>\n<span class=\"w\">  </span><span class=\"mi\">6</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">de</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">rsi</span><span class=\"p\">,</span><span class=\"n\">rbx</span>\n<span class=\"w\">  </span><span class=\"mi\">6</span><span class=\"n\">f</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"nc\">ff</span><span class=\"w\"> </span><span class=\"n\">d0</span><span class=\"w\">                   </span><span class=\"n\">call</span><span class=\"w\">   </span><span class=\"n\">rax</span>\n<span class=\"w\">  </span><span class=\"mi\">71</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">06</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">eax</span><span class=\"p\">,</span><span class=\"n\">DWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">r14</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"mi\">74</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\">          </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">rbx</span><span class=\"p\">,</span><span class=\"n\">QWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rsp</span><span class=\"o\">+</span><span class=\"mh\">0x10</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"mi\">79</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">4</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">74</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"w\">          </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">r14</span><span class=\"p\">,</span><span class=\"n\">QWORD</span><span class=\"w\"> </span><span class=\"n\">PTR</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rsp</span><span class=\"o\">+</span><span class=\"mh\">0x18</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"mi\">7</span><span class=\"n\">e</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"n\">c4</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\">             </span><span class=\"n\">add</span><span class=\"w\">    </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"mh\">0x20</span>\n<span class=\"w\">  </span><span class=\"mi\">82</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"n\">rbp</span>\n<span class=\"w\">  </span><span class=\"mi\">85</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">    </span><span class=\"n\">rbp</span>\n<span class=\"w\">  </span><span class=\"mi\">86</span><span class=\"p\">:</span><span class=\"w\">   </span><span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span>\n</code></pre></div>\n<p>I even tried calling a printf wrapper I wrote in gas that would xor al, but the output was still the same.</p>\n<p>Am I missing something?<br>\n</p>\n</blockquote>",
        "id": 522995834,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749410605
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030#issuecomment-2954247155\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030\">issue #1030</a>:</p>\n<blockquote>\n<p>Did you make sure to nul-terminate your strings?</p>\n</blockquote>",
        "id": 522997210,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749412282
    },
    {
        "content": "<p>rakivo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030#issuecomment-2954249239\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1030\">issue #1030</a>:</p>\n<blockquote>\n<p>Ohhh man I completely forgot about that!!!! With nul-terminated strings it works fine, thank you sm!</p>\n</blockquote>",
        "id": 522997525,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749412611
    }
]