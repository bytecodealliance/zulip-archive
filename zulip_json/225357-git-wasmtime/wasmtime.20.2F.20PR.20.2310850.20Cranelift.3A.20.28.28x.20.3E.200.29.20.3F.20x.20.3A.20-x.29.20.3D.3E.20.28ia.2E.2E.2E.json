[
    {
        "content": "<p><strong>bongjunj</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10850\">PR #10850</a>.</p>",
        "id": 520824747,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748418301
    },
    {
        "content": "<p><strong>bongjunj</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10850\">PR #10850</a>.</p>",
        "id": 520824748,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748418301
    },
    {
        "content": "<p>bongjunj opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10850\">PR #10850</a> from <code>bongjunj:select-to-iabs</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n<p>This adds</p>\n<ol>\n<li><code>(x (&gt;/&gt;=) 0) ? x : -x</code> ==&gt; <code>(iabs x)</code></li>\n<li><code>(x (&lt;/&lt;=) 0) ? -x : x</code> ==&gt; <code>(iabs x)</code></li>\n</ol>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;proof.isle&lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"isle\"><pre><span></span><code>(rule (simplify (select ty\n              (icmp cty (IntCC.SignedGreaterThanOrEqual)\n                x (iconst tty (u64_from_imm64 (u64_zero))))\n              x\n              (isub ty\n                (iconst ty (u64_from_imm64 (u64_zero)))\n              x)))\n  (subsume (iabs ty x)))\n\n(type Type (primitive Type))\n(type Value (primitive Value))\n(type Imm64 (primitive Imm64))\n(type Inst (primitive Inst))\n(type SkeletonInstSimplification (primitive SkeletonInstSimplification))\n(type IntCC extern\n    (enum\n        Equal\n        NotEqual\n        SignedGreaterThan\n        SignedGreaterThanOrEqual\n        SignedLessThan\n        SignedLessThanOrEqual\n        UnsignedGreaterThan\n        UnsignedGreaterThanOrEqual\n        UnsignedLessThan\n        UnsignedLessThanOrEqual))\n\n(model IntCC (enum\n    (Equal #x00)\n    (NotEqual #x01)\n    (SignedGreaterThan #x02)\n    (SignedGreaterThanOrEqual #x03)\n    (SignedLessThan #x04)\n    (SignedLessThanOrEqual #x05)\n    (UnsignedGreaterThan #x06)\n    (UnsignedGreaterThanOrEqual #x07)\n    (UnsignedLessThan #x08)\n    (UnsignedLessThanOrEqual #x09)))\n\n\n(spec (isub ty x y)\n    (provide (= result (bvsub x y)))\n    (require\n        (= (widthof x) (widthof y))))\n(decl isub (Type Value Value) Value)\n(extern extractor isub isub)\n(extern constructor isub isub)\n\n\n(spec (iabs ty x)\n    (provide (= result\n                (if (bvsge x (conv_to (widthof x) #x0000000000000000))\n                    x\n                    (bvneg x)))))\n(decl iabs (Type Value) Value)\n(extern extractor iabs iabs)\n(extern constructor iabs iabs)\n\n(spec (select ty c x y)\n    (provide (= result (if (= c #x00) y x)))\n    (require\n        (= (widthof x) (widthof y))))\n(decl select (Type Value Value Value) Value)\n(extern extractor select select)\n(extern constructor select select)\n\n(spec (icmp ty cc x y)\n    (provide\n        (= result\n            (switch cc\n                ((IntCC.Equal)                        (if (= x y)       #x01 #x00))\n                ((IntCC.NotEqual)                     (if (not (= x y)) #x01 #x00))\n                ((IntCC.SignedGreaterThan)            (if (bvsgt x y)   #x01 #x00))\n                ((IntCC.SignedGreaterThanOrEqual)     (if (bvsge x y)   #x01 #x00))\n                ((IntCC.SignedLessThan)               (if (bvslt x y)   #x01 #x00))\n                ((IntCC.SignedLessThanOrEqual)        (if (bvsle x y)   #x01 #x00))\n                ((IntCC.UnsignedGreaterThan)          (if (bvugt x y)   #x01 #x00))\n                ((IntCC.UnsignedGreaterThanOrEqual)   (if (bvuge x y)   #x01 #x00))\n                ((IntCC.UnsignedLessThan)             (if (bvult x y)   #x01 #x00))\n                ((IntCC.UnsignedLessThanOrEqual)      (if (bvule x y)   #x01 #x00)))))\n    (require\n        (= ty 8)\n        (= (widthof x) (widthof y))\n        (= (widthof x) 64)\n        (or\n            (= cc (IntCC.Equal))\n            (= cc (IntCC.NotEqual))\n            (= cc (IntCC.UnsignedGreaterThanOrEqual))\n            (= cc (IntCC.UnsignedGreaterThan))\n            (= cc (IntCC.UnsignedLessThanOrEqual))\n            (= cc (IntCC.UnsignedLessThan))\n            (= cc (IntCC.SignedGreaterThanOrEqual))\n            (= cc (IntCC.SignedGreaterThan))\n            (= cc (IntCC.SignedLessThanOrEqual))\n            (= cc (IntCC.SignedLessThan)))))\n\n(decl icmp (Type IntCC Value Value) Value)\n(extern extractor icmp icmp)\n(extern constructor icmp icmp)\n\n(spec (iconst ty arg)\n    (provide (= arg (zero_ext 64 result)))\n    (require (= ty (widthof arg))))\n(decl iconst (Type Imm64) Value)\n(extern constructor iconst iconst)\n(extern extractor iconst iconst)\n\n(spec (u64_zero) (provide (= #x0000000000000000 result)))\n(decl u64_zero () u64)\n(extern extractor u64_zero u64_zero)\n\n(spec (u64_nonzero arg) (provide (= result arg)) (require (bvsgt arg #x0000000000000000)))\n(decl u64_nonzero (u64) u64)\n(extern extractor u64_nonzero u64_nonzero)\n\n(spec (u64_from_imm64 arg) (provide (= arg result)))\n(decl u64_from_imm64 (u64) Imm64)\n(extern extractor u64_from_imm64 u64_from_imm64)\n\n(spec (imm64 x) (provide (= x result)))\n(decl imm64 (u64) Imm64)\n(extern constructor imm64 imm64)\n\n(spec (subsume x) (provide (= result x)))\n(decl subsume (Value) Value)\n(extern constructor subsume subsume)\n\n(spec (iconst_u ty arg)\n    (provide (= arg (zero_ext 64 result))))\n(decl iconst_u (Type u64) Value)\n(extern constructor iconst_u iconst_u)\n\n(spec (simplify x) (provide (= x result)))\n(instantiate simplify\n    ((args (bv 64))  (ret (bv 64))  (canon (bv 64))))\n(decl simplify (Value) Value)\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 520824749,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748418301
    }
]