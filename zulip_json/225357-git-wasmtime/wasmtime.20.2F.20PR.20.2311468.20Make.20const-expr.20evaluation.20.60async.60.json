[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468\">PR #11468</a> from <code>alexcrichton:more-gc-async</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit is extracted from #11430 to accurately reflect how const-expr evaluation is an async operation due to GC pauses that may happen. The changes in this commit are:</p>\n<ul>\n<li>Const-expr evaluation is, at its core, now an <code>async</code> function.</li>\n<li>To leverage this new <code>async</code>-ness all internal operations are switched from <code>*_maybe_async</code> to <code>*_async</code> meaning all the <code>*_maybe_async</code> methods can be removed.</li>\n<li>Some libcalls using <code>*_maybe_async</code> are switch to using <code>*_async</code> plus the <code>block_on!</code> utility to help jettison more <code>*_maybe_async</code> methods.</li>\n<li>Instance initialization is now an <code>async</code> function. This is temporarily handled with <code>block_on</code> during instance initialization to avoid propagating the <code>async</code>-ness further upwards. This <code>block_on</code> will get deleted in future refactorings.</li>\n<li>Const-expr evaluation has been refactored slightly to enable having a fast path in global initialization which skips an <code>await</code> point entirely, achieving performance-parity in benchmarks prior to this commit.</li>\n</ul>\n<p>This ended up fixing a niche issue with GC where if a wasm execution was suspended during <code>table.init</code>, for example, during a const-expr evaluation triggering a GC then if the wasm execution was cancelled it would panic the host. This panic was because the GC operation returned <code>Result</code> but it was <code>unwrap</code>'d as part of the const-expr evaluation which can fail not only to invalid-ness but also due to \"computation is cancelled\" traps.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 535213112,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755643864
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468\">PR #11468</a>.</p>",
        "id": 535213114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755643865
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468\">PR #11468</a>.</p>",
        "id": 535213116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755643865
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468#issuecomment-3202636577\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468\">PR #11468</a>:</p>\n<blockquote>\n<p>Actually, thinking more, the issue about panicking on const expr evaluation failure means <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11469\">allocation failure in GC is a host panic</a> which isn't great. Deferring that to a separate issue.</p>\n</blockquote>",
        "id": 535213263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755643978
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468\">PR #11468</a>.</p>",
        "id": 535213578,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755644256
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468#issuecomment-3203927152\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468\">PR #11468</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:api\", \"wasmtime:ref-types\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: wasmtime:ref-types</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 535227894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755656306
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468\">PR #11468</a>.</p>",
        "id": 535351087,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755707006
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468\">PR #11468</a>.</p>",
        "id": 535355237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755708511
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468#pullrequestreview-3137577187\">PR review</a>:</p>\n<blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 535359837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755710409
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468#discussion_r2288822416\">PR review comment</a>:</p>\n<blockquote>\n<p>Are there any non-async <code>retry_after_gc</code> calls at this point? I think all of them should be async by the time we finish the asyncification of the internals, but I'm not sure if we are there yet or not. But when we are, we should delete the non-async version and then just rename the async variation to plain <code>retry_after_gc</code>.</p>\n</blockquote>",
        "id": 535359838,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755710409
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468#discussion_r2288827262\">PR review comment</a>:</p>\n<blockquote>\n<p>And then <code>Instance::new_raw</code> will become an <code>async</code> function in another follow up PR?</p>\n</blockquote>",
        "id": 535359839,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755710409
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468#pullrequestreview-3137609231\">PR review</a>.</p>",
        "id": 535360682,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755710813
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468#discussion_r2288841677\">PR review comment</a>:</p>\n<blockquote>\n<p>Soon! (got a PR queued up after #11470 to delete the sync version</p>\n</blockquote>",
        "id": 535360683,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755710813
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468#pullrequestreview-3137609690\">PR review</a>.</p>",
        "id": 535360703,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755710822
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468#discussion_r2288842023\">PR review comment</a>:</p>\n<blockquote>\n<p>Indeed! That'll be #11470</p>\n</blockquote>",
        "id": 535360705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755710822
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11468\">PR #11468</a>.</p>",
        "id": 535363883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755712297
    }
]