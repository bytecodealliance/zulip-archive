[
    {
        "content": "<p>AmmarAbouZor opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10090\">issue #10090</a>:</p>\n<blockquote>\n<p>Hi, first of all, I want to thank you all for the great work and effort you’ve put into this project.</p>\n<h4>Feature Request</h4>\n<p>It would be incredibly helpful to have the option to generate unused types when using the <code>wasmtime::component::bindgen!()</code> macro, similar to the functionality provided by the <code>wit_bindgen::generate!()</code> macro.  <br>\nI’ve included a code example below to illustrate the desired functionality:</p>\n<p><strong>WIT File:</strong></p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package example:example;\n\ninterface types {\n  record referenced-type {\n    field: string\n  }\n\n  record no-ref-type {\n    filed: string\n  }\n\n  fn: func(t: referenced-type);\n}\n\nworld example {\n  import types;\n}\n</code></pre></div>\n<p><strong>Code in Rust:</strong></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">wsm</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">        </span><span class=\"n\">path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"wit\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"c1\">// NOTE: no equivalent for this option provided</span>\n<span class=\"w\">        </span><span class=\"c1\">// generate_unused_types: true,</span>\n<span class=\"w\">    </span><span class=\"p\">});</span>\n\n<span class=\"w\">    </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">::</span><span class=\"n\">example</span><span class=\"p\">::</span><span class=\"n\">example</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::{</span>\n<span class=\"w\">        </span><span class=\"n\">ReferencedType</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"c1\">// NoRefType: This type won't get generated</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">wit</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wit_bindgen</span><span class=\"p\">::</span><span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">        </span><span class=\"n\">path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"wit\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">generate_unused_types</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">true</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">});</span>\n\n<span class=\"w\">    </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">::</span><span class=\"n\">example</span><span class=\"p\">::</span><span class=\"n\">example</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::{</span><span class=\"n\">NoRefType</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ReferencedType</span><span class=\"p\">};</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h4>Benefit</h4>\n<p>Generating unused types can be really useful when we aim to group shared types into a single package and generate them only once for use across multiple other packages.</p>\n<h4>Alternatives</h4>\n<p>The current workaround involves adding unused worlds, interfaces, or functions that reference the desired types, ensuring they are generated.<br>\n</p>\n</blockquote>",
        "id": 495491984,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737637210
    },
    {
        "content": "<p>fitzgen assigned pchickey to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10090\">issue #10090</a>.</p>",
        "id": 502346227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740679329
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10090#issuecomment-2691265871\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10090\">issue #10090</a>:</p>\n<blockquote>\n<p>Thank you for reporting this bug. I apologize that this sat for a long time without a response. We noticed it in our triage yesterday and I have a fix in #10311. </p>\n</blockquote>",
        "id": 502638028,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740766296
    },
    {
        "content": "<p>pchickey closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10090\">issue #10090</a>:</p>\n<blockquote>\n<p>Hi, first of all, I want to thank you all for the great work and effort you’ve put into this project.</p>\n<h4>Feature Request</h4>\n<p>It would be incredibly helpful to have the option to generate unused types when using the <code>wasmtime::component::bindgen!()</code> macro, similar to the functionality provided by the <code>wit_bindgen::generate!()</code> macro.  <br>\nI’ve included a code example below to illustrate the desired functionality:</p>\n<p><strong>WIT File:</strong></p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package example:example;\n\ninterface types {\n  record referenced-type {\n    field: string\n  }\n\n  record no-ref-type {\n    filed: string\n  }\n\n  fn: func(t: referenced-type);\n}\n\nworld example {\n  import types;\n}\n</code></pre></div>\n<p><strong>Code in Rust:</strong></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">wsm</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">        </span><span class=\"n\">path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"wit\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"c1\">// NOTE: no equivalent for this option provided</span>\n<span class=\"w\">        </span><span class=\"c1\">// generate_unused_types: true,</span>\n<span class=\"w\">    </span><span class=\"p\">});</span>\n\n<span class=\"w\">    </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">::</span><span class=\"n\">example</span><span class=\"p\">::</span><span class=\"n\">example</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::{</span>\n<span class=\"w\">        </span><span class=\"n\">ReferencedType</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"c1\">// NoRefType: This type won't get generated</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">mod</span><span class=\"w\"> </span><span class=\"nn\">wit</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wit_bindgen</span><span class=\"p\">::</span><span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">        </span><span class=\"n\">path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"wit\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">generate_unused_types</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">true</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">});</span>\n\n<span class=\"w\">    </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">::</span><span class=\"n\">example</span><span class=\"p\">::</span><span class=\"n\">example</span><span class=\"p\">::</span><span class=\"n\">types</span><span class=\"p\">::{</span><span class=\"n\">NoRefType</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ReferencedType</span><span class=\"p\">};</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h4>Benefit</h4>\n<p>Generating unused types can be really useful when we aim to group shared types into a single package and generate them only once for use across multiple other packages.</p>\n<h4>Alternatives</h4>\n<p>The current workaround involves adding unused worlds, interfaces, or functions that reference the desired types, ensuring they are generated.<br>\n</p>\n</blockquote>",
        "id": 502651801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740770934
    },
    {
        "content": "<p>AmmarAbouZor <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10090#issuecomment-2693937397\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10090\">issue #10090</a>:</p>\n<blockquote>\n<p>@pchickey Thanks a lot for resolving this issue—no need to apologize. <br>\nI really appreciate the monster work you've been doing on this project, and naturally, some issues take time to resolve <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 502992173,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740998188
    }
]