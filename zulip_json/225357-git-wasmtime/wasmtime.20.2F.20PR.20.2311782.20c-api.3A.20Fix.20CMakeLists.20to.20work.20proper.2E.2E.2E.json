[
    {
        "content": "<p>josephg opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11782\">PR #11782</a> from <code>josephg:main</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>The <code>WASMTIME_TARGET</code> check in cmake looks to see if the .dylib path is used. This is used on all apple platforms - including macos (\"darwin\"), ios and visionos and so on.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">rustc</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">print</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">-</span><span class=\"n\">list</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">grep</span><span class=\"w\"> </span><span class=\"n\">apple</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">darwin</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">ios</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">ios</span><span class=\"o\">-</span><span class=\"n\">macabi</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">ios</span><span class=\"o\">-</span><span class=\"n\">sim</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">tvos</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">tvos</span><span class=\"o\">-</span><span class=\"n\">sim</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">visionos</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">visionos</span><span class=\"o\">-</span><span class=\"n\">sim</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">watchos</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">watchos</span><span class=\"o\">-</span><span class=\"n\">sim</span>\n<span class=\"o\">..</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>The test currently only checks for <code>darwin</code>, so it only works correctly on macos.</p>\n<p>This change fixes the test to support all apple platforms.</p>\n</blockquote>",
        "id": 542823680,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759436028
    },
    {
        "content": "<p><strong>josephg</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11782\">PR #11782</a>.</p>",
        "id": 542823681,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759436028
    },
    {
        "content": "<p><strong>josephg</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11782\">PR #11782</a>.</p>",
        "id": 542823682,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759436028
    },
    {
        "content": "<p>josephg edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11782\">PR #11782</a>:</p>\n<blockquote>\n<p>The <code>WASMTIME_TARGET</code> check in cmake looks to see if the .dylib path is used. This is used on all apple platforms - including macos (\"darwin\"), ios and visionos and so on.</p>\n<p>Fixes #11759</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">rustc</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">print</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">-</span><span class=\"n\">list</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">grep</span><span class=\"w\"> </span><span class=\"n\">apple</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">darwin</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">ios</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">ios</span><span class=\"o\">-</span><span class=\"n\">macabi</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">ios</span><span class=\"o\">-</span><span class=\"n\">sim</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">tvos</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">tvos</span><span class=\"o\">-</span><span class=\"n\">sim</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">visionos</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">visionos</span><span class=\"o\">-</span><span class=\"n\">sim</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">watchos</span>\n<span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">apple</span><span class=\"o\">-</span><span class=\"n\">watchos</span><span class=\"o\">-</span><span class=\"n\">sim</span>\n<span class=\"o\">..</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>The test currently only checks for <code>darwin</code>, so it only works correctly on macos.</p>\n<p>This change fixes the test to support all apple platforms.</p>\n</blockquote>",
        "id": 542823771,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759436065
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11782#issuecomment-3362944333\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11782\">PR #11782</a>:</p>\n<blockquote>\n<p>Thanks! There's a few other places in this CMakeLists.txt file that mention \"darwin\" too, should those change to \"apple\" as well?</p>\n</blockquote>",
        "id": 542828408,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759437926
    },
    {
        "content": "<p>josephg <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11782#issuecomment-3363908689\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11782\">PR #11782</a>:</p>\n<blockquote>\n<p>I think so. Essentially Darwin = macOS and Apple includes all other Apple platforms. But at a glance, I’m not sure how necessary those other configuration changes are on other Apple platforms.</p>\n<p>But I doubt anyone is currently building Wasmtime for any other Apple platforms at the moment either. There’s also a bug right now building wasmtime with default features on iOS because of a bug in zstd, which is used for the cache feature.</p>\n<p>Unfortunately I can’t test it more at the moment because I’m about to get on a cruise ship for a few weeks of vacation. I’d be happy to merge this PR as is. Or if you feel like it, change all of them to <code>apple</code> and we can tweak as needed once I have time to do some more test builds. I think that’s the right choice, I just can’t test it for the next few weeks. When I get back I want to put together an example app integrating wasmtime into a native Swift app - and that’ll shake out any other problems.</p>\n</blockquote>",
        "id": 542857817,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759457950
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11782#pullrequestreview-3299682719\">PR review</a>:</p>\n<blockquote>\n<p>Ok sounds reasonable! I'll send a follow-up and if you can test when you get back that'd be much appreciated!</p>\n</blockquote>",
        "id": 542975768,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759506674
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11782\">PR #11782</a>.</p>",
        "id": 542980203,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1759508036
    }
]