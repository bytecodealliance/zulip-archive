[
    {
        "content": "<p><a href=\"https://github.com/jewelzms\">jewelzms</a> added the cranelift label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10072\">Issue #10072</a>.</p>",
        "id": 495222021,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737533882
    },
    {
        "content": "<p><a href=\"https://github.com/jewelzms\">jewelzms</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10072\">Issue #10072</a>.</p>",
        "id": 495222022,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737533882
    },
    {
        "content": "<p>jewelzms opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10072\">issue #10072</a>:</p>\n<blockquote>\n<p>Due to the wasm bytecode, segmentation fault occurred in wasmtime.</p>\n<p>Memory corruption: The wasm virtual machine's memory is accidentally changed or overwritten, causing unpredictable behavior and crashing.</p>\n<h3>Webassembly program code in wat format</h3>\n<p>The wasm program is generated by compiling C++ code with emscripten=3.0.0, </p>\n<p><a href=\"https://github.com/user-attachments/files/18501840/crosscall01.txt\">crosscall01.txt</a></p>\n<h3>call callEvm</h3>\n<p>The approximate stack information is as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">gdb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">bt</span>\n<span class=\"p\">#</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mh\">0x00007f2b1838c8c0</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mh\">0x000000000bf3b5a0</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"mh\">0x00000000ffffffff</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"mh\">0x00007f2af928e4e0</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"mh\">0x00007f2b18380440</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"mh\">0x00000000005009cc</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">::</span><span class=\"n\">raw_vec</span><span class=\"p\">::</span><span class=\"n\">RawVec</span><span class=\"cp\">$LT$T$C$A$GT$</span><span class=\"p\">::</span><span class=\"n\">reserve</span><span class=\"p\">::</span><span class=\"n\">do_reserve_and_handle</span><span class=\"p\">::</span><span class=\"n\">hbed38fde89062790</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"mh\">0x000000000b7d0640</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"mh\">0x000000000bf3b5a0</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"mh\">0x0000000000000002</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">9</span><span class=\"w\"> </span><span class=\"mh\">0x00000000005009c0</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">::</span><span class=\"n\">raw_vec</span><span class=\"p\">::</span><span class=\"n\">RawVec</span><span class=\"cp\">$LT$T$C$A$GT$</span><span class=\"p\">::</span><span class=\"n\">reserve</span><span class=\"p\">::</span><span class=\"n\">do_reserve_and_handle</span><span class=\"p\">::</span><span class=\"n\">hbed38fde89062790</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"mh\">0x0000000000500a88</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">::</span><span class=\"n\">raw_vec</span><span class=\"p\">::</span><span class=\"n\">RawVec</span><span class=\"cp\">$LT$T$C$A$GT$</span><span class=\"p\">::</span><span class=\"n\">reserve</span><span class=\"p\">::</span><span class=\"n\">do_reserve_and_handle</span><span class=\"p\">::</span><span class=\"n\">h74d92f7758c8d10c</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">11</span><span class=\"w\"> </span><span class=\"mh\">0x00007f2b1838e523</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"mh\">0x0000000000000001</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"mh\">0x00000000010ca458</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">wasmtime_setjmp</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">14</span><span class=\"w\"> </span><span class=\"mh\">0x0000000000be58d8</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">wasmtime_runtime</span><span class=\"p\">::</span><span class=\"n\">traphandlers</span><span class=\"p\">::</span><span class=\"n\">catch_traps</span><span class=\"p\">::</span><span class=\"n\">hb97e20ad6ff5e857</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">15</span><span class=\"w\"> </span><span class=\"mh\">0x00000000012ceab4</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">func</span><span class=\"p\">::</span><span class=\"n\">invoke_wasm_and_catch_traps</span><span class=\"p\">::</span><span class=\"n\">h584ffbfdcda01e22</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">16</span><span class=\"w\"> </span><span class=\"mh\">0x00000000012d1bea</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">func</span><span class=\"p\">::</span><span class=\"n\">Func</span><span class=\"p\">::</span><span class=\"n\">call_impl</span><span class=\"p\">::</span><span class=\"n\">h84b60e01c03de7c5</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">17</span><span class=\"w\"> </span><span class=\"mh\">0x0000000000bea454</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">wasmtime_func_call</span><span class=\"w\"> </span><span class=\"p\">()</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit:  all versions</p>\n<p>Operating system:  Linuxmint 23</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Defined custom environment interfaces.</p>\n<ul>\n<li>uint32_t GetParameters(uint8_t** data_ptr);</li>\n<li>void CalcHash(const uint8_t* data, uint32_t data_size, array32 hash);</li>\n<li>int Call(const uint8_t* address, uint32_t address_size, const uint8_t* data, uint32_t data_size, uint8_t** output_ptr, uint32_t* output_length);</li>\n<li>void Revert(const uint8_t* reason, uint32_t size);<br>\n</li>\n</ul>\n</blockquote>",
        "id": 495222052,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737533883
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10072#issuecomment-2607603319\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10072\">issue #10072</a>:</p>\n<blockquote>\n<p>If you believe you have found a security issue in Wasmtime, such as segfault as you mention here in the runtime, please follow our guidelines for a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/SECURITY.md\">security report</a>. As-is this report presents a text-level wasm module with no reproduction steps. Given that it's not clear what the \"custom environment interfaces\" are doing or how to trigger this crash.</p>\n<p>You have attached a gdb backtrace but can you provide more info as to what it's doing? It looks corrupted for example as <code>0x0000000000000002</code> probably isn't a return pointer. How did you trigger this crash?</p>\n<p>I'll also note that in the backtrace there are symbols such as <code>wasmtime_setjmp</code>. Can you confirm what version of Wasmtime you're using? For quite awhile now wasmtime has put its own version number in this symbol name which looks like you're using a pretty old version of Wasmtime which may have since received a bug fix. You claim that this issue affects \"all versions\"  of Wasmtime but can you expand why you think that's the case?</p>\n<p>I'll note though that if you believe you have found a security issue please follow our guidelines for a security report and we'll continue the conversation there. The questions I'm presenting here are the same questions we'll ask you on the security report, but in such a situation it's best to conduct such communication in a non-public place initially.</p>\n</blockquote>",
        "id": 495314736,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737560886
    },
    {
        "content": "<p>pchickey closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10072\">issue #10072</a>:</p>\n<blockquote>\n<p>Due to the wasm bytecode, segmentation fault occurred in wasmtime.</p>\n<p>Memory corruption: The wasm virtual machine's memory is accidentally changed or overwritten, causing unpredictable behavior and crashing.</p>\n<h3>Webassembly program code in wat format</h3>\n<p>The wasm program is generated by compiling C++ code with emscripten=3.0.0, </p>\n<p><a href=\"https://github.com/user-attachments/files/18501840/crosscall01.txt\">crosscall01.txt</a></p>\n<h3>call callEvm</h3>\n<p>The approximate stack information is as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">gdb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">bt</span>\n<span class=\"p\">#</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mh\">0x00007f2b1838c8c0</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mh\">0x000000000bf3b5a0</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"mh\">0x00000000ffffffff</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"mh\">0x00007f2af928e4e0</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"mh\">0x00007f2b18380440</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"mh\">0x00000000005009cc</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">::</span><span class=\"n\">raw_vec</span><span class=\"p\">::</span><span class=\"n\">RawVec</span><span class=\"cp\">$LT$T$C$A$GT$</span><span class=\"p\">::</span><span class=\"n\">reserve</span><span class=\"p\">::</span><span class=\"n\">do_reserve_and_handle</span><span class=\"p\">::</span><span class=\"n\">hbed38fde89062790</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"mh\">0x000000000b7d0640</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"mh\">0x000000000bf3b5a0</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"mh\">0x0000000000000002</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">9</span><span class=\"w\"> </span><span class=\"mh\">0x00000000005009c0</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">::</span><span class=\"n\">raw_vec</span><span class=\"p\">::</span><span class=\"n\">RawVec</span><span class=\"cp\">$LT$T$C$A$GT$</span><span class=\"p\">::</span><span class=\"n\">reserve</span><span class=\"p\">::</span><span class=\"n\">do_reserve_and_handle</span><span class=\"p\">::</span><span class=\"n\">hbed38fde89062790</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"mh\">0x0000000000500a88</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">alloc</span><span class=\"p\">::</span><span class=\"n\">raw_vec</span><span class=\"p\">::</span><span class=\"n\">RawVec</span><span class=\"cp\">$LT$T$C$A$GT$</span><span class=\"p\">::</span><span class=\"n\">reserve</span><span class=\"p\">::</span><span class=\"n\">do_reserve_and_handle</span><span class=\"p\">::</span><span class=\"n\">h74d92f7758c8d10c</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">11</span><span class=\"w\"> </span><span class=\"mh\">0x00007f2b1838e523</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"mh\">0x0000000000000001</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">??</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"mh\">0x00000000010ca458</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">wasmtime_setjmp</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">14</span><span class=\"w\"> </span><span class=\"mh\">0x0000000000be58d8</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">wasmtime_runtime</span><span class=\"p\">::</span><span class=\"n\">traphandlers</span><span class=\"p\">::</span><span class=\"n\">catch_traps</span><span class=\"p\">::</span><span class=\"n\">hb97e20ad6ff5e857</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">15</span><span class=\"w\"> </span><span class=\"mh\">0x00000000012ceab4</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">func</span><span class=\"p\">::</span><span class=\"n\">invoke_wasm_and_catch_traps</span><span class=\"p\">::</span><span class=\"n\">h584ffbfdcda01e22</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">16</span><span class=\"w\"> </span><span class=\"mh\">0x00000000012d1bea</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">func</span><span class=\"p\">::</span><span class=\"n\">Func</span><span class=\"p\">::</span><span class=\"n\">call_impl</span><span class=\"p\">::</span><span class=\"n\">h84b60e01c03de7c5</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"p\">#</span><span class=\"mi\">17</span><span class=\"w\"> </span><span class=\"mh\">0x0000000000bea454</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">wasmtime_func_call</span><span class=\"w\"> </span><span class=\"p\">()</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit:  all versions</p>\n<p>Operating system:  Linuxmint 23</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Defined custom environment interfaces.</p>\n<ul>\n<li>uint32_t GetParameters(uint8_t** data_ptr);</li>\n<li>void CalcHash(const uint8_t* data, uint32_t data_size, array32 hash);</li>\n<li>int Call(const uint8_t* address, uint32_t address_size, const uint8_t* data, uint32_t data_size, uint8_t** output_ptr, uint32_t* output_length);</li>\n<li>void Revert(const uint8_t* reason, uint32_t size);<br>\n</li>\n</ul>\n</blockquote>",
        "id": 495317868,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737561766
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10072#issuecomment-2607641045\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10072\">issue #10072</a>:</p>\n<blockquote>\n<p>It’s very generous of Alex to use his valuable time to list the many deficiencies in this report, but I think we can close this as AI generated spam and not waste any more time.</p>\n</blockquote>",
        "id": 495317872,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737561767
    }
]