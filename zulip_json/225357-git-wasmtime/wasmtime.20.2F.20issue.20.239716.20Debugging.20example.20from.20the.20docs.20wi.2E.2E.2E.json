[
    {
        "content": "<p><a href=\"https://github.com/bkolobara\">bkolobara</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716\">Issue #9716</a>.</p>",
        "id": 485899676,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733243914
    },
    {
        "content": "<p>bkolobara opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716\">issue #9716</a>:</p>\n<blockquote>\n<p>I'm trying to get the following example working inside of a debugger: <a href=\"https://docs.wasmtime.dev/examples-rust-debugging.html\">https://docs.wasmtime.dev/examples-rust-debugging.html</a>, but lldb can't read any of the local variables when a break point is triggered.</p>\n<h3>Test Case</h3>\n<p>The wasm file and executable are compiled directly from wasmtime examples.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">example</span><span class=\"o\">-</span><span class=\"n\">fib</span><span class=\"o\">-</span><span class=\"n\">debug</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">unknown</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">example</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"o\">-</span><span class=\"n\">debug</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Run the <code>fib-debug</code> executable inside lldb with the jit plugin enabled.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">lldb</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">examples</span><span class=\"o\">/</span><span class=\"n\">fib</span><span class=\"o\">-</span><span class=\"n\">debug</span>\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">create</span><span class=\"w\"> </span><span class=\"s\">\"./target/debug/examples/fib-debug\"</span>\n<span class=\"n\">Current</span><span class=\"w\"> </span><span class=\"n\">executable</span><span class=\"w\"> </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"o\">'/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">bkolobara</span><span class=\"o\">/</span><span class=\"n\">dev</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">examples</span><span class=\"o\">/</span><span class=\"n\">fib</span><span class=\"o\">-</span><span class=\"n\">debug</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">arm64</span><span class=\"p\">).</span>\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">settings</span><span class=\"w\"> </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">plugin</span><span class=\"p\">.</span><span class=\"n\">jit</span><span class=\"o\">-</span><span class=\"n\">loader</span><span class=\"p\">.</span><span class=\"n\">gdb</span><span class=\"p\">.</span><span class=\"n\">enable</span><span class=\"w\"> </span><span class=\"n\">on</span>\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">6</span>\n<span class=\"n\">Breakpoint</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">no</span><span class=\"w\"> </span><span class=\"n\">locations</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">pending</span><span class=\"p\">).</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"nc\">Unable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span><span class=\"w\"> </span><span class=\"n\">breakpoint</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">any</span><span class=\"w\"> </span><span class=\"n\">actual</span><span class=\"w\"> </span><span class=\"n\">locations</span><span class=\"p\">.</span>\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">r</span>\n<span class=\"n\">Process</span><span class=\"w\"> </span><span class=\"mi\">87206</span><span class=\"w\"> </span><span class=\"n\">launched</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">'/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">bkolobara</span><span class=\"o\">/</span><span class=\"n\">dev</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">examples</span><span class=\"o\">/</span><span class=\"n\">fib</span><span class=\"o\">-</span><span class=\"n\">debug</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">arm64</span><span class=\"p\">)</span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">location</span><span class=\"w\"> </span><span class=\"n\">added</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">breakpoint</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"n\">Process</span><span class=\"w\"> </span><span class=\"mi\">87206</span><span class=\"w\"> </span><span class=\"n\">stopped</span>\n\n<span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">queue</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">com</span><span class=\"p\">.</span><span class=\"n\">apple</span><span class=\"p\">.</span><span class=\"n\">main</span><span class=\"o\">-</span><span class=\"n\">thread</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">stop</span><span class=\"w\"> </span><span class=\"n\">reason</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">breakpoint</span><span class=\"w\"> </span><span class=\"mf\">1.1</span>\n<span class=\"w\">    </span><span class=\"n\">frame</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x00000001041381c4</span><span class=\"w\"> </span><span class=\"n\">JIT</span><span class=\"p\">(</span><span class=\"mh\">0x1381c8000</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"n\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">=&lt;</span><span class=\"n\">unavailable</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"mi\">17</span>\n<span class=\"w\">   </span><span class=\"mi\">3</span><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"mi\">4</span><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"mi\">5</span><span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">..</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\">            </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"mi\">7</span><span class=\"w\">            </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"mi\">8</span><span class=\"w\">            </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"mi\">9</span><span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"n\">Target</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fib</span><span class=\"o\">-</span><span class=\"n\">debug</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">stopped</span><span class=\"p\">.</span>\n<span class=\"n\">warning</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">This</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">LLDB</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">plugin</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">language</span><span class=\"w\"> </span><span class=\"s\">\"rust\"</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">Inspection</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">frame</span><span class=\"w\"> </span><span class=\"n\">variables</span><span class=\"w\"> </span><span class=\"n\">will</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">limited</span><span class=\"p\">.</span>\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">fr</span><span class=\"w\"> </span><span class=\"n\">v</span>\n<span class=\"p\">(</span><span class=\"n\">WasmtimeVMContext</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">__vmctx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">available</span><span class=\"o\">&gt;</span>\n\n<span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">read</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"mh\">0xffff8</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">read</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n\n<span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">location</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">optimized</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">&gt;</span>\n\n<span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">location</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">optimized</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">&gt;</span>\n\n<span class=\"p\">(</span><span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">ops</span><span class=\"p\">::</span><span class=\"n\">range</span><span class=\"p\">::</span><span class=\"n\">Range</span><span class=\"o\">&lt;</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">location</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">optimized</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">&gt;</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>Running <code>fr v</code> in lldb in this context should display the values of the variables:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n\n<span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">location</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">optimized</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">&gt;</span>\n\n<span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">location</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">optimized</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">&gt;</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 27.0</p>\n<p>Operating system: macOs Sequoia 15.1.1</p>\n<p>Architecture: Apple M1 Pro</p>\n<h3>Extra Info</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">lldb</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">version</span>\n<span class=\"n\">lldb</span><span class=\"o\">-</span><span class=\"mf\">1600.0.39.3</span>\n<span class=\"n\">Apple</span><span class=\"w\"> </span><span class=\"n\">Swift</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"mf\">6.0.2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">swiftlang</span><span class=\"o\">-</span><span class=\"mf\">6.0.2.1.2</span><span class=\"w\"> </span><span class=\"n\">clang</span><span class=\"o\">-</span><span class=\"mf\">1600.0.26.4</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>There was a similar issue #3884, but it was closed as fixed 2 years ago.</p>\n<p>I'm also aware that there is some work being done on improving the debug info translation in #5537.</p>\n</blockquote>",
        "id": 485899683,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733243915
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716#issuecomment-2517797910\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716\">issue #9716</a>:</p>\n<blockquote>\n<p>cc @SingleAccretion since you've been looking at the DWARF stuff recently would you happen to recognize this?</p>\n</blockquote>",
        "id": 486120642,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733326489
    },
    {
        "content": "<p>SingleAccretion <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716#issuecomment-2517830965\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716\">issue #9716</a>:</p>\n<blockquote>\n<blockquote>\n<p>would you happen to recognize this?</p>\n</blockquote>\n<p>Hmm, not immediately, considering this is trivial code at <code>-Oopt-level=0</code>. What is the Rust-&gt;WASM optimization level here?</p>\n<p>Generically, non-trivial examples do fall apart very easily because SSA+RA do not preserve everything, and Cranelift preservation of variable ranges is quite poor.</p>\n<p>The way to self-diagnose this is to look at the DWARF produced for WASM, check if <code>a</code> and <code>b</code> in it have reasonable ranges, then in LLDB do:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">image</span><span class=\"w\"> </span><span class=\"n\">lookup</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">verbose</span>\n</code></pre></div>\n<p>And check the coverage of the ranges that will be dumped.</p>\n</blockquote>",
        "id": 486123618,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733327239
    },
    {
        "content": "<p>SingleAccretion edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716#issuecomment-2517830965\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716\">issue #9716</a>:</p>\n<blockquote>\n<blockquote>\n<p>would you happen to recognize this?</p>\n</blockquote>\n<p>Hmm, not immediately, considering this is trivial code at <code>-Oopt-level=0</code>. What is the Rust-&gt;WASM optimization level here?</p>\n<p>Generically, non-trivial examples do fall apart very easily because SSA+RA do not preserve everything, and Cranelift preservation of variable ranges is quite poor.</p>\n<p>The way to self-diagnose this is to look at the DWARF produced for WASM, check if <code>a</code> and <code>b</code> in it have reasonable ranges, then in LLDB do:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">image</span><span class=\"w\"> </span><span class=\"n\">lookup</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">verbose</span>\n</code></pre></div>\n<p>And check the coverage for ranges that will be dumped.</p>\n</blockquote>",
        "id": 486123755,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733327283
    },
    {
        "content": "<p>SingleAccretion edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716#issuecomment-2517830965\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716\">issue #9716</a>:</p>\n<blockquote>\n<blockquote>\n<p>would you happen to recognize this?</p>\n</blockquote>\n<p>Hmm, not immediately, considering this is trivial code at <code>-Oopt-level=0</code>. What is the Rust-&gt;WASM optimization level here?</p>\n<p>Generically, non-trivial examples do fall apart very easily because SSA+RA do not preserve everything, and so Cranelift's preservation of variable ranges is quite poor.</p>\n<p>The way to self-diagnose this is to look at the DWARF produced for WASM, check if <code>a</code> and <code>b</code> in it have reasonable ranges, then in LLDB do:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">image</span><span class=\"w\"> </span><span class=\"n\">lookup</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">verbose</span>\n</code></pre></div>\n<p>And check the coverage for ranges that will be dumped.</p>\n</blockquote>",
        "id": 486125089,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733327658
    },
    {
        "content": "<p>bkolobara <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716#issuecomment-2518554631\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716\">issue #9716</a>:</p>\n<blockquote>\n<blockquote>\n<p>What is the Rust-&gt;WASM optimization level here?</p>\n</blockquote>\n<p>This uses a debug build of the <code>fib.rs</code> file, so <code>opt-level = 0</code>, with debug info included.</p>\n</blockquote>",
        "id": 486178464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733346173
    },
    {
        "content": "<p>SingleAccretion <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716#issuecomment-2725579301\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716\">issue #9716</a>:</p>\n<blockquote>\n<p>Using the recently added logging, we see:</p>\n<div class=\"codehilite\" data-code-language=\"Scala\"><pre><span></span><code><span class=\"o\">===</span><span class=\"w\"> </span><span class=\"nc\">Begin</span><span class=\"w\"> </span><span class=\"nc\">DIE</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"mh\">0x00000056</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">):</span>\n<span class=\"nc\">DW_TAG_variable</span>\n<span class=\"w\">  </span><span class=\"nc\">DW_AT_location</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"nc\">TODO</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">exprloc</span><span class=\"w\"> </span><span class=\"n\">dump</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"nc\">DW_AT_name</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"s\">\"a\"</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"nc\">DW_AT_decl_file</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mh\">0x00000001</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"nc\">DW_AT_decl_line</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"nc\">DW_AT_type</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mh\">0x000000a3</span><span class=\"p\">)</span>\n\n<span class=\"nc\">Building</span><span class=\"w\"> </span><span class=\"n\">ranges</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">values</span><span class=\"w\"> </span><span class=\"n\">in</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">72</span><span class=\"p\">.</span><span class=\"mf\">.214</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">239</span><span class=\"p\">.</span><span class=\"mf\">.343</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">0</span><span class=\"w\">   </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rdx</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">39</span><span class=\"p\">.</span><span class=\"mf\">.60</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">60</span><span class=\"p\">.</span><span class=\"mf\">.100</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">1</span><span class=\"w\">   </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbx</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">39</span><span class=\"p\">.</span><span class=\"mf\">.42</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">3</span><span class=\"w\">   </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbx</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">42</span><span class=\"p\">.</span><span class=\"mf\">.215</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbx</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">240</span><span class=\"p\">.</span><span class=\"mf\">.324</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">6</span><span class=\"w\">   </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rcx</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">89</span><span class=\"p\">.</span><span class=\"mf\">.100</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">8</span><span class=\"w\">   </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rdx</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">91</span><span class=\"p\">.</span><span class=\"mf\">.100</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">9</span><span class=\"w\">   </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">109</span><span class=\"p\">.</span><span class=\"mf\">.133</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">10</span><span class=\"w\">  </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">117</span><span class=\"p\">.</span><span class=\"mf\">.125</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">12</span><span class=\"w\">  </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rcx</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">137</span><span class=\"p\">.</span><span class=\"mf\">.149</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">13</span><span class=\"w\">  </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">158</span><span class=\"p\">.</span><span class=\"mf\">.184</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">14</span><span class=\"w\">  </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r9</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">167</span><span class=\"p\">.</span><span class=\"mf\">.175</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">15</span><span class=\"w\">  </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r10</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">193</span><span class=\"p\">.</span><span class=\"mf\">.198</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">16</span><span class=\"w\">  </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">211</span><span class=\"p\">.</span><span class=\"mf\">.222</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">18</span><span class=\"w\">  </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsi</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">215</span><span class=\"p\">.</span><span class=\"mf\">.218</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">19</span><span class=\"w\">  </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rcx</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">244</span><span class=\"p\">.</span><span class=\"mf\">.282</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">20</span><span class=\"w\">  </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rdx</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">260</span><span class=\"p\">.</span><span class=\"mf\">.268</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">21</span><span class=\"w\">  </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r9</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">277</span><span class=\"p\">.</span><span class=\"mf\">.286</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">22</span><span class=\"w\">  </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">282</span><span class=\"p\">.</span><span class=\"mf\">.314</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">23</span><span class=\"w\">  </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r9</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">293</span><span class=\"p\">.</span><span class=\"mf\">.297</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">25</span><span class=\"w\">  </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r9</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">297</span><span class=\"p\">.</span><span class=\"mf\">.301</span><span class=\"p\">)</span>\n<span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">26</span><span class=\"w\">  </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rdx</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">324</span><span class=\"p\">.</span><span class=\"mf\">.335</span><span class=\"p\">)</span>\n<span class=\"nc\">VMCTX</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">39</span><span class=\"p\">.</span><span class=\"mf\">.80</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsi</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">80</span><span class=\"p\">.</span><span class=\"mf\">.100</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r15</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"p\">.</span><span class=\"mf\">.222</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r15</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">240</span><span class=\"p\">.</span><span class=\"mf\">.335</span><span class=\"p\">)</span>\n<span class=\"nc\">Intersecting</span><span class=\"w\"> </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">3</span>\n<span class=\"nc\">Intersecting</span><span class=\"w\"> </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"nc\">VMCTX</span>\n<span class=\"nc\">Built</span><span class=\"w\"> </span><span class=\"n\">ranges</span><span class=\"p\">:</span>\n<span class=\"p\">[</span><span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"o\">%</span><span class=\"n\">rbx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nc\">VMCTX</span><span class=\"p\">:</span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"p\">]</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">72</span><span class=\"p\">.</span><span class=\"mf\">.80</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"o\">%</span><span class=\"n\">rbx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nc\">VMCTX</span><span class=\"p\">:</span><span class=\"o\">%</span><span class=\"n\">rsi</span><span class=\"p\">]</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">80</span><span class=\"p\">.</span><span class=\"mf\">.100</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"o\">%</span><span class=\"n\">rbx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nc\">VMCTX</span><span class=\"p\">:</span><span class=\"o\">%</span><span class=\"n\">r15</span><span class=\"p\">]</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"p\">.</span><span class=\"mf\">.214</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"nc\">VMCTX</span><span class=\"p\">:</span><span class=\"o\">%</span><span class=\"n\">r15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nc\">L</span><span class=\"n\">#</span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"o\">%</span><span class=\"n\">rbx</span><span class=\"p\">]</span><span class=\"o\">@</span><span class=\"p\">[</span><span class=\"mi\">240</span><span class=\"p\">.</span><span class=\"mf\">.324</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>In turn, in LLDB:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"err\">(</span><span class=\"nf\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"no\">v</span>\n<span class=\"err\">(</span><span class=\"nf\">WasmtimeVMContext</span><span class=\"w\"> </span><span class=\"p\">*)</span><span class=\"w\"> </span><span class=\"no\">__vmctx</span><span class=\"w\"> </span><span class=\"err\">=</span><span class=\"w\"> </span><span class=\"err\">&lt;</span><span class=\"no\">variable</span><span class=\"w\"> </span><span class=\"no\">not</span><span class=\"w\"> </span><span class=\"no\">available</span><span class=\"err\">&gt;</span>\n<span class=\"err\">(</span><span class=\"nf\">unsigned</span><span class=\"w\"> </span><span class=\"no\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"no\">n</span><span class=\"w\"> </span><span class=\"err\">=</span><span class=\"w\"> </span><span class=\"err\">&lt;</span><span class=\"no\">variable</span><span class=\"w\"> </span><span class=\"no\">not</span><span class=\"w\"> </span><span class=\"no\">available</span><span class=\"err\">&gt;</span>\n<span class=\"err\">(</span><span class=\"nf\">unsigned</span><span class=\"w\"> </span><span class=\"no\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"no\">a</span><span class=\"w\"> </span><span class=\"err\">=</span><span class=\"w\"> </span><span class=\"err\">&lt;</span><span class=\"no\">variable</span><span class=\"w\"> </span><span class=\"no\">not</span><span class=\"w\"> </span><span class=\"no\">available</span><span class=\"err\">&gt;</span>\n<span class=\"err\">(</span><span class=\"nf\">unsigned</span><span class=\"w\"> </span><span class=\"no\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"no\">b</span><span class=\"w\"> </span><span class=\"err\">=</span><span class=\"w\"> </span><span class=\"err\">&lt;</span><span class=\"no\">variable</span><span class=\"w\"> </span><span class=\"no\">not</span><span class=\"w\"> </span><span class=\"no\">available</span><span class=\"err\">&gt;</span>\n\n<span class=\"err\">(</span><span class=\"nf\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"no\">dis</span>\n<span class=\"nf\">JIT</span><span class=\"p\">(</span><span class=\"mi\">0x1787ebc3040</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"no\">fib</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"err\">0</span><span class=\"nf\">x1787e0a10d9</span><span class=\"w\"> </span><span class=\"err\">&lt;+</span><span class=\"mi\">217</span><span class=\"err\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\">    </span><span class=\"no\">dword</span><span class=\"w\"> </span><span class=\"no\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">r15</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x70</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"no\">esi</span>\n<span class=\"w\">    </span><span class=\"err\">0</span><span class=\"nf\">x1787e0a10dd</span><span class=\"w\"> </span><span class=\"err\">&lt;+</span><span class=\"mi\">221</span><span class=\"err\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\">    </span><span class=\"no\">rbx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">qword</span><span class=\"w\"> </span><span class=\"no\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"err\">0</span><span class=\"nf\">x1787e0a10e1</span><span class=\"w\"> </span><span class=\"err\">&lt;+</span><span class=\"mi\">225</span><span class=\"err\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\">    </span><span class=\"no\">r15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">qword</span><span class=\"w\"> </span><span class=\"no\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x8</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"err\">0</span><span class=\"nf\">x1787e0a10e6</span><span class=\"w\"> </span><span class=\"err\">&lt;+</span><span class=\"mi\">230</span><span class=\"err\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">add</span><span class=\"w\">    </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0x10</span>\n<span class=\"w\">    </span><span class=\"err\">0</span><span class=\"nf\">x1787e0a10ea</span><span class=\"w\"> </span><span class=\"err\">&lt;+</span><span class=\"mi\">234</span><span class=\"err\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\">    </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rbp</span>\n<span class=\"w\">    </span><span class=\"err\">0</span><span class=\"nf\">x1787e0a10ed</span><span class=\"w\"> </span><span class=\"err\">&lt;+</span><span class=\"mi\">237</span><span class=\"err\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">pop</span><span class=\"w\">    </span><span class=\"no\">rbp</span>\n<span class=\"w\">    </span><span class=\"err\">0</span><span class=\"nf\">x1787e0a10ee</span><span class=\"w\"> </span><span class=\"err\">&lt;+</span><span class=\"mi\">238</span><span class=\"err\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">ret</span>\n<span class=\"err\">-&gt;</span><span class=\"w\">  </span><span class=\"err\">0</span><span class=\"nf\">x1787e0a10ef</span><span class=\"w\"> </span><span class=\"err\">&lt;+</span><span class=\"mi\">239</span><span class=\"err\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\">    </span><span class=\"no\">rcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">qword</span><span class=\"w\"> </span><span class=\"no\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">r15</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x50</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"err\">0</span><span class=\"nf\">x1787e0a10f3</span><span class=\"w\"> </span><span class=\"err\">&lt;+</span><span class=\"mi\">243</span><span class=\"err\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\">    </span><span class=\"no\">ecx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">dword</span><span class=\"w\"> </span><span class=\"no\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rcx</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"no\">rbx</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x10</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"err\">0</span><span class=\"nf\">x1787e0a10f7</span><span class=\"w\"> </span><span class=\"err\">&lt;+</span><span class=\"mi\">247</span><span class=\"err\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\">    </span><span class=\"no\">rdx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">qword</span><span class=\"w\"> </span><span class=\"no\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">r15</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x50</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"err\">0</span><span class=\"nf\">x1787e0a10fb</span><span class=\"w\"> </span><span class=\"err\">&lt;+</span><span class=\"mi\">251</span><span class=\"err\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\">    </span><span class=\"no\">dword</span><span class=\"w\"> </span><span class=\"no\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rdx</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"no\">rbx</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x2c</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"no\">ecx</span>\n<span class=\"w\">    </span><span class=\"err\">0</span><span class=\"nf\">x1787e0a10ff</span><span class=\"w\"> </span><span class=\"err\">&lt;+</span><span class=\"mi\">255</span><span class=\"err\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\">    </span><span class=\"no\">rdx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">qword</span><span class=\"w\"> </span><span class=\"no\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">r15</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x50</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"err\">0</span><span class=\"nf\">x1787e0a1103</span><span class=\"w\"> </span><span class=\"err\">&lt;+</span><span class=\"mi\">259</span><span class=\"err\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\">    </span><span class=\"no\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">dword</span><span class=\"w\"> </span><span class=\"no\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rdx</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"no\">rbx</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x14</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"err\">0</span><span class=\"nf\">x1787e0a1107</span><span class=\"w\"> </span><span class=\"err\">&lt;+</span><span class=\"mi\">263</span><span class=\"err\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\">    </span><span class=\"no\">r8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">qword</span><span class=\"w\"> </span><span class=\"no\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">r15</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x50</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"err\">0</span><span class=\"nf\">x1787e0a110b</span><span class=\"w\"> </span><span class=\"err\">&lt;+</span><span class=\"mi\">267</span><span class=\"err\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\">    </span><span class=\"no\">dword</span><span class=\"w\"> </span><span class=\"no\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">r8</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"no\">rbx</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x10</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"no\">edx</span>\n<span class=\"w\">    </span><span class=\"err\">0</span><span class=\"nf\">x1787e0a1110</span><span class=\"w\"> </span><span class=\"err\">&lt;+</span><span class=\"mi\">272</span><span class=\"err\">&gt;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\">    </span><span class=\"no\">r8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">qword</span><span class=\"w\"> </span><span class=\"no\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">r15</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">0x50</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>This is an interesting problem with how the cranelift liveness ranges are reported. Before doing so, the PCs for both start and end are adjusted forward by one (see <a href=\"https://github.com/bytecodealliance/wasmtime/blob/6ad0840dd4df781dcf9e5fc07e90b5c37b6302ef/cranelift/codegen/src/machinst/vcode.rs#L1183-L1198\">here</a>).</p>\n<p>In this case, that means the position of <code>+239</code> is erroneously reported as outside the live range of <code>VMCTX</code> (<code>%r15@[240..335)</code>), which in turn causes the unavailability of <code>a</code>.</p>\n</blockquote>",
        "id": 505752817,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741980701
    },
    {
        "content": "<p>SingleAccretion <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716#issuecomment-2727603004\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716\">issue #9716</a>:</p>\n<blockquote>\n<p>The reason these ranges are adjusted is because in emit we have \"before PCs\", while the RA (in <code>regalloc.debug_locations</code>) uses \"after PC\"s:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">..</span><span class=\"p\">.][</span><span class=\"n\">Inst</span><span class=\"p\">][</span><span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">PC</span><span class=\"w\"> </span><span class=\"n\">after</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">PC</span><span class=\"w\"> </span><span class=\"n\">before</span>\n</code></pre></div>\n<p>In other words, if we have the following instruction stream:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">Inst0</span><span class=\"w\"> </span><span class=\"mi\">0x00</span><span class=\"w\"> </span><span class=\"no\">...</span>\n<span class=\"nf\">Inst1</span><span class=\"w\"> </span><span class=\"mi\">0x04</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"err\">&lt;</span><span class=\"no\">...</span><span class=\"err\">&gt;</span><span class=\"w\"> </span><span class=\"c1\">; L#1 = ...</span>\n<span class=\"nf\">Inst2</span><span class=\"w\"> </span><span class=\"mi\">0x08</span><span class=\"w\"> </span><span class=\"no\">use</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"w\"> </span><span class=\"c1\">; last use</span>\n<span class=\"nf\">Inst3</span><span class=\"w\"> </span><span class=\"mi\">0x12</span><span class=\"w\"> </span><span class=\"no\">...</span>\n</code></pre></div>\n<p>The RA will give us <code>L#1: %rax@[Inst1, Inst2)</code>, equivalent to <code>[0x08, 0x12)</code>, equivalent to <code>[0x08]</code>, equivalent to <code>[0x05, 0x09)</code> (how emit renders it).</p>\n<p>Considering this, the bug is due to how the RA-supplied range excludes <code>&lt;+239&gt;: mov    rcx, qword ptr [r15 + 0x50]</code>. For the <code>mov</code> example above, it is correct to exclude <code>PC: 0x04</code>, since at that point <code>rax</code> isn't defined yet. In our case, <code>r15</code> already has the right value.</p>\n<p>Possible fixes:<br>\n1) Make the RA report ranges such as the one for <code>r15</code>, where the start is not a def, as <code>[ret, ...)</code> - advancing one instruction before.<br>\n2) Change how the RA ranges are defined to be in terms of \"PC before\", and exclude the defining instructions from those ranges.</p>\n<p>I think in principle it would make for a \"less surprising\" contract to go with <code>2</code>, but that may be too intrusive a change (I haven't yet checked what the situation is like on the \"input\" side of RA for this).</p>\n<p>Separately, there should be a test verifying the start-adjust. If you just remove that +1 today, all of the tests pass.</p>\n</blockquote>",
        "id": 505987274,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742152583
    },
    {
        "content": "<p>SingleAccretion edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716#issuecomment-2727603004\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716\">issue #9716</a>:</p>\n<blockquote>\n<p>The reason these ranges are adjusted is because in emit we have \"before PCs\", while the RA/CL (in <code>debug_locations</code>) uses \"after PC\"s:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">..</span><span class=\"p\">.][</span><span class=\"n\">Inst</span><span class=\"p\">][</span><span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">PC</span><span class=\"w\"> </span><span class=\"n\">after</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">PC</span><span class=\"w\"> </span><span class=\"n\">before</span>\n</code></pre></div>\n<p>In other words, if we have the following instruction stream:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">Inst0</span><span class=\"w\"> </span><span class=\"mi\">0x00</span><span class=\"w\"> </span><span class=\"no\">...</span>\n<span class=\"nf\">Inst1</span><span class=\"w\"> </span><span class=\"mi\">0x04</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"err\">&lt;</span><span class=\"no\">...</span><span class=\"err\">&gt;</span><span class=\"w\"> </span><span class=\"c1\">; L#1 = ...</span>\n<span class=\"nf\">Inst2</span><span class=\"w\"> </span><span class=\"mi\">0x08</span><span class=\"w\"> </span><span class=\"no\">use</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"w\"> </span><span class=\"c1\">; last use</span>\n<span class=\"nf\">Inst3</span><span class=\"w\"> </span><span class=\"mi\">0x12</span><span class=\"w\"> </span><span class=\"no\">...</span>\n</code></pre></div>\n<p>RA/CL will give us <code>L#1: %rax@[Inst1, Inst2)</code>, equivalent to <code>[0x08, 0x12)</code>, equivalent to <code>[0x08]</code>, equivalent to <code>[0x05, 0x09)</code> (how emit renders it).</p>\n<p>Considering this, the bug is due to how the RA/CL-supplied range excludes <code>&lt;+239&gt;: mov    rcx, qword ptr [r15 + 0x50]</code>. For the <code>mov</code> example above, it is correct to exclude <code>PC: 0x04</code>, since at that point <code>rax</code> isn't defined yet. In our case, <code>r15</code> already has the right value.</p>\n<p>Possible fixes:<br>\n1) Make RA/CL report ranges such as the one for <code>r15</code>, where the start is not a def, as <code>[ret, ...)</code> - advancing one instruction before.<br>\n2) Change how RA/CL ranges are defined to be in terms of \"PC before\", and exclude the defining instructions from those ranges.</p>\n<p>In fact, there seems to be a good amount of confusion going on between the RA and CL. If you look at ranges are definitely RA-produces, they _exclude_ the def (are so are in effect using the \"PC before\" convention).</p>\n<p>Separately, there should be a test verifying the start-adjust. If you just remove that +1 today, all of the tests pass.</p>\n</blockquote>",
        "id": 505992916,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742156631
    },
    {
        "content": "<p>SingleAccretion edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716#issuecomment-2727603004\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716\">issue #9716</a>:</p>\n<blockquote>\n<p>The reason these ranges are adjusted is because in emit we have \"before PCs\", while the RA/CL (in <code>debug_locations</code>) uses \"after PC\"s:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">..</span><span class=\"p\">.][</span><span class=\"n\">Inst</span><span class=\"p\">][</span><span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">PC</span><span class=\"w\"> </span><span class=\"n\">after</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">PC</span><span class=\"w\"> </span><span class=\"n\">before</span>\n</code></pre></div>\n<p>In other words, if we have the following instruction stream:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">Inst0</span><span class=\"w\"> </span><span class=\"mi\">0x00</span><span class=\"w\"> </span><span class=\"no\">...</span>\n<span class=\"nf\">Inst1</span><span class=\"w\"> </span><span class=\"mi\">0x04</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"err\">&lt;</span><span class=\"no\">...</span><span class=\"err\">&gt;</span><span class=\"w\"> </span><span class=\"c1\">; L#1 = ...</span>\n<span class=\"nf\">Inst2</span><span class=\"w\"> </span><span class=\"mi\">0x08</span><span class=\"w\"> </span><span class=\"no\">use</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"w\"> </span><span class=\"c1\">; last use</span>\n<span class=\"nf\">Inst3</span><span class=\"w\"> </span><span class=\"mi\">0x12</span><span class=\"w\"> </span><span class=\"no\">...</span>\n</code></pre></div>\n<p>RA/CL will give us <code>L#1: %rax@[Inst1, Inst2)</code>, equivalent to <code>[0x08, 0x12)</code>, equivalent to <code>[0x08]</code>, equivalent to <code>[0x05, 0x09)</code> (how emit renders it).</p>\n<p>Considering this, the bug is due to how the RA/CL-supplied range excludes <code>&lt;+239&gt;: mov    rcx, qword ptr [r15 + 0x50]</code>. For the <code>mov</code> example above, it is correct to exclude <code>PC: 0x04</code>, since at that point <code>rax</code> isn't defined yet. In our case, <code>r15</code> already has the right value.</p>\n<p>Possible fixes:<br>\n1) Make RA/CL report ranges such as the one for <code>r15</code>, where the start is not a def, as <code>[ret, ...)</code> - advancing one instruction before.<br>\n2) Change how RA/CL ranges are defined to be in terms of \"PC before\", and exclude the defining instructions from those ranges.</p>\n<p>In fact, there seems to be a good amount of confusion going on between the RA and CL. If you look at the ranges that are definitely RA-produces, they _exclude_ the def (are so are in effect using the \"PC before\" convention).</p>\n<p>Separately, there should be a test verifying the start-adjust. If you just remove that +1 today, all of the tests pass.</p>\n</blockquote>",
        "id": 505992983,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742156658
    },
    {
        "content": "<p>SingleAccretion edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716#issuecomment-2727603004\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716\">issue #9716</a>:</p>\n<blockquote>\n<p>The reason these ranges are adjusted is because in emit we have \"before PCs\", while the RA/CL (in <code>debug_locations</code>) uses \"after PC\"s:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">..</span><span class=\"p\">.][</span><span class=\"n\">Inst</span><span class=\"p\">][</span><span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">PC</span><span class=\"w\"> </span><span class=\"n\">after</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">PC</span><span class=\"w\"> </span><span class=\"n\">before</span>\n</code></pre></div>\n<p>In other words, if we have the following instruction stream:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">Inst0</span><span class=\"w\"> </span><span class=\"mi\">0x00</span><span class=\"w\"> </span><span class=\"no\">...</span>\n<span class=\"nf\">Inst1</span><span class=\"w\"> </span><span class=\"mi\">0x04</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"err\">&lt;</span><span class=\"no\">...</span><span class=\"err\">&gt;</span><span class=\"w\"> </span><span class=\"c1\">; L#1 = ...</span>\n<span class=\"nf\">Inst2</span><span class=\"w\"> </span><span class=\"mi\">0x08</span><span class=\"w\"> </span><span class=\"no\">use</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"w\"> </span><span class=\"c1\">; last use</span>\n<span class=\"nf\">Inst3</span><span class=\"w\"> </span><span class=\"mi\">0x12</span><span class=\"w\"> </span><span class=\"no\">...</span>\n</code></pre></div>\n<p>RA/CL will give us <code>L#1: %rax@[Inst1, Inst2)</code>, equivalent to <code>[0x08, 0x12)</code>, equivalent to <code>[0x08]</code>, equivalent to <code>[0x05, 0x09)</code> (how emit renders it).</p>\n<p>Considering this, the bug is due to how the RA/CL-supplied range excludes <code>&lt;+239&gt;: mov    rcx, qword ptr [r15 + 0x50]</code>. For the <code>mov</code> example above, it is correct to exclude <code>PC: 0x04</code>, since at that point <code>rax</code> isn't defined yet. In our case, <code>r15</code> already has the right value.</p>\n<p>In fact, there seems to be a good amount of confusion going on between the RA and CL. If you look at the ranges that are definitely RA-produces, they _exclude_ the def (are so are in effect using the \"PC before\" convention).</p>\n<p>Separately, there should be a test verifying the start-adjust. If you just remove that +1 today, all of the tests pass.</p>\n</blockquote>",
        "id": 505993006,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742156675
    },
    {
        "content": "<p>SingleAccretion edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716#issuecomment-2727603004\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716\">issue #9716</a>:</p>\n<blockquote>\n<p>The reason these ranges are adjusted is because in emit we have \"before PCs\", while the RA/CL (in <code>debug_locations</code>) uses \"after PC\"s:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">..</span><span class=\"p\">.][</span><span class=\"n\">Inst</span><span class=\"p\">][</span><span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">PC</span><span class=\"w\"> </span><span class=\"n\">after</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">PC</span><span class=\"w\"> </span><span class=\"n\">before</span>\n</code></pre></div>\n<p>In other words, if we have the following instruction stream:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">Inst0</span><span class=\"w\"> </span><span class=\"mi\">0x00</span><span class=\"w\"> </span><span class=\"no\">...</span>\n<span class=\"nf\">Inst1</span><span class=\"w\"> </span><span class=\"mi\">0x04</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"err\">&lt;</span><span class=\"no\">...</span><span class=\"err\">&gt;</span><span class=\"w\"> </span><span class=\"c1\">; L#1 = ...</span>\n<span class=\"nf\">Inst2</span><span class=\"w\"> </span><span class=\"mi\">0x08</span><span class=\"w\"> </span><span class=\"no\">use</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"w\"> </span><span class=\"c1\">; last use</span>\n<span class=\"nf\">Inst3</span><span class=\"w\"> </span><span class=\"mi\">0x12</span><span class=\"w\"> </span><span class=\"no\">...</span>\n</code></pre></div>\n<p>RA/CL will give us <code>L#1: %rax@[Inst1, Inst2)</code>, equivalent to <code>[0x08, 0x12)</code>, equivalent to <code>[0x08]</code>, equivalent to <code>[0x05, 0x09)</code> (how emit renders it).</p>\n<p>Considering this, the bug is due to how the RA/CL-supplied range excludes <code>&lt;+239&gt;: mov    rcx, qword ptr [r15 + 0x50]</code>. For the <code>mov</code> example above, it is correct to exclude <code>PC: 0x04</code>, since at that point <code>rax</code> isn't defined yet. In our case, <code>r15</code> already has the right value.</p>\n<p>In fact, there seems to be a good amount of confusion going on between the RA and CL. If you look at the ranges that are definitely RA-produced, they _exclude_ the def (are so are in effect using the \"PC before\" convention).</p>\n<p>Separately, there should be a test verifying the start-adjust. If you just remove that +1 today, all of the tests pass.</p>\n</blockquote>",
        "id": 505993051,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742156705
    },
    {
        "content": "<p>SingleAccretion edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716#issuecomment-2727603004\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716\">issue #9716</a>:</p>\n<blockquote>\n<p>The reason these ranges are adjusted is because in emit we have \"before PCs\", while the RA/CL (in <code>debug_locations</code>) uses \"after PC\"s:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">..</span><span class=\"p\">.][</span><span class=\"n\">Inst</span><span class=\"p\">][</span><span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">PC</span><span class=\"w\"> </span><span class=\"n\">after</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">PC</span><span class=\"w\"> </span><span class=\"n\">before</span>\n</code></pre></div>\n<p>In other words, if we have the following instruction stream:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">Inst0</span><span class=\"w\"> </span><span class=\"mi\">0x00</span><span class=\"w\"> </span><span class=\"no\">...</span>\n<span class=\"nf\">Inst1</span><span class=\"w\"> </span><span class=\"mi\">0x04</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"err\">&lt;</span><span class=\"no\">...</span><span class=\"err\">&gt;</span><span class=\"w\"> </span><span class=\"c1\">; L#1 = ...</span>\n<span class=\"nf\">Inst2</span><span class=\"w\"> </span><span class=\"mi\">0x08</span><span class=\"w\"> </span><span class=\"no\">use</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"w\"> </span><span class=\"c1\">; last use</span>\n<span class=\"nf\">Inst3</span><span class=\"w\"> </span><span class=\"mi\">0x12</span><span class=\"w\"> </span><span class=\"no\">...</span>\n</code></pre></div>\n<p>RA/CL will give us <code>L#1: %rax@[Inst1, Inst2)</code>, equivalent to <code>[0x08, 0x12)</code>, equivalent to <code>[0x08]</code>, equivalent to <code>[0x05, 0x09)</code> (how emit renders it).</p>\n<p>Considering this, the bug is due to how the RA/CL-supplied range excludes <code>&lt;+239&gt;: mov    rcx, qword ptr [r15 + 0x50]</code>. For the <code>mov</code> example above, it is correct to exclude <code>PC: 0x04</code>, since at that point <code>rax</code> isn't defined yet. In our case, <code>r15</code> already has the right value.</p>\n<p>In fact, there seems to be a good amount of confusion going on between the RA and CL. If you look at the ranges that are definitely RA-produced, they _exclude_ the def (are so are in effect using the \"PC before\" convention).</p>\n<p>Separately, there should be a test verifying the start-adjust. If you just remove that +1 today, all of the tests pass.</p>\n<p>Another edit follows...</p>\n<p>I am becoming more and more convinced that the way value label ranges are tracked during emission (bound to the def, producing <code>[def...)</code>) is just not the right way to do this, they should be bound to the next instruction instead. It should be an easy enough change to make.</p>\n</blockquote>",
        "id": 506827570,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742418154
    },
    {
        "content": "<p>SingleAccretion edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716#issuecomment-2727603004\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716\">issue #9716</a>:</p>\n<blockquote>\n<p>The reason these ranges are adjusted is because in emit we have \"before PCs\", while the RA/CL (in <code>debug_locations</code>) uses \"after PC\"s:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">..</span><span class=\"p\">.][</span><span class=\"n\">Inst</span><span class=\"p\">][</span><span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">PC</span><span class=\"w\"> </span><span class=\"n\">after</span>\n<span class=\"w\">    </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">PC</span><span class=\"w\"> </span><span class=\"n\">before</span>\n</code></pre></div>\n<p>In other words, if we have the following instruction stream:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">Inst0</span><span class=\"w\"> </span><span class=\"mi\">0x00</span><span class=\"w\"> </span><span class=\"no\">...</span>\n<span class=\"nf\">Inst1</span><span class=\"w\"> </span><span class=\"mi\">0x04</span><span class=\"w\"> </span><span class=\"no\">mov</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"err\">&lt;</span><span class=\"no\">...</span><span class=\"err\">&gt;</span><span class=\"w\"> </span><span class=\"c1\">; L#1 = ...</span>\n<span class=\"nf\">Inst2</span><span class=\"w\"> </span><span class=\"mi\">0x08</span><span class=\"w\"> </span><span class=\"no\">use</span><span class=\"w\"> </span><span class=\"no\">rax</span><span class=\"w\"> </span><span class=\"c1\">; last use</span>\n<span class=\"nf\">Inst3</span><span class=\"w\"> </span><span class=\"mi\">0x12</span><span class=\"w\"> </span><span class=\"no\">...</span>\n</code></pre></div>\n<p>RA/CL will give us <code>L#1: %rax@[Inst1, Inst2)</code>, equivalent to <code>[0x08, 0x12)</code>, equivalent to <code>[0x08]</code>, equivalent to <code>[0x05, 0x09)</code> (how emit renders it).</p>\n<p>Considering this, the bug is due to how the RA/CL-supplied range excludes <code>&lt;+239&gt;: mov    rcx, qword ptr [r15 + 0x50]</code>. For the <code>mov</code> example above, it is correct to exclude <code>PC: 0x04</code>, since at that point <code>rax</code> isn't defined yet. In our case, <code>r15</code> already has the right value.</p>\n<p>In fact, there seems to be a good amount of confusion going on between the RA and CL. If you look at the ranges that are definitely RA-produced, they _exclude_ the def (are so are in effect using the \"PC before\" convention).</p>\n<p>Separately, there should be a test verifying the start-adjust. If you just remove that +1 today, all of the tests pass.</p>\n</blockquote>",
        "id": 507059348,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742499092
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9716\">issue #9716</a>:</p>\n<blockquote>\n<p>I'm trying to get the following example working inside of a debugger: <a href=\"https://docs.wasmtime.dev/examples-rust-debugging.html\">https://docs.wasmtime.dev/examples-rust-debugging.html</a>, but lldb can't read any of the local variables when a break point is triggered.</p>\n<h3>Test Case</h3>\n<p>The wasm file and executable are compiled directly from wasmtime examples.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">example</span><span class=\"o\">-</span><span class=\"n\">fib</span><span class=\"o\">-</span><span class=\"n\">debug</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">unknown</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">example</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"o\">-</span><span class=\"n\">debug</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Run the <code>fib-debug</code> executable inside lldb with the jit plugin enabled.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">lldb</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">examples</span><span class=\"o\">/</span><span class=\"n\">fib</span><span class=\"o\">-</span><span class=\"n\">debug</span>\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">create</span><span class=\"w\"> </span><span class=\"s\">\"./target/debug/examples/fib-debug\"</span>\n<span class=\"n\">Current</span><span class=\"w\"> </span><span class=\"n\">executable</span><span class=\"w\"> </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"o\">'/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">bkolobara</span><span class=\"o\">/</span><span class=\"n\">dev</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">examples</span><span class=\"o\">/</span><span class=\"n\">fib</span><span class=\"o\">-</span><span class=\"n\">debug</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">arm64</span><span class=\"p\">).</span>\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">settings</span><span class=\"w\"> </span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">plugin</span><span class=\"p\">.</span><span class=\"n\">jit</span><span class=\"o\">-</span><span class=\"n\">loader</span><span class=\"p\">.</span><span class=\"n\">gdb</span><span class=\"p\">.</span><span class=\"n\">enable</span><span class=\"w\"> </span><span class=\"n\">on</span>\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">6</span>\n<span class=\"n\">Breakpoint</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">no</span><span class=\"w\"> </span><span class=\"n\">locations</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">pending</span><span class=\"p\">).</span>\n<span class=\"n\">WARNING</span><span class=\"p\">:</span><span class=\"w\">  </span><span class=\"nc\">Unable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span><span class=\"w\"> </span><span class=\"n\">breakpoint</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">any</span><span class=\"w\"> </span><span class=\"n\">actual</span><span class=\"w\"> </span><span class=\"n\">locations</span><span class=\"p\">.</span>\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">r</span>\n<span class=\"n\">Process</span><span class=\"w\"> </span><span class=\"mi\">87206</span><span class=\"w\"> </span><span class=\"n\">launched</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">'/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">bkolobara</span><span class=\"o\">/</span><span class=\"n\">dev</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">examples</span><span class=\"o\">/</span><span class=\"n\">fib</span><span class=\"o\">-</span><span class=\"n\">debug</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">arm64</span><span class=\"p\">)</span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">location</span><span class=\"w\"> </span><span class=\"n\">added</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">breakpoint</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"n\">Process</span><span class=\"w\"> </span><span class=\"mi\">87206</span><span class=\"w\"> </span><span class=\"n\">stopped</span>\n\n<span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">queue</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">com</span><span class=\"p\">.</span><span class=\"n\">apple</span><span class=\"p\">.</span><span class=\"n\">main</span><span class=\"o\">-</span><span class=\"n\">thread</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">stop</span><span class=\"w\"> </span><span class=\"n\">reason</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">breakpoint</span><span class=\"w\"> </span><span class=\"mf\">1.1</span>\n<span class=\"w\">    </span><span class=\"n\">frame</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x00000001041381c4</span><span class=\"w\"> </span><span class=\"n\">JIT</span><span class=\"p\">(</span><span class=\"mh\">0x1381c8000</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"n\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">=&lt;</span><span class=\"n\">unavailable</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"mi\">17</span>\n<span class=\"w\">   </span><span class=\"mi\">3</span><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"mi\">4</span><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"mi\">5</span><span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">..</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\">            </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"mi\">7</span><span class=\"w\">            </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"mi\">8</span><span class=\"w\">            </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"mi\">9</span><span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"n\">Target</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fib</span><span class=\"o\">-</span><span class=\"n\">debug</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">stopped</span><span class=\"p\">.</span>\n<span class=\"n\">warning</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">This</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">LLDB</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">plugin</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">language</span><span class=\"w\"> </span><span class=\"s\">\"rust\"</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">Inspection</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">frame</span><span class=\"w\"> </span><span class=\"n\">variables</span><span class=\"w\"> </span><span class=\"n\">will</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">limited</span><span class=\"p\">.</span>\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">fr</span><span class=\"w\"> </span><span class=\"n\">v</span>\n<span class=\"p\">(</span><span class=\"n\">WasmtimeVMContext</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">__vmctx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">available</span><span class=\"o\">&gt;</span>\n\n<span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">read</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"mh\">0xffff8</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">read</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n\n<span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">location</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">optimized</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">&gt;</span>\n\n<span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">location</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">optimized</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">&gt;</span>\n\n<span class=\"p\">(</span><span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">ops</span><span class=\"p\">::</span><span class=\"n\">range</span><span class=\"p\">::</span><span class=\"n\">Range</span><span class=\"o\">&lt;</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">location</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">optimized</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">&gt;</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>Running <code>fr v</code> in lldb in this context should display the values of the variables:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n\n<span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">location</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">optimized</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">&gt;</span>\n\n<span class=\"p\">(</span><span class=\"n\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">location</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">optimized</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">&gt;</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 27.0</p>\n<p>Operating system: macOs Sequoia 15.1.1</p>\n<p>Architecture: Apple M1 Pro</p>\n<h3>Extra Info</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">lldb</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">version</span>\n<span class=\"n\">lldb</span><span class=\"o\">-</span><span class=\"mf\">1600.0.39.3</span>\n<span class=\"n\">Apple</span><span class=\"w\"> </span><span class=\"n\">Swift</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"mf\">6.0.2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">swiftlang</span><span class=\"o\">-</span><span class=\"mf\">6.0.2.1.2</span><span class=\"w\"> </span><span class=\"n\">clang</span><span class=\"o\">-</span><span class=\"mf\">1600.0.26.4</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>There was a similar issue #3884, but it was closed as fixed 2 years ago.</p>\n<p>I'm also aware that there is some work being done on improving the debug info translation in #5537.</p>\n</blockquote>",
        "id": 512409194,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744749407
    }
]