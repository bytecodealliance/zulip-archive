[
    {
        "content": "<p>bongjunj opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10277\">issue #10277</a>:</p>\n<blockquote>\n<p>Hi, I'm running the examples of crocus (<code>cranelift/isle/veri/veri_engine</code>).<br>\nThe doc says I can test crocus using the following command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>cargo<span class=\"w\"> </span>build<span class=\"w\"> </span>--package<span class=\"o\">=</span>veri_engine<span class=\"w\"> </span><span class=\"c1\"># build crocus</span>\n\npath/to/pcrocus<span class=\"w\"> </span>-i<span class=\"w\"> </span>cranelift/isle/veri/veri_engine/examples/mid-end/broken_bor_band_consts.isle<span class=\"w\"> </span>-t<span class=\"w\"> </span>simplify<span class=\"w\"> </span>--codegen<span class=\"w\"> </span>cranelift/codegen/<span class=\"w\"> </span>--x64\n</code></pre></div>\n<p>(I added <code>--x64</code> part since the error message tells me to do so)</p>\n<p>But it fails with the following error messages</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Writing</span><span class=\"w\"> </span><span class=\"n\">generated</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">llfuzz</span><span class=\"o\">/</span><span class=\"n\">transopt</span><span class=\"o\">-</span><span class=\"n\">experiment</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">output</span><span class=\"o\">/</span><span class=\"n\">clif_opt</span><span class=\"p\">.</span><span class=\"n\">isle</span>\n<span class=\"n\">Writing</span><span class=\"w\"> </span><span class=\"n\">generated</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">llfuzz</span><span class=\"o\">/</span><span class=\"n\">transopt</span><span class=\"o\">-</span><span class=\"n\">experiment</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">output</span><span class=\"o\">/</span><span class=\"n\">clif_lower</span><span class=\"p\">.</span><span class=\"n\">isle</span>\n<span class=\"n\">Missing</span><span class=\"w\"> </span><span class=\"n\">term</span><span class=\"w\"> </span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"nc\">instantiation</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">simplify</span>\n</code></pre></div>\n<p>But the input ISLE file does have instantiation for simplify.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// wasmtime/cranelift/isle/veri/veri_engine/examples/mid-end/broken_bor_band_consts.isle</span>\n<span class=\"c1\">// ...</span>\n\n<span class=\"p\">(</span><span class=\"n\">spec</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">simplify</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">provide</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">)))</span>\n<span class=\"p\">(</span><span class=\"n\">instantiate</span><span class=\"w\"> </span><span class=\"n\">simplify</span>\n<span class=\"w\">    </span><span class=\"p\">((</span><span class=\"n\">args</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bv</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bv</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">canon</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bv</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">)))</span>\n<span class=\"w\">    </span><span class=\"p\">((</span><span class=\"n\">args</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bv</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bv</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">canon</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bv</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"p\">)))</span>\n<span class=\"w\">    </span><span class=\"p\">((</span><span class=\"n\">args</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bv</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bv</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">canon</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bv</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"p\">)))</span>\n<span class=\"w\">    </span><span class=\"p\">((</span><span class=\"n\">args</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bv</span><span class=\"w\"> </span><span class=\"mi\">64</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bv</span><span class=\"w\"> </span><span class=\"mi\">64</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">canon</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bv</span><span class=\"w\"> </span><span class=\"mi\">64</span><span class=\"p\">)))</span>\n<span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">simplify</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Value</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Value</span><span class=\"p\">)</span>\n\n<span class=\"c1\">// ...</span>\n</code></pre></div>\n<p>I think the parsing part is not working for crocus.<br>\n</p>\n</blockquote>",
        "id": 501355754,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740303270
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10277#issuecomment-2677498942\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10277\">issue #10277</a>:</p>\n<blockquote>\n<p>cc @avanhatt or @mmcloughlin , any thoughts?</p>\n</blockquote>",
        "id": 501452914,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740376694
    },
    {
        "content": "<p>avanhatt <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10277#issuecomment-2683506128\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10277\">issue #10277</a>:</p>\n<blockquote>\n<p>Thanks for the report!</p>\n<p>Looks like there are 2 issues:</p>\n<ol>\n<li>The documentation should specify that for \"broken\" examples, you should pass <code>--noprelude</code> instead of e.g. <code>--x64</code>. This is because the broken examples include the necessary definitions without pulling in the x64/aarch64 preludes. In this case, the broken example is also from the midend, so no specific target architecture is relevant. I'll update the documentation to include this.</li>\n<li>It looks like maybe #9593 made a breaking change to the test file in changing ISLE's boolean representation, which we didn't catch because Crocus currently isn't running in CI on main in this repo. You can fix it by deleting the line <code>(extern const true bool)</code> from the file. </li>\n</ol>\n<p>After deleting that line, you should be able to run the following successfully to get the counterexample:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&lt;</span><span class=\"n\">crocus</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">isle</span><span class=\"o\">/</span><span class=\"n\">veri</span><span class=\"o\">/</span><span class=\"n\">veri_engine</span><span class=\"o\">/</span><span class=\"n\">examples</span><span class=\"o\">/</span><span class=\"n\">mid</span><span class=\"o\">-</span><span class=\"n\">end</span><span class=\"o\">/</span><span class=\"n\">broken_bor_band_consts</span><span class=\"p\">.</span><span class=\"n\">isle</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"n\">simplify</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">noprelude</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">codegen</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span>\n</code></pre></div>\n<p>I'll also put up a PR to fix this, but probably won't have time to get to that until later this week. Thanks!</p>\n</blockquote>",
        "id": 501927970,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740525434
    }
]