[
    {
        "content": "<p>liupeidong0620 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10323\">issue #10323</a>:</p>\n<blockquote>\n<h1>question</h1>\n<p>How to set --allow-precompiled in c-api? Then the cwasm program can run normally</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>wastime<span class=\"w\"> </span>c-api<span class=\"w\"> </span>version:<span class=\"w\"> </span>wasmtime-v30.0.2-aarch64-macos-c-api.tar.xz\n</code></pre></div>\n<h1>runing cwasm error</h1>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\"># build aot</span>\n$<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>compile<span class=\"w\"> </span>--target<span class=\"w\"> </span>aarch64-apple-darwin<span class=\"w\"> </span>bazel-bin/example/optimus_test.wasm<span class=\"w\"> </span>-o<span class=\"w\"> </span>optimus_test.cwasm\n\n$<span class=\"w\"> </span>./bazel-bin/example/run_wasm<span class=\"w\"> </span>~/liu-code/wasm/tendis_wasm_test/wasm_build_protobuf_3.17.3_lz4_hashmap_test/tendis_wasm_example/optimus_test.cwasm<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>./100181088_1.bin\nfailed<span class=\"w\"> </span>to<span class=\"w\"> </span>new<span class=\"w\"> </span>module:\nfailed<span class=\"w\"> </span>to<span class=\"w\"> </span>parse<span class=\"w\"> </span>WebAssembly<span class=\"w\"> </span>module\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span>magic<span class=\"w\"> </span>header<span class=\"w\"> </span>not<span class=\"w\"> </span>detected:<span class=\"w\"> </span>bad<span class=\"w\"> </span>magic<span class=\"w\"> </span>number<span class=\"w\"> </span>-<span class=\"w\"> </span><span class=\"nv\">expected</span><span class=\"o\">=[</span>\n<span class=\"w\">        </span>0x0,\n<span class=\"w\">        </span>0x61,\n<span class=\"w\">        </span>0x73,\n<span class=\"w\">        </span>0x6d,\n<span class=\"w\">    </span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"nv\">actual</span><span class=\"o\">=[</span>\n<span class=\"w\">        </span>0x7f,\n<span class=\"w\">        </span>0x45,\n<span class=\"w\">        </span>0x4c,\n<span class=\"w\">        </span>0x46,\n<span class=\"w\">    </span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">(</span>at<span class=\"w\"> </span>offset<span class=\"w\"> </span>0x0<span class=\"o\">)</span>\nSegmentation<span class=\"w\"> </span>fault:<span class=\"w\"> </span><span class=\"m\">11</span>\n\n<span class=\"c1\"># Running wasm program is normal</span>\n$<span class=\"w\"> </span>./bazel-bin/example/run_wasm<span class=\"w\"> </span>~/liu-code/wasm/tendis_wasm_test/wasm_build_protobuf_3.17.3_lz4_hashmap_test/tendis_wasm_example/bazel-bin/example/optimus_test.wasm<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>./100181088_1.bin\ndefine<span class=\"w\"> </span>wasm<span class=\"w\"> </span>host<span class=\"w\"> </span>API<span class=\"w\"> </span>tendis_get_buffer_bytes\ndefine<span class=\"w\"> </span>wasm<span class=\"w\"> </span>host<span class=\"w\"> </span>API<span class=\"w\"> </span>tendis_set_buffer_bytes\nloaded<span class=\"w\"> </span>wasm<span class=\"w\"> </span>plugin\ntest_dispatche_phase<span class=\"w\"> </span>ctx<span class=\"w\"> </span>id<span class=\"w\"> </span><span class=\"m\">0</span>\nwasmtime<span class=\"w\"> </span>call<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>tendis_wasm_dispatche_phase\ntendis_get_buffer_bytes<span class=\"w\"> </span>start<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start1<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start2<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start3<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\nwasmtime<span class=\"w\"> </span>call<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>malloc\nrun<span class=\"w\"> </span>wasm<span class=\"w\"> </span>malloc:<span class=\"w\"> </span><span class=\"m\">16</span><span class=\"w\"> </span>addr:152168\ntendis_get_buffer_bytes<span class=\"w\"> </span>start10<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:\ntendis_get_buffer_bytes<span class=\"w\"> </span>start<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start1<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start2<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start3<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\nwasmtime<span class=\"w\"> </span>call<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>malloc\nrun<span class=\"w\"> </span>wasm<span class=\"w\"> </span>malloc:<span class=\"w\"> </span><span class=\"m\">16</span><span class=\"w\"> </span>addr:152192\ntendis_get_buffer_bytes<span class=\"w\"> </span>start10<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:\ntest_dispatche_phase<span class=\"w\"> </span>result:\nwg<span class=\"w\"> </span><span class=\"nb\">wait</span><span class=\"w\"> </span>ok,<span class=\"w\"> </span>run<span class=\"w\"> </span>time:<span class=\"w\"> </span><span class=\"m\">0</span>.105<span class=\"w\"> </span>milliseconds\n</code></pre></div>\n</blockquote>",
        "id": 503217134,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741080236
    },
    {
        "content": "<p>liupeidong0620 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10323\">issue #10323</a>:</p>\n<blockquote>\n<h1>question</h1>\n<p>How to set --allow-precompiled in c-api? Then the cwasm program can run normally</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>wastime<span class=\"w\"> </span>c-api<span class=\"w\"> </span>version:<span class=\"w\"> </span>wasmtime-v30.0.2-aarch64-macos-c-api.tar.xz\n</code></pre></div>\n<h1>runing cwasm error</h1>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\"># build aot</span>\n$<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>compile<span class=\"w\"> </span>--target<span class=\"w\"> </span>aarch64-apple-darwin<span class=\"w\"> </span>bazel-bin/example/optimus_test.wasm<span class=\"w\"> </span>-o<span class=\"w\"> </span>optimus_test.cwasm\n\n<span class=\"c1\"># run cwasm error</span>\n$<span class=\"w\"> </span>./bazel-bin/example/run_wasm<span class=\"w\"> </span>~/liu-code/wasm/tendis_wasm_test/wasm_build_protobuf_3.17.3_lz4_hashmap_test/tendis_wasm_example/optimus_test.cwasm<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>./100181088_1.bin\nfailed<span class=\"w\"> </span>to<span class=\"w\"> </span>new<span class=\"w\"> </span>module:\nfailed<span class=\"w\"> </span>to<span class=\"w\"> </span>parse<span class=\"w\"> </span>WebAssembly<span class=\"w\"> </span>module\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span>magic<span class=\"w\"> </span>header<span class=\"w\"> </span>not<span class=\"w\"> </span>detected:<span class=\"w\"> </span>bad<span class=\"w\"> </span>magic<span class=\"w\"> </span>number<span class=\"w\"> </span>-<span class=\"w\"> </span><span class=\"nv\">expected</span><span class=\"o\">=[</span>\n<span class=\"w\">        </span>0x0,\n<span class=\"w\">        </span>0x61,\n<span class=\"w\">        </span>0x73,\n<span class=\"w\">        </span>0x6d,\n<span class=\"w\">    </span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"nv\">actual</span><span class=\"o\">=[</span>\n<span class=\"w\">        </span>0x7f,\n<span class=\"w\">        </span>0x45,\n<span class=\"w\">        </span>0x4c,\n<span class=\"w\">        </span>0x46,\n<span class=\"w\">    </span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">(</span>at<span class=\"w\"> </span>offset<span class=\"w\"> </span>0x0<span class=\"o\">)</span>\nSegmentation<span class=\"w\"> </span>fault:<span class=\"w\"> </span><span class=\"m\">11</span>\n\n<span class=\"c1\"># Running wasm program is normal</span>\n$<span class=\"w\"> </span>./bazel-bin/example/run_wasm<span class=\"w\"> </span>~/liu-code/wasm/tendis_wasm_test/wasm_build_protobuf_3.17.3_lz4_hashmap_test/tendis_wasm_example/bazel-bin/example/optimus_test.wasm<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>./100181088_1.bin\ndefine<span class=\"w\"> </span>wasm<span class=\"w\"> </span>host<span class=\"w\"> </span>API<span class=\"w\"> </span>tendis_get_buffer_bytes\ndefine<span class=\"w\"> </span>wasm<span class=\"w\"> </span>host<span class=\"w\"> </span>API<span class=\"w\"> </span>tendis_set_buffer_bytes\nloaded<span class=\"w\"> </span>wasm<span class=\"w\"> </span>plugin\ntest_dispatche_phase<span class=\"w\"> </span>ctx<span class=\"w\"> </span>id<span class=\"w\"> </span><span class=\"m\">0</span>\nwasmtime<span class=\"w\"> </span>call<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>tendis_wasm_dispatche_phase\ntendis_get_buffer_bytes<span class=\"w\"> </span>start<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start1<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start2<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start3<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\nwasmtime<span class=\"w\"> </span>call<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>malloc\nrun<span class=\"w\"> </span>wasm<span class=\"w\"> </span>malloc:<span class=\"w\"> </span><span class=\"m\">16</span><span class=\"w\"> </span>addr:152168\ntendis_get_buffer_bytes<span class=\"w\"> </span>start10<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:\ntendis_get_buffer_bytes<span class=\"w\"> </span>start<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start1<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start2<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start3<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\nwasmtime<span class=\"w\"> </span>call<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>malloc\nrun<span class=\"w\"> </span>wasm<span class=\"w\"> </span>malloc:<span class=\"w\"> </span><span class=\"m\">16</span><span class=\"w\"> </span>addr:152192\ntendis_get_buffer_bytes<span class=\"w\"> </span>start10<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:\ntest_dispatche_phase<span class=\"w\"> </span>result:\nwg<span class=\"w\"> </span><span class=\"nb\">wait</span><span class=\"w\"> </span>ok,<span class=\"w\"> </span>run<span class=\"w\"> </span>time:<span class=\"w\"> </span><span class=\"m\">0</span>.105<span class=\"w\"> </span>milliseconds\n</code></pre></div>\n</blockquote>",
        "id": 503217345,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741080292
    },
    {
        "content": "<p>liupeidong0620 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10323#issuecomment-2696807195\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10323\">issue #10323</a>:</p>\n<blockquote>\n<p>The Wasmtime library is capable of running AOT programs compiled with wasmedgec.</p>\n</blockquote>",
        "id": 503218671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741080644
    },
    {
        "content": "<p>liupeidong0620 deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10323#issuecomment-2696807195\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10323\">issue #10323</a>:</p>\n<blockquote>\n<p>The Wasmtime library is capable of running AOT programs compiled with wasmedgec.</p>\n</blockquote>",
        "id": 503218736,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741080664
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10323#issuecomment-2696851106\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10323\">issue #10323</a>:</p>\n<blockquote>\n<p>Instead of <code>wasmtime_module_new</code> you have to use <code>wasmtime_module_deserialize</code> to load a precompiled module.</p>\n</blockquote>",
        "id": 503221528,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741081444
    },
    {
        "content": "<p>liupeidong0620 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10323#issuecomment-2697065523\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10323\">issue #10323</a>:</p>\n<blockquote>\n<blockquote>\n<p>wasmtime_module_deserialize</p>\n</blockquote>\n<p>Thanks</p>\n</blockquote>",
        "id": 503235196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741085499
    },
    {
        "content": "<p>liupeidong0620 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10323\">issue #10323</a>:</p>\n<blockquote>\n<h1>question</h1>\n<p>How to set --allow-precompiled in c-api? Then the cwasm program can run normally</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>wastime<span class=\"w\"> </span>c-api<span class=\"w\"> </span>version:<span class=\"w\"> </span>wasmtime-v30.0.2-aarch64-macos-c-api.tar.xz\n</code></pre></div>\n<h1>runing cwasm error</h1>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\"># build aot</span>\n$<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>compile<span class=\"w\"> </span>--target<span class=\"w\"> </span>aarch64-apple-darwin<span class=\"w\"> </span>bazel-bin/example/optimus_test.wasm<span class=\"w\"> </span>-o<span class=\"w\"> </span>optimus_test.cwasm\n\n<span class=\"c1\"># run cwasm error</span>\n$<span class=\"w\"> </span>./bazel-bin/example/run_wasm<span class=\"w\"> </span>~/liu-code/wasm/tendis_wasm_test/wasm_build_protobuf_3.17.3_lz4_hashmap_test/tendis_wasm_example/optimus_test.cwasm<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>./100181088_1.bin\nfailed<span class=\"w\"> </span>to<span class=\"w\"> </span>new<span class=\"w\"> </span>module:\nfailed<span class=\"w\"> </span>to<span class=\"w\"> </span>parse<span class=\"w\"> </span>WebAssembly<span class=\"w\"> </span>module\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span>magic<span class=\"w\"> </span>header<span class=\"w\"> </span>not<span class=\"w\"> </span>detected:<span class=\"w\"> </span>bad<span class=\"w\"> </span>magic<span class=\"w\"> </span>number<span class=\"w\"> </span>-<span class=\"w\"> </span><span class=\"nv\">expected</span><span class=\"o\">=[</span>\n<span class=\"w\">        </span>0x0,\n<span class=\"w\">        </span>0x61,\n<span class=\"w\">        </span>0x73,\n<span class=\"w\">        </span>0x6d,\n<span class=\"w\">    </span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"nv\">actual</span><span class=\"o\">=[</span>\n<span class=\"w\">        </span>0x7f,\n<span class=\"w\">        </span>0x45,\n<span class=\"w\">        </span>0x4c,\n<span class=\"w\">        </span>0x46,\n<span class=\"w\">    </span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">(</span>at<span class=\"w\"> </span>offset<span class=\"w\"> </span>0x0<span class=\"o\">)</span>\nSegmentation<span class=\"w\"> </span>fault:<span class=\"w\"> </span><span class=\"m\">11</span>\n\n<span class=\"c1\"># Running wasm program is normal</span>\n$<span class=\"w\"> </span>./bazel-bin/example/run_wasm<span class=\"w\"> </span>~/liu-code/wasm/tendis_wasm_test/wasm_build_protobuf_3.17.3_lz4_hashmap_test/tendis_wasm_example/bazel-bin/example/optimus_test.wasm<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>./100181088_1.bin\ndefine<span class=\"w\"> </span>wasm<span class=\"w\"> </span>host<span class=\"w\"> </span>API<span class=\"w\"> </span>tendis_get_buffer_bytes\ndefine<span class=\"w\"> </span>wasm<span class=\"w\"> </span>host<span class=\"w\"> </span>API<span class=\"w\"> </span>tendis_set_buffer_bytes\nloaded<span class=\"w\"> </span>wasm<span class=\"w\"> </span>plugin\ntest_dispatche_phase<span class=\"w\"> </span>ctx<span class=\"w\"> </span>id<span class=\"w\"> </span><span class=\"m\">0</span>\nwasmtime<span class=\"w\"> </span>call<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>tendis_wasm_dispatche_phase\ntendis_get_buffer_bytes<span class=\"w\"> </span>start<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start1<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start2<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start3<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\nwasmtime<span class=\"w\"> </span>call<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>malloc\nrun<span class=\"w\"> </span>wasm<span class=\"w\"> </span>malloc:<span class=\"w\"> </span><span class=\"m\">16</span><span class=\"w\"> </span>addr:152168\ntendis_get_buffer_bytes<span class=\"w\"> </span>start10<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:\ntendis_get_buffer_bytes<span class=\"w\"> </span>start<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start1<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start2<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\ntendis_get_buffer_bytes<span class=\"w\"> </span>start3<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:<span class=\"w\"> </span><span class=\"m\">0</span>\nwasmtime<span class=\"w\"> </span>call<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>malloc\nrun<span class=\"w\"> </span>wasm<span class=\"w\"> </span>malloc:<span class=\"w\"> </span><span class=\"m\">16</span><span class=\"w\"> </span>addr:152192\ntendis_get_buffer_bytes<span class=\"w\"> </span>start10<span class=\"w\"> </span>...,<span class=\"w\"> </span>ctx_id:\ntest_dispatche_phase<span class=\"w\"> </span>result:\nwg<span class=\"w\"> </span><span class=\"nb\">wait</span><span class=\"w\"> </span>ok,<span class=\"w\"> </span>run<span class=\"w\"> </span>time:<span class=\"w\"> </span><span class=\"m\">0</span>.105<span class=\"w\"> </span>milliseconds\n</code></pre></div>\n</blockquote>",
        "id": 503235201,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741085501
    },
    {
        "content": "<p>liupeidong0620 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10323#issuecomment-2697065523\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10323\">issue #10323</a>:</p>\n<blockquote>\n<p>Thanks</p>\n</blockquote>",
        "id": 503235336,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741085534
    }
]