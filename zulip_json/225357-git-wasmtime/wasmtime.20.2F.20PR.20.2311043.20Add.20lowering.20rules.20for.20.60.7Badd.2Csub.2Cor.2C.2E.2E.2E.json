[
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043\">PR #11043</a>.</p>",
        "id": 524029535,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749860299
    },
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043\">PR #11043</a> from <code>fitzgen:x64-op-mem-imm</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 524029536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749860299
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043\">PR #11043</a>.</p>",
        "id": 524029537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749860299
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043\">PR #11043</a>.</p>",
        "id": 524029538,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749860299
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043\">PR #11043</a>.</p>",
        "id": 524029539,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749860300
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043\">PR #11043</a>.</p>",
        "id": 524030945,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749861868
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043\">PR #11043</a>.</p>",
        "id": 524032638,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749864232
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#pullrequestreview-2928845018\">PR review</a>:</p>\n<blockquote>\n<p>What do you think about blocking on the suggestion below to clean up <code>lower.isle</code>?</p>\n<p>Also other instructions that might be interesting to add are <code>xor</code> (probably easy) and shifts (maybe harder? unsure)</p>\n</blockquote>",
        "id": 524088005,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749935365
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#discussion_r2147333213\">PR review comment</a>:</p>\n<blockquote>\n<p>A possible alternative: what about:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">x64_or_mem</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Amode</span><span class=\"w\"> </span><span class=\"n\">Value</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">SideEffectNoResult</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>The type could be inferred from the value, and that would also enable dispatching internally based on iconst-or-not to all the various rules. That way we additionally wouldn't need any new rules in <code>lower.isle</code> and would reduce the duplication there.</p>\n</blockquote>",
        "id": 524088006,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749935365
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043\">PR #11043</a>.</p>",
        "id": 524290015,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750090519
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#pullrequestreview-2932748163\">PR review</a>.</p>",
        "id": 524290109,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750090548
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#discussion_r2150387525\">PR review comment</a>:</p>\n<blockquote>\n<p>Done! Please take another look</p>\n</blockquote>",
        "id": 524290110,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750090548
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#discussion_r2150512652\">PR review comment</a>:</p>\n<blockquote>\n<p>This could replace <code>i64_from_iconst</code> with <code>i32_from_iconst</code> to avoid the <code>if-let</code> </p>\n</blockquote>",
        "id": 524304299,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750095367
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#pullrequestreview-2932942534\">PR review</a>.</p>",
        "id": 524304301,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750095367
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#discussion_r2150517002\">PR review comment</a>:</p>\n<blockquote>\n<p>Personally I'm always wary to discard the lower bits with <code>as</code> in lowering rules lest they accidentally get removed. Given that <code>iconst</code> extraction is generally signed could the above rules do <code>(i16_from_iconst imm)</code> and then the immediate to the instruction is <code>(i16_as_u16 imm)</code> to be clear that there's no data loss it's just reinterpreting the sign bit?</p>\n</blockquote>",
        "id": 524304302,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750095367
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#discussion_r2150513717\">PR review comment</a>:</p>\n<blockquote>\n<p>Would it make sense to add <code>i8_from_iconst</code> to make these two cases one-liners too?</p>\n</blockquote>",
        "id": 524304303,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750095367
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#pullrequestreview-2933039075\">PR review</a>.</p>",
        "id": 524310032,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750097206
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#discussion_r2150567276\">PR review comment</a>:</p>\n<blockquote>\n<p>We can't do that because <code>i32_from_const</code> will unconditionally truncate upper bits, but we need to only match this rule when the <code>iconst</code> bits will losslessly fit in an <code>i32</code>.</p>\n</blockquote>",
        "id": 524310034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750097206
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#pullrequestreview-2933040194\">PR review</a>.</p>",
        "id": 524310090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750097238
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#discussion_r2150568078\">PR review comment</a>:</p>\n<blockquote>\n<p>Similarly, this also needs to be fallible</p>\n</blockquote>",
        "id": 524310092,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750097238
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#discussion_r2150572994\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think that's correct? The definition of <code>i32_from_iconst</code> uses <code>try_from</code>? (it very much should or we have a lot of incorrect lowering rules)</p>\n</blockquote>",
        "id": 524310552,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750097439
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#pullrequestreview-2933049558\">PR review</a>.</p>",
        "id": 524310553,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750097439
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#pullrequestreview-2933063139\">PR review</a>.</p>",
        "id": 524311280,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750097729
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#discussion_r2150580281\">PR review comment</a>:</p>\n<blockquote>\n<p>There is no <code>i16_from_iconst</code> and this is only used to implement <code>u16_from_iconst</code> and our existing <code>foo_from_iconst</code> extractors (such as <code>u32_from_iconst</code>) already use lossy <code>as</code> conversions and bring the assumption that the caller is choosing a value based on the correct width for their type context.</p>\n<p>I don't think that is really the correct choice, but I also don't want to do something different and make it so we have multiple idioms here. We already have enough trouble from some things being extractors and some being pure partial constructors and not being able to reuse one kind of thing for the other. All of our <code>iconst</code> and numerics stuff could definitely be overhauled but, again, I don't really want to do it in this PR. I'd rather just follow the existing code conventions.</p>\n</blockquote>",
        "id": 524311282,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750097730
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#pullrequestreview-2933133883\">PR review</a>.</p>",
        "id": 524314340,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750099080
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#discussion_r2150623570\">PR review comment</a>:</p>\n<blockquote>\n<p><code>i32_from_iconst</code> seems to do the checks but then we have these other cases that do not:</p>\n<p><div class=\"codehilite\" data-code-language=\"Common Lisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">decl</span><span class=\"w\"> </span><span class=\"nv\">u32_from_iconst</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">u32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nv\">Value</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">extractor</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">u32_from_iconst</span><span class=\"w\"> </span><span class=\"nv\">x</span><span class=\"p\">)</span>\n<span class=\"w\">           </span><span class=\"p\">(</span><span class=\"nv\">u64_from_iconst</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">u64_as_u32</span><span class=\"w\"> </span><span class=\"nv\">x</span><span class=\"p\">)))</span>\n\n<span class=\"c1\">;; ...</span>\n\n<span class=\"p\">(</span><span class=\"nv\">decl</span><span class=\"w\"> </span><span class=\"nv\">i8_from_iconst</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">i8</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nv\">Value</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">extractor</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">i8_from_iconst</span><span class=\"w\"> </span><span class=\"nv\">x</span><span class=\"p\">)</span>\n<span class=\"w\">           </span><span class=\"p\">(</span><span class=\"nv\">i32_from_iconst</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">i32_as_i8</span><span class=\"w\"> </span><span class=\"nv\">x</span><span class=\"p\">)))</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 524314341,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750099080
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#pullrequestreview-2933135771\">PR review</a>.</p>",
        "id": 524314439,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750099123
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#discussion_r2150624723\">PR review comment</a>:</p>\n<blockquote>\n<p>So I guess this particular one can change, but I don't think we can blanket apply this reasoning to the other cases</p>\n</blockquote>",
        "id": 524314440,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750099123
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#issuecomment-2977785449\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043\">PR #11043</a>:</p>\n<blockquote>\n<p>Extracting a comment out here since it's not particularly relevant in isolation: I suppose this is fine to land and while on one hand it's not making things worse on the other hand it's also making things worse because it's adding more places to update with a future refactoring. I'll start working on such a refactoring as this is something that's bothered me for quite some time. If you'd like to land this in the meantime I think that's ok too.</p>\n</blockquote>",
        "id": 524318944,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750101163
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#issuecomment-2977799704\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043\">PR #11043</a>:</p>\n<blockquote>\n<p>I was thinking it would be nice to automatically generate the full combinatorial set of fallible, infallible, checked, and truncating ISLE conversions for numeric types in the meta crate</p>\n</blockquote>",
        "id": 524319428,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750101407
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043#issuecomment-2977800653\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043\">PR #11043</a>:</p>\n<blockquote>\n<p>But yeah, I'll land this now and then we can do the much needed clean up in follow ups.</p>\n</blockquote>",
        "id": 524319471,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750101430
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043\">PR #11043</a>.</p>",
        "id": 524321763,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750102561
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043\">PR #11043</a>.</p>",
        "id": 524321785,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750102568
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11043\">PR #11043</a>.</p>",
        "id": 524326374,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750104690
    }
]