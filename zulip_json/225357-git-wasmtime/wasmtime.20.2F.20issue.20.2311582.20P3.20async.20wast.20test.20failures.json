[
    {
        "content": "<p>lukewagner opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11582\">issue #11582</a>:</p>\n<blockquote>\n<p>The following two component-model async tests fail on the current (Sept 28) <code>dev</code> release:</p>\n<ol>\n<li><a href=\"https://github.com/WebAssembly/component-model/blob/2c17516179f99accdafb01d8e4affcc0f58184cc/test/async/cancel-subtask.wast\"><code>tests/async/cancel-subtask.wast</code></a></li>\n</ol>\n<p>The problem seems to be that the call to <code>waitable-set.wait</code> on line 51 which is defined without <code>cancellable</code> set (on line 64) returns the <code>TASK_CANCELLED</code> code (= 6) when <code>subtask.cancel</code> is called on line 144.  Instead, I believe that, since the subtask isn't cancellable, <code>subtask.cancel</code> should immediately return the <code>BLOCKED</code> code (= -1).</p>\n<ol start=\"2\">\n<li><a href=\"https://github.com/WebAssembly/component-model/blob/2c17516179f99accdafb01d8e4affcc0f58184cc/test/async/zero-length.wast\"><code>tests/async/zero-length.wast</code></a></li>\n</ol>\n<p>The problem seems to be that <code>$consume_cb</code> (defined on line 147) is called with <code>$event_code</code> = <code>STREAM_WRITE</code> (= 3) instead of the expected <code>STREAM_READ</code> (= 2) for the <code>stream.read</code> issued on line 139.  Additionally, the <code>$index</code> isn't <code>$insr</code> (= 2), which was passed to <code>stream.read</code>; it's <code>3</code>.  Maybe there's a mixup between the readable and writable ends here?</p>\n</blockquote>",
        "id": 537185367,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756771213
    },
    {
        "content": "<p><a href=\"https://github.com/lukewagner\">lukewagner</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11582\">Issue #11582</a>.</p>",
        "id": 537185368,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756771213
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasm-proposal:component-model-async label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11582\">Issue #11582</a>.</p>",
        "id": 537189441,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1756774030
    },
    {
        "content": "<p>alexcrichton assigned dicej to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11582\">issue #11582</a>.</p>",
        "id": 537769311,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757027925
    },
    {
        "content": "<p>dicej closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11582\">issue #11582</a>:</p>\n<blockquote>\n<p>The following two component-model async tests fail on the current (Sept 28) <code>dev</code> release:</p>\n<ol>\n<li><a href=\"https://github.com/WebAssembly/component-model/blob/2c17516179f99accdafb01d8e4affcc0f58184cc/test/async/cancel-subtask.wast\"><code>tests/async/cancel-subtask.wast</code></a></li>\n</ol>\n<p>The problem seems to be that the call to <code>waitable-set.wait</code> on line 51 which is defined without <code>cancellable</code> set (on line 64) returns the <code>TASK_CANCELLED</code> code (= 6) when <code>subtask.cancel</code> is called on line 144.  Instead, I believe that, since the subtask isn't cancellable, <code>subtask.cancel</code> should immediately return the <code>BLOCKED</code> code (= -1).</p>\n<ol start=\"2\">\n<li><a href=\"https://github.com/WebAssembly/component-model/blob/2c17516179f99accdafb01d8e4affcc0f58184cc/test/async/zero-length.wast\"><code>tests/async/zero-length.wast</code></a></li>\n</ol>\n<p>The problem seems to be that <code>$consume_cb</code> (defined on line 147) is called with <code>$event_code</code> = <code>STREAM_WRITE</code> (= 3) instead of the expected <code>STREAM_READ</code> (= 2) for the <code>stream.read</code> issued on line 139.  Additionally, the <code>$index</code> isn't <code>$insr</code> (= 2), which was passed to <code>stream.read</code>; it's <code>3</code>.  Maybe there's a mixup between the readable and writable ends here?</p>\n</blockquote>",
        "id": 538741554,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757539977
    },
    {
        "content": "<p>dicej <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11582#issuecomment-3276623834\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11582\">issue #11582</a>:</p>\n<blockquote>\n<p>The first failure is addressed by <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11671\">https://github.com/bytecodealliance/wasmtime/pull/11671</a> and the second one has apparently been fixed by some other change since this issue was opened <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> </p>\n</blockquote>",
        "id": 538741556,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757539978
    }
]