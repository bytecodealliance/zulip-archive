[
    {
        "content": "<p>pchickey opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10311\">PR #10311</a> from <code>bytecodealliance:pch/fix_10090</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>The calculation of TypeInfo only reaches types which are passed to or from a function. For types which are not reachable, default to the defining them according to the ownership setting given to bindgen.</p>\n<p>I have my doubts that <code>with</code>-reuse of bindgen types actually works properly when bindgen is set to Ownership::Borrowing but thats out of scope for this PR, which is to fix #10090</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 502637228,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740766054
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10311\">PR #10311</a>.</p>",
        "id": 502637230,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740766055
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10311\">PR #10311</a>.</p>",
        "id": 502637232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740766055
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10311\">PR #10311</a>:</p>\n<blockquote>\n<p>Rust type definitions for wit types are created for the set returned by <code>modes_of</code>, when an empty list is returned the type never gets a definition in Rust.</p>\n<p>The calculation of TypeInfo only reaches types which are passed to or from a function. For types which are not reachable, default to the defining them according to the ownership setting given to bindgen.</p>\n<p>I have my doubts that <code>with</code>-reuse of bindgen types actually works properly when bindgen is set to Ownership::Borrowing but thats out of scope for this PR, which is to fix #10090</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 502637508,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740766137
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10311#issuecomment-2691264513\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10311\">PR #10311</a>:</p>\n<blockquote>\n<p>ping @dicej, who last touched this logic in #6648 . Does this still work for your needs?</p>\n</blockquote>",
        "id": 502637876,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740766243
    },
    {
        "content": "<p>dicej <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10311#issuecomment-2691282837\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10311\">PR #10311</a>:</p>\n<blockquote>\n<blockquote>\n<p>ping @dicej, who last touched this logic in #6648 . Does this still work for your needs?</p>\n</blockquote>\n<p>#6648 Was motivated by fuzz testing the host bindings; the nested borrows we had before made generating arbitrary test cases really difficult, so I wanted to avoid that.  As long as the fuzz tests in this repo still work, then we're good <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 502639709,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740766863
    },
    {
        "content": "<p>dicej edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10311#issuecomment-2691282837\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10311\">PR #10311</a>:</p>\n<blockquote>\n<blockquote>\n<p>ping @dicej, who last touched this logic in #6648 . Does this still work for your needs?</p>\n</blockquote>\n<p>#6648 Was motivated by fuzz testing the host bindings and runtime component functionality; the nested borrows we had before made generating arbitrary test cases really difficult, so I wanted to avoid that.  As long as the fuzz tests in this repo still work, then we're good <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 502639831,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740766914
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10311\">PR #10311</a>.</p>",
        "id": 502645416,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740768729
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10311#pullrequestreview-2651560083\">PR review</a>:</p>\n<blockquote>\n<p>This logic is originally derivative of <a href=\"https://github.com/bytecodealliance/wit-bindgen/blob/e0d2b889411acf60738dcd976ed5373f7a81e651/crates/rust/src/interface.rs#L1927\">this logic in wit-bindgen for guests</a>, and while they were originally the same I think the guest has since moved on. IIRC that part of the guest bindings was extremely tricky and probably still isn't fully correct even today. I also think that there's various different concerns on the guest than there are for the host, which means we probably don't want them to be the exact same.</p>\n<p>Regardless though this seems reasonable to me. I'm not actually sure if it's correct so I'm mostly with Joel where if it compiles seems reasonable to me</p>\n</blockquote>",
        "id": 502646004,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740768934
    },
    {
        "content": "<p>pchickey has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10311\">PR #10311</a>.</p>",
        "id": 502647125,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740769287
    },
    {
        "content": "<p>pchickey merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10311\">PR #10311</a>.</p>",
        "id": 502651796,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740770933
    }
]