[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10289\">issue #10289</a>:</p>\n<blockquote>\n<p>First discovered in <a href=\"https://github.com/bytecodealliance/wasmtime-go/pull/241\">https://github.com/bytecodealliance/wasmtime-go/pull/241</a> which is one of the main users of MinGW builds (AFAIK Go doesn't have MSVC integration). I've bisected through Github Actions (couldn't do so locally) and discovered the following:</p>\n<ul>\n<li>Wasmtime is currently built with the github actions <code>windows-2022</code> runner which <a href=\"https://github.com/actions/runner-images/blob/main/images/windows/Windows2022-Readme.md\">uses gcc 12.2.0</a> from MinGW/MSYS2/something.</li>\n<li>When these precompiled artifacts are used in wasmtime-go in tests test can fail with exception 0xc0000028 which stands for <code>STATUS_BAD_STACK</code> (aka resurrection of <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1967\">https://github.com/bytecodealliance/wasmtime/issues/1967</a>)</li>\n<li>Bisection showed the following properties:<ul>\n<li>The faulty PR is <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9929\">https://github.com/bytecodealliance/wasmtime/pull/9929</a> (which in retrospect isn't too surprising)</li>\n<li>If the \"faulty PR\" is built with <code>windows-2025</code>, which uses gcc 14.2, then the bug does not happen.</li>\n</ul>\n</li>\n</ul>\n<p>So it looks like our workaround of <code>-D__USE_MINGW_SETJMP_NON_SEH</code>, used to fix <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9688#issuecomment-2502121814\">another bug</a> in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9688#issuecomment-2573367719\">MinGW gcc</a> is perhaps triggering some other bug in MinGW which is seemingly fixed with more recent GCC versions.</p>\n<p>Overall I personally wish we could just drop this target and not worry about it, but I'm unaware of how to integrate with Go on Windows any other way...</p>\n</blockquote>",
        "id": 501715715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740461112
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10289\">issue #10289</a>:</p>\n<blockquote>\n<p>First discovered in <a href=\"https://github.com/bytecodealliance/wasmtime-go/pull/241\">https://github.com/bytecodealliance/wasmtime-go/pull/241</a> which is one of the main users of MinGW builds (AFAIK Go doesn't have MSVC integration). I've bisected through Github Actions (couldn't do so locally) and discovered the following:</p>\n<ul>\n<li>Wasmtime is currently built with the github actions <code>windows-2022</code> runner which <a href=\"https://github.com/actions/runner-images/blob/main/images/windows/Windows2022-Readme.md\">uses gcc 12.2.0</a> from MinGW/MSYS2/something.</li>\n<li>When these precompiled artifacts are used in wasmtime-go in tests test can fail with exception 0xc0000028 which stands for <code>STATUS_BAD_STACK</code> (aka resurrection of <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1967\">https://github.com/bytecodealliance/wasmtime/issues/1967</a>)</li>\n<li>Bisection showed the following properties:<ul>\n<li>The faulty PR is <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9929\">https://github.com/bytecodealliance/wasmtime/pull/9929</a> (which in retrospect isn't too surprising)</li>\n<li>If the \"faulty PR\" is built with <code>windows-2025</code>, which uses gcc 14.2, then the bug does not happen.</li>\n</ul>\n</li>\n</ul>\n<p>So it looks like our workaround of <code>-D__USE_MINGW_SETJMP_NON_SEH</code>, used to fix <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9688#issuecomment-2502121814\">another bug</a> in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9688#issuecomment-2573367719\">MinGW gcc</a> is perhaps triggering some other bug in MinGW which is seemingly fixed with more recent GCC versions.</p>\n<p>Overall I personally wish we could just drop this target and not worry about it, but I'm unaware of how to integrate with Go on Windows any other way...</p>\n</blockquote>",
        "id": 501856653,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740502080
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10289#issuecomment-2682632940\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10289\">issue #10289</a>:</p>\n<blockquote>\n<p>Seems addressed by #10290, so closing.</p>\n</blockquote>",
        "id": 501856682,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740502082
    }
]