[
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10863\">PR #10863</a>.</p>",
        "id": 521135165,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748538433
    },
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10863\">PR #10863</a> from <code>cfallin:big-endian-is-just-too-big-for-some-cpus</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>At some point during the development of the Cranelift backend infrastructure, to properly support big-endian architectures such as s390x, we added explicit endianness flags to <code>MemFlags</code>, which are given to all memory operations (e.g., loads, stores, and atomic ops). In s390x in particular, the backend carefully observes these flags, because a prominent use of Cranelift (as a Wasm backend) requires explicit little-endian behavior and the system is big-endian. However, all of our other supported ISAs are little-endian and so we did not implement explicit checks at the time, instead accepting all loads and stores as an artifact of our little-endian-only origins.</p>\n<p>This PR adds explicit conditions to all ISLE rules that lower loads, stores, and atomic ops on x86-64, aarch64, and riscv64 to accept little or \"native\" (also little) endian operations only. Compilation of a big-endian operation will now result in a compilation error because no ISLE rule will match (no lowering exists). At some later point we could add these lowerings, but for now we at least do not miscompile.</p>\n<p>Fixes #10861.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 521135166,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748538433
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10863\">PR #10863</a>.</p>",
        "id": 521135167,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748538433
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10863#issuecomment-2920032712\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10863\">PR #10863</a>:</p>\n<blockquote>\n<p>(Note that the Pulley backend rules appear to have explicit consideration for endianness, so I skipped that backend here.)</p>\n</blockquote>",
        "id": 521135215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748538451
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10863#issuecomment-2920036635\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10863\">PR #10863</a>:</p>\n<blockquote>\n<p>Design note: I could have added checks to more central places in all three backends instead -- namely, <code>Amode</code> construction -- but opted instead to annotate every rule with this predicate, because the information logically belongs to the individual lowerings and if we want to add actual big-endian lowerings in the future, we'll want <code>Amode</code> to work for those too.</p>\n</blockquote>",
        "id": 521135431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748538542
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10863#pullrequestreview-2882264763\">PR review</a>.</p>",
        "id": 521355042,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748631596
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10863\">PR #10863</a>.</p>",
        "id": 521357983,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1748632839
    }
]