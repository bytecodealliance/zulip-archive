[
    {
        "content": "<p><strong>frank-emrich</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10265\">PR #10265</a>.</p>",
        "id": 500985901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740092428
    },
    {
        "content": "<p><strong>frank-emrich</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10265\">PR #10265</a>.</p>",
        "id": 500985903,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740092428
    },
    {
        "content": "<p>frank-emrich opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10265\">PR #10265</a> from <code>frank-emrich:vmcontext-layout</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This PR is part of a series that adds support for the <a href=\"https://github.com/WebAssembly/stack-switching\">Wasm stack switching proposal</a>. The explainer document for the proposal is <a href=\"https://github.com/WebAssembly/stack-switching/blob/main/proposals/stack-switching/Explainer.md\">here</a>. There's a tracking issue for the overall progress: #10248</p>\n<p>This particular PR does one small change: It adds a single pointer-sized field, called <code>stack_chain</code> to the fixed-width part of <code>VMContext</code>.<br>\nNote that this PR only adds the field in the layout of the <code>VMContext</code>, but does not actually read or write any data in that field. The reason for doing this change in a separate PR is simply that the change to the layout of the <code>VMContext</code> requires updates to 700 disas tests.</p>\n<p>In subsequent PRs, the field is used as follows: In the future, the <code>StoreOpaque</code> will contain a <code>stack_chain</code> field as well, which indicates the currently running continuation, and logically represents a linked list continuations.</p>\n<p>The <code>stack_chain</code> field in the <code>VMContext</code> added in this PR will merely be a pointer to that stack chain in the <code>StoreOpaque</code>. This is due to the fact that the stack chain is shared by all instances running inside a store, and we need access to the stack chain in the <code>StoreOpaque</code> from Cranelift-generated code. This is similar to how the <code>VMRuntimeLimits</code> are accessed.</p>\n</blockquote>",
        "id": 500985904,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740092428
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10265#pullrequestreview-2631396247\">PR review</a>.</p>",
        "id": 500987930,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740093288
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10265\">PR #10265</a>.</p>",
        "id": 500987939,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740093293
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10265\">PR #10265</a>.</p>",
        "id": 500990669,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740094603
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10265#issuecomment-2688899292\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10265\">PR #10265</a>:</p>\n<blockquote>\n<p>@frank-emrich </p>\n<blockquote>\n<p>The <code>stack_chain</code> field in the <code>VMContext</code> added in this PR will merely be a pointer to that stack chain in the <code>StoreOpaque</code>. This is due to the fact that the stack chain is shared by all instances running inside a store, and we need access to the stack chain in the <code>StoreOpaque</code> from Cranelift-generated code. This is similar to how the <code>VMRuntimeLimits</code> are accessed.</p>\n</blockquote>\n<p>Would it make sense to put the stack chain in the <code>VMRuntimeLimits</code> (which I have been meaning to rename to something like <code>VMStoreContext</code> for forever) rather than in <code>StoreOpaque</code>? That is generally the location where we put all shared-across-the-whole-store-and-accessed-by-JIT-code data (as opposed to instance-specific data that is accessed by JIT code, which goes in <code>VMContext</code>). There is no precedent, afaik, of JIT code directly accessing anything in <code>StoreOpaque</code> thus far, and I'd sort of like to keep it that way so that we have that clean separation between what is vs isn't accessed by JIT code and because <code>StoreOpaque</code> is not <code>repr(C)</code>.</p>\n<p>(Apologies for all these late comments, I've been at the CG and then on vacation and I'm just catching up now)</p>\n</blockquote>",
        "id": 502360829,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740684230
    },
    {
        "content": "<p>frank-emrich <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10265#issuecomment-2688915145\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10265\">PR #10265</a>:</p>\n<blockquote>\n<p>@fitzgen <br>\nI don't have strong feelings about this, but from what you describe it sounds like a good idea to move the stack chain there. It would also mean that the new field added in this PR can be removed again (its only purpose is to achieve being able to access that particular field in the <code>StoreOpaque</code> from jitted code. If we move the stack chain into the <code>VMRuntimeLimits</code>, we can just rely on the fact that we already got a pointer from the <code>VMContext</code> to the <code>VMRuntimeLimits</code>).</p>\n</blockquote>",
        "id": 502361774,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740684596
    }
]