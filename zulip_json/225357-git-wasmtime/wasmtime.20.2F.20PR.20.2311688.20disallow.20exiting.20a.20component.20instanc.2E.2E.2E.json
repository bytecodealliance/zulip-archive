[
    {
        "content": "<p><strong>dicej</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11688\">PR #11688</a>.</p>",
        "id": 538946100,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757626487
    },
    {
        "content": "<p>dicej opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11688\">PR #11688</a> from <code>dicej:fix-11676</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This is a relatively recent change to the spec.</p>\n<p>In order to check the <code>may_leave</code> flag in all the relevant intrinsics, I had to plumb the caller <code>RuntimeComponentInstanceIndex</code> through a bunch of trampolines that didn't previously need it, hence the large diff.</p>\n<p>Note that I've added a slightly tweaked version of <code>trap-in-post-return.wast</code> and left the upstream version disabled in <code>test-util/src/wast.rs</code> due to #11683.</p>\n<p>Fixes #11676.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 538946102,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757626487
    },
    {
        "content": "<p><strong>dicej</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11688\">PR #11688</a>.</p>",
        "id": 538946104,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757626488
    },
    {
        "content": "<p><strong>dicej</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11688\">PR #11688</a>.</p>",
        "id": 538946105,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757626488
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11688#pullrequestreview-3213728566\">PR review</a>.</p>",
        "id": 538947123,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757627089
    },
    {
        "content": "<p>dicej <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11688#issuecomment-3282775845\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11688\">PR #11688</a>:</p>\n<blockquote>\n<p>@alexcrichton One of the CI failures is due to a test that calls <code>resource.drop</code> from a <code>realloc</code> function <a href=\"https://github.com/bytecodealliance/wasmtime/blob/6a66b9a0b132e551cb4b36b4159baa413a7d8542/tests/all/component_model/resources.rs#L1333\">here</a>, which now traps because we now consider calling <code>resource.drop</code> to be leaving the component instance.  Should I update (or remove) that test, or do we need to make an exception in the spec for <code>resource.drop</code>?  I.e. is this a scenario that needs to work for some reason?</p>\n</blockquote>",
        "id": 538949248,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757628358
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11688#issuecomment-3282784886\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11688\">PR #11688</a>:</p>\n<blockquote>\n<p>I think we should preserve the high-level test of \"cannot call <code>resource.drop</code> when actively borrowed\" but you're right the test itself is now invalid because it fails for another reason.</p>\n<p>Thinking about this test though there's a few things:</p>\n<ul>\n<li>One way to rewrite the test would be to start an async call with a borrow, then call <code>resource.drop</code> while it's running. That should result in a trap.</li>\n<li>The test is quite old and probably predates <code>*.wast</code> support and this test looks like it should be a <code>*.wast</code> rather than a in-rust test.</li>\n<li>I don't want to block this or place too much on you, so if you'd prefer feel free to update the test to assert a new error message and I'll come back to pick this up later.</li>\n</ul>\n<p>Without async though I can't think of a valid way to call <code>resource.drop</code> while a borrow is active...</p>\n</blockquote>",
        "id": 538949657,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757628626
    },
    {
        "content": "<p>dicej <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11688#issuecomment-3282790071\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11688\">PR #11688</a>:</p>\n<blockquote>\n<p>Yeah, using async seems reasonable.  I'll see what I can do.</p>\n</blockquote>",
        "id": 538949850,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757628759
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11688\">PR #11688</a>.</p>",
        "id": 538954726,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757632229
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11688\">PR #11688</a>.</p>",
        "id": 538954817,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757632323
    },
    {
        "content": "<p>dicej has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11688\">PR #11688</a>.</p>",
        "id": 538954843,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757632342
    },
    {
        "content": "<p>dicej merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11688\">PR #11688</a>.</p>",
        "id": 538957689,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1757634597
    }
]