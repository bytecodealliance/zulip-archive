[
    {
        "content": "<p>venkkatesh-sekar opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344\">issue #10344</a>:</p>\n<blockquote>\n<p>Currently, Wasmtime's <a href=\"https://bytecodealliance.org/security#disclosure-policy\">security disclosure process</a> includes an announcement via the security mailing list upon a patch release, along with a corresponding GitHub security advisory published on the disclosure date. While this process is comprehensive, it does not account for users who rely on tools other than Dependabot PRs for automatic vulnerability detection.</p>\n<p>For instance, <code>cargo-audit</code> relies exclusively on the RUSTSEC <a href=\"https://github.com/rustsec/advisory-db\">advisory database</a> to flag vulnerabilities, which has become the preferred method for automated detection in Rust. Hence, could we start considering publishing RUSTSEC advisories alongside GitHub security advisories as part of the standard disclosure process.</p>\n</blockquote>",
        "id": 503786403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741265879
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344#issuecomment-2703796656\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344\">issue #10344</a>:</p>\n<blockquote>\n<p>The github security advisories db should import advisories from the rustsec db. As for the other way around I believe that is partially implemented but not actually running automatically yet. No clue about the current status of that work though.</p>\n</blockquote>",
        "id": 503787860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741266279
    },
    {
        "content": "<p>venkkatesh-sekar <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344#issuecomment-2703872282\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344\">issue #10344</a>:</p>\n<blockquote>\n<blockquote>\n<p>As for the other way around I believe that is partially implemented but not actually running automatically yet. No clue about the current status of that work though.<br>\nI see, that would be great and solve a lot of manual work. I was considering alternatives to <code>cargo-audit</code> and looks like <a href=\"https://github.com/google/osv-scanner\">osv-scanner</a> does combine both databases when scanning <code>Cargo.lock</code> files. </p>\n</blockquote>\n<p>OTOH, do you see any blockers for publishing RUSTSEC for wasmtime?</p>\n</blockquote>",
        "id": 503794701,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741268114
    },
    {
        "content": "<p>venkkatesh-sekar edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344#issuecomment-2703872282\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344\">issue #10344</a>:</p>\n<blockquote>\n<blockquote>\n<p>As for the other way around I believe that is partially implemented but not actually running automatically yet. No clue about the current status of that work though.</p>\n</blockquote>\n<p>I see, that would be great and solve a lot of manual work. I was considering alternatives to <code>cargo-audit</code> and looks like <a href=\"https://github.com/google/osv-scanner\">osv-scanner</a> does combine both databases when scanning <code>Cargo.lock</code> files. </p>\n<p>OTOH, do you see any blockers for publishing RUSTSEC for wasmtime?</p>\n</blockquote>",
        "id": 503794723,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741268122
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344#issuecomment-2703915895\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344\">issue #10344</a>:</p>\n<blockquote>\n<p>I'm not involved in the handling of Cranelift/Wasmtime security issues myself, so I don't know if there are any blockers.</p>\n</blockquote>",
        "id": 503798968,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741269193
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344#issuecomment-2704374606\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344\">issue #10344</a>:</p>\n<blockquote>\n<p>I've added this to our upcoming meeting agenda -- <a href=\"https://github.com/bytecodealliance/meetings/pull/557\">https://github.com/bytecodealliance/meetings/pull/557</a></p>\n<p>@bjorn3 would you happen to have a link to the work to auto-import to rustsec? I looked thorugh some existing advisories for Wasmtime in rustsec and it looks like they've all been manually imported so far, so I figured we'd probably have to keep doing that but if there's work to auto-import that'd also be neat.</p>\n</blockquote>",
        "id": 503840315,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741279289
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344#issuecomment-2704443022\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344\">issue #10344</a>:</p>\n<blockquote>\n<p>The discussion seems to be fragmented over a bunch of issues and PRs. One of them is <a href=\"https://github.com/rustsec/rustsec/pull/656\">https://github.com/rustsec/rustsec/pull/656</a>. Another is <a href=\"https://github.com/rustsec/advisory-db/issues/1711\">https://github.com/rustsec/advisory-db/issues/1711</a>.</p>\n</blockquote>",
        "id": 503846234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741280941
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344#issuecomment-2730732003\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344\">issue #10344</a>:</p>\n<blockquote>\n<p>Follow-up on this: we discussed this at the Wasmtime meeting last week and our conclusions were:</p>\n<ul>\n<li>We'll add this to our security issue process going forward.</li>\n<li>For now I'll open an issue about back-filling advisories.</li>\n</ul>\n<p>I sent <a href=\"https://github.com/rustsec/advisory-db/pull/2254\">https://github.com/rustsec/advisory-db/pull/2254</a> for backfilling a single advisory to double-check that the \"mostly empty\" report is ok for RustSec folks. If that's ok I'll send a PR to update documentation for our own runbook and point to that PR as an example advisory. I'll then file a follow-up issue for backfilling the existing adviories.</p>\n</blockquote>",
        "id": 506251492,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742242496
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344#issuecomment-2744043910\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344\">issue #10344</a>:</p>\n<blockquote>\n<p>Hm the inactivity on <a href=\"https://github.com/rustsec/advisory-db/pull/2254\">https://github.com/rustsec/advisory-db/pull/2254</a> is not necessarily inspiring confidence in hitching our process to theirs...</p>\n</blockquote>",
        "id": 507334750,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742579031
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10344\">issue #10344</a>:</p>\n<blockquote>\n<p>Currently, Wasmtime's <a href=\"https://bytecodealliance.org/security#disclosure-policy\">security disclosure process</a> includes an announcement via the security mailing list upon a patch release, along with a corresponding GitHub security advisory published on the disclosure date. While this process is comprehensive, it does not account for users who rely on tools other than Dependabot PRs for automatic vulnerability detection.</p>\n<p>For instance, <code>cargo-audit</code> relies exclusively on the RUSTSEC <a href=\"https://github.com/rustsec/advisory-db\">advisory database</a> to flag vulnerabilities, which has become the preferred method for automated detection in Rust. Hence, could we start considering publishing RUSTSEC advisories alongside GitHub security advisories as part of the standard disclosure process.</p>\n</blockquote>",
        "id": 515751321,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746203087
    }
]