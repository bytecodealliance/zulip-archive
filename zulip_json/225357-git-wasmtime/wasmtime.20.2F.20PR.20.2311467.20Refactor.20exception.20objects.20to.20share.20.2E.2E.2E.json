[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467\">PR #11467</a> from <code>cfallin:wasm-exception-object-refactor</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This PR updates the implementation of Wasm exception objects to share more layout-computation code with structs, except for a single fixed tag slot. The former is simply a nice refactor, and the latter is in preparation for full exception support, which will require accessing an exception's tag without knowing its layout dynamically at runtime.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 535211482,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755642453
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467\">PR #11467</a>.</p>",
        "id": 535211483,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755642453
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467\">PR #11467</a>.</p>",
        "id": 535211484,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755642453
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467#issuecomment-3202443327\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467\">PR #11467</a>:</p>\n<blockquote>\n<p>This has been pulled out of #11326 for separate landing.</p>\n</blockquote>",
        "id": 535211518,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755642484
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467\">PR #11467</a>.</p>",
        "id": 535211698,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755642644
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467#issuecomment-3203065438\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467\">PR #11467</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:api\", \"wasmtime:ref-types\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: wasmtime:ref-types</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 535216796,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755647100
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467#pullrequestreview-3137095964\">PR review</a>:</p>\n<blockquote>\n<p>LGTM, thanks for splitting things up and making that PR a little smaller!</p>\n</blockquote>",
        "id": 535358659,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755709903
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467#discussion_r2288532839\">PR review comment</a>:</p>\n<blockquote>\n<p>Does it make sense to still have <code>GcExceptionLayout</code> but have it just be a newtype wrapper over <code>GcStructLayout</code>? That way we can still use helpers that want to take a <code>GcStructLayout</code> argument but we also have some tidiness with a dedicated type and can remove the <code>is_exception: bool</code> field from <code>GcStructLayout</code>.</p>\n<p>Not sure this is actually a useful suggestion yet, going to look at a little bit more of the PR...</p>\n</blockquote>",
        "id": 535358660,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755709903
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467#discussion_r2288503609\">PR review comment</a>:</p>\n<blockquote>\n<p>This is not doing any hash consing because tags are nominal, correct? Can we add that note in a comment somewhere?</p>\n<p>And also something about how this is only for our implementation-specific <code>ModuleInternedTypeIndex</code> and does not affect the the Wasm-level types index space. That is, these aren't types at the wasm-level, but we treat them as types for convenience in our implementation and this is in service of that.</p>\n</blockquote>",
        "id": 535358661,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755709903
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467#discussion_r2288521367\">PR review comment</a>:</p>\n<blockquote>\n<p>FWIW, if you have appetite for a little clean up, I think these methods and the existing ones above could use the <code>unwrap_*</code> methods on <code>WasmCompositeType</code> to dedupe a little bit of code and then become something like</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">comp_ty</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">types</span><span class=\"p\">[</span><span class=\"n\">interned_ty</span><span class=\"p\">].</span><span class=\"n\">composite_type</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">comp_ty</span><span class=\"p\">.</span><span class=\"n\">shared</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">wasm_unsupported</span><span class=\"o\">!</span><span class=\"p\">(</span>\n<span class=\"w\">                </span><span class=\"s\">\"shared functions are not yet implemented\"</span>\n<span class=\"w\">            </span><span class=\"p\">));</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">comp_ty</span><span class=\"p\">.</span><span class=\"n\">unwrap_func</span><span class=\"p\">())</span>\n</code></pre></div>\n<p>Although I must also say (and maybe this is my fault) I am also confused by the combination of error-returning sometimes and panicking other times. Seems like we could move everything to one or the other, depending on usage.</p>\n<p>Feel free to deal with both or one or none of these things in this PR, as you see fit.</p>\n</blockquote>",
        "id": 535358662,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755709903
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467#discussion_r2288551696\">PR review comment</a>:</p>\n<blockquote>\n<p>Okay I guess it doesn't really make sense to remove the <code>is_exception: bool</code> field and do that newtype thing. Or else we would have to thread an <code>is_exception: bool</code> argument through here which seems like 6 of one and half a dozen of another. Nevermind!</p>\n</blockquote>",
        "id": 535358664,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755709903
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467#pullrequestreview-3137749409\">PR review</a>.</p>",
        "id": 535367491,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755713801
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467#discussion_r2288942197\">PR review comment</a>:</p>\n<blockquote>\n<p>Yep, this seemed like the most reasonable way to do it to me...</p>\n</blockquote>",
        "id": 535367493,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755713801
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467#pullrequestreview-3137749579\">PR review</a>.</p>",
        "id": 535367501,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755713805
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467#discussion_r2288942347\">PR review comment</a>:</p>\n<blockquote>\n<p>(resolving as per below)</p>\n</blockquote>",
        "id": 535367502,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755713805
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467\">PR #11467</a>.</p>",
        "id": 535368488,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755714228
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467#pullrequestreview-3137768116\">PR review</a>.</p>",
        "id": 535368512,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755714238
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467#discussion_r2288956144\">PR review comment</a>:</p>\n<blockquote>\n<p>Did the simple cleanup as suggested at least -- good call.</p>\n</blockquote>",
        "id": 535368513,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755714238
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467#pullrequestreview-3137768770\">PR review</a>.</p>",
        "id": 535368551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755714255
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467#discussion_r2288956658\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, great point, actually we can hash-cons -- tags are nominal, but that is covered by the dynamic tag-instance reference in an exception object; the Wasmtime exception-object type describes only the layout, which can be structural / shared across all exceptions with the same layout. I've added hash-consing here, as well as comments about this (and about the Wasmtime-specific nature of the exception types).</p>\n</blockquote>",
        "id": 535368552,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755714255
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467\">PR #11467</a>.</p>",
        "id": 535368573,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755714264
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11467\">PR #11467</a>.</p>",
        "id": 535373507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755716455
    }
]