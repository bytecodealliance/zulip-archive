[
    {
        "content": "<p>cfallin labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1052\">issue #1052</a>:</p>\n<blockquote>\n<p>The bitreverse seqences in <a href=\"https://github.com/CraneStation/cranelift/blob/master/lib/codegen/meta-python/base/legalize.py\">lib/codegen/meta-python/base/legalize.py</a> all end with two shifts and a bitwise or that effectively swap the low half of the value and the high half:<br>\n<a href=\"https://github.com/CraneStation/cranelift/blob/master/lib/codegen/meta-python/base/legalize.py#L445\">https://github.com/CraneStation/cranelift/blob/master/lib/codegen/meta-python/base/legalize.py#L445</a><br>\n<a href=\"https://github.com/CraneStation/cranelift/blob/master/lib/codegen/meta-python/base/legalize.py#L475\">https://github.com/CraneStation/cranelift/blob/master/lib/codegen/meta-python/base/legalize.py#L475</a><br>\n  and others for the other types</p>\n<p>It would be better to replace these trailing sequences with <code>rotl_imm</code>.</p>\n<p>That change is the first step, however the catch is that <code>rotl_imm</code> isn't implemented in isel yet so we'll need to implement that too. See <a href=\"https://github.com/CraneStation/cranelift/blob/master/lib/codegen/meta-python/isa/x86/encodings.py#L218\">the encodings for shifts and non-imm rotates</a> as well as <a href=\"https://github.com/CraneStation/cranelift/blob/master/lib/codegen/meta-python/isa/x86/encodings.py#L234\">the encodings for imm shifts</a> for some examples.</p>\n<p>Of course, in the future Cranelift is expected to have a pattern-matching optimization which would automatically optimize shift+bor sequences into rotates, however it doesn't have one right now, and even when it does, it would make the code simpler to just use rotate, and it's more efficient to just use the instruction we want than to emit sequences of instructions that we know will end up getting replaced.</p>\n</blockquote>",
        "id": 281218041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651697655
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1052#issuecomment-1117929964\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1052\">issue #1052</a>:</p>\n<blockquote>\n<p>Marking this as x64-specific; we use the <code>bitrev</code> instruction in the aarch64 backend.</p>\n</blockquote>",
        "id": 281218070,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651697677
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1052#issuecomment-3438110575\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1052\">issue #1052</a>:</p>\n<blockquote>\n<p>So <code>legalize.py</code> is long gone, but we could do this kind of thing in the ISLE rules in our egraphs midend. Currently the only rules we have for <code>bitrev</code> are these two:</p>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/9ba5358ad506cb229ba9a23559dd03084e561f4b/cranelift/codegen/src/opts/bitops.isle#L110\">https://github.com/bytecodealliance/wasmtime/blob/9ba5358ad506cb229ba9a23559dd03084e561f4b/cranelift/codegen/src/opts/bitops.isle#L110</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/9ba5358ad506cb229ba9a23559dd03084e561f4b/cranelift/codegen/src/opts/bitops.isle#L110\">https://github.com/bytecodealliance/wasmtime/blob/9ba5358ad506cb229ba9a23559dd03084e561f4b/cranelift/codegen/src/opts/bitops.isle#L110</a></li>\n</ul>\n<p>Could certainly add more for turning them into rotates!</p>\n<p>Also have these x64-specific lowerings, fwiw, but they do not use rotates (assuming rotates are better than what we have?):</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/9ba5358ad506cb229ba9a23559dd03084e561f4b/cranelift/codegen/src/isa/x64/lower.isle#L2474\">https://github.com/bytecodealliance/wasmtime/blob/9ba5358ad506cb229ba9a23559dd03084e561f4b/cranelift/codegen/src/isa/x64/lower.isle#L2474</a></p>\n<p>Could be good to do this kind of thing as a target-specific legalization in ISLE (none of the infrastructure for this exists at the time of writing, fwiw).</p>\n</blockquote>",
        "id": 546729741,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1761238751
    }
]