[
    {
        "content": "<p><strong>primoly</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256\">PR #10256</a>.</p>",
        "id": 500940416,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740074599
    },
    {
        "content": "<p><strong>primoly</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256\">PR #10256</a>.</p>",
        "id": 500940417,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740074599
    },
    {
        "content": "<p>primoly opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256\">PR #10256</a> from <code>primoly:ret-b4-set</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p><code>wasmtime serve</code> currently presumes that a failure to call <code>response-outparam::set</code> inside <code>handle</code> means the component trapped. But it can also happen by returning before invoking <code>set</code>. This PR accommodates for that.<br>\n</p>\n</blockquote>",
        "id": 500940418,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740074600
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256#issuecomment-2672839922\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256\">PR #10256</a>:</p>\n<blockquote>\n<p>Thanks! Could you add a test for this as well?</p>\n</blockquote>",
        "id": 500982003,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740090742
    },
    {
        "content": "<p>primoly updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256\">PR #10256</a>.</p>",
        "id": 501164550,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740163033
    },
    {
        "content": "<p>primoly <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256#issuecomment-2675290644\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256\">PR #10256</a>:</p>\n<blockquote>\n<p>I’ve added tests, but they are useless, as they pass even without the changes of this PR. <code>cli_serve_return_before_set</code> is supposed to fail on the old branch. For some reason, when I execute my build of <code>wasmtime</code> it recovers from the panic, but when I use the downloaded prebuilt Wasmtime the program closes.</p>\n<p>Here a component that returns before calling set. Invoke with <code>wasmtime serve proxy.wat</code> and then connect to it, for example with <code>curl http://localhost:8080</code>.</p>\n<h1>proxy.wat</h1>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>(component\n  (type (;0;)\n    (instance\n      (export (;0;) \"incoming-request\" (type (sub resource)))\n      (export (;1;) \"response-outparam\" (type (sub resource)))\n    )\n  )\n  (import \"wasi:http/types@0.2.0\" (instance (;0;) (type 0)))\n  (core module (;0;)\n    (type (;0;) (func (param i32 i32)))\n    (export \"cm32p2|wasi:http/incoming-handler@0.2|handle\" (func $handle))\n    (func $handle (;0;) (type 0) (param i32 i32)\n      return\n    )\n  )\n  (core instance (;0;) (instantiate 0))\n  (alias export 0 \"incoming-request\" (type (;1;)))\n  (type (;2;) (own 1))\n  (alias export 0 \"response-outparam\" (type (;3;)))\n  (type (;4;) (own 3))\n  (type (;5;) (func (param \"request\" 2) (param \"response-out\" 4)))\n  (alias core export 0 \"cm32p2|wasi:http/incoming-handler@0.2|handle\" (core func (;0;)))\n  (func (;0;) (type 5) (canon lift (core func 0)))\n  (alias export 0 \"incoming-request\" (type (;6;)))\n  (alias export 0 \"response-outparam\" (type (;7;)))\n  (component (;0;)\n    (import \"import-type-incoming-request\" (type (;0;) (sub resource)))\n    (import \"import-type-response-outparam\" (type (;1;) (sub resource)))\n    (import \"import-type-incoming-request0\" (type (;2;) (eq 0)))\n    (type (;3;) (own 2))\n    (import \"import-type-response-outparam0\" (type (;4;) (eq 1)))\n    (type (;5;) (own 4))\n    (type (;6;) (func (param \"request\" 3) (param \"response-out\" 5)))\n    (import \"import-func-handle\" (func (;0;) (type 6)))\n    (export (;7;) \"incoming-request\" (type 0))\n    (export (;8;) \"response-outparam\" (type 1))\n    (type (;9;) (own 7))\n    (type (;10;) (own 8))\n    (type (;11;) (func (param \"request\" 9) (param \"response-out\" 10)))\n    (export (;1;) \"handle\" (func 0) (func (type 11)))\n  )\n  (instance (;1;) (instantiate 0\n      (with \"import-func-handle\" (func 0))\n      (with \"import-type-incoming-request\" (type 6))\n      (with \"import-type-response-outparam\" (type 7))\n      (with \"import-type-incoming-request0\" (type 1))\n      (with \"import-type-response-outparam0\" (type 3))\n    )\n  )\n  (export (;2;) \"wasi:http/incoming-handler@0.2.0\" (instance 1))\n)\n</code></pre></div>\n</blockquote>",
        "id": 501165543,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740163385
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256#issuecomment-2675888135\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256\">PR #10256</a>:</p>\n<blockquote>\n<p>I think the difference between binaries is <code>panic=abort</code> as the <code>wasmtime</code> executable has that set in CI which is probably what causes an abort.</p>\n<p>For the test here could the output of <code>finish()</code> be inspected to ensure that \"panicked\" doesn't show up? Or basically assert that it has the expected output? (ideally empty or just a warning or similar)</p>\n</blockquote>",
        "id": 501209999,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740185258
    },
    {
        "content": "<p>primoly updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256\">PR #10256</a>.</p>",
        "id": 501247415,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740217641
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256#pullrequestreview-2637548114\">PR review</a>.</p>",
        "id": 501575236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1740411241
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256#issuecomment-2718146837\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256\">PR #10256</a>:</p>\n<blockquote>\n<p>@primoly would you like some help in debugging the CI failure?</p>\n</blockquote>",
        "id": 505155227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741790849
    },
    {
        "content": "<p><strong>primoly</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256\">PR #10256</a>.</p>",
        "id": 505198183,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741799633
    },
    {
        "content": "<p><strong>primoly</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256\">PR #10256</a>.</p>",
        "id": 505198184,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741799633
    },
    {
        "content": "<p><strong>primoly</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256\">PR #10256</a>.</p>",
        "id": 505198185,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741799633
    },
    {
        "content": "<p>primoly updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256\">PR #10256</a>.</p>",
        "id": 505198186,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741799633
    },
    {
        "content": "<p>primoly closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256\">PR #10256</a>.</p>",
        "id": 505200996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741800285
    },
    {
        "content": "<p>primoly <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256#issuecomment-2718604248\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10256\">PR #10256</a>:</p>\n<blockquote>\n<p>I think I just broke the PR. I’ll open a new one.</p>\n<p>I don’t understand how Git works, sorry ._.</p>\n</blockquote>",
        "id": 505201000,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741800286
    }
]