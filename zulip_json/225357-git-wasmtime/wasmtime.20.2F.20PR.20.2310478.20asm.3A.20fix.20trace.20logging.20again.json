[
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10478\">PR #10478</a>.</p>",
        "id": 508409572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743039516
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10478\">PR #10478</a>.</p>",
        "id": 508409573,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743039517
    },
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10478\">PR #10478</a> from <code>abrown:asm-more-trace-printing</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>As pointed out in #10476, there are a few more locations in which the raw encoding of a register is used when pretty-printing memory operands. Using the raw encoding before register allocation results in a panic. This change ensures that the additional locations delegate to the <code>to_string()</code> method which is overriden in <code>cranelift-codegen</code> to know how to pretty-print virtual registers. Closes #10476.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 508409574,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743039517
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10478#pullrequestreview-2719700603\">PR review</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n<p>Would it be possible to add some sort of test to make sure that trace-logging works for a whole compilation? Perhaps programmatically setting the log-level to trace with the <code>log</code> crate or related and then compiling some simple function body in a unit test, or similar.</p>\n</blockquote>",
        "id": 508430483,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743051914
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10478#issuecomment-2758618098\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10478\">PR #10478</a>:</p>\n<blockquote>\n<blockquote>\n<p>Would it be possible to add some sort of test to make sure that trace-logging works for a whole compilation? Perhaps programmatically setting the log-level to trace with the <code>log</code> crate or related and then compiling some simple function body in a unit test, or similar.</p>\n</blockquote>\n<p>Should it just be a CLI test?</p>\n</blockquote>",
        "id": 508562345,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743092067
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10478#issuecomment-2758654703\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10478\">PR #10478</a>:</p>\n<blockquote>\n<p>One thing I'll note is that this'd be easiest during <code>tests/all/cli_tests.rs</code> as that's where we can scope setting an env var to just one process, but that's disconnected from wast testing. What you can do is pick any of the test-programs modules/components and compile that with the env var and ensure that it doesn't panic.</p>\n</blockquote>",
        "id": 508565397,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743092807
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10478\">PR #10478</a>.</p>",
        "id": 508637069,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743118455
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10478\">PR #10478</a>.</p>",
        "id": 508637071,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743118455
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10478\">PR #10478</a>.</p>",
        "id": 508637072,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743118455
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10478#pullrequestreview-2724155890\">PR review</a>.</p>",
        "id": 508660102,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743132273
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10478\">PR #10478</a>.</p>",
        "id": 508662027,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743133588
    }
]