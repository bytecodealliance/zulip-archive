[
    {
        "content": "<p>uweigand opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722\">PR #10722</a> from <code>uweigand:abi-refactor</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This refactors implementation of call ABI handling across architectures with the goal of bringing s390x in line with other platforms.</p>\n<p>The main idea is to</p>\n<ul>\n<li>handle main call instruction selection and generation in ISLE (like s390x but unlike other platforms today)</li>\n<li>handle argument setup mostly outside of ISLE (like other platforms but unlike s390x today)</li>\n<li>handle return value processing as part of the call instructio (like all platforms today)</li>\n</ul>\n<p>All platforms now emit the main call instruction directly from ISLE, which e.g. handles selection of the correct ISA instruction depending on the call destination.  This ISLE code calls out to helper routines to handle argument and return value processing.  These helpers are mostly common code and provided by the Callee and/or Lower layers, with some platform-specific additions via ISLE Context routines.</p>\n<p>The old CallSite abstraction is no longer needed; most of the differences between call and return_call handling disappear. (There is still a common-code CallInfo vs. a platform-specifc ReturnCallInfo.  At this point, it should be relatively straight- forward to make CallInfo platform-specific as well if desired, but this is not done here.)</p>\n<p>Some ISLE infrastructure for iterators / loops, which was only ever used by the s390x argument processing code, has been removed.</p>\n<p>s390x now closely matches all other platforms, with only a few special cases (slightly different tail-call ABI requires some differences in stack offset computations; we still need to handle vector lane swaps for cross-ABI calls), which should simplify future maintenance.</p>\n<p>FYI @cfallin </p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 515907973,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746282404
    },
    {
        "content": "<p><strong>uweigand</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722\">PR #10722</a>.</p>",
        "id": 515907975,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746282405
    },
    {
        "content": "<p><strong>uweigand</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722\">PR #10722</a>.</p>",
        "id": 515907976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746282405
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722#issuecomment-2848681382\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722\">PR #10722</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:aarch64\", \"cranelift:area:machinst\", \"cranelift:area:x64\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 515917073,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746287078
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722#pullrequestreview-2816355352\">PR review</a>:</p>\n<blockquote>\n<p>This makes sense to me; looking at the x64 backend especially, this refactoring seems fine. I'll defer to @cfallin, though, on any finer points since it may be that you all have discussed this change previously (?).</p>\n</blockquote>",
        "id": 516312946,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746486542
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722#pullrequestreview-2816385307\">PR review</a>:</p>\n<blockquote>\n<p>This looks great -- thanks a bunch for doing this refactor and better unifying all the ABI implementations! I like the more functional approach (external helpers to build info, then emit the one call inst) a lot.</p>\n</blockquote>",
        "id": 516315320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746487953
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722#issuecomment-2852749251\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722\">PR #10722</a>:</p>\n<blockquote>\n<p>Hmm, issue with x86-64 mingw runs segfaulting in CI on merge queue checks: <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/14848380596/job/41687208337\">here</a></p>\n</blockquote>",
        "id": 516317329,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746489177
    },
    {
        "content": "<p>uweigand updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722\">PR #10722</a>.</p>",
        "id": 516469528,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746544051
    },
    {
        "content": "<p>uweigand <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722#issuecomment-2854927636\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722\">PR #10722</a>:</p>\n<blockquote>\n<blockquote>\n<p>Hmm, issue with x86-64 mingw runs segfaulting in CI on merge queue checks: <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/14848380596/job/41687208337\">here</a></p>\n</blockquote>\n<p>I forgot to use <code>accumulate_outgoing_args</code> in the x64 <code>emit_vm_call</code> routine.   Libcalls don't usually have stack arguments so this didn't matter, but <code>__cranelift_x86_pshufb</code> does when using the WindowsFastcall convention.  Should be fixed now.</p>\n</blockquote>",
        "id": 516470210,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746544237
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722#issuecomment-2854935925\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722\">PR #10722</a>:</p>\n<blockquote>\n<p>Thanks, good catch!</p>\n<p>A few jobs failing with \" Error: Internal server error occurred while resolving \"abrown/install-vtune-action@v1\". Internal server error occurred while resolving \"actions/cache@v4\". Internal server error occurred while resolving \"actions/checkout@v4\"\" -- cc @abrown on that one. Probably a spurious network error so restarting.</p>\n</blockquote>",
        "id": 516470769,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746544374
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722\">PR #10722</a>.</p>",
        "id": 516471115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746544452
    },
    {
        "content": "<p>uweigand <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722#issuecomment-2855066812\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722\">PR #10722</a>:</p>\n<blockquote>\n<p>Looks like there's another internal error.</p>\n</blockquote>",
        "id": 516476951,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746546085
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722#issuecomment-2855076319\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722\">PR #10722</a>:</p>\n<blockquote>\n<p>@abrown it looks like the <code>abrown/install-vtune-action</code> action is failing consistently <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/14863145363/job/41733647732?pr=10722\">here</a> -- would you mind putting up a PR to remove this action from CI for now, since it's not tier 1 and it's blocking merges? Then we can rebase here and hopefully merge.</p>\n</blockquote>",
        "id": 516477705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746546281
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722#issuecomment-2855090479\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722\">PR #10722</a>:</p>\n<blockquote>\n<p>I'm not certain it's something wrong with the action, the failure is also for <code>actions/cache@v4</code>. I restarted again and it's making progress this time. I think github actions is just having a bad day so far and I don't think there's anything specific about abrown/install-vtune-action</p>\n</blockquote>",
        "id": 516478773,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746546559
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10722\">PR #10722</a>.</p>",
        "id": 516484224,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746548115
    }
]