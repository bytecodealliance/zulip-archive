[
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the fuzz-bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10460\">Issue #10460</a>.</p>",
        "id": 507472832,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742665457
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasm-proposal:simd label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10460\">Issue #10460</a>.</p>",
        "id": 507472833,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742665457
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the winch label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10460\">Issue #10460</a>.</p>",
        "id": 507472834,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742665458
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10460\">issue #10460</a>:</p>\n<blockquote>\n<p>This input:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (func (export \"x\")\n    (param i32 v128 i32)\n    (param v128 i32 v128 i32 v128)\n    (param i32 v128 i32 v128 i32)\n    (param v128 i32 v128 i32)\n    (param $last v128)\n    (result v128)\n    local.get $last\n  )\n)\n\n(assert_return\n  (invoke \"x\"\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n  )\n  (v128.const i64x2 0 0))\n</code></pre></div>\n<p>yields:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Ccompiler</span><span class=\"o\">=</span><span class=\"n\">winch</span><span class=\"w\"> </span><span class=\"n\">repro</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">script</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">repro</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"o\">'</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">directive</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">repro</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"p\">:</span><span class=\"mi\">13</span><span class=\"p\">:</span><span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">didn</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"k\">match</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">                   </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\">                    </span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"w\">       </span><span class=\"n\">actual</span><span class=\"w\">   </span><span class=\"p\">[</span><span class=\"w\">      </span><span class=\"mi\">94750456038144</span><span class=\"p\">,</span><span class=\"w\">                    </span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"w\">       </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">hex</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0000000000000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0000000000000000</span><span class=\"p\">]</span>\n<span class=\"w\">       </span><span class=\"n\">actual</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">hex</span><span class=\"p\">)</span><span class=\"w\">   </span><span class=\"p\">[</span><span class=\"mi\">0000562</span><span class=\"n\">ccf464300</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0000000000000000</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>cc @jeffcharles @saulecabrera </p>\n</blockquote>",
        "id": 507472837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742665458
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10460#issuecomment-2747582126\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10460\">issue #10460</a>:</p>\n<blockquote>\n<p>Thanks for the report! We'll take a look into it. </p>\n</blockquote>",
        "id": 507709429,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742811230
    },
    {
        "content": "<p>jeffcharles <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10460#issuecomment-2749505345\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10460\">issue #10460</a>:</p>\n<blockquote>\n<p>I wasn't able to resolve this today but I narrowed down the repro case to:</p>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"x\"</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">f32</span> <span class=\"kt\">f32</span> <span class=\"kt\">f32</span> <span class=\"kt\">f32</span> <span class=\"kt\">f32</span> <span class=\"kt\">f32</span> <span class=\"kt\">f32</span> <span class=\"kt\">f32</span> <span class=\"kt\">f32</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"nv\">$last</span> <span class=\"err\">v</span><span class=\"mf\">128</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"err\">v</span><span class=\"mf\">128</span><span class=\"p\">)</span>\n    <span class=\"nb\">local.get</span> <span class=\"nv\">$last</span>\n  <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"err\">assert_</span><span class=\"nb\">return</span>\n  <span class=\"p\">(</span><span class=\"err\">invoke</span> <span class=\"s2\">\"x\"</span>\n    <span class=\"p\">(</span><span class=\"nb\">f32.const</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">f32.const</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">f32.const</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">f32.const</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">f32.const</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">f32.const</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">f32.const</span> <span class=\"mi\">7</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">f32.const</span> <span class=\"mi\">8</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">f32.const</span> <span class=\"mi\">9</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"err\">v</span><span class=\"mf\">128</span><span class=\"err\">.const</span> <span class=\"kt\">i64</span><span class=\"err\">x</span><span class=\"mf\">2 10</span> <span class=\"mi\">11</span><span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"err\">v</span><span class=\"mf\">128</span><span class=\"err\">.const</span> <span class=\"kt\">i64</span><span class=\"err\">x</span><span class=\"mf\">2 10</span> <span class=\"mi\">11</span><span class=\"p\">))</span>\n</code></pre></div>\n<p>The key detail is there needs to be enough float/vector parameters to require using the stack for the last two and the last parameter must be a vector. Cranelift seems to be using offsets of 0 for the f32 and 16 for the v128 for the last two parameters whereas it'll use offsets of 0 and 8 for two f32 parameters. Winch uses offsets of 16 for the f32 and 24 for the v128 from the base pointer in both cases.  I'm not very familiar with exactly how Cranelift uses those offsets so I can't speak to whether there's an issue with the offsets being different for the different argument types.</p>\n</blockquote>",
        "id": 507884629,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1742853911
    },
    {
        "content": "<p>saulecabrera assigned saulecabrera to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10460\">issue #10460</a>.</p>",
        "id": 509202384,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743427937
    },
    {
        "content": "<p>fitzgen closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10460\">issue #10460</a>:</p>\n<blockquote>\n<p>This input:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (func (export \"x\")\n    (param i32 v128 i32)\n    (param v128 i32 v128 i32 v128)\n    (param i32 v128 i32 v128 i32)\n    (param v128 i32 v128 i32)\n    (param $last v128)\n    (result v128)\n    local.get $last\n  )\n)\n\n(assert_return\n  (invoke \"x\"\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n    (i32.const 0)\n    (v128.const i64x2 0 0)\n  )\n  (v128.const i64x2 0 0))\n</code></pre></div>\n<p>yields:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Ccompiler</span><span class=\"o\">=</span><span class=\"n\">winch</span><span class=\"w\"> </span><span class=\"n\">repro</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">script</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">repro</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"o\">'</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">directive</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">repro</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"p\">:</span><span class=\"mi\">13</span><span class=\"p\">:</span><span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">result</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">didn</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"k\">match</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">                   </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\">                    </span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"w\">       </span><span class=\"n\">actual</span><span class=\"w\">   </span><span class=\"p\">[</span><span class=\"w\">      </span><span class=\"mi\">94750456038144</span><span class=\"p\">,</span><span class=\"w\">                    </span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"w\">       </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">hex</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0000000000000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0000000000000000</span><span class=\"p\">]</span>\n<span class=\"w\">       </span><span class=\"n\">actual</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">hex</span><span class=\"p\">)</span><span class=\"w\">   </span><span class=\"p\">[</span><span class=\"mi\">0000562</span><span class=\"n\">ccf464300</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0000000000000000</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>cc @jeffcharles @saulecabrera </p>\n</blockquote>",
        "id": 509783852,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1743624325
    }
]