[
    {
        "content": "<p>Yeeyooo opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10362\">issue #10362</a>:</p>\n<blockquote>\n<p>Hello, I'm profiling the execution of WebAssembly program in wasmtime by using <code>perf</code> tool, which is supported by wasmtime. By following the chapter \"Using perf on Linux\" in official documentation, I can get perf output as expected. However, the amount of information generated is staggering, which not only has function overhead in the given wasm program, but also has many other function symbols, which is not what I want. Below is an example:</p>\n<p>![Image](<a href=\"https://github.com/user-attachments/assets/7afb120f-8162-4908-ab8f-689851e69a28\">https://github.com/user-attachments/assets/7afb120f-8162-4908-ab8f-689851e69a28</a>)<br>\nAftering reading source code of wasmtime, I find that the actual call into wasm program happens in the function <code>call_impl_do_call</code>. I wonder if it is possible to limit the sample scope to the execution of this function, so I can get information about the overhead of each function called during this process, ruling out many other unnecessary functions? If it is possible, how can I do that? Thank you very much for your help!</p>\n</blockquote>",
        "id": 504540297,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741604055
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10362#issuecomment-2710212870\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10362\">issue #10362</a>:</p>\n<blockquote>\n<p>I see wasmtime, node and a gpu driver component (<a href=\"http://kms_swrast_dri.so\">kms_swrast_dri.so</a>) in your profile. I think you are profiling not just wasmtime but the entire system. You need to run wasmtime directly from perf through <code>perf record wasmtime ...</code> to only include wasmtime in your profile.</p>\n</blockquote>",
        "id": 504543355,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741604785
    },
    {
        "content": "<p>Yeeyooo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10362#issuecomment-2710231175\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10362\">issue #10362</a>:</p>\n<blockquote>\n<p>Thank you for your reply! That's just an example. Can I further limit the sample scope to the function <code>call_impl_do_call</code> and find what happens during this call?</p>\n</blockquote>",
        "id": 504544874,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741605168
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10362#issuecomment-2710253313\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10362\">issue #10362</a>:</p>\n<blockquote>\n<p>If you select call_impl_do_call and then press e, you can expand it to show the functions this function called. I don't think perf report has an option to filter to just the functions called by a specific function.</p>\n</blockquote>",
        "id": 504547099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741605697
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10362\">issue #10362</a>:</p>\n<blockquote>\n<p>Hello, I'm profiling the execution of WebAssembly program in wasmtime by using <code>perf</code> tool, which is supported by wasmtime. By following the chapter \"Using perf on Linux\" in official documentation, I can get perf output as expected. However, the amount of information generated is staggering, which not only has function overhead in the given wasm program, but also has many other function symbols, which is not what I want. Below is an example:</p>\n<p>![Image](<a href=\"https://github.com/user-attachments/assets/7afb120f-8162-4908-ab8f-689851e69a28\">https://github.com/user-attachments/assets/7afb120f-8162-4908-ab8f-689851e69a28</a>)<br>\nAftering reading source code of wasmtime, I find that the actual call into wasm program happens in the function <code>call_impl_do_call</code>. I wonder if it is possible to limit the sample scope to the execution of this function, so I can get information about the overhead of each function called during this process, ruling out many other unnecessary functions? If it is possible, how can I do that? Thank you very much for your help!</p>\n</blockquote>",
        "id": 504621103,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741621268
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10362#issuecomment-2711024163\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10362\">issue #10362</a>:</p>\n<blockquote>\n<p><code>perf</code> is fundamentally a tool that is meant to profile whole processes (or the whole system), and I'm not aware of a way to tell it to stop profiling to \"hide\" the runtime (any such interface would also likely have high overhead on every Wasm call). As @bjorn3 notes, this is more properly a UI concern -- the functionality to scope down to a subtree of the results is the way to do this.</p>\n<p>I believe the question has been answered so I'll go ahead and close the issue; if you have further questions please don't hesitate to ask though!</p>\n</blockquote>",
        "id": 504621107,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741621269
    }
]