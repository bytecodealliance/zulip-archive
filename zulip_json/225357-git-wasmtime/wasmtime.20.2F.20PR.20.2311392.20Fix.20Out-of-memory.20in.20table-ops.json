[
    {
        "content": "<p>khagankhan opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392\">PR #11392</a> from <code>khagankhan:OOM-bugs</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<ul>\n<li>Decoupled <code>TableOps</code> and <code>TableOpsLimits,</code> which are now passed explicitly to <code>TableOp::fixup</code></li>\n<li>Updated the macro to align with the new struct separation</li>\n<li><code>TableOps::fixup</code> now processes the entire sequence of operations instead of starting from specific index</li>\n</ul>\n<p>I placed clamping logic at the beginning of the <code>to_wasm_binary</code> method since the OOM issues originate in t<code>o_wasm_binary</code> This relies on <code>TableOp::fixup</code> to ensure that values respect those clamped limits to avoid potential traps.</p>\n<p>I previously added clamping at the start of <code>TableOps::fixup</code> but the OOM still occurred there.</p>\n<p>I let it fuzz for a while, and it ran fine but I sense something might be missing.</p>\n</blockquote>",
        "id": 533221233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754545667
    },
    {
        "content": "<p><strong>khagankhan</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392\">PR #11392</a>.</p>",
        "id": 533221235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754545667
    },
    {
        "content": "<p><strong>khagankhan</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392\">PR #11392</a>.</p>",
        "id": 533221237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754545667
    },
    {
        "content": "<p>khagankhan edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392\">PR #11392</a>:</p>\n<blockquote>\n<ul>\n<li>Decoupled <code>TableOps</code> and <code>TableOpsLimits,</code> which are now passed explicitly to <code>TableOp::fixup</code></li>\n<li>Updated the macro to align with the new struct separation</li>\n<li><code>TableOps::fixup</code> now processes the entire sequence of operations instead of starting from specific index</li>\n</ul>\n<p>I placed clamping logic at the beginning of the <code>to_wasm_binary</code> method since the OOM issues originate in t<code>o_wasm_binary</code> This relies on <code>TableOp::fixup</code> to ensure that values respect those clamped limits to avoid potential traps.</p>\n<p>I previously added clamping at the start of <code>TableOps::fixup</code> but the OOM still occurred there.</p>\n<p>I let it fuzz for a while, and it ran fine but I sense something might be missing.</p>\n<p>Related Issues: #11345 and #11346</p>\n</blockquote>",
        "id": 533221365,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754545769
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392#issuecomment-3162944010\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392\">PR #11392</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"fuzzing\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: fuzzing</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 533236150,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754552868
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392#pullrequestreview-3097835477\">PR review</a>:</p>\n<blockquote>\n<p>Looks good to me with the nitpick about <code>println!</code> below addressed.</p>\n<p>I think we should also switch to calling <code>fixup</code> at the start of <code>to_wasm_binary</code> instead of after each particular mutation, since it has to process all ops and can't take advantage of our knowledge of which mutation we performed and where that mutation was anymore. This change will cut down on the number of call sites and also make it more obvious that the clamping in <code>to_wasm_binary</code> won't ever produce invalid Wasm binaries. (With this PR now, I think we could produce invalid Wasm binaries from <code>to_wasm_binary</code>'s clamping due to deserializing some ops that haven't been <code>fixup</code>'d to work with the clamping yet.) This can happen in a follow up PR if you'd prefer.</p>\n<p>Thanks!</p>\n</blockquote>",
        "id": 533323808,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754583106
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392#discussion_r2260786219\">PR review comment</a>:</p>\n<blockquote>\n<p>This should be <code>log::debug!</code> and not a <code>println!</code>.</p>\n</blockquote>",
        "id": 533323810,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754583106
    },
    {
        "content": "<p>khagankhan <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392#issuecomment-3164899011\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392\">PR #11392</a>:</p>\n<blockquote>\n<p>Thanks! Yes that makes sense. Initially, I did that. Calling fixup in to_wasm_binary(). It hit assertion failure at for limit &gt; 0. I guess after addressing it we can do that. I will make another PR where clamping happen at the beginning of fixup and fixup is called in encoding.</p>\n<p>I forgot to remove println! :/<br>\n</p>\n</blockquote>",
        "id": 533324893,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754583518
    },
    {
        "content": "<p>khagankhan updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392\">PR #11392</a>.</p>",
        "id": 533367593,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1754603260
    },
    {
        "content": "<p>khagankhan <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392#issuecomment-3207609067\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392\">PR #11392</a>:</p>\n<blockquote>\n<p>I was not merged. @fitzgen do you know why this may happen <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span>?</p>\n</blockquote>",
        "id": 535370629,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755715134
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392#issuecomment-3207625332\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392\">PR #11392</a>:</p>\n<blockquote>\n<p>It looks like CI failed, you can see this via the \"view details\" button next to the \"<a href=\"https://github.com/apps/github-merge-queue\">github-merge-queue</a> bot removed this pull request from the <a href=\"https://github.com/bytecodealliance/wasmtime/queue/main\">merge queue</a> due to failed status checks\" notification.</p>\n<p>In particular, this job failed: <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/16817124055/job/47636482289\">https://github.com/bytecodealliance/wasmtime/actions/runs/16817124055/job/47636482289</a></p>\n<p>It looks like it is old enough that the logs were deleted however, so I will try re-enqueing this PR and if it fails again, you can see the failure via the method described above.</p>\n</blockquote>",
        "id": 535371420,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755715511
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392#issuecomment-3207735076\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392\">PR #11392</a>:</p>\n<blockquote>\n<p>This failure looks like some spurious networking issue involving docker or something. Retrying once more.</p>\n</blockquote>",
        "id": 535376126,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755717468
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392#issuecomment-3207942569\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392\">PR #11392</a>:</p>\n<blockquote>\n<p>Looks like this time there was an internal assertion inside the macos linker?? Retrying once more...</p>\n</blockquote>",
        "id": 535383098,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755720570
    },
    {
        "content": "<p>khagankhan <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392#issuecomment-3207974795\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392\">PR #11392</a>:</p>\n<blockquote>\n<p>Thanks!<span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span></p>\n</blockquote>",
        "id": 535384366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755721233
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11392\">PR #11392</a>.</p>",
        "id": 535386153,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1755722076
    }
]