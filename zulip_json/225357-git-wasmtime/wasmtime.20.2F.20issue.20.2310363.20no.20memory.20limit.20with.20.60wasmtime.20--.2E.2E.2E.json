[
    {
        "content": "<p>cataggar opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363\">issue #10363</a>:</p>\n<blockquote>\n<p>I'm attempting to use the TypeScript compiler from a component. When I call <code>createProgram</code> TypeScript reads in a bunch of files. The problems is it is running out of memory. I found this out by adding <code>WASMTIME_LOG=trace</code>, which shows:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"n\">T11</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"mf\">10.964128</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"p\">{</span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi:cli/run@0.2.3\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"run\"</span><span class=\"p\">}:</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">runtime</span><span class=\"p\">::</span><span class=\"n\">vm</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">libcalls</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">utf8</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">utf8</span><span class=\"w\"> </span><span class=\"mi\">1306131</span>\n<span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"n\">T11</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"mf\">24.235781</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"p\">{</span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi:cli/run@0.2.3\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"run\"</span><span class=\"p\">}:</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">runtime</span><span class=\"p\">::</span><span class=\"n\">vm</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">libcalls</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">utf8</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">utf8</span><span class=\"w\"> </span><span class=\"mi\">35</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"createProgram failed: out of memory\"</span>\n</code></pre></div>\n<p>This happens directly haver it tries to read in a faily large <code>lib.dom.d.ts</code> file.<br>\nread_file \"node_modules/typescript/lib/lib.dom.d.ts\" length 1306131</p>\n<p>Copilot helped me find the <a href=\"https://docs.wasmtime.dev/contributing-architecture.html?highlight=static-memory-maximum-size#linear-memory\">docs on linear memory</a> and claimed that adding <code>--static-memory-maximum-size=0</code> would work by not limiting the memory, but the option does not exist. Is there a way to unrestrict the memory limit and increase it? </p>\n<p>This happens directly </p>\n<p><code>wasmtime --static-memory-maximum-size=0 run --dir .::/ test-rs/target/test2.wasm a b c</code></p>\n<p><code>wasmtime  run --dir .::/ test-rs/target/test2.wasm a b c</code></p>\n<h4>Feature</h4>\n<p>Ability to set <code>static_memory_maximum_size</code> from the command line.</p>\n<h4>Benefit</h4>\n<p>Being able to control the memory options from the CLI.</p>\n<h4>Implementation</h4>\n<h4>Alternatives</h4>\n</blockquote>",
        "id": 504574877,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741611927
    },
    {
        "content": "<p>cataggar edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363\">issue #10363</a>:</p>\n<blockquote>\n<p>I'm attempting to use the TypeScript compiler from a component. When I call <code>createProgram</code> TypeScript reads in a bunch of files. The problems is it is running out of memory. I found this out by adding <code>WASMTIME_LOG=trace</code>, which shows:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"n\">T11</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"mf\">10.964128</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"p\">{</span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi:cli/run@0.2.3\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"run\"</span><span class=\"p\">}:</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">runtime</span><span class=\"p\">::</span><span class=\"n\">vm</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">libcalls</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">utf8</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">utf8</span><span class=\"w\"> </span><span class=\"mi\">1306131</span>\n<span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"n\">T11</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"mf\">24.235781</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"p\">{</span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi:cli/run@0.2.3\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"run\"</span><span class=\"p\">}:</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">runtime</span><span class=\"p\">::</span><span class=\"n\">vm</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">libcalls</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">utf8</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">utf8</span><span class=\"w\"> </span><span class=\"mi\">35</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"createProgram failed: out of memory\"</span>\n</code></pre></div>\n<p>This happens directly haver it tries to read in a faily large <code>lib.dom.d.ts</code> file.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">read_file</span><span class=\"w\"> </span><span class=\"s\">\"node_modules/typescript/lib/lib.dom.d.ts\"</span><span class=\"w\"> </span><span class=\"n\">length</span><span class=\"w\"> </span><span class=\"mi\">1306131</span>\n</code></pre></div>\n<p>Copilot helped me find the <a href=\"https://docs.wasmtime.dev/contributing-architecture.html?highlight=static-memory-maximum-size#linear-memory\">docs on linear memory</a> and claimed that adding <code>--static-memory-maximum-size=0</code> would work by not limiting the memory, but the option does not exist. Is there a way to unrestrict the memory limit and increase it? </p>\n<p>This happens directly </p>\n<p><code>wasmtime --static-memory-maximum-size=0 run --dir .::/ test-rs/target/test2.wasm a b c</code></p>\n<p><code>wasmtime  run --dir .::/ test-rs/target/test2.wasm a b c</code></p>\n<h4>Feature</h4>\n<p>Ability to set <code>static_memory_maximum_size</code> from the command line.</p>\n<h4>Benefit</h4>\n<p>Being able to control the memory options from the CLI.</p>\n<h4>Implementation</h4>\n<h4>Alternatives</h4>\n</blockquote>",
        "id": 504575137,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741611972
    },
    {
        "content": "<p>cataggar edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363\">issue #10363</a>:</p>\n<blockquote>\n<p>I'm attempting to use the TypeScript compiler from a component. When I call <code>createProgram</code> TypeScript reads in a bunch of files. The problems is it is running out of memory. I found this out by adding <code>WASMTIME_LOG=trace</code>, which shows:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"n\">T11</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"mf\">10.964128</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"p\">{</span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi:cli/run@0.2.3\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"run\"</span><span class=\"p\">}:</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">runtime</span><span class=\"p\">::</span><span class=\"n\">vm</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">libcalls</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">utf8</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">utf8</span><span class=\"w\"> </span><span class=\"mi\">1306131</span>\n<span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"n\">T11</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"mf\">24.235781</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"p\">{</span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi:cli/run@0.2.3\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"run\"</span><span class=\"p\">}:</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">runtime</span><span class=\"p\">::</span><span class=\"n\">vm</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">libcalls</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">utf8</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">utf8</span><span class=\"w\"> </span><span class=\"mi\">35</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"createProgram failed: out of memory\"</span>\n</code></pre></div>\n<p>This happens directly haver it tries to read in a faily large <code>lib.dom.d.ts</code> file.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">read_file</span><span class=\"w\"> </span><span class=\"s\">\"node_modules/typescript/lib/lib.dom.d.ts\"</span><span class=\"w\"> </span><span class=\"n\">length</span><span class=\"w\"> </span><span class=\"mi\">1306131</span>\n</code></pre></div>\n<p>Copilot helped me find the <a href=\"https://docs.wasmtime.dev/contributing-architecture.html?highlight=static-memory-maximum-size#linear-memory\">docs on linear memory</a> and claimed that adding <code>--static-memory-maximum-size=0</code> would work by not limiting the memory, but the option does not exist. Is there a way to unrestrict the memory limit and increase it? </p>\n<p>This is the current command line:</p>\n<p><code>wasmtime  run --dir .::/ test-rs/target/test2.wasm a b c</code></p>\n<p>I was hoping this would work:</p>\n<p><code>wasmtime --static-memory-maximum-size=0 run --dir .::/ test-rs/target/test2.wasm a b c</code></p>\n<h4>Feature</h4>\n<p>Ability to set <code>static_memory_maximum_size</code> from the command line.</p>\n<h4>Benefit</h4>\n<p>Being able to control the memory options from the CLI.</p>\n<h4>Implementation</h4>\n<h4>Alternatives</h4>\n</blockquote>",
        "id": 504575432,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741612036
    },
    {
        "content": "<p>cataggar edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363\">issue #10363</a>:</p>\n<blockquote>\n<p>I'm attempting to use the TypeScript compiler from a component. When I call <code>createProgram</code> TypeScript reads in a bunch of files. The problems is it is running out of memory. I found this out by adding <code>WASMTIME_LOG=trace</code>, which shows:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"n\">T11</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"mf\">10.964128</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"p\">{</span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi:cli/run@0.2.3\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"run\"</span><span class=\"p\">}:</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">runtime</span><span class=\"p\">::</span><span class=\"n\">vm</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">libcalls</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">utf8</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">utf8</span><span class=\"w\"> </span><span class=\"mi\">1306131</span>\n<span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"n\">T11</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"mf\">24.235781</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"p\">{</span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi:cli/run@0.2.3\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"run\"</span><span class=\"p\">}:</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">runtime</span><span class=\"p\">::</span><span class=\"n\">vm</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">libcalls</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">utf8</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">utf8</span><span class=\"w\"> </span><span class=\"mi\">35</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"createProgram failed: out of memory\"</span>\n</code></pre></div>\n<p>This happens directly haver it tries to read in a faily large <code>lib.dom.d.ts</code> file.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">read_file</span><span class=\"w\"> </span><span class=\"s\">\"node_modules/typescript/lib/lib.dom.d.ts\"</span><span class=\"w\"> </span><span class=\"n\">length</span><span class=\"w\"> </span><span class=\"mi\">1306131</span>\n</code></pre></div>\n<p>Copilot helped me find the <a href=\"https://docs.wasmtime.dev/contributing-architecture.html?highlight=static-memory-maximum-size#linear-memory\">docs on linear memory</a> and claimed that adding <code>--static-memory-maximum-size=0</code> would work by not limiting the memory, but the option does not exist. Is there a way to unrestrict the memory limit and increase it? </p>\n<p>This is the current command line:</p>\n<p><code>wasmtime  run --dir .::/ test-rs/target/test2.wasm a b c</code></p>\n<p>I was hoping this would work:</p>\n<p><code>wasmtime --static-memory-maximum-size=0 run --dir .::/ test-rs/target/test2.wasm a b c</code></p>\n<p>My environment:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">~/</span><span class=\"n\">ms</span><span class=\"o\">/</span><span class=\"n\">StarlingMonkey15</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">version</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"mf\">30.0.2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">398694</span><span class=\"n\">a59</span><span class=\"w\"> </span><span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">02</span><span class=\"o\">-</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n<span class=\"o\">~/</span><span class=\"n\">ms</span><span class=\"o\">/</span><span class=\"n\">StarlingMonkey15</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">sw_vers</span>\n<span class=\"n\">ProductName</span><span class=\"p\">:</span><span class=\"w\">        </span><span class=\"nc\">macOS</span>\n<span class=\"n\">ProductVersion</span><span class=\"p\">:</span><span class=\"w\">     </span><span class=\"mf\">15.3.1</span>\n<span class=\"n\">BuildVersion</span><span class=\"p\">:</span><span class=\"w\">       </span><span class=\"mi\">24</span><span class=\"n\">D70</span>\n</code></pre></div>\n<h4>Feature</h4>\n<p>Ability to set <code>static_memory_maximum_size</code> from the command line.</p>\n<h4>Benefit</h4>\n<p>Being able to control the memory options from the CLI.</p>\n<h4>Implementation</h4>\n<h4>Alternatives</h4>\n</blockquote>",
        "id": 504575677,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741612083
    },
    {
        "content": "<p>cataggar edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363\">issue #10363</a>:</p>\n<blockquote>\n<p>I'm attempting to use the TypeScript compiler from a component. When I call <code>createProgram</code> TypeScript reads in a bunch of files. The problems is it is running out of memory. I found this out by adding <code>WASMTIME_LOG=trace</code>, which shows:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"n\">T11</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"mf\">10.964128</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"p\">{</span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi:cli/run@0.2.3\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"run\"</span><span class=\"p\">}:</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">runtime</span><span class=\"p\">::</span><span class=\"n\">vm</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">libcalls</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">utf8</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">utf8</span><span class=\"w\"> </span><span class=\"mi\">1306131</span>\n<span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"n\">T11</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"mf\">24.235781</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"p\">{</span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi:cli/run@0.2.3\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"run\"</span><span class=\"p\">}:</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">runtime</span><span class=\"p\">::</span><span class=\"n\">vm</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">libcalls</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">utf8</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">utf8</span><span class=\"w\"> </span><span class=\"mi\">35</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"createProgram failed: out of memory\"</span>\n</code></pre></div>\n<p>This happens directly haver it tries to read in a faily large <code>lib.dom.d.ts</code> file.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">read_file</span><span class=\"w\"> </span><span class=\"s\">\"node_modules/typescript/lib/lib.dom.d.ts\"</span><span class=\"w\"> </span><span class=\"n\">length</span><span class=\"w\"> </span><span class=\"mi\">1306131</span>\n</code></pre></div>\n<p>Copilot helped me find the <a href=\"https://docs.wasmtime.dev/contributing-architecture.html?highlight=static-memory-maximum-size#linear-memory\">docs on linear memory</a> and claimed that adding <code>--static-memory-maximum-size=0</code> would work by not limiting the memory, but the option does not exist. Is there a way to unrestrict the memory limit and increase it? </p>\n<p>This is the current command line:</p>\n<p><code>wasmtime  run --dir .::/ test-rs/target/test2.wasm a b c</code></p>\n<p>I was hoping this would work:</p>\n<p><code>wasmtime --static-memory-maximum-size=0 run --dir .::/ test-rs/target/test2.wasm a b c</code></p>\n<p>My environment:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">~/</span><span class=\"n\">ms</span><span class=\"o\">/</span><span class=\"n\">StarlingMonkey15</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">version</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"mf\">30.0.2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">398694</span><span class=\"n\">a59</span><span class=\"w\"> </span><span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">02</span><span class=\"o\">-</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n<span class=\"o\">~/</span><span class=\"n\">ms</span><span class=\"o\">/</span><span class=\"n\">StarlingMonkey15</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">sw_vers</span>\n<span class=\"n\">ProductName</span><span class=\"p\">:</span><span class=\"w\">        </span><span class=\"nc\">macOS</span>\n<span class=\"n\">ProductVersion</span><span class=\"p\">:</span><span class=\"w\">     </span><span class=\"mf\">15.3.1</span>\n<span class=\"n\">BuildVersion</span><span class=\"p\">:</span><span class=\"w\">       </span><span class=\"mi\">24</span><span class=\"n\">D70</span>\n<span class=\"o\">~/</span><span class=\"n\">ms</span><span class=\"o\">/</span><span class=\"n\">StarlingMonkey15</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"n\">uname</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">m</span>\n<span class=\"n\">arm64</span>\n</code></pre></div>\n<h4>Feature</h4>\n<p>Ability to set <code>static_memory_maximum_size</code> from the command line.</p>\n<h4>Benefit</h4>\n<p>Being able to control the memory options from the CLI.</p>\n<h4>Implementation</h4>\n<h4>Alternatives</h4>\n</blockquote>",
        "id": 504577672,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741612518
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363#issuecomment-2710607146\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363\">issue #10363</a>:</p>\n<blockquote>\n<p><code>static_memory_maximum_size</code> (now called <code>memory_reservation</code>) defaults to 4GB on 64bit platforms (which is also the maximum a wasm module can address when not using memory64/wasm64). It could be that your wasm module itself has placed a limit on the memory size. There is no way to override such a limit other than recompiling the wasm module with a bigger limit. It could also be that tsc genuinely needs more than 4GB on your code, in which case you need to compile for wasm64.</p>\n</blockquote>",
        "id": 504582293,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741613475
    },
    {
        "content": "<p>cataggar <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363#issuecomment-2710913699\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363\">issue #10363</a>:</p>\n<blockquote>\n<p>Thanks @bjorn3. Good chance it genuinely needs more than 4GB. I'll look into wasm64.</p>\n</blockquote>",
        "id": 504611073,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741619160
    },
    {
        "content": "<p>cataggar edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363\">issue #10363</a>:</p>\n<blockquote>\n<p>I'm attempting to use the TypeScript compiler from a component. When I call <code>createProgram</code> TypeScript reads in a bunch of files. The problems is it is running out of memory. I found this out by adding <code>WASMTIME_LOG=trace</code>, which shows:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"n\">T11</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"mf\">10.964128</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"p\">{</span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi:cli/run@0.2.3\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"run\"</span><span class=\"p\">}:</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">runtime</span><span class=\"p\">::</span><span class=\"n\">vm</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">libcalls</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">utf8</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">utf8</span><span class=\"w\"> </span><span class=\"mi\">1306131</span>\n<span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"n\">T11</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"mf\">24.235781</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"p\">{</span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi:cli/run@0.2.3\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"run\"</span><span class=\"p\">}:</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">runtime</span><span class=\"p\">::</span><span class=\"n\">vm</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">libcalls</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">utf8</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">utf8</span><span class=\"w\"> </span><span class=\"mi\">35</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"createProgram failed: out of memory\"</span>\n</code></pre></div>\n<p>This happens directly after it tries to read in a faily large <code>lib.dom.d.ts</code> file.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">read_file</span><span class=\"w\"> </span><span class=\"s\">\"node_modules/typescript/lib/lib.dom.d.ts\"</span><span class=\"w\"> </span><span class=\"n\">length</span><span class=\"w\"> </span><span class=\"mi\">1306131</span>\n</code></pre></div>\n<p>Copilot helped me find the <a href=\"https://docs.wasmtime.dev/contributing-architecture.html?highlight=static-memory-maximum-size#linear-memory\">docs on linear memory</a> and claimed that adding <code>--static-memory-maximum-size=0</code> would work by not limiting the memory, but the option does not exist. Is there a way to unrestrict the memory limit and increase it? </p>\n<p>This is the current command line:</p>\n<p><code>wasmtime  run --dir .::/ test-rs/target/test2.wasm a b c</code></p>\n<p>I was hoping this would work:</p>\n<p><code>wasmtime --static-memory-maximum-size=0 run --dir .::/ test-rs/target/test2.wasm a b c</code></p>\n<p>My environment:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">~/</span><span class=\"n\">ms</span><span class=\"o\">/</span><span class=\"n\">StarlingMonkey15</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">version</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"mf\">30.0.2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">398694</span><span class=\"n\">a59</span><span class=\"w\"> </span><span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">02</span><span class=\"o\">-</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n<span class=\"o\">~/</span><span class=\"n\">ms</span><span class=\"o\">/</span><span class=\"n\">StarlingMonkey15</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">sw_vers</span>\n<span class=\"n\">ProductName</span><span class=\"p\">:</span><span class=\"w\">        </span><span class=\"nc\">macOS</span>\n<span class=\"n\">ProductVersion</span><span class=\"p\">:</span><span class=\"w\">     </span><span class=\"mf\">15.3.1</span>\n<span class=\"n\">BuildVersion</span><span class=\"p\">:</span><span class=\"w\">       </span><span class=\"mi\">24</span><span class=\"n\">D70</span>\n<span class=\"o\">~/</span><span class=\"n\">ms</span><span class=\"o\">/</span><span class=\"n\">StarlingMonkey15</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"n\">uname</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">m</span>\n<span class=\"n\">arm64</span>\n</code></pre></div>\n<h4>Feature</h4>\n<p>Ability to set <code>static_memory_maximum_size</code> from the command line.</p>\n<h4>Benefit</h4>\n<p>Being able to control the memory options from the CLI.</p>\n<h4>Implementation</h4>\n<h4>Alternatives</h4>\n</blockquote>",
        "id": 504612766,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741619513
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363\">issue #10363</a>:</p>\n<blockquote>\n<p>I'm attempting to use the TypeScript compiler from a component. When I call <code>createProgram</code> TypeScript reads in a bunch of files. The problems is it is running out of memory. I found this out by adding <code>WASMTIME_LOG=trace</code>, which shows:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"n\">T11</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"mf\">10.964128</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"p\">{</span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi:cli/run@0.2.3\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"run\"</span><span class=\"p\">}:</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">runtime</span><span class=\"p\">::</span><span class=\"n\">vm</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">libcalls</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">utf8</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">utf8</span><span class=\"w\"> </span><span class=\"mi\">1306131</span>\n<span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">03</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"n\">T11</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">:</span><span class=\"mf\">24.235781</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"p\">{</span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi:cli/run@0.2.3\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"run\"</span><span class=\"p\">}:</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">runtime</span><span class=\"p\">::</span><span class=\"n\">vm</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::</span><span class=\"n\">libcalls</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">utf8</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">utf8</span><span class=\"w\"> </span><span class=\"mi\">35</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"createProgram failed: out of memory\"</span>\n</code></pre></div>\n<p>This happens directly after it tries to read in a faily large <code>lib.dom.d.ts</code> file.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">read_file</span><span class=\"w\"> </span><span class=\"s\">\"node_modules/typescript/lib/lib.dom.d.ts\"</span><span class=\"w\"> </span><span class=\"n\">length</span><span class=\"w\"> </span><span class=\"mi\">1306131</span>\n</code></pre></div>\n<p>Copilot helped me find the <a href=\"https://docs.wasmtime.dev/contributing-architecture.html?highlight=static-memory-maximum-size#linear-memory\">docs on linear memory</a> and claimed that adding <code>--static-memory-maximum-size=0</code> would work by not limiting the memory, but the option does not exist. Is there a way to unrestrict the memory limit and increase it? </p>\n<p>This is the current command line:</p>\n<p><code>wasmtime  run --dir .::/ test-rs/target/test2.wasm a b c</code></p>\n<p>I was hoping this would work:</p>\n<p><code>wasmtime --static-memory-maximum-size=0 run --dir .::/ test-rs/target/test2.wasm a b c</code></p>\n<p>My environment:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">~/</span><span class=\"n\">ms</span><span class=\"o\">/</span><span class=\"n\">StarlingMonkey15</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">version</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"mf\">30.0.2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">398694</span><span class=\"n\">a59</span><span class=\"w\"> </span><span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">02</span><span class=\"o\">-</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n<span class=\"o\">~/</span><span class=\"n\">ms</span><span class=\"o\">/</span><span class=\"n\">StarlingMonkey15</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">sw_vers</span>\n<span class=\"n\">ProductName</span><span class=\"p\">:</span><span class=\"w\">        </span><span class=\"nc\">macOS</span>\n<span class=\"n\">ProductVersion</span><span class=\"p\">:</span><span class=\"w\">     </span><span class=\"mf\">15.3.1</span>\n<span class=\"n\">BuildVersion</span><span class=\"p\">:</span><span class=\"w\">       </span><span class=\"mi\">24</span><span class=\"n\">D70</span>\n<span class=\"o\">~/</span><span class=\"n\">ms</span><span class=\"o\">/</span><span class=\"n\">StarlingMonkey15</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">^</span><span class=\"n\">uname</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">m</span>\n<span class=\"n\">arm64</span>\n</code></pre></div>\n<h4>Feature</h4>\n<p>Ability to set <code>static_memory_maximum_size</code> from the command line.</p>\n<h4>Benefit</h4>\n<p>Being able to control the memory options from the CLI.</p>\n<h4>Implementation</h4>\n<h4>Alternatives</h4>\n</blockquote>",
        "id": 504615528,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741620071
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363#issuecomment-2710962620\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363\">issue #10363</a>:</p>\n<blockquote>\n<p>For future reference you can find up-to-date API documentation at <a href=\"https://docs.rs/wasmtime/latest/wasmtime/\">https://docs.rs/wasmtime/latest/wasmtime/</a>, I'll update the link you found though to match that. Otherwise though looks like this is solved so I'm going to close.</p>\n<blockquote>\n<p>Copilot ... claimed ...</p>\n</blockquote>\n<p>I'd perhaps drop a reminder here that AI things are helpful but need to be checked. They're not infallible and in this situation it gave you flat-out-wrong information. The <code>--static-memory-maximum-size=0</code> flag never un-set a limit of memory, it was completely different.</p>\n</blockquote>",
        "id": 504615531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741620072
    },
    {
        "content": "<p>cataggar <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363#issuecomment-2711555818\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363\">issue #10363</a>:</p>\n<blockquote>\n<p>Thanks @alexcrichton! I'm aware of the AI pitfals. That you for your work also on the <a href=\"https://github.com/rust-lang/rust/blob/master/src/doc/rustc/src/platform-support/wasm64-unknown-unknown.md\">wasm64-unknown-unknown target.</a>. Any plans for a 64-bit wasi target after that such as<code>wasm64-wasip2</code>?</p>\n</blockquote>",
        "id": 504666227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741633302
    },
    {
        "content": "<p>cataggar edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363#issuecomment-2711555818\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363\">issue #10363</a>:</p>\n<blockquote>\n<p>Thanks @alexcrichton! I'm aware of the AI pitfals. Thank you for your work also on the <a href=\"https://github.com/rust-lang/rust/blob/master/src/doc/rustc/src/platform-support/wasm64-unknown-unknown.md\">wasm64-unknown-unknown target.</a>. Any plans for a 64-bit wasi target after that such as<code>wasm64-wasip2</code>?</p>\n</blockquote>",
        "id": 504666598,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741633426
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363#issuecomment-2711561587\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363\">issue #10363</a>:</p>\n<blockquote>\n<p>For more information on that see <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4311\">https://github.com/bytecodealliance/wasmtime/issues/4311</a></p>\n</blockquote>",
        "id": 504666705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741633447
    },
    {
        "content": "<p>cataggar edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363#issuecomment-2711555818\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10363\">issue #10363</a>:</p>\n<blockquote>\n<p>Thanks @alexcrichton! I'm aware of the AI pitfals. Thank you for your work also on the <a href=\"https://github.com/rust-lang/rust/blob/master/src/doc/rustc/src/platform-support/wasm64-unknown-unknown.md\">wasm64-unknown-unknown target</a>. Any plans for a 64-bit wasi target after that such as<code>wasm64-wasip2</code>?</p>\n</blockquote>",
        "id": 504666722,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1741633453
    }
]