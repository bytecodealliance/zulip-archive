[
    {
        "content": "<p>lazytiger opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10545\">issue #10545</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">glam</span><span class=\"p\">::{</span><span class=\"n\">Mat3A</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Vec2</span><span class=\"p\">};</span>\n\n<span class=\"cp\">#[unsafe(no_mangle)]</span>\n<span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"system\"</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">test</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">f32</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Vec2</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0.0</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">..</span><span class=\"mi\">1000000</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Mat3A</span><span class=\"p\">::</span><span class=\"n\">from_angle</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kt\">f32</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">transform_point2</span><span class=\"p\">(</span><span class=\"n\">Vec2</span><span class=\"p\">::</span><span class=\"n\">from_angle</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kt\">f32</span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">x</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>The above code runs 30% slower with pulley than in wasmi. </p>\n</blockquote>",
        "id": 510842733,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744091190
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the pulley label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10545\">Issue #10545</a>.</p>",
        "id": 510949702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744122438
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10545#issuecomment-2786645034\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10545\">issue #10545</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"pulley\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: pulley</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 510949907,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744122482
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10545#issuecomment-2786654499\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10545\">issue #10545</a>:</p>\n<blockquote>\n<p>Thanks for this! This is expected right now in the sense that non-integer related operations basically haven't been optimized at all. There's a fair amount of low-hanging fruit here:</p>\n<ul>\n<li>There are no compare-and-branch instructions for floats, only integers.</li>\n<li>There are no immediate-related optimizations for floats, such as add-reg-and-immediate.</li>\n<li>Pulley's opcode design right now is 1-byte \"base\" opcodes and 3-byte \"extended\" opcodes, and all float ops are 3-byte extended ops meaning they take 2 turns of the interpreter loop to process.</li>\n</ul>\n<p>The first and second are mostly just a matter of adding more instructions and adding Cranelift lowerings in a similar manner to integer lowerings. The second is probably going to require Pulley to switch to a 2-byte opcode namespace instead of a simple/extended split. That is a larger refactoring which should also be measured to see the impact of integer ops.</p>\n<p>I'll note that I won't personally have time to work on this in the near future, but I wanted to at least write these down.</p>\n</blockquote>",
        "id": 510950613,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1744122672
    }
]