[
    {
        "content": "<p>jrmuizel opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141\">issue #11141</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/user-attachments/files/20929191/binary-trees-wasi-opt.wasm.zip\">binary-trees-wasi-opt.wasm.zip</a></p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>Run <code>time wasmtime run -W gc=y binary-trees-wasi-opt.wasm</code></li>\n</ul>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">stretch</span><span class=\"w\"> </span><span class=\"n\">tree</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">4194303</span>\n<span class=\"mi\">1048576</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">32505856</span>\n<span class=\"mi\">262144</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">33292288</span>\n<span class=\"mi\">65536</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">33488896</span>\n<span class=\"mi\">16384</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">33538048</span>\n<span class=\"mi\">4096</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">33550336</span>\n<span class=\"mi\">1024</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">33553408</span>\n<span class=\"mi\">256</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">33554176</span>\n<span class=\"mi\">64</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">33554368</span>\n<span class=\"mi\">16</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">33554416</span>\n<span class=\"n\">long</span><span class=\"w\"> </span><span class=\"n\">lived</span><span class=\"w\"> </span><span class=\"n\">tree</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2097151</span>\n\n<span class=\"n\">real</span><span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"n\">m13</span><span class=\"p\">.</span><span class=\"mi\">350</span><span class=\"n\">s</span>\n<span class=\"n\">user</span><span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"n\">m12</span><span class=\"p\">.</span><span class=\"mi\">736</span><span class=\"n\">s</span>\n<span class=\"n\">sys</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">m0</span><span class=\"p\">.</span><span class=\"mi\">454</span><span class=\"n\">s</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>It should run much faster.<br>\nV8: 1.2s<br>\nFirefox: 4.8s<br>\nSafari: 5.9s</p>\n<h3>Extra Info</h3>\n<p>The benchmark is:</p>\n<div class=\"codehilite\" data-code-language=\"Java\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"nc\">TreeNode</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">TreeNode</span><span class=\"w\"> </span><span class=\"n\">left</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">TreeNode</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"n\">TreeNode</span><span class=\"w\"> </span><span class=\"nf\">bottomUpTree</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">TreeNode</span><span class=\"w\"> </span><span class=\"n\">leftChild</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"na\">bottomUpTree</span><span class=\"p\">(</span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"n\">TreeNode</span><span class=\"w\"> </span><span class=\"n\">rightChild</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"na\">bottomUpTree</span><span class=\"p\">(</span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"n\">TreeNode</span><span class=\"w\"> </span><span class=\"n\">node</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">TreeNode</span><span class=\"p\">();</span>\n<span class=\"w\">            </span><span class=\"n\">node</span><span class=\"p\">.</span><span class=\"na\">left</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">leftChild</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"n\">node</span><span class=\"p\">.</span><span class=\"na\">right</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">rightChild</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">node</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">TreeNode</span><span class=\"w\"> </span><span class=\"n\">node</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">TreeNode</span><span class=\"p\">();</span>\n<span class=\"w\">            </span><span class=\"n\">node</span><span class=\"p\">.</span><span class=\"na\">left</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">null</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"n\">node</span><span class=\"p\">.</span><span class=\"na\">right</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">null</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">node</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">itemCheck</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"na\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">null</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"na\">left</span><span class=\"p\">.</span><span class=\"na\">itemCheck</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"na\">right</span><span class=\"p\">.</span><span class=\"na\">itemCheck</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">minDepth</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// Increase n to make it more interesting</span>\n\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">maxDepth</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">minDepth</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">maxDepth</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">minDepth</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">maxDepth</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">stretchDepth</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">maxDepth</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"n\">TreeNode</span><span class=\"w\"> </span><span class=\"n\">stretchTree</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">TreeNode</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">TreeNode</span><span class=\"w\"> </span><span class=\"n\">temp</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stretchTree</span><span class=\"p\">.</span><span class=\"na\">bottomUpTree</span><span class=\"p\">(</span><span class=\"n\">stretchDepth</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">temp</span><span class=\"p\">.</span><span class=\"na\">itemCheck</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"s\">\"stretch tree of depth \"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">stretchDepth</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"s\">\" check: \"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">println</span><span class=\"p\">(</span><span class=\"n\">check</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">TreeNode</span><span class=\"w\"> </span><span class=\"n\">longLivedTree</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">TreeNode</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">longLivedTree</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">longLivedTree</span><span class=\"p\">.</span><span class=\"na\">bottomUpTree</span><span class=\"p\">(</span><span class=\"n\">maxDepth</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">minDepth</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"o\">&lt;=</span><span class=\"w\"> </span><span class=\"n\">maxDepth</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">iterations</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">maxDepth</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">minDepth</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">check</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;=</span><span class=\"w\"> </span><span class=\"n\">iterations</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">TreeNode</span><span class=\"w\"> </span><span class=\"n\">tree</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">TreeNode</span><span class=\"p\">();</span>\n<span class=\"w\">            </span><span class=\"n\">tree</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tree</span><span class=\"p\">.</span><span class=\"na\">bottomUpTree</span><span class=\"p\">(</span><span class=\"n\">depth</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"n\">check</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">tree</span><span class=\"p\">.</span><span class=\"na\">itemCheck</span><span class=\"p\">();</span>\n<span class=\"w\">            </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">iterations</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"s\">\" trees of depth \"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">depth</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"s\">\" check: \"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">println</span><span class=\"p\">(</span><span class=\"n\">check</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"s\">\"long lived tree of depth \"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">maxDepth</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"s\">\" check: \"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">println</span><span class=\"p\">(</span><span class=\"n\">longLivedTree</span><span class=\"p\">.</span><span class=\"na\">itemCheck</span><span class=\"p\">());</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>compiled with <a href=\"https://github.com/jrmuizel/wasm-lang1\">https://github.com/jrmuizel/wasm-lang1</a></p>\n<p>There's a browser version here: <a href=\"https://zingy-sorbet-48e9a5.netlify.app/binary-trees-opt.html\">https://zingy-sorbet-48e9a5.netlify.app/binary-trees-opt.html</a></p>\n</blockquote>",
        "id": 525934561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750952837
    },
    {
        "content": "<p><a href=\"https://github.com/jrmuizel\">jrmuizel</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141\">Issue #11141</a>.</p>",
        "id": 525934562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750952837
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasm-proposal:gc label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141\">Issue #11141</a>.</p>",
        "id": 525936154,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750953363
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141#issuecomment-3009273370\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141\">issue #11141</a>:</p>\n<blockquote>\n<p>Thanks for filing this issue with a test case and STR, @jrmuizel! Very appreciated.</p>\n<p>First off, in general, when benchmarking Wasm execution in Wasmtime, we want to make sure that we aren't measuring compile time. Unlike browsers, Wasmtime doesn't start with a baseline compiler or interpreter and then dynamically tier up to an optimized compiler; we just (depending on the configuration) compile with our optimizing compiler immediately and then when the whole module is compiled, we start running it. Wasmtime is really more like an AOT compiler than a browser JIT, even though it can technically compile just-in-time. So given all that, in the future, it would be good to do something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$ </span>wasmtime<span class=\"w\"> </span>compile<span class=\"w\"> </span>binary-trees-wasi-opt.wasm<span class=\"w\"> </span>-o<span class=\"w\"> </span>binary-trees-wasi-opt.cwasm\n<span class=\"gp\">$ </span><span class=\"nb\">time</span><span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--allow-precompiled<span class=\"w\"> </span>binary-trees-wasi-opt.cwasm\n</code></pre></div>\n<p>(And maybe replace <code>time</code> with <a href=\"https://github.com/sharkdp/hyperfine\"><code>hyperfine</code></a> as necessary.)</p>\n<p>Second, just to set expectations, you should know that we have thus far focused only on correctness and haven't put much effort into optimizing the GC implementation yet. Not at the level of the details of codegen nor at the algorithmic level. For example, the default DRC collector uses a fixed size bump chunk in part of its implementation, and whenever that gets full, we trigger a GC. We don't do any doubling of that bump chunk or anything like that based on the GC heap's size, and I suspect this could lead to somewhat pathological behavior. See also <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9351\">https://github.com/bytecodealliance/wasmtime/issues/9351</a> for a collection of GC optimizations that we haven't investigated yet.</p>\n<p>Finally, if the test case doesn't allocate too much, it is also worth investigating whether using the null collector has a different performance profile than the default DRC collector. If the test case is hitting the potential pathological behavior previously described, then using the null collector will avoid that. That's of course not necessarily a solution for users, but is very useful information to include in issues. Basically, this helps us diagnose whether the issue is in our codegen or the collector implementation itself.</p>\n<p>Anyways, that's all just some hopefully helpful background and context for you. I will investigate what's going on here in more detail in a little bit.</p>\n</blockquote>",
        "id": 525953350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750959694
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141#issuecomment-3009467719\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141\">issue #11141</a>:</p>\n<blockquote>\n<p>The benchmark doesn't complete with the null collector, but the output before it OOMs is coming <em>much</em> quicker, so this is probably related to something in the DRC collector itself.</p>\n</blockquote>",
        "id": 525961426,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750962751
    },
    {
        "content": "<p>jrmuizel <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141#issuecomment-3009844225\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141\">issue #11141</a>:</p>\n<blockquote>\n<p>Pre-compiling doesn't seem to help:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">allow</span><span class=\"o\">-</span><span class=\"n\">precompiled</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"w\"> </span><span class=\"n\">gc</span><span class=\"w\"> </span><span class=\"n\">binary</span><span class=\"o\">-</span><span class=\"n\">trees</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">opt</span><span class=\"p\">.</span><span class=\"n\">cwasm</span>\n<span class=\"n\">stretch</span><span class=\"w\"> </span><span class=\"n\">tree</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">4194303</span>\n<span class=\"mi\">1048576</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">32505856</span>\n<span class=\"mi\">262144</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">33292288</span>\n<span class=\"mi\">65536</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">33488896</span>\n<span class=\"mi\">16384</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">33538048</span>\n<span class=\"mi\">4096</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">33550336</span>\n<span class=\"mi\">1024</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">33553408</span>\n<span class=\"mi\">256</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">33554176</span>\n<span class=\"mi\">64</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">33554368</span>\n<span class=\"mi\">16</span><span class=\"w\"> </span><span class=\"n\">trees</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">33554416</span>\n<span class=\"n\">long</span><span class=\"w\"> </span><span class=\"n\">lived</span><span class=\"w\"> </span><span class=\"n\">tree</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"n\">check</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2097151</span>\n\n<span class=\"n\">real</span><span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"n\">m12</span><span class=\"p\">.</span><span class=\"mi\">869</span><span class=\"n\">s</span>\n<span class=\"n\">user</span><span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"n\">m12</span><span class=\"p\">.</span><span class=\"mi\">303</span><span class=\"n\">s</span>\n<span class=\"n\">sys</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">m0</span><span class=\"p\">.</span><span class=\"mi\">467</span><span class=\"n\">s</span>\n</code></pre></div>\n<p>The test case allocates a lot. It's basically just this: <a href=\"https://benchmarksgame-team.pages.debian.net/benchmarksgame/program/binarytrees-javavm-2.html\">https://benchmarksgame-team.pages.debian.net/benchmarksgame/program/binarytrees-javavm-2.html</a></p>\n<p>The other wasm implementations spend most of their time in GC as well.</p>\n<p>Here's a profile of wasmtime: <a href=\"https://share.firefox.dev/4k8jCy0\">https://share.firefox.dev/4k8jCy0</a></p>\n<p>and the Spidermonkey bug for the slowness compared to Chrome:<br>\n<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1971860\">https://bugzilla.mozilla.org/show_bug.cgi?id=1971860</a></p>\n</blockquote>",
        "id": 525974723,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750969123
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141#issuecomment-3010255998\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141\">issue #11141</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/pull/11144\">https://github.com/bytecodealliance/wasmtime/pull/11144</a> fixes the bump chunk issue I was talking about, and cuts the test case's runtime in half for me</p>\n</blockquote>",
        "id": 525985262,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750974747
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141#issuecomment-3010298767\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141\">issue #11141</a>:</p>\n<blockquote>\n<p>15% of the remaining time is spent cloning <code>Arc</code>s inside <code>MmapBase</code> and <code>MmapOffset</code> just to get the base pointer for a <code>VMMemoryDefinition</code> <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span> </p>\n</blockquote>",
        "id": 525986749,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750975792
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141#issuecomment-3013873389\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141\">issue #11141</a>:</p>\n<blockquote>\n<blockquote>\n<p>15% of the remaining time is spent cloning <code>Arc</code>s inside <code>MmapBase</code> and <code>MmapOffset</code> just to get the base pointer for a <code>VMMemoryDefinition</code> <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>\n</blockquote>\n<p>And another 15% of that time is spent dropping those <code>Arc</code>s that we just cloned.</p>\n<p>WIP patch for this in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11148\">https://github.com/bytecodealliance/wasmtime/pull/11148</a></p>\n</blockquote>",
        "id": 526127097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751045294
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141#issuecomment-3014073849\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141\">issue #11141</a>:</p>\n<blockquote>\n<p>In the end, @fitzgen this benchmark (or something similar?) might be a good addition to sightglass perhaps</p>\n</blockquote>",
        "id": 526137925,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751050293
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141#issuecomment-3014096809\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141\">issue #11141</a>:</p>\n<blockquote>\n<blockquote>\n<p>In the end, <a href=\"https://github.com/fitzgen\">@fitzgen</a> this benchmark (or something similar?) might be a good addition to sightglass perhaps</p>\n</blockquote>\n<p>Yeah I was thinking the same, although we'd need to get its runtime a little lower probably for that to be reasonable.</p>\n</blockquote>",
        "id": 526139026,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751050894
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141#issuecomment-3020342248\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141\">issue #11141</a>:</p>\n<blockquote>\n<p>See also <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11159\">https://github.com/bytecodealliance/wasmtime/issues/11159</a></p>\n</blockquote>",
        "id": 526465718,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751309407
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141#issuecomment-3020507211\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141\">issue #11141</a>:</p>\n<blockquote>\n<p>See also <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11162\">https://github.com/bytecodealliance/wasmtime/issues/11162</a></p>\n</blockquote>",
        "id": 526477535,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751313233
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141#issuecomment-3020533899\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141\">issue #11141</a>:</p>\n<blockquote>\n<p>See also <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11163\">https://github.com/bytecodealliance/wasmtime/issues/11163</a></p>\n</blockquote>",
        "id": 526479078,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751313946
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141#issuecomment-3020565490\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11141\">issue #11141</a>:</p>\n<blockquote>\n<p>See also <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11164\">https://github.com/bytecodealliance/wasmtime/issues/11164</a></p>\n</blockquote>",
        "id": 526480755,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1751314682
    }
]