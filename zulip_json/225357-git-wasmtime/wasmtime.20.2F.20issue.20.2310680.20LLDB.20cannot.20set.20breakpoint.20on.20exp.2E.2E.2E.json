[
    {
        "content": "<p>sammyne opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10680\">issue #10680</a>:</p>\n<blockquote>\n<h2>Environment</h2>\n<ul>\n<li>wasmtime 32.0.0</li>\n<li>wasi-sdk 22.0</li>\n</ul>\n<h2>Source codes</h2>\n<h3>fib-cc/lib.cc: C++ source codes</h3>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;cstdint&gt;</span>\n\n<span class=\"n\">__attribute__</span><span class=\"p\">((</span><span class=\"n\">__export_name__</span><span class=\"p\">(</span><span class=\"s\">\"fib\"</span><span class=\"p\">)))</span>\n<span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"p\">(</span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n\n<span class=\"w\">  </span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">auto</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>debugger/src/main.rs: embedded wasmtime</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"o\">*</span><span class=\"p\">;</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">env</span><span class=\"p\">::</span><span class=\"n\">args</span><span class=\"p\">().</span><span class=\"n\">skip</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">).</span><span class=\"n\">next</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nb\">None</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"s\">\"target/wasm32-unknown-unknown/debug/fib.wasm\"</span><span class=\"p\">.</span><span class=\"n\">to_owned</span><span class=\"p\">(),</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Load our previously compiled wasm file (built previously with Cargo) and</span>\n<span class=\"w\">    </span><span class=\"c1\">// also ensure that we generate debuginfo so this executable can be</span>\n<span class=\"w\">    </span><span class=\"c1\">// debugged in GDB.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"n\">Config</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">debug_info</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">cranelift_opt_level</span><span class=\"p\">(</span><span class=\"n\">OptLevel</span><span class=\"p\">::</span><span class=\"nb\">None</span><span class=\"p\">),</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n\n<span class=\"w\">    </span><span class=\"c1\">//const PATH: &amp;str = \"target/wasm32-wasip1/debug/fib.wasm\";</span>\n<span class=\"w\">    </span><span class=\"c1\">//const PATH: &amp;str = \"target/wasm32-unknown-unknown/debug/fib.wasm\";</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"p\">::</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instance</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[])</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Invoke `fib` export</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">get_typed_func</span><span class=\"p\">::</span><span class=\"o\">&lt;</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"fib\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"fib(6) = {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Makefile</h3>\n<div class=\"codehilite\" data-code-language=\"Makefile\"><pre><span></span><code><span class=\"nv\">debugger</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>target/release/debugger\n<span class=\"nv\">fibcc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>fib-cc/build/fib-cc.wasm\n\n<span class=\"nf\">.PHONY</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">all</span>\n<span class=\"nf\">all</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"k\">$(</span><span class=\"nv\">debugger</span><span class=\"k\">)</span> <span class=\"k\">$(</span><span class=\"nv\">fibcc</span><span class=\"k\">)</span>\n\n<span class=\"nf\">$(debugger)</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">debugger</span>/<span class=\"n\">src</span>/<span class=\"n\">main</span>.<span class=\"n\">rs</span>\n<span class=\"w\">    </span>cargo<span class=\"w\"> </span>build<span class=\"w\"> </span>-r<span class=\"w\"> </span>-p<span class=\"w\"> </span>debugger\n\n<span class=\"nf\">$(fibcc)</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">fib</span>-<span class=\"n\">cc</span>/<span class=\"n\">lib</span>.<span class=\"n\">cc</span>\n<span class=\"w\">    </span><span class=\"k\">$(</span>MAKE<span class=\"k\">)</span><span class=\"w\"> </span>-C<span class=\"w\"> </span>fib-cc\n\n<span class=\"nf\">lldb-cc</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"k\">$(</span><span class=\"nv\">debugger</span><span class=\"k\">)</span> <span class=\"k\">$(</span><span class=\"nv\">fibcc</span><span class=\"k\">)</span>\n<span class=\"w\">    </span>lldb<span class=\"w\"> </span>-O<span class=\"w\"> </span><span class=\"s1\">'settings set target.disable-aslr false'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'breakpoint set -n main'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'r'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s2\">\"breakpoint set -n 'fib'\"</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'c'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'n'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'p a'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>--<span class=\"w\"> </span><span class=\"k\">$(</span>debugger<span class=\"k\">)</span><span class=\"w\"> </span><span class=\"k\">$(</span>fibcc<span class=\"k\">)</span>\n\n<span class=\"nf\">.PHONY</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">clean</span>\n<span class=\"nf\">clean</span><span class=\"o\">:</span>\n<span class=\"w\">    </span>cargo<span class=\"w\"> </span>clean\n<span class=\"w\">    </span><span class=\"k\">$(</span>MAKE<span class=\"k\">)</span><span class=\"w\"> </span>-C<span class=\"w\"> </span>fib-cc<span class=\"w\"> </span>clean\n</code></pre></div>\n<h2>Using export name as 'fib'</h2>\n<p>Running <code>make lldb-cc</code> with <code>__attribute__((__export_name__(\"fib\")))</code> in fib-cc/lib.cc gives me expected output as</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>root@eafb8747aaf8:/workspace/module#<span class=\"w\"> </span>make<span class=\"w\"> </span>lldb-cc\ncargo<span class=\"w\"> </span>build<span class=\"w\"> </span>-r<span class=\"w\"> </span>-p<span class=\"w\"> </span>debugger\n<span class=\"w\">   </span>Compiling<span class=\"w\"> </span>debugger<span class=\"w\"> </span>v0.1.0<span class=\"w\"> </span><span class=\"o\">(</span>/workspace/module/debugger<span class=\"o\">)</span>\n<span class=\"w\">    </span>Finished<span class=\"w\"> </span><span class=\"sb\">`</span>release<span class=\"sb\">`</span><span class=\"w\"> </span>profile<span class=\"w\"> </span><span class=\"o\">[</span>optimized<span class=\"o\">]</span><span class=\"w\"> </span>target<span class=\"o\">(</span>s<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"m\">1</span>.36s\nlldb<span class=\"w\"> </span>-O<span class=\"w\"> </span><span class=\"s1\">'settings set target.disable-aslr false'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'breakpoint set -n main'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'r'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s2\">\"breakpoint set -n 'fib'\"</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'c'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'n'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'p a'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>--<span class=\"w\"> </span>target/release/debugger<span class=\"w\"> </span>fib-cc/build/fib-cc.wasm\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>settings<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>target.disable-aslr<span class=\"w\"> </span><span class=\"nb\">false</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>target<span class=\"w\"> </span>create<span class=\"w\"> </span><span class=\"s2\">\"target/release/debugger\"</span>\nCurrent<span class=\"w\"> </span>executable<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"s1\">'/workspace/module/target/release/debugger'</span><span class=\"w\"> </span><span class=\"o\">(</span>x86_64<span class=\"o\">)</span>.\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>settings<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>--<span class=\"w\"> </span>target.run-args<span class=\"w\">  </span><span class=\"s2\">\"fib-cc/build/fib-cc.wasm\"</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>-n<span class=\"w\"> </span>main\nBreakpoint<span class=\"w\"> </span><span class=\"m\">1</span>:<span class=\"w\"> </span><span class=\"nv\">where</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>debugger<span class=\"sb\">`</span>main,<span class=\"w\"> </span><span class=\"nv\">address</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>0x00000000000baac0\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>r\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>launched:<span class=\"w\"> </span><span class=\"s1\">'/workspace/module/target/release/debugger'</span><span class=\"w\"> </span><span class=\"o\">(</span>x86_64<span class=\"o\">)</span>\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>stopped\n*<span class=\"w\"> </span>thread<span class=\"w\"> </span><span class=\"c1\">#1, name = 'debugger', stop reason = breakpoint 1.1</span>\n<span class=\"w\">    </span>frame<span class=\"w\"> </span><span class=\"c1\">#0: 0x0000559dedb3aac0 debugger`main</span>\ndebugger<span class=\"sb\">`</span>main:\n-&gt;<span class=\"w\">  </span>0x559dedb3aac0<span class=\"w\"> </span>&lt;+0&gt;:<span class=\"w\"> </span>pushq<span class=\"w\">  </span>%rax\n<span class=\"w\">    </span>0x559dedb3aac1<span class=\"w\"> </span>&lt;+1&gt;:<span class=\"w\"> </span>movq<span class=\"w\">   </span>%rsi,<span class=\"w\"> </span>%rcx\n<span class=\"w\">    </span>0x559dedb3aac4<span class=\"w\"> </span>&lt;+4&gt;:<span class=\"w\"> </span>movslq<span class=\"w\"> </span>%edi,<span class=\"w\"> </span>%rdx\n<span class=\"w\">    </span>0x559dedb3aac7<span class=\"w\"> </span>&lt;+7&gt;:<span class=\"w\"> </span>leaq<span class=\"w\">   </span>-0x59e<span class=\"o\">(</span>%rip<span class=\"o\">)</span>,<span class=\"w\"> </span>%rax<span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span>debugger::main::h4a2646090ba600e9\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>-n<span class=\"w\"> </span><span class=\"s1\">'fib'</span>\nBreakpoint<span class=\"w\"> </span><span class=\"m\">2</span>:<span class=\"w\"> </span>no<span class=\"w\"> </span>locations<span class=\"w\"> </span><span class=\"o\">(</span>pending<span class=\"o\">)</span>.\nWARNING:<span class=\"w\">  </span>Unable<span class=\"w\"> </span>to<span class=\"w\"> </span>resolve<span class=\"w\"> </span>breakpoint<span class=\"w\"> </span>to<span class=\"w\"> </span>any<span class=\"w\"> </span>actual<span class=\"w\"> </span>locations.\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>c\n<span class=\"m\">1</span><span class=\"w\"> </span>location<span class=\"w\"> </span>added<span class=\"w\"> </span>to<span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"m\">2</span>\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>resuming\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>stopped\n*<span class=\"w\"> </span>thread<span class=\"w\"> </span><span class=\"c1\">#1, name = 'debugger', stop reason = breakpoint 2.1</span>\n<span class=\"w\">    </span>frame<span class=\"w\"> </span><span class=\"c1\">#0: 0x00007ff04c07b013 JIT(0x559def806040)`fib(n=6) at lib.cc:6:12</span>\n<span class=\"w\">   </span><span class=\"m\">3</span><span class=\"w\">    </span>//<span class=\"w\"> </span>export_name<span class=\"w\"> </span>之后才能找到调试符号。\n<span class=\"w\">   </span><span class=\"m\">4</span><span class=\"w\">    </span>__attribute__<span class=\"o\">((</span>__export_name__<span class=\"o\">(</span><span class=\"s2\">\"fib\"</span><span class=\"o\">)))</span>\n<span class=\"w\">   </span><span class=\"m\">5</span><span class=\"w\">    </span>extern<span class=\"w\"> </span><span class=\"s2\">\"C\"</span><span class=\"w\"> </span>uint32_t<span class=\"w\"> </span>fib<span class=\"o\">(</span>uint32_t<span class=\"w\"> </span>n<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n-&gt;<span class=\"w\"> </span><span class=\"m\">6</span><span class=\"w\">      </span>uint32_t<span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"m\">7</span><span class=\"w\">      </span>uint32_t<span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"m\">8</span>\n<span class=\"w\">   </span><span class=\"m\">9</span><span class=\"w\">      </span><span class=\"k\">for</span><span class=\"o\">(</span>int<span class=\"w\"> </span><span class=\"nv\">i</span><span class=\"o\">=</span><span class=\"m\">0</span><span class=\"p\">;</span><span class=\"w\"> </span>i&lt;n<span class=\"p\">;</span><span class=\"w\"> </span>++i<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>n\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>stopped\n*<span class=\"w\"> </span>thread<span class=\"w\"> </span><span class=\"c1\">#1, name = 'debugger', stop reason = step over</span>\n<span class=\"w\">    </span>frame<span class=\"w\"> </span><span class=\"c1\">#0: 0x00007ff04c07b020 JIT(0x559def806040)`fib(n=6) at lib.cc:7:12</span>\n<span class=\"w\">   </span><span class=\"m\">4</span><span class=\"w\">    </span>__attribute__<span class=\"o\">((</span>__export_name__<span class=\"o\">(</span><span class=\"s2\">\"fib\"</span><span class=\"o\">)))</span>\n<span class=\"w\">   </span><span class=\"m\">5</span><span class=\"w\">    </span>extern<span class=\"w\"> </span><span class=\"s2\">\"C\"</span><span class=\"w\"> </span>uint32_t<span class=\"w\"> </span>fib<span class=\"o\">(</span>uint32_t<span class=\"w\"> </span>n<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">   </span><span class=\"m\">6</span><span class=\"w\">      </span>uint32_t<span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span>\n-&gt;<span class=\"w\"> </span><span class=\"m\">7</span><span class=\"w\">      </span>uint32_t<span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"m\">8</span>\n<span class=\"w\">   </span><span class=\"m\">9</span><span class=\"w\">      </span><span class=\"k\">for</span><span class=\"o\">(</span>int<span class=\"w\"> </span><span class=\"nv\">i</span><span class=\"o\">=</span><span class=\"m\">0</span><span class=\"p\">;</span><span class=\"w\"> </span>i&lt;n<span class=\"p\">;</span><span class=\"w\"> </span>++i<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">   </span><span class=\"m\">10</span><span class=\"w\">       </span>auto<span class=\"w\"> </span><span class=\"nv\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>a<span class=\"p\">;</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>p<span class=\"w\"> </span>a\n<span class=\"o\">(</span>uint32_t<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"m\">1</span>\n</code></pre></div>\n<h2>Problem: using export name as 'fib-cc' gives unexpected output</h2>\n<p>Running <code>make lldb-cc</code> with </p>\n<ul>\n<li><code>__attribute__((__export_name__(\"fib-cc\")))</code> in fib-cc/lib.cc</li>\n<li>renaming target func as 'fib-cc' in debugger/src/main.rs<br>\ngives me unexpected output as</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>root@eafb8747aaf8:/workspace/module#<span class=\"w\"> </span>make<span class=\"w\"> </span>lldb-cc\nlldb<span class=\"w\"> </span>-O<span class=\"w\"> </span><span class=\"s1\">'settings set target.disable-aslr false'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'breakpoint set -n main'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'r'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s2\">\"breakpoint set -n 'fib-cc'\"</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'c'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'n'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'p a'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>--<span class=\"w\"> </span>target/release/debugger<span class=\"w\"> </span>fib-cc/build/fib-cc.wasm\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>settings<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>target.disable-aslr<span class=\"w\"> </span><span class=\"nb\">false</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>target<span class=\"w\"> </span>create<span class=\"w\"> </span><span class=\"s2\">\"target/release/debugger\"</span>\nCurrent<span class=\"w\"> </span>executable<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"s1\">'/workspace/module/target/release/debugger'</span><span class=\"w\"> </span><span class=\"o\">(</span>x86_64<span class=\"o\">)</span>.\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>settings<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>--<span class=\"w\"> </span>target.run-args<span class=\"w\">  </span><span class=\"s2\">\"fib-cc/build/fib-cc.wasm\"</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>-n<span class=\"w\"> </span>main\nBreakpoint<span class=\"w\"> </span><span class=\"m\">1</span>:<span class=\"w\"> </span><span class=\"nv\">where</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>debugger<span class=\"sb\">`</span>main,<span class=\"w\"> </span><span class=\"nv\">address</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>0x00000000000baac0\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>r\nProcess<span class=\"w\"> </span><span class=\"m\">103930</span><span class=\"w\"> </span>launched:<span class=\"w\"> </span><span class=\"s1\">'/workspace/module/target/release/debugger'</span><span class=\"w\"> </span><span class=\"o\">(</span>x86_64<span class=\"o\">)</span>\nProcess<span class=\"w\"> </span><span class=\"m\">103930</span><span class=\"w\"> </span>stopped\n*<span class=\"w\"> </span>thread<span class=\"w\"> </span><span class=\"c1\">#1, name = 'debugger', stop reason = breakpoint 1.1</span>\n<span class=\"w\">    </span>frame<span class=\"w\"> </span><span class=\"c1\">#0: 0x000055557f202ac0 debugger`main</span>\ndebugger<span class=\"sb\">`</span>main:\n-&gt;<span class=\"w\">  </span>0x55557f202ac0<span class=\"w\"> </span>&lt;+0&gt;:<span class=\"w\"> </span>pushq<span class=\"w\">  </span>%rax\n<span class=\"w\">    </span>0x55557f202ac1<span class=\"w\"> </span>&lt;+1&gt;:<span class=\"w\"> </span>movq<span class=\"w\">   </span>%rsi,<span class=\"w\"> </span>%rcx\n<span class=\"w\">    </span>0x55557f202ac4<span class=\"w\"> </span>&lt;+4&gt;:<span class=\"w\"> </span>movslq<span class=\"w\"> </span>%edi,<span class=\"w\"> </span>%rdx\n<span class=\"w\">    </span>0x55557f202ac7<span class=\"w\"> </span>&lt;+7&gt;:<span class=\"w\"> </span>leaq<span class=\"w\">   </span>-0x59e<span class=\"o\">(</span>%rip<span class=\"o\">)</span>,<span class=\"w\"> </span>%rax<span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span>debugger::main::h4a2646090ba600e9\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>-n<span class=\"w\"> </span><span class=\"s1\">'fib-cc'</span>\nBreakpoint<span class=\"w\"> </span><span class=\"m\">2</span>:<span class=\"w\"> </span>no<span class=\"w\"> </span>locations<span class=\"w\"> </span><span class=\"o\">(</span>pending<span class=\"o\">)</span>.\nWARNING:<span class=\"w\">  </span>Unable<span class=\"w\"> </span>to<span class=\"w\"> </span>resolve<span class=\"w\"> </span>breakpoint<span class=\"w\"> </span>to<span class=\"w\"> </span>any<span class=\"w\"> </span>actual<span class=\"w\"> </span>locations.\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>c\nfib<span class=\"o\">(</span><span class=\"m\">6</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">21</span>\nProcess<span class=\"w\"> </span><span class=\"m\">103930</span><span class=\"w\"> </span>resuming\nProcess<span class=\"w\"> </span><span class=\"m\">103930</span><span class=\"w\"> </span>exited<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"nv\">status</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>-1<span class=\"w\"> </span><span class=\"o\">(</span>0xffffffff<span class=\"o\">)</span><span class=\"w\"> </span>lost<span class=\"w\"> </span>connection\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>n\nerror:<span class=\"w\"> </span>Command<span class=\"w\"> </span>requires<span class=\"w\"> </span>a<span class=\"w\"> </span>process<span class=\"w\"> </span>which<span class=\"w\"> </span>is<span class=\"w\"> </span>currently<span class=\"w\"> </span>stopped.\n</code></pre></div>\n<p>Why LLDB cannot find symbol exported name 'fib-cc'?</p>\n<p>The full project is hosted in <a href=\"https://github.com/sammyne/deep-dive-wasm-debug/tree/main/module\">https://github.com/sammyne/deep-dive-wasm-debug/tree/main/module</a>.</p>\n</blockquote>",
        "id": 514648952,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745762419
    },
    {
        "content": "<p>sammyne edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10680\">issue #10680</a>:</p>\n<blockquote>\n<h2>Environment</h2>\n<ul>\n<li>wasmtime 32.0.0</li>\n<li>wasi-sdk 22.0</li>\n</ul>\n<h2>Source codes</h2>\n<h3>fib-cc/lib.cc: C++ source codes</h3>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;cstdint&gt;</span>\n\n<span class=\"n\">__attribute__</span><span class=\"p\">((</span><span class=\"n\">__export_name__</span><span class=\"p\">(</span><span class=\"s\">\"fib\"</span><span class=\"p\">)))</span>\n<span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"p\">(</span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n\n<span class=\"w\">  </span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">auto</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>debugger/src/main.rs: embedded wasmtime</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"o\">*</span><span class=\"p\">;</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">env</span><span class=\"p\">::</span><span class=\"n\">args</span><span class=\"p\">().</span><span class=\"n\">skip</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">).</span><span class=\"n\">next</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nb\">None</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"s\">\"target/wasm32-unknown-unknown/debug/fib.wasm\"</span><span class=\"p\">.</span><span class=\"n\">to_owned</span><span class=\"p\">(),</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Load our previously compiled wasm file (built previously with Cargo) and</span>\n<span class=\"w\">    </span><span class=\"c1\">// also ensure that we generate debuginfo so this executable can be</span>\n<span class=\"w\">    </span><span class=\"c1\">// debugged in GDB.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"n\">Config</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">debug_info</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">cranelift_opt_level</span><span class=\"p\">(</span><span class=\"n\">OptLevel</span><span class=\"p\">::</span><span class=\"nb\">None</span><span class=\"p\">),</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n\n<span class=\"w\">    </span><span class=\"c1\">//const PATH: &amp;str = \"target/wasm32-wasip1/debug/fib.wasm\";</span>\n<span class=\"w\">    </span><span class=\"c1\">//const PATH: &amp;str = \"target/wasm32-unknown-unknown/debug/fib.wasm\";</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"p\">::</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instance</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[])</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Invoke `fib` export</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">get_typed_func</span><span class=\"p\">::</span><span class=\"o\">&lt;</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"fib\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"fib(6) = {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Makefile</h3>\n<div class=\"codehilite\" data-code-language=\"Makefile\"><pre><span></span><code><span class=\"nv\">debugger</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>target/release/debugger\n<span class=\"nv\">fibcc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>fib-cc/build/fib-cc.wasm\n\n<span class=\"nf\">.PHONY</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">all</span>\n<span class=\"nf\">all</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"k\">$(</span><span class=\"nv\">debugger</span><span class=\"k\">)</span> <span class=\"k\">$(</span><span class=\"nv\">fibcc</span><span class=\"k\">)</span>\n\n<span class=\"nf\">$(debugger)</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">debugger</span>/<span class=\"n\">src</span>/<span class=\"n\">main</span>.<span class=\"n\">rs</span>\n<span class=\"w\">    </span>cargo<span class=\"w\"> </span>build<span class=\"w\"> </span>-r<span class=\"w\"> </span>-p<span class=\"w\"> </span>debugger\n\n<span class=\"nf\">$(fibcc)</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">fib</span>-<span class=\"n\">cc</span>/<span class=\"n\">lib</span>.<span class=\"n\">cc</span>\n<span class=\"w\">    </span><span class=\"k\">$(</span>MAKE<span class=\"k\">)</span><span class=\"w\"> </span>-C<span class=\"w\"> </span>fib-cc\n\n<span class=\"nf\">lldb-cc</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"k\">$(</span><span class=\"nv\">debugger</span><span class=\"k\">)</span> <span class=\"k\">$(</span><span class=\"nv\">fibcc</span><span class=\"k\">)</span>\n<span class=\"w\">    </span>lldb<span class=\"w\"> </span>-O<span class=\"w\"> </span><span class=\"s1\">'settings set target.disable-aslr false'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'breakpoint set -n main'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'r'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s2\">\"breakpoint set -n 'fib'\"</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'c'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'n'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'p a'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>--<span class=\"w\"> </span><span class=\"k\">$(</span>debugger<span class=\"k\">)</span><span class=\"w\"> </span><span class=\"k\">$(</span>fibcc<span class=\"k\">)</span>\n\n<span class=\"nf\">.PHONY</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">clean</span>\n<span class=\"nf\">clean</span><span class=\"o\">:</span>\n<span class=\"w\">    </span>cargo<span class=\"w\"> </span>clean\n<span class=\"w\">    </span><span class=\"k\">$(</span>MAKE<span class=\"k\">)</span><span class=\"w\"> </span>-C<span class=\"w\"> </span>fib-cc<span class=\"w\"> </span>clean\n</code></pre></div>\n<h2>Using export name as 'fib'</h2>\n<p>Running <code>make lldb-cc</code> with <code>__attribute__((__export_name__(\"fib\")))</code> in fib-cc/lib.cc gives me expected output as</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>root@eafb8747aaf8:/workspace/module#<span class=\"w\"> </span>make<span class=\"w\"> </span>lldb-cc\ncargo<span class=\"w\"> </span>build<span class=\"w\"> </span>-r<span class=\"w\"> </span>-p<span class=\"w\"> </span>debugger\n<span class=\"w\">   </span>Compiling<span class=\"w\"> </span>debugger<span class=\"w\"> </span>v0.1.0<span class=\"w\"> </span><span class=\"o\">(</span>/workspace/module/debugger<span class=\"o\">)</span>\n<span class=\"w\">    </span>Finished<span class=\"w\"> </span><span class=\"sb\">`</span>release<span class=\"sb\">`</span><span class=\"w\"> </span>profile<span class=\"w\"> </span><span class=\"o\">[</span>optimized<span class=\"o\">]</span><span class=\"w\"> </span>target<span class=\"o\">(</span>s<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"m\">1</span>.36s\nlldb<span class=\"w\"> </span>-O<span class=\"w\"> </span><span class=\"s1\">'settings set target.disable-aslr false'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'breakpoint set -n main'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'r'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s2\">\"breakpoint set -n 'fib'\"</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'c'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'n'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'p a'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>--<span class=\"w\"> </span>target/release/debugger<span class=\"w\"> </span>fib-cc/build/fib-cc.wasm\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>settings<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>target.disable-aslr<span class=\"w\"> </span><span class=\"nb\">false</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>target<span class=\"w\"> </span>create<span class=\"w\"> </span><span class=\"s2\">\"target/release/debugger\"</span>\nCurrent<span class=\"w\"> </span>executable<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"s1\">'/workspace/module/target/release/debugger'</span><span class=\"w\"> </span><span class=\"o\">(</span>x86_64<span class=\"o\">)</span>.\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>settings<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>--<span class=\"w\"> </span>target.run-args<span class=\"w\">  </span><span class=\"s2\">\"fib-cc/build/fib-cc.wasm\"</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>-n<span class=\"w\"> </span>main\nBreakpoint<span class=\"w\"> </span><span class=\"m\">1</span>:<span class=\"w\"> </span><span class=\"nv\">where</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>debugger<span class=\"sb\">`</span>main,<span class=\"w\"> </span><span class=\"nv\">address</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>0x00000000000baac0\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>r\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>launched:<span class=\"w\"> </span><span class=\"s1\">'/workspace/module/target/release/debugger'</span><span class=\"w\"> </span><span class=\"o\">(</span>x86_64<span class=\"o\">)</span>\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>stopped\n*<span class=\"w\"> </span>thread<span class=\"w\"> </span><span class=\"c1\">#1, name = 'debugger', stop reason = breakpoint 1.1</span>\n<span class=\"w\">    </span>frame<span class=\"w\"> </span><span class=\"c1\">#0: 0x0000559dedb3aac0 debugger`main</span>\ndebugger<span class=\"sb\">`</span>main:\n-&gt;<span class=\"w\">  </span>0x559dedb3aac0<span class=\"w\"> </span>&lt;+0&gt;:<span class=\"w\"> </span>pushq<span class=\"w\">  </span>%rax\n<span class=\"w\">    </span>0x559dedb3aac1<span class=\"w\"> </span>&lt;+1&gt;:<span class=\"w\"> </span>movq<span class=\"w\">   </span>%rsi,<span class=\"w\"> </span>%rcx\n<span class=\"w\">    </span>0x559dedb3aac4<span class=\"w\"> </span>&lt;+4&gt;:<span class=\"w\"> </span>movslq<span class=\"w\"> </span>%edi,<span class=\"w\"> </span>%rdx\n<span class=\"w\">    </span>0x559dedb3aac7<span class=\"w\"> </span>&lt;+7&gt;:<span class=\"w\"> </span>leaq<span class=\"w\">   </span>-0x59e<span class=\"o\">(</span>%rip<span class=\"o\">)</span>,<span class=\"w\"> </span>%rax<span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span>debugger::main::h4a2646090ba600e9\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>-n<span class=\"w\"> </span><span class=\"s1\">'fib'</span>\nBreakpoint<span class=\"w\"> </span><span class=\"m\">2</span>:<span class=\"w\"> </span>no<span class=\"w\"> </span>locations<span class=\"w\"> </span><span class=\"o\">(</span>pending<span class=\"o\">)</span>.\nWARNING:<span class=\"w\">  </span>Unable<span class=\"w\"> </span>to<span class=\"w\"> </span>resolve<span class=\"w\"> </span>breakpoint<span class=\"w\"> </span>to<span class=\"w\"> </span>any<span class=\"w\"> </span>actual<span class=\"w\"> </span>locations.\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>c\n<span class=\"m\">1</span><span class=\"w\"> </span>location<span class=\"w\"> </span>added<span class=\"w\"> </span>to<span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"m\">2</span>\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>resuming\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>stopped\n*<span class=\"w\"> </span>thread<span class=\"w\"> </span><span class=\"c1\">#1, name = 'debugger', stop reason = breakpoint 2.1</span>\n<span class=\"w\">    </span>frame<span class=\"w\"> </span><span class=\"c1\">#0: 0x00007ff04c07b013 JIT(0x559def806040)`fib(n=6) at lib.cc:6:12</span>\n<span class=\"w\">   </span><span class=\"m\">3</span><span class=\"w\">    </span>//<span class=\"w\"> </span>export_name<span class=\"w\"> </span>之后才能找到调试符号。\n<span class=\"w\">   </span><span class=\"m\">4</span><span class=\"w\">    </span>__attribute__<span class=\"o\">((</span>__export_name__<span class=\"o\">(</span><span class=\"s2\">\"fib\"</span><span class=\"o\">)))</span>\n<span class=\"w\">   </span><span class=\"m\">5</span><span class=\"w\">    </span>extern<span class=\"w\"> </span><span class=\"s2\">\"C\"</span><span class=\"w\"> </span>uint32_t<span class=\"w\"> </span>fib<span class=\"o\">(</span>uint32_t<span class=\"w\"> </span>n<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n-&gt;<span class=\"w\"> </span><span class=\"m\">6</span><span class=\"w\">      </span>uint32_t<span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"m\">7</span><span class=\"w\">      </span>uint32_t<span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"m\">8</span>\n<span class=\"w\">   </span><span class=\"m\">9</span><span class=\"w\">      </span><span class=\"k\">for</span><span class=\"o\">(</span>int<span class=\"w\"> </span><span class=\"nv\">i</span><span class=\"o\">=</span><span class=\"m\">0</span><span class=\"p\">;</span><span class=\"w\"> </span>i&lt;n<span class=\"p\">;</span><span class=\"w\"> </span>++i<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>n\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>stopped\n*<span class=\"w\"> </span>thread<span class=\"w\"> </span><span class=\"c1\">#1, name = 'debugger', stop reason = step over</span>\n<span class=\"w\">    </span>frame<span class=\"w\"> </span><span class=\"c1\">#0: 0x00007ff04c07b020 JIT(0x559def806040)`fib(n=6) at lib.cc:7:12</span>\n<span class=\"w\">   </span><span class=\"m\">4</span><span class=\"w\">    </span>__attribute__<span class=\"o\">((</span>__export_name__<span class=\"o\">(</span><span class=\"s2\">\"fib\"</span><span class=\"o\">)))</span>\n<span class=\"w\">   </span><span class=\"m\">5</span><span class=\"w\">    </span>extern<span class=\"w\"> </span><span class=\"s2\">\"C\"</span><span class=\"w\"> </span>uint32_t<span class=\"w\"> </span>fib<span class=\"o\">(</span>uint32_t<span class=\"w\"> </span>n<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">   </span><span class=\"m\">6</span><span class=\"w\">      </span>uint32_t<span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span>\n-&gt;<span class=\"w\"> </span><span class=\"m\">7</span><span class=\"w\">      </span>uint32_t<span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"m\">8</span>\n<span class=\"w\">   </span><span class=\"m\">9</span><span class=\"w\">      </span><span class=\"k\">for</span><span class=\"o\">(</span>int<span class=\"w\"> </span><span class=\"nv\">i</span><span class=\"o\">=</span><span class=\"m\">0</span><span class=\"p\">;</span><span class=\"w\"> </span>i&lt;n<span class=\"p\">;</span><span class=\"w\"> </span>++i<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">   </span><span class=\"m\">10</span><span class=\"w\">       </span>auto<span class=\"w\"> </span><span class=\"nv\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>a<span class=\"p\">;</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>p<span class=\"w\"> </span>a\n<span class=\"o\">(</span>uint32_t<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"m\">1</span>\n</code></pre></div>\n<h2>Problem: using export name as 'fib-cc' gives unexpected output</h2>\n<p>Running <code>make lldb-cc</code> with </p>\n<ul>\n<li><code>__attribute__((__export_name__(\"fib-cc\")))</code> in fib-cc/lib.cc</li>\n<li>renaming target func as 'fib-cc' in debugger/src/main.rs<br>\ngives me unexpected output as</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>root@eafb8747aaf8:/workspace/module#<span class=\"w\"> </span>make<span class=\"w\"> </span>lldb-cc\nlldb<span class=\"w\"> </span>-O<span class=\"w\"> </span><span class=\"s1\">'settings set target.disable-aslr false'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'breakpoint set -n main'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'r'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s2\">\"breakpoint set -n 'fib-cc'\"</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'c'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'n'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'p a'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>--<span class=\"w\"> </span>target/release/debugger<span class=\"w\"> </span>fib-cc/build/fib-cc.wasm\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>settings<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>target.disable-aslr<span class=\"w\"> </span><span class=\"nb\">false</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>target<span class=\"w\"> </span>create<span class=\"w\"> </span><span class=\"s2\">\"target/release/debugger\"</span>\nCurrent<span class=\"w\"> </span>executable<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"s1\">'/workspace/module/target/release/debugger'</span><span class=\"w\"> </span><span class=\"o\">(</span>x86_64<span class=\"o\">)</span>.\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>settings<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>--<span class=\"w\"> </span>target.run-args<span class=\"w\">  </span><span class=\"s2\">\"fib-cc/build/fib-cc.wasm\"</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>-n<span class=\"w\"> </span>main\nBreakpoint<span class=\"w\"> </span><span class=\"m\">1</span>:<span class=\"w\"> </span><span class=\"nv\">where</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>debugger<span class=\"sb\">`</span>main,<span class=\"w\"> </span><span class=\"nv\">address</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>0x00000000000baac0\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>r\nProcess<span class=\"w\"> </span><span class=\"m\">103930</span><span class=\"w\"> </span>launched:<span class=\"w\"> </span><span class=\"s1\">'/workspace/module/target/release/debugger'</span><span class=\"w\"> </span><span class=\"o\">(</span>x86_64<span class=\"o\">)</span>\nProcess<span class=\"w\"> </span><span class=\"m\">103930</span><span class=\"w\"> </span>stopped\n*<span class=\"w\"> </span>thread<span class=\"w\"> </span><span class=\"c1\">#1, name = 'debugger', stop reason = breakpoint 1.1</span>\n<span class=\"w\">    </span>frame<span class=\"w\"> </span><span class=\"c1\">#0: 0x000055557f202ac0 debugger`main</span>\ndebugger<span class=\"sb\">`</span>main:\n-&gt;<span class=\"w\">  </span>0x55557f202ac0<span class=\"w\"> </span>&lt;+0&gt;:<span class=\"w\"> </span>pushq<span class=\"w\">  </span>%rax\n<span class=\"w\">    </span>0x55557f202ac1<span class=\"w\"> </span>&lt;+1&gt;:<span class=\"w\"> </span>movq<span class=\"w\">   </span>%rsi,<span class=\"w\"> </span>%rcx\n<span class=\"w\">    </span>0x55557f202ac4<span class=\"w\"> </span>&lt;+4&gt;:<span class=\"w\"> </span>movslq<span class=\"w\"> </span>%edi,<span class=\"w\"> </span>%rdx\n<span class=\"w\">    </span>0x55557f202ac7<span class=\"w\"> </span>&lt;+7&gt;:<span class=\"w\"> </span>leaq<span class=\"w\">   </span>-0x59e<span class=\"o\">(</span>%rip<span class=\"o\">)</span>,<span class=\"w\"> </span>%rax<span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span>debugger::main::h4a2646090ba600e9\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>-n<span class=\"w\"> </span><span class=\"s1\">'fib-cc'</span>\nBreakpoint<span class=\"w\"> </span><span class=\"m\">2</span>:<span class=\"w\"> </span>no<span class=\"w\"> </span>locations<span class=\"w\"> </span><span class=\"o\">(</span>pending<span class=\"o\">)</span>.\nWARNING:<span class=\"w\">  </span>Unable<span class=\"w\"> </span>to<span class=\"w\"> </span>resolve<span class=\"w\"> </span>breakpoint<span class=\"w\"> </span>to<span class=\"w\"> </span>any<span class=\"w\"> </span>actual<span class=\"w\"> </span>locations.\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>c\nfib<span class=\"o\">(</span><span class=\"m\">6</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">21</span>\nProcess<span class=\"w\"> </span><span class=\"m\">103930</span><span class=\"w\"> </span>resuming\nProcess<span class=\"w\"> </span><span class=\"m\">103930</span><span class=\"w\"> </span>exited<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"nv\">status</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>-1<span class=\"w\"> </span><span class=\"o\">(</span>0xffffffff<span class=\"o\">)</span><span class=\"w\"> </span>lost<span class=\"w\"> </span>connection\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>n\nerror:<span class=\"w\"> </span>Command<span class=\"w\"> </span>requires<span class=\"w\"> </span>a<span class=\"w\"> </span>process<span class=\"w\"> </span>which<span class=\"w\"> </span>is<span class=\"w\"> </span>currently<span class=\"w\"> </span>stopped.\n</code></pre></div>\n<p>Why LLDB cannot find symbol exported name 'fib-cc'?</p>\n<p>The full project is hosted in <a href=\"https://github.com/sammyne/deep-dive-wasm-debug/tree/main/module\">https://github.com/sammyne/deep-dive-wasm-debug/tree/main/module</a>.</p>\n</blockquote>",
        "id": 514649275,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745762671
    },
    {
        "content": "<p>sammyne edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10680\">issue #10680</a>:</p>\n<blockquote>\n<h2>Environment</h2>\n<ul>\n<li>wasmtime 32.0.0</li>\n<li>wasi-sdk 22.0</li>\n<li>LLDB 18.1.8</li>\n</ul>\n<h2>Source codes</h2>\n<h3>fib-cc/lib.cc: C++ source codes</h3>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;cstdint&gt;</span>\n\n<span class=\"n\">__attribute__</span><span class=\"p\">((</span><span class=\"n\">__export_name__</span><span class=\"p\">(</span><span class=\"s\">\"fib\"</span><span class=\"p\">)))</span>\n<span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"p\">(</span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n\n<span class=\"w\">  </span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">auto</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>debugger/src/main.rs: embedded wasmtime</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"o\">*</span><span class=\"p\">;</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">env</span><span class=\"p\">::</span><span class=\"n\">args</span><span class=\"p\">().</span><span class=\"n\">skip</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">).</span><span class=\"n\">next</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nb\">None</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"s\">\"target/wasm32-unknown-unknown/debug/fib.wasm\"</span><span class=\"p\">.</span><span class=\"n\">to_owned</span><span class=\"p\">(),</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Load our previously compiled wasm file (built previously with Cargo) and</span>\n<span class=\"w\">    </span><span class=\"c1\">// also ensure that we generate debuginfo so this executable can be</span>\n<span class=\"w\">    </span><span class=\"c1\">// debugged in GDB.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"n\">Config</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">debug_info</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">cranelift_opt_level</span><span class=\"p\">(</span><span class=\"n\">OptLevel</span><span class=\"p\">::</span><span class=\"nb\">None</span><span class=\"p\">),</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n\n<span class=\"w\">    </span><span class=\"c1\">//const PATH: &amp;str = \"target/wasm32-wasip1/debug/fib.wasm\";</span>\n<span class=\"w\">    </span><span class=\"c1\">//const PATH: &amp;str = \"target/wasm32-unknown-unknown/debug/fib.wasm\";</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"p\">::</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instance</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[])</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Invoke `fib` export</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">get_typed_func</span><span class=\"p\">::</span><span class=\"o\">&lt;</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"fib\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"fib(6) = {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Makefile</h3>\n<div class=\"codehilite\" data-code-language=\"Makefile\"><pre><span></span><code><span class=\"nv\">debugger</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>target/release/debugger\n<span class=\"nv\">fibcc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>fib-cc/build/fib-cc.wasm\n\n<span class=\"nf\">.PHONY</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">all</span>\n<span class=\"nf\">all</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"k\">$(</span><span class=\"nv\">debugger</span><span class=\"k\">)</span> <span class=\"k\">$(</span><span class=\"nv\">fibcc</span><span class=\"k\">)</span>\n\n<span class=\"nf\">$(debugger)</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">debugger</span>/<span class=\"n\">src</span>/<span class=\"n\">main</span>.<span class=\"n\">rs</span>\n<span class=\"w\">    </span>cargo<span class=\"w\"> </span>build<span class=\"w\"> </span>-r<span class=\"w\"> </span>-p<span class=\"w\"> </span>debugger\n\n<span class=\"nf\">$(fibcc)</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">fib</span>-<span class=\"n\">cc</span>/<span class=\"n\">lib</span>.<span class=\"n\">cc</span>\n<span class=\"w\">    </span><span class=\"k\">$(</span>MAKE<span class=\"k\">)</span><span class=\"w\"> </span>-C<span class=\"w\"> </span>fib-cc\n\n<span class=\"nf\">lldb-cc</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"k\">$(</span><span class=\"nv\">debugger</span><span class=\"k\">)</span> <span class=\"k\">$(</span><span class=\"nv\">fibcc</span><span class=\"k\">)</span>\n<span class=\"w\">    </span>lldb<span class=\"w\"> </span>-O<span class=\"w\"> </span><span class=\"s1\">'settings set target.disable-aslr false'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'breakpoint set -n main'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'r'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s2\">\"breakpoint set -n 'fib'\"</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'c'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'n'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'p a'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>--<span class=\"w\"> </span><span class=\"k\">$(</span>debugger<span class=\"k\">)</span><span class=\"w\"> </span><span class=\"k\">$(</span>fibcc<span class=\"k\">)</span>\n\n<span class=\"nf\">.PHONY</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">clean</span>\n<span class=\"nf\">clean</span><span class=\"o\">:</span>\n<span class=\"w\">    </span>cargo<span class=\"w\"> </span>clean\n<span class=\"w\">    </span><span class=\"k\">$(</span>MAKE<span class=\"k\">)</span><span class=\"w\"> </span>-C<span class=\"w\"> </span>fib-cc<span class=\"w\"> </span>clean\n</code></pre></div>\n<h2>Using export name as 'fib'</h2>\n<p>Running <code>make lldb-cc</code> with <code>__attribute__((__export_name__(\"fib\")))</code> in fib-cc/lib.cc gives me expected output as</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>root@eafb8747aaf8:/workspace/module#<span class=\"w\"> </span>make<span class=\"w\"> </span>lldb-cc\ncargo<span class=\"w\"> </span>build<span class=\"w\"> </span>-r<span class=\"w\"> </span>-p<span class=\"w\"> </span>debugger\n<span class=\"w\">   </span>Compiling<span class=\"w\"> </span>debugger<span class=\"w\"> </span>v0.1.0<span class=\"w\"> </span><span class=\"o\">(</span>/workspace/module/debugger<span class=\"o\">)</span>\n<span class=\"w\">    </span>Finished<span class=\"w\"> </span><span class=\"sb\">`</span>release<span class=\"sb\">`</span><span class=\"w\"> </span>profile<span class=\"w\"> </span><span class=\"o\">[</span>optimized<span class=\"o\">]</span><span class=\"w\"> </span>target<span class=\"o\">(</span>s<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"m\">1</span>.36s\nlldb<span class=\"w\"> </span>-O<span class=\"w\"> </span><span class=\"s1\">'settings set target.disable-aslr false'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'breakpoint set -n main'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'r'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s2\">\"breakpoint set -n 'fib'\"</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'c'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'n'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'p a'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>--<span class=\"w\"> </span>target/release/debugger<span class=\"w\"> </span>fib-cc/build/fib-cc.wasm\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>settings<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>target.disable-aslr<span class=\"w\"> </span><span class=\"nb\">false</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>target<span class=\"w\"> </span>create<span class=\"w\"> </span><span class=\"s2\">\"target/release/debugger\"</span>\nCurrent<span class=\"w\"> </span>executable<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"s1\">'/workspace/module/target/release/debugger'</span><span class=\"w\"> </span><span class=\"o\">(</span>x86_64<span class=\"o\">)</span>.\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>settings<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>--<span class=\"w\"> </span>target.run-args<span class=\"w\">  </span><span class=\"s2\">\"fib-cc/build/fib-cc.wasm\"</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>-n<span class=\"w\"> </span>main\nBreakpoint<span class=\"w\"> </span><span class=\"m\">1</span>:<span class=\"w\"> </span><span class=\"nv\">where</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>debugger<span class=\"sb\">`</span>main,<span class=\"w\"> </span><span class=\"nv\">address</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>0x00000000000baac0\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>r\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>launched:<span class=\"w\"> </span><span class=\"s1\">'/workspace/module/target/release/debugger'</span><span class=\"w\"> </span><span class=\"o\">(</span>x86_64<span class=\"o\">)</span>\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>stopped\n*<span class=\"w\"> </span>thread<span class=\"w\"> </span><span class=\"c1\">#1, name = 'debugger', stop reason = breakpoint 1.1</span>\n<span class=\"w\">    </span>frame<span class=\"w\"> </span><span class=\"c1\">#0: 0x0000559dedb3aac0 debugger`main</span>\ndebugger<span class=\"sb\">`</span>main:\n-&gt;<span class=\"w\">  </span>0x559dedb3aac0<span class=\"w\"> </span>&lt;+0&gt;:<span class=\"w\"> </span>pushq<span class=\"w\">  </span>%rax\n<span class=\"w\">    </span>0x559dedb3aac1<span class=\"w\"> </span>&lt;+1&gt;:<span class=\"w\"> </span>movq<span class=\"w\">   </span>%rsi,<span class=\"w\"> </span>%rcx\n<span class=\"w\">    </span>0x559dedb3aac4<span class=\"w\"> </span>&lt;+4&gt;:<span class=\"w\"> </span>movslq<span class=\"w\"> </span>%edi,<span class=\"w\"> </span>%rdx\n<span class=\"w\">    </span>0x559dedb3aac7<span class=\"w\"> </span>&lt;+7&gt;:<span class=\"w\"> </span>leaq<span class=\"w\">   </span>-0x59e<span class=\"o\">(</span>%rip<span class=\"o\">)</span>,<span class=\"w\"> </span>%rax<span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span>debugger::main::h4a2646090ba600e9\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>-n<span class=\"w\"> </span><span class=\"s1\">'fib'</span>\nBreakpoint<span class=\"w\"> </span><span class=\"m\">2</span>:<span class=\"w\"> </span>no<span class=\"w\"> </span>locations<span class=\"w\"> </span><span class=\"o\">(</span>pending<span class=\"o\">)</span>.\nWARNING:<span class=\"w\">  </span>Unable<span class=\"w\"> </span>to<span class=\"w\"> </span>resolve<span class=\"w\"> </span>breakpoint<span class=\"w\"> </span>to<span class=\"w\"> </span>any<span class=\"w\"> </span>actual<span class=\"w\"> </span>locations.\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>c\n<span class=\"m\">1</span><span class=\"w\"> </span>location<span class=\"w\"> </span>added<span class=\"w\"> </span>to<span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"m\">2</span>\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>resuming\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>stopped\n*<span class=\"w\"> </span>thread<span class=\"w\"> </span><span class=\"c1\">#1, name = 'debugger', stop reason = breakpoint 2.1</span>\n<span class=\"w\">    </span>frame<span class=\"w\"> </span><span class=\"c1\">#0: 0x00007ff04c07b013 JIT(0x559def806040)`fib(n=6) at lib.cc:6:12</span>\n<span class=\"w\">   </span><span class=\"m\">3</span><span class=\"w\">    </span>//<span class=\"w\"> </span>export_name<span class=\"w\"> </span>之后才能找到调试符号。\n<span class=\"w\">   </span><span class=\"m\">4</span><span class=\"w\">    </span>__attribute__<span class=\"o\">((</span>__export_name__<span class=\"o\">(</span><span class=\"s2\">\"fib\"</span><span class=\"o\">)))</span>\n<span class=\"w\">   </span><span class=\"m\">5</span><span class=\"w\">    </span>extern<span class=\"w\"> </span><span class=\"s2\">\"C\"</span><span class=\"w\"> </span>uint32_t<span class=\"w\"> </span>fib<span class=\"o\">(</span>uint32_t<span class=\"w\"> </span>n<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n-&gt;<span class=\"w\"> </span><span class=\"m\">6</span><span class=\"w\">      </span>uint32_t<span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"m\">7</span><span class=\"w\">      </span>uint32_t<span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"m\">8</span>\n<span class=\"w\">   </span><span class=\"m\">9</span><span class=\"w\">      </span><span class=\"k\">for</span><span class=\"o\">(</span>int<span class=\"w\"> </span><span class=\"nv\">i</span><span class=\"o\">=</span><span class=\"m\">0</span><span class=\"p\">;</span><span class=\"w\"> </span>i&lt;n<span class=\"p\">;</span><span class=\"w\"> </span>++i<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>n\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>stopped\n*<span class=\"w\"> </span>thread<span class=\"w\"> </span><span class=\"c1\">#1, name = 'debugger', stop reason = step over</span>\n<span class=\"w\">    </span>frame<span class=\"w\"> </span><span class=\"c1\">#0: 0x00007ff04c07b020 JIT(0x559def806040)`fib(n=6) at lib.cc:7:12</span>\n<span class=\"w\">   </span><span class=\"m\">4</span><span class=\"w\">    </span>__attribute__<span class=\"o\">((</span>__export_name__<span class=\"o\">(</span><span class=\"s2\">\"fib\"</span><span class=\"o\">)))</span>\n<span class=\"w\">   </span><span class=\"m\">5</span><span class=\"w\">    </span>extern<span class=\"w\"> </span><span class=\"s2\">\"C\"</span><span class=\"w\"> </span>uint32_t<span class=\"w\"> </span>fib<span class=\"o\">(</span>uint32_t<span class=\"w\"> </span>n<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">   </span><span class=\"m\">6</span><span class=\"w\">      </span>uint32_t<span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span>\n-&gt;<span class=\"w\"> </span><span class=\"m\">7</span><span class=\"w\">      </span>uint32_t<span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"m\">8</span>\n<span class=\"w\">   </span><span class=\"m\">9</span><span class=\"w\">      </span><span class=\"k\">for</span><span class=\"o\">(</span>int<span class=\"w\"> </span><span class=\"nv\">i</span><span class=\"o\">=</span><span class=\"m\">0</span><span class=\"p\">;</span><span class=\"w\"> </span>i&lt;n<span class=\"p\">;</span><span class=\"w\"> </span>++i<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">   </span><span class=\"m\">10</span><span class=\"w\">       </span>auto<span class=\"w\"> </span><span class=\"nv\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>a<span class=\"p\">;</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>p<span class=\"w\"> </span>a\n<span class=\"o\">(</span>uint32_t<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"m\">1</span>\n</code></pre></div>\n<h2>Problem: using export name as 'fib-cc' gives unexpected output</h2>\n<p>Running <code>make lldb-cc</code> with </p>\n<ul>\n<li><code>__attribute__((__export_name__(\"fib-cc\")))</code> in fib-cc/lib.cc</li>\n<li>renaming target func as 'fib-cc' in debugger/src/main.rs<br>\ngives me unexpected output as</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>root@eafb8747aaf8:/workspace/module#<span class=\"w\"> </span>make<span class=\"w\"> </span>lldb-cc\nlldb<span class=\"w\"> </span>-O<span class=\"w\"> </span><span class=\"s1\">'settings set target.disable-aslr false'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'breakpoint set -n main'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'r'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s2\">\"breakpoint set -n 'fib-cc'\"</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'c'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'n'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'p a'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>--<span class=\"w\"> </span>target/release/debugger<span class=\"w\"> </span>fib-cc/build/fib-cc.wasm\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>settings<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>target.disable-aslr<span class=\"w\"> </span><span class=\"nb\">false</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>target<span class=\"w\"> </span>create<span class=\"w\"> </span><span class=\"s2\">\"target/release/debugger\"</span>\nCurrent<span class=\"w\"> </span>executable<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"s1\">'/workspace/module/target/release/debugger'</span><span class=\"w\"> </span><span class=\"o\">(</span>x86_64<span class=\"o\">)</span>.\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>settings<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>--<span class=\"w\"> </span>target.run-args<span class=\"w\">  </span><span class=\"s2\">\"fib-cc/build/fib-cc.wasm\"</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>-n<span class=\"w\"> </span>main\nBreakpoint<span class=\"w\"> </span><span class=\"m\">1</span>:<span class=\"w\"> </span><span class=\"nv\">where</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>debugger<span class=\"sb\">`</span>main,<span class=\"w\"> </span><span class=\"nv\">address</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>0x00000000000baac0\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>r\nProcess<span class=\"w\"> </span><span class=\"m\">103930</span><span class=\"w\"> </span>launched:<span class=\"w\"> </span><span class=\"s1\">'/workspace/module/target/release/debugger'</span><span class=\"w\"> </span><span class=\"o\">(</span>x86_64<span class=\"o\">)</span>\nProcess<span class=\"w\"> </span><span class=\"m\">103930</span><span class=\"w\"> </span>stopped\n*<span class=\"w\"> </span>thread<span class=\"w\"> </span><span class=\"c1\">#1, name = 'debugger', stop reason = breakpoint 1.1</span>\n<span class=\"w\">    </span>frame<span class=\"w\"> </span><span class=\"c1\">#0: 0x000055557f202ac0 debugger`main</span>\ndebugger<span class=\"sb\">`</span>main:\n-&gt;<span class=\"w\">  </span>0x55557f202ac0<span class=\"w\"> </span>&lt;+0&gt;:<span class=\"w\"> </span>pushq<span class=\"w\">  </span>%rax\n<span class=\"w\">    </span>0x55557f202ac1<span class=\"w\"> </span>&lt;+1&gt;:<span class=\"w\"> </span>movq<span class=\"w\">   </span>%rsi,<span class=\"w\"> </span>%rcx\n<span class=\"w\">    </span>0x55557f202ac4<span class=\"w\"> </span>&lt;+4&gt;:<span class=\"w\"> </span>movslq<span class=\"w\"> </span>%edi,<span class=\"w\"> </span>%rdx\n<span class=\"w\">    </span>0x55557f202ac7<span class=\"w\"> </span>&lt;+7&gt;:<span class=\"w\"> </span>leaq<span class=\"w\">   </span>-0x59e<span class=\"o\">(</span>%rip<span class=\"o\">)</span>,<span class=\"w\"> </span>%rax<span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span>debugger::main::h4a2646090ba600e9\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>-n<span class=\"w\"> </span><span class=\"s1\">'fib-cc'</span>\nBreakpoint<span class=\"w\"> </span><span class=\"m\">2</span>:<span class=\"w\"> </span>no<span class=\"w\"> </span>locations<span class=\"w\"> </span><span class=\"o\">(</span>pending<span class=\"o\">)</span>.\nWARNING:<span class=\"w\">  </span>Unable<span class=\"w\"> </span>to<span class=\"w\"> </span>resolve<span class=\"w\"> </span>breakpoint<span class=\"w\"> </span>to<span class=\"w\"> </span>any<span class=\"w\"> </span>actual<span class=\"w\"> </span>locations.\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>c\nfib<span class=\"o\">(</span><span class=\"m\">6</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">21</span>\nProcess<span class=\"w\"> </span><span class=\"m\">103930</span><span class=\"w\"> </span>resuming\nProcess<span class=\"w\"> </span><span class=\"m\">103930</span><span class=\"w\"> </span>exited<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"nv\">status</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>-1<span class=\"w\"> </span><span class=\"o\">(</span>0xffffffff<span class=\"o\">)</span><span class=\"w\"> </span>lost<span class=\"w\"> </span>connection\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>n\nerror:<span class=\"w\"> </span>Command<span class=\"w\"> </span>requires<span class=\"w\"> </span>a<span class=\"w\"> </span>process<span class=\"w\"> </span>which<span class=\"w\"> </span>is<span class=\"w\"> </span>currently<span class=\"w\"> </span>stopped.\n</code></pre></div>\n<p>Why LLDB cannot find symbol exported name 'fib-cc'?</p>\n<p>The full project is hosted in <a href=\"https://github.com/sammyne/deep-dive-wasm-debug/tree/main/module\">https://github.com/sammyne/deep-dive-wasm-debug/tree/main/module</a>.</p>\n</blockquote>",
        "id": 514653564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745765815
    },
    {
        "content": "<p>SingleAccretion <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10680#issuecomment-2833505067\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10680\">issue #10680</a>:</p>\n<blockquote>\n<p>The debug info produced by wasmtime and consumed by LLDB is based on the debug info that exists in the original WASM file. There is no C function named <code>fib-cc</code> (it would be an illegal C identifier) in the output, hence there is no such function in the output. In other words, DWARF debug info doesn't record export names.</p>\n<p>In theory, we _could_ synthesize an alias symbol in wasmtime, so that <code>fib</code> now has two symbols associated with it (in fact it already has two, but one of them is broken, so doesn't usually show up), but I am not sure it would be worth it.</p>\n</blockquote>",
        "id": 514654780,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745766690
    },
    {
        "content": "<p>SingleAccretion edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10680#issuecomment-2833505067\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10680\">issue #10680</a>:</p>\n<blockquote>\n<p>The debug info produced by wasmtime and consumed by LLDB is based on the debug info that exists in the original WASM file. There is no C function named <code>fib-cc</code> (it would be an illegal C identifier) in the input, hence there is no such function in the output. In other words, DWARF debug info doesn't record export names.</p>\n<p>In theory, we _could_ synthesize an alias symbol in wasmtime, so that <code>fib</code> now has two symbols associated with it (in fact it already has two, but one of them is broken, so doesn't usually show up), but I am not sure it would be worth it.</p>\n</blockquote>",
        "id": 514654797,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745766702
    },
    {
        "content": "<p>sammyne <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10680#issuecomment-2833513063\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10680\">issue #10680</a>:</p>\n<blockquote>\n<p>Supporting export names would make debugging exported function name generated from wit possible.<br>\nI think it worths.</p>\n</blockquote>",
        "id": 514656230,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745767745
    },
    {
        "content": "<p>SingleAccretion <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10680#issuecomment-2833514825\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10680\">issue #10680</a>:</p>\n<blockquote>\n<blockquote>\n<p>Supporting export names would make debugging exported function name generated from wit possible.</p>\n</blockquote>\n<p>I would have expected that there is always C function name you could break on. Or do simply mean that it is not ergonomic to break on those auto-generated names?</p>\n</blockquote>",
        "id": 514656605,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745768006
    },
    {
        "content": "<p>sammyne closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10680\">issue #10680</a>:</p>\n<blockquote>\n<h2>Environment</h2>\n<ul>\n<li>wasmtime 32.0.0</li>\n<li>wasi-sdk 22.0</li>\n<li>LLDB 18.1.8</li>\n</ul>\n<h2>Source codes</h2>\n<h3>fib-cc/lib.cc: C++ source codes</h3>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;cstdint&gt;</span>\n\n<span class=\"n\">__attribute__</span><span class=\"p\">((</span><span class=\"n\">__export_name__</span><span class=\"p\">(</span><span class=\"s\">\"fib\"</span><span class=\"p\">)))</span>\n<span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"p\">(</span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n\n<span class=\"w\">  </span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">auto</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>debugger/src/main.rs: embedded wasmtime</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"o\">*</span><span class=\"p\">;</span>\n\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">env</span><span class=\"p\">::</span><span class=\"n\">args</span><span class=\"p\">().</span><span class=\"n\">skip</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">).</span><span class=\"n\">next</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nb\">None</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"s\">\"target/wasm32-unknown-unknown/debug/fib.wasm\"</span><span class=\"p\">.</span><span class=\"n\">to_owned</span><span class=\"p\">(),</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Load our previously compiled wasm file (built previously with Cargo) and</span>\n<span class=\"w\">    </span><span class=\"c1\">// also ensure that we generate debuginfo so this executable can be</span>\n<span class=\"w\">    </span><span class=\"c1\">// debugged in GDB.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"n\">Config</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">debug_info</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">cranelift_opt_level</span><span class=\"p\">(</span><span class=\"n\">OptLevel</span><span class=\"p\">::</span><span class=\"nb\">None</span><span class=\"p\">),</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n\n<span class=\"w\">    </span><span class=\"c1\">//const PATH: &amp;str = \"target/wasm32-wasip1/debug/fib.wasm\";</span>\n<span class=\"w\">    </span><span class=\"c1\">//const PATH: &amp;str = \"target/wasm32-unknown-unknown/debug/fib.wasm\";</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"p\">::</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instance</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[])</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Invoke `fib` export</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">get_typed_func</span><span class=\"p\">::</span><span class=\"o\">&lt;</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"fib\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"fib(6) = {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Makefile</h3>\n<div class=\"codehilite\" data-code-language=\"Makefile\"><pre><span></span><code><span class=\"nv\">debugger</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>target/release/debugger\n<span class=\"nv\">fibcc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>fib-cc/build/fib-cc.wasm\n\n<span class=\"nf\">.PHONY</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">all</span>\n<span class=\"nf\">all</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"k\">$(</span><span class=\"nv\">debugger</span><span class=\"k\">)</span> <span class=\"k\">$(</span><span class=\"nv\">fibcc</span><span class=\"k\">)</span>\n\n<span class=\"nf\">$(debugger)</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">debugger</span>/<span class=\"n\">src</span>/<span class=\"n\">main</span>.<span class=\"n\">rs</span>\n<span class=\"w\">    </span>cargo<span class=\"w\"> </span>build<span class=\"w\"> </span>-r<span class=\"w\"> </span>-p<span class=\"w\"> </span>debugger\n\n<span class=\"nf\">$(fibcc)</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">fib</span>-<span class=\"n\">cc</span>/<span class=\"n\">lib</span>.<span class=\"n\">cc</span>\n<span class=\"w\">    </span><span class=\"k\">$(</span>MAKE<span class=\"k\">)</span><span class=\"w\"> </span>-C<span class=\"w\"> </span>fib-cc\n\n<span class=\"nf\">lldb-cc</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"k\">$(</span><span class=\"nv\">debugger</span><span class=\"k\">)</span> <span class=\"k\">$(</span><span class=\"nv\">fibcc</span><span class=\"k\">)</span>\n<span class=\"w\">    </span>lldb<span class=\"w\"> </span>-O<span class=\"w\"> </span><span class=\"s1\">'settings set target.disable-aslr false'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'breakpoint set -n main'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'r'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s2\">\"breakpoint set -n 'fib'\"</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'c'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'n'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'p a'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>--<span class=\"w\"> </span><span class=\"k\">$(</span>debugger<span class=\"k\">)</span><span class=\"w\"> </span><span class=\"k\">$(</span>fibcc<span class=\"k\">)</span>\n\n<span class=\"nf\">.PHONY</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">clean</span>\n<span class=\"nf\">clean</span><span class=\"o\">:</span>\n<span class=\"w\">    </span>cargo<span class=\"w\"> </span>clean\n<span class=\"w\">    </span><span class=\"k\">$(</span>MAKE<span class=\"k\">)</span><span class=\"w\"> </span>-C<span class=\"w\"> </span>fib-cc<span class=\"w\"> </span>clean\n</code></pre></div>\n<h2>Using export name as 'fib'</h2>\n<p>Running <code>make lldb-cc</code> with <code>__attribute__((__export_name__(\"fib\")))</code> in fib-cc/lib.cc gives me expected output as</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>root@eafb8747aaf8:/workspace/module#<span class=\"w\"> </span>make<span class=\"w\"> </span>lldb-cc\ncargo<span class=\"w\"> </span>build<span class=\"w\"> </span>-r<span class=\"w\"> </span>-p<span class=\"w\"> </span>debugger\n<span class=\"w\">   </span>Compiling<span class=\"w\"> </span>debugger<span class=\"w\"> </span>v0.1.0<span class=\"w\"> </span><span class=\"o\">(</span>/workspace/module/debugger<span class=\"o\">)</span>\n<span class=\"w\">    </span>Finished<span class=\"w\"> </span><span class=\"sb\">`</span>release<span class=\"sb\">`</span><span class=\"w\"> </span>profile<span class=\"w\"> </span><span class=\"o\">[</span>optimized<span class=\"o\">]</span><span class=\"w\"> </span>target<span class=\"o\">(</span>s<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"m\">1</span>.36s\nlldb<span class=\"w\"> </span>-O<span class=\"w\"> </span><span class=\"s1\">'settings set target.disable-aslr false'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'breakpoint set -n main'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'r'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s2\">\"breakpoint set -n 'fib'\"</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'c'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'n'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'p a'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>--<span class=\"w\"> </span>target/release/debugger<span class=\"w\"> </span>fib-cc/build/fib-cc.wasm\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>settings<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>target.disable-aslr<span class=\"w\"> </span><span class=\"nb\">false</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>target<span class=\"w\"> </span>create<span class=\"w\"> </span><span class=\"s2\">\"target/release/debugger\"</span>\nCurrent<span class=\"w\"> </span>executable<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"s1\">'/workspace/module/target/release/debugger'</span><span class=\"w\"> </span><span class=\"o\">(</span>x86_64<span class=\"o\">)</span>.\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>settings<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>--<span class=\"w\"> </span>target.run-args<span class=\"w\">  </span><span class=\"s2\">\"fib-cc/build/fib-cc.wasm\"</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>-n<span class=\"w\"> </span>main\nBreakpoint<span class=\"w\"> </span><span class=\"m\">1</span>:<span class=\"w\"> </span><span class=\"nv\">where</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>debugger<span class=\"sb\">`</span>main,<span class=\"w\"> </span><span class=\"nv\">address</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>0x00000000000baac0\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>r\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>launched:<span class=\"w\"> </span><span class=\"s1\">'/workspace/module/target/release/debugger'</span><span class=\"w\"> </span><span class=\"o\">(</span>x86_64<span class=\"o\">)</span>\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>stopped\n*<span class=\"w\"> </span>thread<span class=\"w\"> </span><span class=\"c1\">#1, name = 'debugger', stop reason = breakpoint 1.1</span>\n<span class=\"w\">    </span>frame<span class=\"w\"> </span><span class=\"c1\">#0: 0x0000559dedb3aac0 debugger`main</span>\ndebugger<span class=\"sb\">`</span>main:\n-&gt;<span class=\"w\">  </span>0x559dedb3aac0<span class=\"w\"> </span>&lt;+0&gt;:<span class=\"w\"> </span>pushq<span class=\"w\">  </span>%rax\n<span class=\"w\">    </span>0x559dedb3aac1<span class=\"w\"> </span>&lt;+1&gt;:<span class=\"w\"> </span>movq<span class=\"w\">   </span>%rsi,<span class=\"w\"> </span>%rcx\n<span class=\"w\">    </span>0x559dedb3aac4<span class=\"w\"> </span>&lt;+4&gt;:<span class=\"w\"> </span>movslq<span class=\"w\"> </span>%edi,<span class=\"w\"> </span>%rdx\n<span class=\"w\">    </span>0x559dedb3aac7<span class=\"w\"> </span>&lt;+7&gt;:<span class=\"w\"> </span>leaq<span class=\"w\">   </span>-0x59e<span class=\"o\">(</span>%rip<span class=\"o\">)</span>,<span class=\"w\"> </span>%rax<span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span>debugger::main::h4a2646090ba600e9\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>-n<span class=\"w\"> </span><span class=\"s1\">'fib'</span>\nBreakpoint<span class=\"w\"> </span><span class=\"m\">2</span>:<span class=\"w\"> </span>no<span class=\"w\"> </span>locations<span class=\"w\"> </span><span class=\"o\">(</span>pending<span class=\"o\">)</span>.\nWARNING:<span class=\"w\">  </span>Unable<span class=\"w\"> </span>to<span class=\"w\"> </span>resolve<span class=\"w\"> </span>breakpoint<span class=\"w\"> </span>to<span class=\"w\"> </span>any<span class=\"w\"> </span>actual<span class=\"w\"> </span>locations.\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>c\n<span class=\"m\">1</span><span class=\"w\"> </span>location<span class=\"w\"> </span>added<span class=\"w\"> </span>to<span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"m\">2</span>\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>resuming\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>stopped\n*<span class=\"w\"> </span>thread<span class=\"w\"> </span><span class=\"c1\">#1, name = 'debugger', stop reason = breakpoint 2.1</span>\n<span class=\"w\">    </span>frame<span class=\"w\"> </span><span class=\"c1\">#0: 0x00007ff04c07b013 JIT(0x559def806040)`fib(n=6) at lib.cc:6:12</span>\n<span class=\"w\">   </span><span class=\"m\">3</span><span class=\"w\">    </span>//<span class=\"w\"> </span>export_name<span class=\"w\"> </span>之后才能找到调试符号。\n<span class=\"w\">   </span><span class=\"m\">4</span><span class=\"w\">    </span>__attribute__<span class=\"o\">((</span>__export_name__<span class=\"o\">(</span><span class=\"s2\">\"fib\"</span><span class=\"o\">)))</span>\n<span class=\"w\">   </span><span class=\"m\">5</span><span class=\"w\">    </span>extern<span class=\"w\"> </span><span class=\"s2\">\"C\"</span><span class=\"w\"> </span>uint32_t<span class=\"w\"> </span>fib<span class=\"o\">(</span>uint32_t<span class=\"w\"> </span>n<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n-&gt;<span class=\"w\"> </span><span class=\"m\">6</span><span class=\"w\">      </span>uint32_t<span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"m\">7</span><span class=\"w\">      </span>uint32_t<span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"m\">8</span>\n<span class=\"w\">   </span><span class=\"m\">9</span><span class=\"w\">      </span><span class=\"k\">for</span><span class=\"o\">(</span>int<span class=\"w\"> </span><span class=\"nv\">i</span><span class=\"o\">=</span><span class=\"m\">0</span><span class=\"p\">;</span><span class=\"w\"> </span>i&lt;n<span class=\"p\">;</span><span class=\"w\"> </span>++i<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>n\nProcess<span class=\"w\"> </span><span class=\"m\">93176</span><span class=\"w\"> </span>stopped\n*<span class=\"w\"> </span>thread<span class=\"w\"> </span><span class=\"c1\">#1, name = 'debugger', stop reason = step over</span>\n<span class=\"w\">    </span>frame<span class=\"w\"> </span><span class=\"c1\">#0: 0x00007ff04c07b020 JIT(0x559def806040)`fib(n=6) at lib.cc:7:12</span>\n<span class=\"w\">   </span><span class=\"m\">4</span><span class=\"w\">    </span>__attribute__<span class=\"o\">((</span>__export_name__<span class=\"o\">(</span><span class=\"s2\">\"fib\"</span><span class=\"o\">)))</span>\n<span class=\"w\">   </span><span class=\"m\">5</span><span class=\"w\">    </span>extern<span class=\"w\"> </span><span class=\"s2\">\"C\"</span><span class=\"w\"> </span>uint32_t<span class=\"w\"> </span>fib<span class=\"o\">(</span>uint32_t<span class=\"w\"> </span>n<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">   </span><span class=\"m\">6</span><span class=\"w\">      </span>uint32_t<span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span>\n-&gt;<span class=\"w\"> </span><span class=\"m\">7</span><span class=\"w\">      </span>uint32_t<span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">;</span>\n<span class=\"w\">   </span><span class=\"m\">8</span>\n<span class=\"w\">   </span><span class=\"m\">9</span><span class=\"w\">      </span><span class=\"k\">for</span><span class=\"o\">(</span>int<span class=\"w\"> </span><span class=\"nv\">i</span><span class=\"o\">=</span><span class=\"m\">0</span><span class=\"p\">;</span><span class=\"w\"> </span>i&lt;n<span class=\"p\">;</span><span class=\"w\"> </span>++i<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">{</span>\n<span class=\"w\">   </span><span class=\"m\">10</span><span class=\"w\">       </span>auto<span class=\"w\"> </span><span class=\"nv\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>a<span class=\"p\">;</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>p<span class=\"w\"> </span>a\n<span class=\"o\">(</span>uint32_t<span class=\"o\">)</span><span class=\"w\"> </span><span class=\"m\">1</span>\n</code></pre></div>\n<h2>Problem: using export name as 'fib-cc' gives unexpected output</h2>\n<p>Running <code>make lldb-cc</code> with </p>\n<ul>\n<li><code>__attribute__((__export_name__(\"fib-cc\")))</code> in fib-cc/lib.cc</li>\n<li>renaming target func as 'fib-cc' in debugger/src/main.rs<br>\ngives me unexpected output as</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>root@eafb8747aaf8:/workspace/module#<span class=\"w\"> </span>make<span class=\"w\"> </span>lldb-cc\nlldb<span class=\"w\"> </span>-O<span class=\"w\"> </span><span class=\"s1\">'settings set target.disable-aslr false'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'breakpoint set -n main'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'r'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s2\">\"breakpoint set -n 'fib-cc'\"</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'c'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'n'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>-o<span class=\"w\"> </span><span class=\"s1\">'p a'</span><span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">        </span>--<span class=\"w\"> </span>target/release/debugger<span class=\"w\"> </span>fib-cc/build/fib-cc.wasm\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>settings<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>target.disable-aslr<span class=\"w\"> </span><span class=\"nb\">false</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>target<span class=\"w\"> </span>create<span class=\"w\"> </span><span class=\"s2\">\"target/release/debugger\"</span>\nCurrent<span class=\"w\"> </span>executable<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"s1\">'/workspace/module/target/release/debugger'</span><span class=\"w\"> </span><span class=\"o\">(</span>x86_64<span class=\"o\">)</span>.\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>settings<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>--<span class=\"w\"> </span>target.run-args<span class=\"w\">  </span><span class=\"s2\">\"fib-cc/build/fib-cc.wasm\"</span>\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>-n<span class=\"w\"> </span>main\nBreakpoint<span class=\"w\"> </span><span class=\"m\">1</span>:<span class=\"w\"> </span><span class=\"nv\">where</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>debugger<span class=\"sb\">`</span>main,<span class=\"w\"> </span><span class=\"nv\">address</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>0x00000000000baac0\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>r\nProcess<span class=\"w\"> </span><span class=\"m\">103930</span><span class=\"w\"> </span>launched:<span class=\"w\"> </span><span class=\"s1\">'/workspace/module/target/release/debugger'</span><span class=\"w\"> </span><span class=\"o\">(</span>x86_64<span class=\"o\">)</span>\nProcess<span class=\"w\"> </span><span class=\"m\">103930</span><span class=\"w\"> </span>stopped\n*<span class=\"w\"> </span>thread<span class=\"w\"> </span><span class=\"c1\">#1, name = 'debugger', stop reason = breakpoint 1.1</span>\n<span class=\"w\">    </span>frame<span class=\"w\"> </span><span class=\"c1\">#0: 0x000055557f202ac0 debugger`main</span>\ndebugger<span class=\"sb\">`</span>main:\n-&gt;<span class=\"w\">  </span>0x55557f202ac0<span class=\"w\"> </span>&lt;+0&gt;:<span class=\"w\"> </span>pushq<span class=\"w\">  </span>%rax\n<span class=\"w\">    </span>0x55557f202ac1<span class=\"w\"> </span>&lt;+1&gt;:<span class=\"w\"> </span>movq<span class=\"w\">   </span>%rsi,<span class=\"w\"> </span>%rcx\n<span class=\"w\">    </span>0x55557f202ac4<span class=\"w\"> </span>&lt;+4&gt;:<span class=\"w\"> </span>movslq<span class=\"w\"> </span>%edi,<span class=\"w\"> </span>%rdx\n<span class=\"w\">    </span>0x55557f202ac7<span class=\"w\"> </span>&lt;+7&gt;:<span class=\"w\"> </span>leaq<span class=\"w\">   </span>-0x59e<span class=\"o\">(</span>%rip<span class=\"o\">)</span>,<span class=\"w\"> </span>%rax<span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span>debugger::main::h4a2646090ba600e9\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>breakpoint<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>-n<span class=\"w\"> </span><span class=\"s1\">'fib-cc'</span>\nBreakpoint<span class=\"w\"> </span><span class=\"m\">2</span>:<span class=\"w\"> </span>no<span class=\"w\"> </span>locations<span class=\"w\"> </span><span class=\"o\">(</span>pending<span class=\"o\">)</span>.\nWARNING:<span class=\"w\">  </span>Unable<span class=\"w\"> </span>to<span class=\"w\"> </span>resolve<span class=\"w\"> </span>breakpoint<span class=\"w\"> </span>to<span class=\"w\"> </span>any<span class=\"w\"> </span>actual<span class=\"w\"> </span>locations.\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>c\nfib<span class=\"o\">(</span><span class=\"m\">6</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">21</span>\nProcess<span class=\"w\"> </span><span class=\"m\">103930</span><span class=\"w\"> </span>resuming\nProcess<span class=\"w\"> </span><span class=\"m\">103930</span><span class=\"w\"> </span>exited<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"nv\">status</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span>-1<span class=\"w\"> </span><span class=\"o\">(</span>0xffffffff<span class=\"o\">)</span><span class=\"w\"> </span>lost<span class=\"w\"> </span>connection\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span><span class=\"w\"> </span>n\nerror:<span class=\"w\"> </span>Command<span class=\"w\"> </span>requires<span class=\"w\"> </span>a<span class=\"w\"> </span>process<span class=\"w\"> </span>which<span class=\"w\"> </span>is<span class=\"w\"> </span>currently<span class=\"w\"> </span>stopped.\n</code></pre></div>\n<p>Why LLDB cannot find symbol exported name 'fib-cc'?</p>\n<p>The full project is hosted in <a href=\"https://github.com/sammyne/deep-dive-wasm-debug/tree/main/module\">https://github.com/sammyne/deep-dive-wasm-debug/tree/main/module</a>.</p>\n</blockquote>",
        "id": 514706829,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745806107
    },
    {
        "content": "<p>sammyne <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10680#issuecomment-2833811685\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10680\">issue #10680</a>:</p>\n<blockquote>\n<p>Set breakpoint on the C function instead of export name works~</p>\n</blockquote>",
        "id": 514706832,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1745806109
    }
]