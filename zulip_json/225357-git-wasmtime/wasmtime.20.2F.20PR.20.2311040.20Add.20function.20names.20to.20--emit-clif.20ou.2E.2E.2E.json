[
    {
        "content": "<p>PhantomInTheWire opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11040\">PR #11040</a> from <code>PhantomInTheWire:feature/add-clif-func-names</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n<h4>Related Issues</h4>\n<p>Fixes: #10733</p>\n<h4>Explanation</h4>\n<p>This PR addresses issue #10733 by adding the function name as a comment to the beginning of each Cranelift IR file generated by the <code>--emit-clif</code> flag.</p>\n<p>Previously, the files generated by <code>--emit-clif</code> contained only the raw Cranelift IR, making it difficult to identify which function the IR belonged to without cross-referencing with other tools like <code>wasmtime explore</code>. This change improves the usability of the <code>--emit-clif</code> output by clearly labeling each function's IR.</p>\n<h4>Input Needed</h4>\n<p>I'm unsure of where to place tests for this.</p>\n</blockquote>",
        "id": 524003060,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749843000
    },
    {
        "content": "<p><strong>PhantomInTheWire</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11040\">PR #11040</a>.</p>",
        "id": 524003067,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749843001
    },
    {
        "content": "<p><strong>PhantomInTheWire</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11040\">PR #11040</a>.</p>",
        "id": 524003069,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749843001
    },
    {
        "content": "<p>PhantomInTheWire updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11040\">PR #11040</a>.</p>",
        "id": 524003312,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749843098
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11040#pullrequestreview-2926150160\">PR review</a>.</p>",
        "id": 524004193,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749843545
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11040#discussion_r2145953381\">PR review comment</a>:</p>\n<blockquote>\n<p>This would work too, right?</p>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                \";; Intermediate Representation of function &lt;{symbol}&gt;:\\n\",\n</code></pre></div>\n<p>This avoids truncating a function name like <code>wasm[0]::function[1]::my_library::SomeType::get</code> (as would be used if the names section contains <code>my_library::SomeType::get</code> as name) to the pretty much useless <code>get</code>.</p>\n</blockquote>",
        "id": 524004195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749843545
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11040#pullrequestreview-2926204179\">PR review</a>:</p>\n<blockquote>\n<p>Nothing to add over what @bjorn3 pointed out.</p>\n</blockquote>",
        "id": 524005286,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749844144
    },
    {
        "content": "<p>PhantomInTheWire submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11040#pullrequestreview-2926379516\">PR review</a>.</p>",
        "id": 524012453,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749847823
    },
    {
        "content": "<p>PhantomInTheWire created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11040#discussion_r2146074990\">PR review comment</a>:</p>\n<blockquote>\n<p>would using something like this function work better?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">remove_first_two_segments</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"kt\">str</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"nb\">String</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">parts</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s\">\"::\"</span><span class=\"p\">).</span><span class=\"n\">skip</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">rest</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Vec</span><span class=\"o\">&lt;&amp;</span><span class=\"kt\">str</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">parts</span><span class=\"p\">.</span><span class=\"n\">collect</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">rest</span><span class=\"p\">.</span><span class=\"n\">is_empty</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">None</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"fm\">format!</span><span class=\"p\">(</span><span class=\"s\">\"::{}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rest</span><span class=\"p\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s\">\"::\"</span><span class=\"p\">)))</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>also wasmtime explore uses \"Intermediate Representation of function &lt;get&gt;:\" to should i figure out a way where it gives my_library::SomeType::get too? </p>\n</blockquote>",
        "id": 524012454,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749847823
    },
    {
        "content": "<p>PhantomInTheWire edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11040#discussion_r2146074990\">PR review comment</a>.</p>",
        "id": 524012483,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749847845
    },
    {
        "content": "<p>PhantomInTheWire updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11040\">PR #11040</a>.</p>",
        "id": 524024729,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749856327
    },
    {
        "content": "<p><strong>PhantomInTheWire</strong> requested <a href=\"https://github.com/bjorn3\">bjorn3</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11040\">PR #11040</a>.</p>",
        "id": 524024805,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749856385
    },
    {
        "content": "<p><strong>PhantomInTheWire</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11040\">PR #11040</a>.</p>",
        "id": 524024837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749856413
    },
    {
        "content": "<p>PhantomInTheWire updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11040\">PR #11040</a>.</p>",
        "id": 524049944,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1749889818
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11040#pullrequestreview-2932518380\">PR review</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 524276638,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750086161
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11040\">PR #11040</a>.</p>",
        "id": 524283264,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750088312
    }
]