[
    {
        "content": "<p>rvolosatovs opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a> from <code>rvolosatovs:feat/wasip3-sockets</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Implement <code>wasip3</code> <code>wasi:sockets</code>.</p>\n<p>I've refactored <code>FutureWriter::write</code> a little bit to allow for non-blocking send</p>\n<p>Refs <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/issues/228\">https://github.com/bytecodealliance/wasip3-prototyping/issues/228</a><br>\nCloses <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/issues/226\">https://github.com/bytecodealliance/wasip3-prototyping/issues/226</a> (not the addition of yield from the guest)</p>\n</blockquote>",
        "id": 529942354,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753121281
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>:</p>\n<blockquote>\n<p>Implement <code>wasip3</code> <code>wasi:sockets</code>.</p>\n<p>I've refactored <code>FutureWriter::write</code> a little bit to allow for non-blocking send</p>\n<p>Refs <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/issues/228\">https://github.com/bytecodealliance/wasip3-prototyping/issues/228</a><br>\nCloses <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/issues/226\">https://github.com/bytecodealliance/wasip3-prototyping/issues/226</a> (not the addition of yield from the guest)<br>\nI was not able to reproduce <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/issues/44\">https://github.com/bytecodealliance/wasip3-prototyping/issues/44</a> with:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"k\">while</span><span class=\"w\"> </span>cargo<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>--features<span class=\"w\"> </span>p3<span class=\"w\"> </span>p3_sockets_udp_sample_application<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">do</span><span class=\"w\"> </span>:<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">done</span>\n</code></pre></div>\n<p>on MacOS</p>\n</blockquote>",
        "id": 529943013,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753121554
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>.</p>",
        "id": 529943104,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753121598
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>:</p>\n<blockquote>\n<p>Implement <code>wasip3</code> <code>wasi:sockets</code>.</p>\n<p>I've refactored <code>FutureWriter::write</code> a little bit to allow for non-blocking send</p>\n<p>Refs <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/issues/228\">https://github.com/bytecodealliance/wasip3-prototyping/issues/228</a><br>\nCloses <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/issues/226\">https://github.com/bytecodealliance/wasip3-prototyping/issues/226</a> (note the addition of yield from the guest)<br>\nI was not able to reproduce <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/issues/44\">https://github.com/bytecodealliance/wasip3-prototyping/issues/44</a> with:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"k\">while</span><span class=\"w\"> </span>cargo<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>--features<span class=\"w\"> </span>p3<span class=\"w\"> </span>p3_sockets_udp_sample_application<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">do</span><span class=\"w\"> </span>:<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">done</span>\n</code></pre></div>\n<p>on MacOS</p>\n</blockquote>",
        "id": 529943382,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753121706
    },
    {
        "content": "<p><strong>rvolosatovs</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a> as ready for review.</p>",
        "id": 529954951,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753126788
    },
    {
        "content": "<p><strong>rvolosatovs</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-wasi-reviewers\">wasmtime-wasi-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>.</p>",
        "id": 529954954,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753126789
    },
    {
        "content": "<p><strong>rvolosatovs</strong> requested <a href=\"https://github.com/dicej\">dicej</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>.</p>",
        "id": 529954956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753126789
    },
    {
        "content": "<p><strong>rvolosatovs</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>.</p>",
        "id": 529954957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753126790
    },
    {
        "content": "<p><strong>rvolosatovs</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>.</p>",
        "id": 529954958,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753126790
    },
    {
        "content": "<p>rvolosatovs <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#issuecomment-3103270170\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>:</p>\n<blockquote>\n<p>FYI: I'm currently working on reusing most of the socket utilities across p2 and p3 to avoid duplication</p>\n</blockquote>",
        "id": 530167429,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753196906
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>.</p>",
        "id": 530221529,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753217852
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>.</p>",
        "id": 530221746,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753217938
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>.</p>",
        "id": 530224224,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753219031
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#pullrequestreview-3044950884\">PR review</a>.</p>",
        "id": 530231984,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753222518
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2223883705\">PR review comment</a>:</p>\n<blockquote>\n<p>Could you detail a bit more the rationale for this change? The PR description mentions a non-blocking send but I don't fully grok that. In the context of <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/pull/240\">https://github.com/bytecodealliance/wasip3-prototyping/pull/240</a> this method is going to change more so if precise control over sending messages is needed that may be a red flag of something we'll need to change at the call-site rather than here</p>\n</blockquote>",
        "id": 530231985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753222519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2223888787\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this'll want some extra handling, namely:</p>\n<ul>\n<li>If <code>Some(...)</code> is returned, that means the other side went away, so the loop can be exited immediately here.</li>\n<li>If <code>Some(...)</code> is returned then the resource table needs to be updated here to take out what was previously pushed in</li>\n</ul>\n</blockquote>",
        "id": 530231986,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753222519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2223879541\">PR review comment</a>:</p>\n<blockquote>\n<p>This may be a preexisting bug in the p2 implementation, but I'm under the impression that the equivalent of <code>write_all</code> for UDP is inappropriate. I'd expect this to return an error if the entire buffer wasn't sent personally, but I'm also not sure the context these are used within.</p>\n</blockquote>",
        "id": 530231987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753222519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2223894491\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this be wrapped up in something like <code>Arc&lt;NonInheritedOptions&gt;</code> or something like that? That'll help cut down on the <code>Arc</code>-traffic and additionally enable scoping handling of this to a separate file and/or abstraction. Ideally it'd also be shared with the p2 implementation if possible which I suspect has very similar #[cfg].</p>\n</blockquote>",
        "id": 530231988,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753222519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2223896011\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this buf is intended to be outside of the <code>loop</code>?</p>\n</blockquote>",
        "id": 530231989,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753222519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2223892464\">PR review comment</a>:</p>\n<blockquote>\n<p>In the future we may have to watch out for this as <code>watch_reader</code> is a pretty expensive operation right now and each iteration of the loop unconditionally sets this up. The changes at <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/pull/240\">https://github.com/bytecodealliance/wasip3-prototyping/pull/240</a> may help though.</p>\n</blockquote>",
        "id": 530231990,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753222519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2223923460\">PR review comment</a>:</p>\n<blockquote>\n<p>Should this be using <code>Receiving</code> instead of <code>Closed</code>? As-is it looks like you can send-then-receive but you can't receive-then-send.</p>\n</blockquote>",
        "id": 530231991,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753222519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2223899184\">PR review comment</a>:</p>\n<blockquote>\n<p>All of the <code>break</code>s in this loop are write-then-break, so could this be refactored as break-with-value followed by just one write?</p>\n</blockquote>",
        "id": 530231992,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753222519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2223902978\">PR review comment</a>:</p>\n<blockquote>\n<p>This branch I think could be replaced with a <code>?</code> on the <code>with</code> block.</p>\n</blockquote>",
        "id": 530231993,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753222519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2223901764\">PR review comment</a>:</p>\n<blockquote>\n<p>One thing we may want to keep an eye out for in the future is some sort of fast path here to avoid the <code>Arc::clone</code> in the typical case.</p>\n</blockquote>",
        "id": 530231994,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753222519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2223917986\">PR review comment</a>:</p>\n<blockquote>\n<p>It might be worth leaving a <code>FIXME</code> here along the lines of handling cancellation. Here we'll ideally want to hook into the drop of the outer future and put the socket back in the store or something like that.</p>\n</blockquote>",
        "id": 530231995,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753222519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2223897329\">PR review comment</a>:</p>\n<blockquote>\n<p>Also, mind extracting this constant to a <code>const</code> at the top of the file (or something like that) to reference?</p>\n</blockquote>",
        "id": 530231996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753222519
    },
    {
        "content": "<p>badeend submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#pullrequestreview-3045728308\">PR review</a>.</p>",
        "id": 530266461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753249884
    },
    {
        "content": "<p>badeend created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2224441844\">PR review comment</a>:</p>\n<blockquote>\n<p>Nice catch. This is indeed not correct for UDP.</p>\n<p>The <a href=\"https://github.com/bytecodealliance/wasmtime/blob/0e6d9c679f5df5cf712357f147088bbce0c61fe9/crates/wasi/src/p2/host/udp.rs#L454-L458\">P2 implementation</a> simply ignores the return value.</p>\n<p>I'd have to refresh my mind on this, but I recall that UDP either: returns successfully with input buffer size or fails with EMSGSIZE. Could be wrong.</p>\n</blockquote>",
        "id": 530266462,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753249884
    },
    {
        "content": "<p>badeend edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2224441844\">PR review comment</a>.</p>",
        "id": 530266951,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753250247
    },
    {
        "content": "<p>badeend edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2224441844\">PR review comment</a>.</p>",
        "id": 530267634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753250662
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2224981507\">PR review comment</a>:</p>\n<blockquote>\n<p>Currently, calling <code>FutureWriter::write</code> without awaiting the returned future does nothing. This patch makes it so that once <code>Future::write</code> returns it is guaranteed that a value is <em>written</em> akin to <a href=\"https://docs.rs/tokio/latest/tokio/sync/oneshot/struct.Sender.html#method.send\">https://docs.rs/tokio/latest/tokio/sync/oneshot/struct.Sender.html#method.send</a>, which is used internally. <em>async</em> is only used then to await the <em>receipt</em> of the value.</p>\n<p>From the WASI implementation perspective this means that we now can write future values without an <code>async</code> context, meaning, for example, that we don't need to spawn a task just to send a static value like was done e.g. here: <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/blob/9c837320498adb1f4bda9ad7bbb12769fcdd08b5/crates/wasi/src/p3/sockets/host/types/tcp.rs#L482-L487\">https://github.com/bytecodealliance/wasip3-prototyping/blob/9c837320498adb1f4bda9ad7bbb12769fcdd08b5/crates/wasi/src/p3/sockets/host/types/tcp.rs#L482-L487</a></p>\n</blockquote>",
        "id": 530301812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753263369
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#pullrequestreview-3046523613\">PR review</a>.</p>",
        "id": 530301815,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753263369
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2224995603\">PR review comment</a>:</p>\n<blockquote>\n<p><code>Closed</code> is normally used throughout the codebase as a marker to emulate a <em>take</em> operation, the resulting state is never <code>Closed</code>, it's either changed (to receiving) or rolled back, if it was not <em>connected</em></p>\n</blockquote>",
        "id": 530303236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753263731
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#pullrequestreview-3046542503\">PR review</a>.</p>",
        "id": 530303237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753263731
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#pullrequestreview-3048389114\">PR review</a>.</p>",
        "id": 530398988,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753291714
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2226227504\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it'd be reasonable to check the return value to double-check it matches the message size on success and synthesizing our trap (or error) on failure.</p>\n</blockquote>",
        "id": 530398989,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753291715
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#pullrequestreview-3048398961\">PR review</a>.</p>",
        "id": 530399666,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753291948
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2226234623\">PR review comment</a>:</p>\n<blockquote>\n<p>If possible I'd prefer to avoid this change and perhaps add a new method for this. I'm worried about conflating the guarantees/semantics of Rust-level <code>async</code> with the semantics desired here. For example this seems like it would encourage calling <code>write</code> and dropping the returned future while still having a guarantee that the item was sent. That the item is sent in this situation is, in my opinion, a bug. Dropping a future should cancel whatever that future's computation is so in my mind the semantics of this function is that you're never guaranteed that the value is sent until the future is <code>.await</code>-ed.</p>\n<p>I think it's reasonable though to shoot for an ideal of being able to send a value without having to full wait for its receipt. For this an extra host-level function I think would be appropriate. Even that though I think would be best to wait for the refactoring above.</p>\n<p>In the interm would you be ok to back out this change and spawn tasks if necessary?</p>\n</blockquote>",
        "id": 530399667,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753291948
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#pullrequestreview-3048403859\">PR review</a>.</p>",
        "id": 530399956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753292047
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2226237589\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh sorry I somehow missed the <code>*tcp_state = ..</code> below. The take/replace pattern seems reasonable to me but I just missed that (not sure how I did...)</p>\n</blockquote>",
        "id": 530399957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753292048
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>.</p>",
        "id": 531530843,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753773271
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>.</p>",
        "id": 531536283,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753774928
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#pullrequestreview-3066069257\">PR review</a>.</p>",
        "id": 531539317,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753775879
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2238885195\">PR review comment</a>:</p>\n<blockquote>\n<p>I've updated the p3 implementation.</p>\n<p>I do want to point out that on Windows at most <code>i32::MAX</code> bytes will be written <a href=\"https://github.com/rust-lang/rust/blob/cb6785f73df1aa3f558796a22a4ab9652cf38e26/library/std/src/sys/net/connection/socket.rs#L806\">https://github.com/rust-lang/rust/blob/cb6785f73df1aa3f558796a22a4ab9652cf38e26/library/std/src/sys/net/connection/socket.rs#L806</a> <a href=\"https://github.com/rust-lang/rust/blob/cb6785f73df1aa3f558796a22a4ab9652cf38e26/library/std/src/sys/net/connection/socket/windows.rs#L19\">https://github.com/rust-lang/rust/blob/cb6785f73df1aa3f558796a22a4ab9652cf38e26/library/std/src/sys/net/connection/socket/windows.rs#L19</a></p>\n<p>According to the spec, it appears that lists can have up to <code>u32::MAX</code> elements (core Wasm <a href=\"https://webassembly.github.io/spec/core/binary/conventions.html#binary-vec\">https://webassembly.github.io/spec/core/binary/conventions.html#binary-vec</a> and CM <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/Explainer.md#container-types\">https://github.com/WebAssembly/component-model/blob/main/design/mvp/Explainer.md#container-types</a>). So it appears that at least on Windows a partial write is theoretically possible, but I'm not sure if it could cause an issue in practice for most use cases</p>\n</blockquote>",
        "id": 531539319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753775879
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#pullrequestreview-3066082972\">PR review</a>.</p>",
        "id": 531539996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753776071
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2238893151\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, although that means we need to do more bookkeeping to e.g. ensure that the socket is indeed dropped in the reuseaddr tests (<a href=\"https://github.com/bytecodealliance/wasip3-prototyping/issues/226\">https://github.com/bytecodealliance/wasip3-prototyping/issues/226</a>)</p>\n<p>Moving the PR to draft to figure this out.</p>\n<p>Perhaps I will just add the additional function to the runtime to support this use case, which can be removed or reworked in #11325 </p>\n</blockquote>",
        "id": 531539999,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753776071
    },
    {
        "content": "<p>badeend submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#pullrequestreview-3066126448\">PR review</a>.</p>",
        "id": 531542001,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753776679
    },
    {
        "content": "<p>badeend created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2238919550\">PR review comment</a>:</p>\n<blockquote>\n<p>That shouldn't be an issue for UDP. The <a href=\"https://github.com/WebAssembly/wasi-sockets/blob/main/wit-0.3.0-draft/types.wit#L605\">spec says</a>:</p>\n<blockquote>\n<p>Implementations may trap if the <code>data</code> length exceeds 64 KiB.</p>\n</blockquote>\n</blockquote>",
        "id": 531542002,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753776679
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>.</p>",
        "id": 531542349,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753776793
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>.</p>",
        "id": 531546051,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753777911
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>.</p>",
        "id": 531555296,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753780389
    },
    {
        "content": "<p>rvolosatovs deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#discussion_r2238893151\">PR review comment</a>.</p>",
        "id": 531555455,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753780434
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>.</p>",
        "id": 531569055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753784248
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>.</p>",
        "id": 531706115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753826287
    },
    {
        "content": "<p><strong>alexcrichton</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a> as ready for review.</p>",
        "id": 531706127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753826291
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>.</p>",
        "id": 531709162,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753827779
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#pullrequestreview-3069484257\">PR review</a>:</p>\n<blockquote>\n<p>I had to update the REUSEADDR test a bit more and I'll file a follow-up issue for that, but otherwise this all looks good to me.</p>\n</blockquote>",
        "id": 531716865,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753832128
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291#pullrequestreview-3069484257\">PR review</a>:</p>\n<blockquote>\n<p>I had to update the REUSEADDR test a bit more and I'll file a follow-up issue for that (EDIT <a href=\"https://github.com/bytecodealliance/wasmtime/issues/11342\">https://github.com/bytecodealliance/wasmtime/issues/11342</a>), but otherwise this all looks good to me.</p>\n</blockquote>",
        "id": 531717233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753832355
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11291\">PR #11291</a>.</p>",
        "id": 531719317,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753833647
    }
]