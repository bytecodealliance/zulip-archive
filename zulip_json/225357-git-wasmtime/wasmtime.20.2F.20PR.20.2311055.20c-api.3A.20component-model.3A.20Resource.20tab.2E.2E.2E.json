[
    {
        "content": "<p>MangoPeachGrape opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055\">PR #11055</a> from <code>MangoPeachGrape:c-api/component-model/resource-table</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>I've gotten quite stuck on how to do resources, so I decided to try WASI first.</p>\n<p>Some things I'm unsure about:</p>\n<ul>\n<li>Should the context be inside an <code>Option</code> and then <code>expect()</code> in the WASI traits, or is the default context fine?</li>\n<li>How to specify your own context, perhaps <code>wasmtime_context_set_wasi_p2()</code>?</li>\n</ul>\n<hr>\n<p>On resources, I think I'm getting stuck on <code>ResourceTypeKind::Host</code> using <code>TypeId</code>.</p>\n<p>Would all the resources use a <code>CApiResource</code> type on the rust side, and then use a string discriminant, or something like that?</p>\n<p>Do you have any other ideas?</p>\n</blockquote>",
        "id": 524336064,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750109246
    },
    {
        "content": "<p><strong>MangoPeachGrape</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055\">PR #11055</a>.</p>",
        "id": 524336068,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750109247
    },
    {
        "content": "<p><strong>MangoPeachGrape</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055\">PR #11055</a>.</p>",
        "id": 524336069,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750109247
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055#issuecomment-2980677120\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055\">PR #11055</a>:</p>\n<blockquote>\n<blockquote>\n<p>Should the context be inside an Option and then expect() in the WASI traits, or is the default context fine?</p>\n</blockquote>\n<p>For <code>ResourceTable</code> I think it's ok to leave it there on-by-default, but for <code>wasmtime_wasi::p2::WasiCtx</code> yeah let's have that be an option which panics if it's not set.</p>\n<blockquote>\n<p>How to specify your own context, perhaps wasmtime_context_set_wasi_p2()?</p>\n</blockquote>\n<p>Right now <code>wasi.h</code> is a binding to the wasip1 builder API, and I think we'll want a new API for the wasip2 builder API (e.g. bindings for <code>wasmtime_wasi::p2::WasiCtx::builder</code>). Once that structure is built yeah a new API of <code>wasmtime_context_set_wasi_p2</code> would take the builder and then insert it into the store. Then afterwards the Option in the store would be <code>Some</code> and everything should work.</p>\n<blockquote>\n<p>On resources, I think I'm getting stuck on ResourceTypeKind::Host using TypeId.</p>\n</blockquote>\n<p>This has tripped me up in the past as well, I think it might be reasonable to add <code>ResourceTypeKind::HostId(u64)</code> where the host just provides a 64-bit integer. That could be added for the C API and that way the C API could take integers to differentiate resource types?</p>\n</blockquote>",
        "id": 524470664,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750171578
    },
    {
        "content": "<p>MangoPeachGrape <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055#issuecomment-2981181438\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055\">PR #11055</a>:</p>\n<blockquote>\n<blockquote>\n<p>we'll want a new API for the wasip2 builder API (e.g. bindings for <code>wasmtime_wasi::p2::WasiCtx::builder</code>)</p>\n</blockquote>\n<p>Where should I place this? Maybe <code>include/wasmtime/wasi/p2.h</code>? Or should I place it next to the <code>include/wasi.h</code>, i.e. <code>include/wasi_p2.h</code>?</p>\n<p>And how should the naming convention be? Similar to how it is in <code>wasi.h</code>, e.g. <code>wasi_p2_config_inherit_stdout()</code>, or something more similar to the rust side, maybe <code>wasmtime_wasi_p2_builder_inherit_stdout()</code>?</p>\n<blockquote>\n<p>I think it might be reasonable to add ResourceTypeKind::HostId(u64) where the host just provides a 64-bit integer. That could be added for the C API and that way the C API could take integers to differentiate resource types?</p>\n</blockquote>\n<p>Seems like a nice solution, I think I'll try that in a next PR?</p>\n</blockquote>",
        "id": 524497483,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750180737
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055#issuecomment-2981638026\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055\">PR #11055</a>:</p>\n<blockquote>\n<p>I've long wanted to move <code>wasi.h</code> and scope it under the \"wasmtime\" namespace. Additionally we try to consider \"wasipN\" a unit as oppose to \"wasi pN\", so how about <code>include/wasmtime/wasip2.h</code> and <code>wasmtime_wasip2_config_*</code>?</p>\n</blockquote>",
        "id": 524586295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750190160
    },
    {
        "content": "<p>MangoPeachGrape updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055\">PR #11055</a>.</p>",
        "id": 524593147,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750192897
    },
    {
        "content": "<p>MangoPeachGrape <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055#issuecomment-2981783419\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055\">PR #11055</a>:</p>\n<blockquote>\n<p>Does that look correct?</p>\n<blockquote>\n<p>I've long wanted to move wasi.h and scope it under the \"wasmtime\" namespace</p>\n</blockquote>\n<p>Should I do that also here? Would that include adding  <code>wasmtime_wasip1_</code> prefix to everything?</p>\n</blockquote>",
        "id": 524593580,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750193113
    },
    {
        "content": "<p>MangoPeachGrape updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055\">PR #11055</a>.</p>",
        "id": 524594095,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750193345
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055#discussion_r2153143366\">PR review comment</a>:</p>\n<blockquote>\n<p>s/add_wasi/add_wasip2/</p>\n</blockquote>",
        "id": 524594481,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750193529
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055#pullrequestreview-2937054994\">PR review</a>:</p>\n<blockquote>\n<blockquote>\n<p>Does that look correct?</p>\n</blockquote>\n<p>Looks good! Just one minor rename, and with some comments in the headers for the new functions looks good. Mind adding a test or two as well? (doesn't need to be too too fancy)</p>\n<blockquote>\n<blockquote>\n<p>I've long wanted to move wasi.h and scope it under the \"wasmtime\" namespace</p>\n</blockquote>\n<p>Should I do that also here? Would that include adding wasmtime_wasip1_ prefix to everything?</p>\n</blockquote>\n<p>Nah let's save that for later. At this point it's probably best to just not touch it and achieve these goals with the updates going forward. I don't think there's any real need to rename the preexisting APIs at this time.</p>\n</blockquote>",
        "id": 524594482,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750193530
    },
    {
        "content": "<p>MangoPeachGrape updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055\">PR #11055</a>.</p>",
        "id": 524597955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750195059
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055#pullrequestreview-2939641816\">PR review</a>.</p>",
        "id": 524728963,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750259135
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11055\">PR #11055</a>.</p>",
        "id": 524733246,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1750260417
    }
]