[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10760\">PR #10760</a>.</p>",
        "id": 517193359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746827979
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10760\">PR #10760</a> from <code>alexcrichton:add-static-bound</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Since the beginning the <code>T</code> type parameter on <code>Store&lt;T&gt;</code> has had no bounds on it. This was intended for maximal flexibility in terms of what embedders place within a <code>Store&lt;T&gt;</code> and I've personally advocated that we need to keep it this way. In the development of the WASIp3 work, however, I've at least personally reached the conclusion that this is no longer tenable and proceeding will require adding a <code>'static</code> bound to data within a store.</p>\n<p>Wasmtime today [already] carries unsafe <code>transmute</code>s to work around this lack of <code>'static</code> bound, and while the number of <code>unsafe</code> parts is relatively small right now we're still fundamentally lying to the compiler about lifetime bounds internally. With the WASIp3 async work this degree of \"lying\" has become even worse. Joel has written up some examples [on Zulip] about how the Rust compiler is requiring <code>'static</code> bounds in surprising ways. These patterns are cropping up quite frequently in the WASIp3 work and it's becoming particularly onerous maintaining all of the <code>unsafe</code> and ensuring that everything is in sync.</p>\n<p>In the WASIp3 repository I've additionally [prototyped a change] which would additionally practically require <code>T: 'static</code> in more locations. This change is one I plan on landing in Wasmtime in the near future and while its main motivations are for enabling WASIp3 work it is also a much nicer system than what we have today, in my opinion.</p>\n<p>Overall the cost of not having <code>T: 'static</code> on <code>Store&lt;T&gt;</code> is effectively becoming quite costly, in particular with respect to WASIp3 work. This is coupled with all known embedders already using <code>T: 'static</code> data within a <code>Store&lt;T&gt;</code> so the expectation of the impact of this change is not large. The main downside of this change as a result is that when and where to place <code>'static</code> bounds is sort of a game of whack-a-mole with the compiler. For example I changed <code>Store&lt;T&gt;</code> to require <code>'static</code> here, but the rest of the change is basically \"hit compile until rustc says it's ok\". There's not necessarily a huge amount of rhyme-or-reason to where <code>'static</code> bounds crop up, which can be surprising or difficult to work with for users.</p>\n<p>In the end I feel that this change is necessary and one we can't shy away from. If problems crop up we'll need to figure out how to thread that needle at that time, but I'm coming around to thinking that <code>T: 'static</code> is just a fundamental constraint we'll have to take on at this time. Maybe a future version of Rust that fixes some of Joel's examples (if they can be fixed, we're not sure of that) we could consider relaxing this but that's left for future work.</p>\n<p>[already]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/35053d6d8d1a5d4692cf636cba0c920b4a79a44b/crates/wasmtime/src/runtime/store.rs#L602-L611\">https://github.com/bytecodealliance/wasmtime/blob/35053d6d8d1a5d4692cf636cba0c920b4a79a44b/crates/wasmtime/src/runtime/store.rs#L602-L611</a><br>\n[on Zulip]: <a href=\"https://rust-lang.zulipchat.com/#narrow/channel/122651-general/topic/.22type.20may.20not.20live.20long.20enough.22.20for.20generic.20closure/near/473862072\">https://rust-lang.zulipchat.com/#narrow/channel/122651-general/topic/.22type.20may.20not.20live.20long.20enough.22.20for.20generic.20closure/near/473862072</a><br>\n[prototyped a change]: <a href=\"https://github.com/bytecodealliance/wasip3-prototyping/pull/158\">https://github.com/bytecodealliance/wasip3-prototyping/pull/158</a></p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 517193360,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746827980
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10760\">PR #10760</a>.</p>",
        "id": 517193361,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746827980
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10760\">PR #10760</a>.</p>",
        "id": 517193362,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746827980
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10760\">PR #10760</a>.</p>",
        "id": 517193524,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746828050
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10760\">PR #10760</a>.</p>",
        "id": 517194307,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746828585
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10760#pullrequestreview-2829783075\">PR review</a>.</p>",
        "id": 517194638,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1746828837
    }
]