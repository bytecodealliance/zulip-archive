[
    {
        "content": "<p>Amanieu opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213\">PR #11213</a> from <code>Amanieu:regalloc3</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This is based on <a href=\"https://github.com/bytecodealliance/regalloc2/pull/230\">https://github.com/bytecodealliance/regalloc2/pull/230</a> which adds regalloc3 as a back-end to regalloc2.</p>\n<p>Only one change had to be made to codegen: tail calls were reserving <code>r11</code> as a scratch register by making it a def on the return instruction. This is not supported by regalloc3, which allows it extends all live ranges to the end of <code>ret</code> instruction so that the live range segment can merge with the next one. Since a def on a return instruction is meaningless, I've changed it to a hard-coded register in the emit stage instead.</p>\n</blockquote>",
        "id": 528124360,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752166378
    },
    {
        "content": "<p><strong>Amanieu</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213\">PR #11213</a>.</p>",
        "id": 528124362,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752166379
    },
    {
        "content": "<p><strong>Amanieu</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213\">PR #11213</a>.</p>",
        "id": 528124363,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752166379
    },
    {
        "content": "<p><strong>Amanieu</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213\">PR #11213</a>.</p>",
        "id": 528124364,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752166379
    },
    {
        "content": "<p><strong>Amanieu</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213\">PR #11213</a>.</p>",
        "id": 528124365,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752166379
    },
    {
        "content": "<p><strong>Amanieu</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213\">PR #11213</a>.</p>",
        "id": 528124366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752166379
    },
    {
        "content": "<p>Amanieu updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213\">PR #11213</a>.</p>",
        "id": 528124907,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752166542
    },
    {
        "content": "<p>Amanieu updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213\">PR #11213</a>.</p>",
        "id": 528135907,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752170862
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213#issuecomment-3059017657\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213\">PR #11213</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:machinst\", \"cranelift:area:x64\", \"cranelift:meta\", \"isle\", \"wasmtime:api\", \"wasmtime:config\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 528156770,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752180412
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213#issuecomment-3059204384\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213\">PR #11213</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 528163716,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752183965
    },
    {
        "content": "<p>Amanieu updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213\">PR #11213</a>.</p>",
        "id": 528175927,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752191883
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213#issuecomment-3060186495\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213\">PR #11213</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"fuzzing\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: fuzzing</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 528189512,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752203878
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213#pullrequestreview-3017430892\">PR review</a>:</p>\n<blockquote>\n<p>LGTM modulo comment below, removing the <code>[patch.crates-io]</code> bits when upstream is ready, and getting CI passing.</p>\n</blockquote>",
        "id": 528721998,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752519347
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213#discussion_r2205598713\">PR review comment</a>:</p>\n<blockquote>\n<p>This might be true for our current calling conventions, but is not guaranteed to continue to hold true in the future. As such, could you assert that <code>call_info.uses</code> doesn't contain any uses of <code>r11</code> to future proof this code?</p>\n</blockquote>",
        "id": 528722000,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752519347
    },
    {
        "content": "<p>Amanieu submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213#pullrequestreview-3018055338\">PR review</a>.</p>",
        "id": 528755549,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752534921
    },
    {
        "content": "<p>Amanieu created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213#discussion_r2205974385\">PR review comment</a>:</p>\n<blockquote>\n<p>Actually, I've been over-thinking this. We can keep the existing code and just change it to an early-def, which <em>is</em> allowed by regalloc3 on return instructions. It could even be changed to an arbitrary register constraint in the future once regalloc2 support is dropped.</p>\n</blockquote>",
        "id": 528755550,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752534921
    },
    {
        "content": "<p>Amanieu updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213\">PR #11213</a>.</p>",
        "id": 529084748,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752679231
    },
    {
        "content": "<p>Amanieu updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213\">PR #11213</a>.</p>",
        "id": 529084934,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752679289
    },
    {
        "content": "<p>Amanieu submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213#pullrequestreview-3025553142\">PR review</a>.</p>",
        "id": 529085005,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752679308
    },
    {
        "content": "<p>Amanieu created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213#discussion_r2210753566\">PR review comment</a>:</p>\n<blockquote>\n<p>Actually an arbitrary register wouldn't work since it could conflict with callee-saved registers. I've added the assert as you suggested.</p>\n</blockquote>",
        "id": 529085006,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752679309
    },
    {
        "content": "<p>Amanieu <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213#issuecomment-3079133776\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213\">PR #11213</a>:</p>\n<blockquote>\n<p>Regarding CI, there are currently 3 issues:</p>\n<ul>\n<li>regalloc3 depends on brie-tree (fast B-Tree implementation) which has an MSRV of 1.88.</li>\n<li>brie-tree uses allocator-api 0.3 but other dependencies of wasmtime use allocator-api 0.2. This fails cargo deny due to the duplicate dependency.</li>\n<li>regalloc3/brie-tree probably need to be vetted. But this can wait until the crate is actually published.</li>\n</ul>\n</blockquote>",
        "id": 529085542,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1752679476
    },
    {
        "content": "<p>cfallin closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213\">PR #11213</a>.</p>",
        "id": 530365603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753282266
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213#issuecomment-3108985524\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/11213\">PR #11213</a>:</p>\n<blockquote>\n<p>As noted in <a href=\"https://github.com/bytecodealliance/regalloc2/issues/230\">bytecodealliance/regalloc2#230</a>, Cranelift maintainers have decided not to take regalloc3 at this time due to maintenance-burden concerns, so I'll go ahead and close this. Thank you for all the effort regardless!</p>\n</blockquote>",
        "id": 530365616,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1753282268
    }
]