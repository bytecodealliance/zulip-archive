[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216\">PR #10216</a> from <code>abrown:assembler-simm</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>#10200 described two main problems with sign-extended immediates in <code>cranelift-assembler-x64</code>: (a) the <code>capstone</code> pretty-printing had many peculiarities and (b) there is a potential for sign confusion when using sign-extending instructions. This PR solves (a) by parsing and re-printing <code>capstone</code> immediates into a very vanilla hex format: <code>$0xff...</code>. It solves (b) by adding new types (<code>Simm{8|16|32}</code>) for sign-extending instructions. Each commit message has more details.</p>\n<p>This resolves #10200.</p>\n</blockquote>",
        "id": 498884799,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1739229424
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216\">PR #10216</a>.</p>",
        "id": 498884800,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1739229425
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216\">PR #10216</a>.</p>",
        "id": 498884801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1739229425
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216\">PR #10216</a>.</p>",
        "id": 498886691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1739230172
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216\">PR #10216</a>.</p>",
        "id": 498886744,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1739230191
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216\">PR #10216</a>.</p>",
        "id": 498887777,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1739230582
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216#issuecomment-2649592885\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216\">PR #10216</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:x64\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 498900731,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1739235887
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216#pullrequestreview-2609236825\">PR review</a>:</p>\n<blockquote>\n<p>This might be a bit of a silly question, but why not use <code>uNN</code> for <code>AssemblerImmNN</code> and <code>iNN</code> for <code>AssemblerSimmNN</code>? Do we benefit much from the differently-named versions with different methods/conversions?</p>\n<p>Otherwise it sort of makes sense to me that instructions operate over logical values and they're represented with various bit-widths where <code>uNN</code> is always zero-extended to the operation width and <code>iNN</code> is sign-extended to the operation width (which doesn't change the logical meaning of the value, just extends the bit representation)</p>\n</blockquote>",
        "id": 499167100,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1739346428
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216#discussion_r1951135923\">PR review comment</a>:</p>\n<blockquote>\n<p>Would you be ok doing:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[lints]</span>\n<span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">true</span>\n</code></pre></div>\n<p>like other crates in the workspace? That way we can ensure that lints are applied uniformly to all crates invovled. If you want a specific clippy lint for this crate then it can be done with <code>#![warn(clippy::...)]</code> in the crate itself</p>\n</blockquote>",
        "id": 499167101,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1739346429
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216#discussion_r1951139338\">PR review comment</a>:</p>\n<blockquote>\n<p>Is <code>as i32</code> necessary here? I thought <code>simm32</code> was already <code>i32</code>?</p>\n</blockquote>",
        "id": 499167102,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1739346429
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216#pullrequestreview-2616339532\">PR review</a>.</p>",
        "id": 499595105,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1739484885
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216#discussion_r1955286883\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, let me do that in another PR because it's going to be 25 changes unrelated to this one.</p>\n</blockquote>",
        "id": 499595108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1739484885
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216#pullrequestreview-2616340277\">PR review</a>.</p>",
        "id": 499595192,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1739484915
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216#discussion_r1955287322\">PR review comment</a>:</p>\n<blockquote>\n<p>It's weirdly <code>u32</code>?</p>\n</blockquote>",
        "id": 499595193,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1739484915
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216#issuecomment-2657826017\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216\">PR #10216</a>:</p>\n<blockquote>\n<p>@alexcrichton, I'm going to merge this to move things forward and open up some other PRs as follow-ups.</p>\n<blockquote>\n<p>This might be a bit of a silly question, but why not use uNN for AssemblerImmNN and iNN for AssemblerSimmNN? Do we benefit much from the differently-named versions with different methods/conversions?</p>\n</blockquote>\n<p>Yeah, it may have made more sense at some point but now the extra <code>Imm*::new(...)</code> and <code>Imm*::value()</code> functions don't make much sense. We can just have some functions that do the appropriate pretty-printing.</p>\n</blockquote>",
        "id": 499595505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1739485035
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10216\">PR #10216</a>.</p>",
        "id": 499598767,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1739486289
    }
]