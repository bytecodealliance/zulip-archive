[
    {
        "content": "<p>My team is seeing errors calling into transpiled wasm components in the browser (suddenly after months of no problems).<br>\nHere's a minimal env that reproduces the problem (for some of us):<br>\n<a href=\"https://github.com/James-Mart/minimal-transpile\">https://github.com/James-Mart/minimal-transpile</a></p>\n<p>Further context:</p>\n<ul>\n<li>My team uses a docker containerized dev environment (so the same env for all of us regardless of host), in yet we can't repro this issue across all our machines.</li>\n<li>I first saw this error (running a Mac M1 in case the host is relevant somehow). Mac up-to-date at v15.4.1. Up-to-date Docker Desktop 4.40.0 (187762)</li>\n<li>Reproed in browsers: Brave, LibreWolf, and Chrome (browsers running on host system accessing running app in container via a forwarded port)</li>\n<li>we also have a live server running our code (not the referenced minimal repro container). Serving/running the problematic code from that external backend does <em>not</em> produce this error for me (same browsers from same OS).</li>\n<li>In the referenced minimal env linked above, I see 2 different errors:</li>\n</ul>\n<p>1) when the wasm calls println!(), I see the following</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x4da7</span><span class=\"w\"> </span><span class=\"n\">Uncaught</span><span class=\"w\"> </span><span class=\"n\">RuntimeError</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">unreachable</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">__rust_start_panic</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x4da7</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">rust_panic</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x4c1e</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">_ZN3std9panicking20rust_panic_with_hook17h79071f5fb265d1d9E</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x4bf1</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">_ZN3std9panicking19begin_panic_handler28_</span><span class=\"cp\">$u7b$$u7b$closure$u7d$$u7d$</span><span class=\"mi\">17</span><span class=\"n\">h410c57f452410813E</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x3c9f</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">_ZN3std3sys9backtrace26__rust_end_short_backtrace17h514500abf2a2d0caE</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x3c0b</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">rust_begin_unwind</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x4585</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">_ZN4core9panicking9panic_fmt17he306018bf71f8e67E</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x9562</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">_ZN3std2io5stdio6_print17h4ef99727a983bb66E</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x325e</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">hello</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x2c6</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"p\">.</span><span class=\"n\">Be</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">17452</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>2) when the wasm calls into rand and returns the result (no call to println!()), I get the following in the browser console</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">adapter</span><span class=\"w\"> </span><span class=\"n\">line</span>\n<span class=\"w\">    </span><span class=\"n\">Ie</span><span class=\"w\">  </span><span class=\"o\">@</span><span class=\"w\">   </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"cp\">$indirect</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">io</span><span class=\"o\">/</span><span class=\"n\">streams</span><span class=\"o\">@</span><span class=\"mf\">0.2.3</span><span class=\"o\">-</span><span class=\"p\">[</span><span class=\"n\">method</span><span class=\"p\">]</span><span class=\"n\">output</span><span class=\"o\">-</span><span class=\"n\">stream</span><span class=\"p\">.</span><span class=\"n\">blocking</span><span class=\"o\">-</span><span class=\"n\">write</span><span class=\"o\">-</span><span class=\"n\">and</span><span class=\"o\">-</span><span class=\"n\">flush</span><span class=\"w\">  </span><span class=\"o\">@</span><span class=\"w\">   </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">shim</span><span class=\"o\">-</span><span class=\"n\">f1fd1512</span><span class=\"p\">:</span><span class=\"mh\">0x16a</span>\n<span class=\"w\">    </span><span class=\"cp\">$_ZN22wasi_snapshot_preview18bindings4wasi2io7streams12OutputStream24blocking_write_and_flush17h4f9b86b3d19bf6d5E</span><span class=\"w\">   </span><span class=\"o\">@</span><span class=\"w\">   </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core2</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x1154</span>\n<span class=\"w\">    </span><span class=\"cp\">$_ZN22wasi_snapshot_preview16macros5print17h319e9b3e6f2e5d09E</span><span class=\"w\">   </span><span class=\"o\">@</span><span class=\"w\">   </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core2</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x9ee</span>\n<span class=\"w\">    </span><span class=\"cp\">$_ZN22wasi_snapshot_preview16macros11assert_fail17h67fe26dc6b70f78bE</span><span class=\"w\">    </span><span class=\"o\">@</span><span class=\"w\">   </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core2</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x585</span>\n<span class=\"w\">    </span><span class=\"cp\">$cabi_import_realloc</span><span class=\"w\">    </span><span class=\"o\">@</span><span class=\"w\">   </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core2</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x641</span>\n<span class=\"w\">    </span><span class=\"n\">Ee</span><span class=\"w\">  </span><span class=\"o\">@</span><span class=\"w\">   </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"cp\">$indirect</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">random</span><span class=\"o\">/</span><span class=\"n\">random</span><span class=\"o\">@</span><span class=\"mf\">0.2.3</span><span class=\"o\">-</span><span class=\"n\">get</span><span class=\"o\">-</span><span class=\"n\">random</span><span class=\"o\">-</span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"w\">   </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">shim</span><span class=\"o\">-</span><span class=\"n\">f1fd1512</span><span class=\"p\">:</span><span class=\"mh\">0x176</span>\n<span class=\"w\">    </span><span class=\"cp\">$random_get</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"w\">   </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core2</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x181a</span>\n<span class=\"w\">    </span><span class=\"cp\">$adapt</span><span class=\"o\">-</span><span class=\"n\">wasi_snapshot_preview1</span><span class=\"o\">-</span><span class=\"n\">random_get</span><span class=\"w\">    </span><span class=\"o\">@</span><span class=\"w\">   </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">shim</span><span class=\"o\">-</span><span class=\"n\">f1fd1512</span><span class=\"p\">:</span><span class=\"mh\">0xb8</span>\n<span class=\"w\">    </span><span class=\"cp\">$_ZN3std3sys12thread_local6statik20LazyStorage$LT$T$GT$</span><span class=\"mi\">10</span><span class=\"n\">initialize17h9d56f353d90c9518E</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"w\">   </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x1b09</span>\n<span class=\"w\">    </span><span class=\"cp\">$_ZN4rand4rngs6thread3rng17h1309d710195068edE</span><span class=\"w\">   </span><span class=\"o\">@</span><span class=\"w\">   </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x1d18</span>\n<span class=\"w\">    </span><span class=\"cp\">$hello</span><span class=\"w\">  </span><span class=\"o\">@</span><span class=\"w\">   </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x1641</span>\n<span class=\"w\">    </span><span class=\"n\">Ze</span><span class=\"w\">  </span><span class=\"o\">@</span><span class=\"w\">   </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"n\">handleClick</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"w\">   </span><span class=\"n\">App</span><span class=\"p\">.</span><span class=\"n\">tsx</span><span class=\"p\">:</span><span class=\"mi\">22</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">repeated</span><span class=\"w\"> </span><span class=\"n\">callstacks</span><span class=\"w\"> </span><span class=\"n\">skipped</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">7</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">6</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Uncaught</span><span class=\"w\"> </span><span class=\"n\">RuntimeError</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">unreachable</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">adapter</span><span class=\"p\">:</span><span class=\"nc\">wasi_snapshot_preview1</span><span class=\"p\">.</span><span class=\"n\">_ZN22wasi_snapshot_preview16macros11assert_fail17h67fe26dc6b70f78bE</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core2</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x58b</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">adapter</span><span class=\"p\">:</span><span class=\"nc\">wasi_snapshot_preview1</span><span class=\"p\">.</span><span class=\"n\">cabi_import_realloc</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core2</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x641</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">Ee</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">16790</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">shim</span><span class=\"p\">.</span><span class=\"n\">indirect</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">random</span><span class=\"o\">/</span><span class=\"n\">random</span><span class=\"o\">@</span><span class=\"mf\">0.2.3</span><span class=\"o\">-</span><span class=\"n\">get</span><span class=\"o\">-</span><span class=\"n\">random</span><span class=\"o\">-</span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">shim</span><span class=\"o\">-</span><span class=\"n\">f1fd1512</span><span class=\"p\">:</span><span class=\"mh\">0x176</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">adapter</span><span class=\"p\">:</span><span class=\"nc\">wasi_snapshot_preview1</span><span class=\"p\">.</span><span class=\"n\">random_get</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core2</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x181a</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">shim</span><span class=\"p\">.</span><span class=\"n\">adapt</span><span class=\"o\">-</span><span class=\"n\">wasi_snapshot_preview1</span><span class=\"o\">-</span><span class=\"n\">random_get</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">shim</span><span class=\"o\">-</span><span class=\"n\">f1fd1512</span><span class=\"p\">:</span><span class=\"mh\">0xb8</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">_ZN3std3sys12thread_local6statik20LazyStorage</span><span class=\"cp\">$LT$T$GT$</span><span class=\"mi\">10</span><span class=\"n\">initialize17h9d56f353d90c9518E</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x1b09</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">_ZN4rand4rngs6thread3rng17h1309d710195068edE</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x1d18</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">hello</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">core</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"mh\">0x1641</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"p\">.</span><span class=\"n\">Ze</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">17825</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>Important notes:</p>\n<ul>\n<li>This error is inconsistent on our machines. It always happens on my machine and another coworker's Mac M2. It does <em>not</em> happen at all on another coworker's Ubuntu machine. Again, all containerized regardless of host OS...</li>\n<li>On systems where it is reproducible, it's 100% of the time.</li>\n</ul>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/James-Mart/minimal-transpile\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/5676146cdb0bc0f9777bceba8ea94f05ee34c343/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f333066356237633439643264393465646161633733343434396566336333373964353264623234303265383164623235373435343632383832343064323235342f4a616d65732d4d6172742f6d696e696d616c2d7472616e7370696c65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/James-Mart/minimal-transpile\" title=\"GitHub - James-Mart/minimal-transpile\">GitHub - James-Mart/minimal-transpile</a></div><div class=\"message_embed_description\">Contribute to James-Mart/minimal-transpile development by creating an account on GitHub.</div></div></div>",
        "id": 513909337,
        "sender_full_name": "Mike M",
        "timestamp": 1745423855
    },
    {
        "content": "<p>An additional detail:</p>\n<p>Mike just sent me his transpiled wasm, and only then can I reproduce the issue. But if I transpile it myself, no error.</p>\n<p>Since it's a containerized dev environment, versions of tooling should all basically be the same.</p>",
        "id": 513911684,
        "sender_full_name": "James Mart",
        "timestamp": 1745424423
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"901567\">@Mike M</span> thanks for reporting this -- would you mind filing this at <a href=\"https://github.com/bytecodealliance/jco\">https://github.com/bytecodealliance/jco</a> (as well as discussing it here) ?</p>\n<p>Also, I'm curious -- any idea of what changed here tooling wise that might have started introducing this issue? Was it a toolchain update? jco hasn't changed in a bit but other pieces of the toolchain certainly have.</p>\n<p>Fascinating that it seems to only happen on aarch64 somehow (?)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/feeb7abd3704245cd0fb2b1fe5ffdac409bb7cb0/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f656333646238306461623939373230396330353033363435336661636465373338363065633132346464613736636536383533643634303636353465383636642f62797465636f6465616c6c69616e63652f6a636f&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco\" title=\"GitHub - bytecodealliance/jco: JavaScript toolchain for working with WebAssembly Components\">GitHub - bytecodealliance/jco: JavaScript toolchain for working with WebAssembly Components</a></div><div class=\"message_embed_description\">JavaScript toolchain for working with WebAssembly Components - bytecodealliance/jco</div></div></div>",
        "id": 513911822,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745424460
    },
    {
        "content": "<p>If you go to the line in the source that the error points to, <br>\n<a href=\"/user_uploads/15107/nuwchVA47TC6U_2Y3J7nQb-0/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/15107/nuwchVA47TC6U_2Y3J7nQb-0/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"330x128\" src=\"/user_uploads/thumbnail/15107/nuwchVA47TC6U_2Y3J7nQb-0/image.png/840x560.webp\"></a></div><p>...you end up here</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/4b6e96151f53705fc8c245e5d8efef31b0637eed/crates/wasi-preview1-component-adapter/src/lib.rs#L376\">https://github.com/bytecodealliance/wasmtime/blob/4b6e96151f53705fc8c245e5d8efef31b0637eed/crates/wasi-preview1-component-adapter/src/lib.rs#L376</a></p>\n<p>...The giant comment from <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> above that function seems potentially relevant <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>\n<p>But I'm just not sure why we only just started seeing this error</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/4b6e96151f53705fc8c245e5d8efef31b0637eed/crates/wasi-preview1-component-adapter/src/lib.rs#L376\" style='background-image: url(\"https://uploads.zulipusercontent.net/c0e1387ee9618ce1bb92595fe5f5ad40f1bbeef6/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323536393365646535663932336135633961373236333839626232623962336565366266313932326664343566653430376461336437663839666133336437642f62797465636f6465616c6c69616e63652f7761736d74696d65\")'></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/4b6e96151f53705fc8c245e5d8efef31b0637eed/crates/wasi-preview1-component-adapter/src/lib.rs#L376\" title=\"wasmtime/crates/wasi-preview1-component-adapter/src/lib.rs at 4b6e96151f53705fc8c245e5d8efef31b0637eed · bytecodealliance/wasmtime\">wasmtime/crates/wasi-preview1-component-adapter/src/lib.rs at 4b6e96151f53705fc8c245e5d8efef31b0637eed · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A lightweight WebAssembly runtime that is fast, secure, and standards-compliant - bytecodealliance/wasmtime</div></div></div>",
        "id": 513912926,
        "sender_full_name": "James Mart",
        "timestamp": 1745424724
    },
    {
        "content": "<p>GH issue: <a href=\"https://github.com/bytecodealliance/jco/issues/634\">https://github.com/bytecodealliance/jco/issues/634</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/issues/634\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/43abbc3c535a8f64b49c7ec02789243224d1f586/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633537303236363562363639373430623732383761303336656566383336313132316331616435643736303663386263613730343031343564653338643636322f62797465636f6465616c6c69616e63652f6a636f2f6973737565732f363334&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/issues/634\" title=\"Sudden transpiled wasm component error in browser · Issue #634 · bytecodealliance/jco\">Sudden transpiled wasm component error in browser · Issue #634 · bytecodealliance/jco</a></div><div class=\"message_embed_description\">My team is seeing errors calling into transpiled wasm components in the browser (suddenly after months of no problems). Here's a minimal env that reproduces the problem (for some of us): https://gi...</div></div></div>",
        "id": 513913349,
        "sender_full_name": "Mike M",
        "timestamp": 1745424851
    },
    {
        "content": "<p>Work-around?<br>\nIt's only been a day, but given this is a blocker for me, I'm curious if there's anything you can offer immediately. We could really use a <strong>work-around / downgrade</strong> if you have one. For now, it's only me who's dead in the water, but I have a feeling we'll have 2 of us blocked very shortly.<br>\nThanks</p>",
        "id": 514227029,
        "sender_full_name": "Mike M",
        "timestamp": 1745527985
    },
    {
        "content": "<p>I <em>think</em> this error implies that anyone running a Mac M1+ is currently unable to transpile a wasm component and run it in the browser. </p>\n<p>The component might need to call a wasi import or something to trigger the error. Tested with generating a random number.</p>",
        "id": 514394890,
        "sender_full_name": "James Mart",
        "timestamp": 1745592037
    },
    {
        "content": "<p><del>Hey apologies for the delay here <span class=\"user-mention\" data-user-id=\"901567\">@Mike M</span>, but can you confirm what version of componentize-js you're using? Jco dynamically <a href=\"https://github.com/bytecodealliance/jco/blob/main/src/cmd/componentize.js#L8\"><code>eval</code>s componentize-js</a> to build the component and I don't see it in your <code>package.json</code> but I'd like to be sure (seeing if we can go for a downgrade here).</del></p>\n<p>[EDIT] Sorry, I misunderstood -- you're <em>only</em> transpiling the rust component, right? You won't need a version of componentize.</p>\n<p>At the same time, I'd like to explore what I think could be a workaround -- would you also mind modifying  <a href=\"https://github.com/James-Mart/minimal-transpile/blob/main/wasm/wit/world.wit\">your WIT world</a> to look like the following:</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package component:wasm;\n\n// Not required, but generally interfaces are recommended over bare function exports\ninterface greet {\n  hello: func() -&gt; string;\n}\n\nworld example {\n    import wasi:random/random@0.2.3;\n    import wasi:random/insecure@0.2.3;\n    import wasi:random/insecure-seed@0.2.3;\n    import wasi:cli/environment@0.2.3;\n    import wasi:cli/exit@0.2.3;\n    import wasi:cli/stdin@0.2.3;\n    import wasi:cli/stdout@0.2.3;\n    import wasi:cli/stderr@0.2.3;\n    import wasi:cli/terminal-input@0.2.3;\n    import wasi:cli/terminal-output@0.2.3;\n    import wasi:cli/terminal-stdin@0.2.3;\n    import wasi:cli/terminal-stdout@0.2.3;\n    import wasi:cli/terminal-stderr@0.2.3;\n\n    export greet;\n}\n</code></pre></div>\n<p>The above is  overkill, but I just want to increase the chance of success for the test you run.</p>\n<p>Once you've updated your WIT, please run <code>wkg wit fetch</code> to pull in the noted WIT dependencies, from the folder above (from <code>wasm</code>), which should fill out <code>wasm/wit/deps</code>.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/James-Mart/minimal-transpile/blob/main/wasm/wit/world.wit\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/d35599688e70c5027dc5da9f9c9185a6ac7c7722/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353435346338396439343366376134653465646534643330313262626237373361653866666437626236616332346139356333306536313234383533333333622f4a616d65732d4d6172742f6d696e696d616c2d7472616e7370696c65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/James-Mart/minimal-transpile/blob/main/wasm/wit/world.wit\" title=\"minimal-transpile/wasm/wit/world.wit at main · James-Mart/minimal-transpile\">minimal-transpile/wasm/wit/world.wit at main · James-Mart/minimal-transpile</a></div><div class=\"message_embed_description\">Contribute to James-Mart/minimal-transpile development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco/blob/main/src/cmd/componentize.js#L8\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/994f553c443ccb4c891f4955b35d8a67874b4a2d/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f373965313265366130663938333737343266353939353732353137376236323130646434323763316364313730386333643365326561346336313837393839362f62797465636f6465616c6c69616e63652f6a636f&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco/blob/main/src/cmd/componentize.js#L8\" title=\"jco/src/cmd/componentize.js at main · bytecodealliance/jco\">jco/src/cmd/componentize.js at main · bytecodealliance/jco</a></div><div class=\"message_embed_description\">JavaScript toolchain for working with WebAssembly Components - bytecodealliance/jco</div></div></div>",
        "id": 514408040,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745595968
    },
    {
        "content": "<p>Ahh please note also that if you do the <code>interface</code> change, you'll need to modify your code <em>just a bit</em> to export the right things.</p>",
        "id": 514408840,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745596227
    },
    {
        "content": "<p>OH! You know what, I think I might know what is wrong</p>",
        "id": 514409962,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745596619
    },
    {
        "content": "<p>I'm going to do a little bit more poking around to try and fix this and send a PR to your repo directly, hopefully before monday!</p>",
        "id": 514411857,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745597216
    },
    {
        "content": "<p>ok, sounds great, Victor!<br>\nIn case it helps, here's my response to your first message (couldn't get it done before you were on to what sounds like the right direction :) )<br>\nNOTE: I did <em>not</em> make the interface change. I left the raw func in the export { ... } because you had already replied with the follow-up, and it was taking me time to rework that. I can add the interface to the defn if you think that would be informative. Just wanted to get you this response asap.</p>\n<p>Ok, I'm in unfamiliar territory with the details of this container, so I'll be thorough in my response...<br>\npulled the wkg util and ran it from the wasm folder, which seemed to work:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">wkg</span><span class=\"o\">-</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"w\"> </span><span class=\"n\">fetch</span>\n<span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">04</span><span class=\"o\">-</span><span class=\"mi\">25</span><span class=\"n\">T16</span><span class=\"p\">:</span><span class=\"mi\">06</span><span class=\"p\">:</span><span class=\"mf\">12.620227</span><span class=\"n\">Z</span><span class=\"w\">  </span><span class=\"n\">WARN</span><span class=\"w\"> </span><span class=\"n\">wasm_pkg_client</span><span class=\"p\">::</span><span class=\"n\">oci</span><span class=\"p\">::</span><span class=\"n\">loader</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Ignoring</span><span class=\"w\"> </span><span class=\"n\">invalid</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"n\">tag</span><span class=\"w\"> </span><span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"s\">\"sha256-bde08985744034d359aefdfa105be38b75f15c921efada1b6dc081a11090ef45.sig\"</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">=</span><span class=\"n\">Error</span><span class=\"p\">(</span><span class=\"s\">\"unexpected character 's' while parsing major version number\"</span><span class=\"p\">)</span>\n<span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">04</span><span class=\"o\">-</span><span class=\"mi\">25</span><span class=\"n\">T16</span><span class=\"p\">:</span><span class=\"mi\">06</span><span class=\"p\">:</span><span class=\"mf\">12.620327</span><span class=\"n\">Z</span><span class=\"w\">  </span><span class=\"n\">WARN</span><span class=\"w\"> </span><span class=\"n\">wasm_pkg_client</span><span class=\"p\">::</span><span class=\"n\">oci</span><span class=\"p\">::</span><span class=\"n\">loader</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Ignoring</span><span class=\"w\"> </span><span class=\"n\">invalid</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"n\">tag</span><span class=\"w\"> </span><span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"s\">\"sha256-3da46c1244c00aebe1c8784f900eb3cf55d19f3bd28ce5303858f888854e3ef4.sig\"</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">=</span><span class=\"n\">Error</span><span class=\"p\">(</span><span class=\"s\">\"unexpected character 's' while parsing major version number\"</span><span class=\"p\">)</span>\n<span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">04</span><span class=\"o\">-</span><span class=\"mi\">25</span><span class=\"n\">T16</span><span class=\"p\">:</span><span class=\"mi\">06</span><span class=\"p\">:</span><span class=\"mf\">12.758450</span><span class=\"n\">Z</span><span class=\"w\">  </span><span class=\"n\">WARN</span><span class=\"w\"> </span><span class=\"n\">wasm_pkg_client</span><span class=\"p\">::</span><span class=\"n\">oci</span><span class=\"p\">::</span><span class=\"n\">loader</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Ignoring</span><span class=\"w\"> </span><span class=\"n\">invalid</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"n\">tag</span><span class=\"w\"> </span><span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"s\">\"sha256-e1b6482c98d3d299ce75a80c4d15501e32fbd5b1b8434e23aafafe1677637faf.sig\"</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">=</span><span class=\"n\">Error</span><span class=\"p\">(</span><span class=\"s\">\"unexpected character 's' while parsing major version number\"</span><span class=\"p\">)</span>\n<span class=\"mi\">2025</span><span class=\"o\">-</span><span class=\"mi\">04</span><span class=\"o\">-</span><span class=\"mi\">25</span><span class=\"n\">T16</span><span class=\"p\">:</span><span class=\"mi\">06</span><span class=\"p\">:</span><span class=\"mf\">12.758490</span><span class=\"n\">Z</span><span class=\"w\">  </span><span class=\"n\">WARN</span><span class=\"w\"> </span><span class=\"n\">wasm_pkg_client</span><span class=\"p\">::</span><span class=\"n\">oci</span><span class=\"p\">::</span><span class=\"n\">loader</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Ignoring</span><span class=\"w\"> </span><span class=\"n\">invalid</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span><span class=\"n\">tag</span><span class=\"w\"> </span><span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"s\">\"sha256-4e1a777bd0dd370f680645afe3c7aa230e1ebc6bf0c9ae454546ca0dfe3f4bc9.sig\"</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">=</span><span class=\"n\">Error</span><span class=\"p\">(</span><span class=\"s\">\"unexpected character 's' while parsing major version number\"</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>then recompiled:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">build</span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">libc</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">2.172</span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">getrandom</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">3.2</span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">zerocopy</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">8.24</span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"o\">-</span><span class=\"n\">rt</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">41.0</span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">rand_core</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">9.3</span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">ppv</span><span class=\"o\">-</span><span class=\"n\">lite86</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">2.21</span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">rand_chacha</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">9.0</span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">rand</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">9.1</span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">1.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">workspaces</span><span class=\"o\">/</span><span class=\"n\">minimal</span><span class=\"o\">-</span><span class=\"n\">transpile</span><span class=\"o\">/</span><span class=\"n\">wasm</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">dev</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">profile</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">1.59</span><span class=\"n\">s</span>\n</code></pre></div>\n<p>and I see the same error</p>",
        "id": 514412222,
        "sender_full_name": "Mike M",
        "timestamp": 1745597353
    },
    {
        "content": "<p>Yeah so pulling your code down one thimg I'm wondering is how you're bundling in preview2-shim</p>",
        "id": 514412438,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745597422
    },
    {
        "content": "<p>This project:</p>\n<p><a href=\"https://www.npmjs.com/package/@bytecodealliance/preview2-shim\">https://www.npmjs.com/package/@bytecodealliance/preview2-shim</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://www.npmjs.com/package/@bytecodealliance/preview2-shim\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/1f95ebb8bfed4d27a76408b23d90d6ad57189dbd/68747470733a2f2f7374617469632d70726f64756374696f6e2e6e706d6a732e636f6d2f33333865343930356132363834636139366530386337373830666336383431322e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://www.npmjs.com/package/@bytecodealliance/preview2-shim\" title=\"@bytecodealliance/preview2-shim\">@bytecodealliance/preview2-shim</a></div><div class=\"message_embed_description\">WASI Preview2 shim for JS environments. Latest version: 0.17.2, last published: 2 months ago. Start using @bytecodealliance/preview2-shim in your project by running `npm i @bytecodealliance/preview2-shim`. There are 14 other projects in the npm registry using @bytecodealliance/preview2-shim.</div></div></div>",
        "id": 514412478,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745597435
    },
    {
        "content": "<p>Is what adds the shims (like random) to make things work in the browser</p>",
        "id": 514412503,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745597446
    },
    {
        "content": "<p>I <em>think</em> the answer here is that <code>vite</code> is walking your dynamic import in App.tsx, and resolving that to bundle it</p>",
        "id": 514412675,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745597509
    },
    {
        "content": "<p>And I see the output in dist</p>",
        "id": 514412831,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745597555
    },
    {
        "content": "<p>Did your browser change by any chance?</p>",
        "id": 514414375,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745598092
    },
    {
        "content": "<p>I was thinking that jco was bundling the shims as part of transpilation (and transpile is part of the yarn build script).</p>\n<p>But now looking at JCO docs I'm seeing</p>\n<blockquote>\n<p>Components relying on WASI bindings will contain external WASI imports, which are automatically updated to the <code>@bytecodealliance/preview2-shim</code> package.</p>\n</blockquote>\n<p>In which case, I suppose yeah, it's vite that's resolving them?</p>",
        "id": 514414402,
        "sender_full_name": "James Mart",
        "timestamp": 1745598098
    },
    {
        "content": "<p>No, it doesn't bundle the shims -- vite is bundling as normal</p>",
        "id": 514414433,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745598110
    },
    {
        "content": "<p>Sorry didn't update, but that's what's happening -- you can use rollup/esbuild/vite/etc -- that step has to be done somewhere otherwise it'd have nothing to call on the frontend of course, the code is fine and stuff shows up in dist as expected</p>",
        "id": 514414612,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745598158
    },
    {
        "content": "<p>What I'm thinking now is actually that this is a deficiency in the browser shim itself, because it seems like writing to streams (whether via stdout or when random is called) is failing</p>",
        "id": 514414782,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745598221
    },
    {
        "content": "<p>BUT, the really perplexing thing is how it works some places and not others, it's leaving me to think that the browser itself could be different</p>",
        "id": 514414848,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745598241
    },
    {
        "content": "<p>Yeah keep in mind the shim works fine in my browser</p>",
        "id": 514414919,
        "sender_full_name": "James Mart",
        "timestamp": 1745598256
    },
    {
        "content": "<p>i.e. that a different in browser settings/state is causing shim I/O code to fail in one place and not in the other</p>",
        "id": 514414972,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745598275
    },
    {
        "content": "<p>Actually I think the problem is something at build time, not runtime</p>",
        "id": 514415033,
        "sender_full_name": "James Mart",
        "timestamp": 1745598295
    },
    {
        "content": "<p>Hmnn, interesting. Considering ya'll can take the exact same code and put it in on one machine versus another and have it run fine, I thought we could rule that out</p>",
        "id": 514415156,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745598335
    },
    {
        "content": "<p>(let me know if I misunderstood the situation!)</p>",
        "id": 514415213,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745598353
    },
    {
        "content": "<p>Mike sent me a zip of his wasm-transpiled directory, and I used it in my environment without building it myself, and then I also had the error</p>",
        "id": 514415324,
        "sender_full_name": "James Mart",
        "timestamp": 1745598382
    },
    {
        "content": "<p>But if I transpile the component myself, no error</p>",
        "id": 514415353,
        "sender_full_name": "James Mart",
        "timestamp": 1745598394
    },
    {
        "content": "<p>Ahh right OK you noted that up top</p>",
        "id": 514415472,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745598426
    },
    {
        "content": "<p>Would you mind providing zip files with both of your versions? built on his computer versus yours?</p>",
        "id": 514415736,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745598503
    },
    {
        "content": "<p>And, we effectively did the reverse as well, where Mike used his browser to run an app that was built in another environment (in this case build env was CICD and wasn't using that <code>minimal-transpile</code> app), and then he does <em>not</em> have the error</p>",
        "id": 514415754,
        "sender_full_name": "James Mart",
        "timestamp": 1745598509
    },
    {
        "content": "<blockquote>\n<p>Would you mind providing zip files with both of your versions? built on his computer versus yours?</p>\n</blockquote>\n<p>Yeah sure</p>",
        "id": 514416014,
        "sender_full_name": "James Mart",
        "timestamp": 1745598592
    },
    {
        "content": "<p>And the working build was on Ubuntu (amd64) w/ the failing build on Mac M2 (aarch64) right</p>",
        "id": 514416038,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745598598
    },
    {
        "content": "<blockquote>\n<p>And the working build was on Ubuntu (amd64) w/ the failing build on Mac M2 (aarch64) right</p>\n</blockquote>\n<p>Right. Builds from an ubuntu runner in cicd work, as well as builds on my machine which is amd64 (running windows)</p>",
        "id": 514416519,
        "sender_full_name": "James Mart",
        "timestamp": 1745598721
    },
    {
        "content": "<p>Failed on Mac M1 and M2 so far</p>",
        "id": 514417252,
        "sender_full_name": "Mike M",
        "timestamp": 1745598908
    },
    {
        "content": "<p>IIRC we do not do much arch-specific conditional compilation/gating on the jco side -- but clearly something is different, and the big difference <em>seems</em> to be arch...</p>",
        "id": 514417270,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745598916
    },
    {
        "content": "<p>One thing I'm wondering is if it's actually a compiled wasm level issue</p>",
        "id": 514417344,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745598942
    },
    {
        "content": "<p>I'll be able to check with the zip files from both environments (and I have an macbook here I can use to reproduce as well, so even if I don't get it no biggie) -- but I wonder if taking only the wasm file over you can reproduce the failure</p>",
        "id": 514417493,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745598982
    },
    {
        "content": "<p><a href=\"/user_uploads/15107/vOtVH1LjCp1qdLC-TFAxwEPn/build-artifacts.working.zip\">build-artifacts.working.zip</a><br>\n<a href=\"/user_uploads/15107/Fx18yjwlTmoOCvcv2FPapMJ0/build-artifacts.broken.zip\">build-artifacts.broken.zip</a></p>",
        "id": 514417566,
        "sender_full_name": "James Mart",
        "timestamp": 1745599011
    },
    {
        "content": "<p>i.e. taking only the wasm file over, then transpiling on whichever platform, then trying to repro the failure</p>",
        "id": 514417598,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745599022
    },
    {
        "content": "<p>Good question, I'll do some of that debugging to see if I can better isolate what causes the error</p>",
        "id": 514417660,
        "sender_full_name": "James Mart",
        "timestamp": 1745599044
    },
    {
        "content": "<p>Yeah, we've either stumbled upon an bug from arch difference in Rust, or in generated (transpiled) JS.</p>\n<p>I am leaning on the transpiled JS side of course, but of course checking is the only way to know for sure</p>",
        "id": 514417827,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745599087
    },
    {
        "content": "<p>My earlier post apparently included some extraneous content. Is a response to your original request still relevant Victor? I'm happy to provide updated/corrected output if still relevant</p>",
        "id": 514417914,
        "sender_full_name": "Mike M",
        "timestamp": 1745599131
    },
    {
        "content": "<p>Oh no thanks Mike, the details here are certainly enough, and the zip files above should be everything I need</p>",
        "id": 514418074,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745599201
    },
    {
        "content": "<p>Thanks for the patience here, this is certainly a head scratcher, but I should be able to get to the bottom of it with allt his information</p>",
        "id": 514418203,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745599234
    },
    {
        "content": "<p>No problem at all. We really appreciate your time and effort! If we can provide anything else, we'll be here.</p>",
        "id": 514418451,
        "sender_full_name": "Mike M",
        "timestamp": 1745599280
    },
    {
        "content": "<p>Okay it's <code>wasm.core2.wasm</code>. I believe transferring <em>only</em> that file over triggers the issue</p>",
        "id": 514419337,
        "sender_full_name": "James Mart",
        "timestamp": 1745599406
    },
    {
        "content": "<p>So... some difference in how the core wasm is generated across architectures?</p>",
        "id": 514419817,
        "sender_full_name": "James Mart",
        "timestamp": 1745599470
    },
    {
        "content": "<p>Ah sorry, could you try only transferring the output on the Rust side</p>",
        "id": 514421467,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745599695
    },
    {
        "content": "<p>confirming James finding. I swapped out my wasm.core2.wasm with his, and my code now works</p>",
        "id": 514421541,
        "sender_full_name": "Mike M",
        "timestamp": 1745599706
    },
    {
        "content": "<p>You should see the same result, but doing it from <em>before</em> transpile runs tells us a little bit more about where the issue is -- whether it's the rust output or \"unbundling\" routines</p>",
        "id": 514421812,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745599743
    },
    {
        "content": "<p>Oh, okay great. Will check</p>",
        "id": 514421880,
        "sender_full_name": "James Mart",
        "timestamp": 1745599752
    },
    {
        "content": "<p>Without getting into the nitty gritty -- Rust will output a wasm component (which consists of one or more core modules, i.e. the only thing a browser can run), and jco actually unbundles that component into multiple core modules and supporting machinery</p>",
        "id": 514422098,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745599784
    },
    {
        "content": "<p>Is it enough to just swap the whole <code>target</code> directory?</p>",
        "id": 514422156,
        "sender_full_name": "James Mart",
        "timestamp": 1745599793
    },
    {
        "content": "<p>the unbundling functionality could also be a point of failure</p>",
        "id": 514422196,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745599798
    },
    {
        "content": "<p>Or do you want higher resolution</p>",
        "id": 514422357,
        "sender_full_name": "James Mart",
        "timestamp": 1745599818
    },
    {
        "content": "<p>Yep! swapping the target directory is fine, because you use <code>wasm/target</code> in <code>transpile.sh</code></p>",
        "id": 514422359,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745599818
    },
    {
        "content": "<p>swapping <code>wasm</code>, <code>wasm/target</code>, etc down to <code>./wasm/target/wasm32-wasip1/release/wasm.wasm</code> should be fine</p>",
        "id": 514422439,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745599846
    },
    {
        "content": "<p>Ok - confirmed. I swapped only the <code>.wasm</code> file with the version built on the aarch64 machine, reran transpilation, and was able to reproduce the error</p>",
        "id": 514425089,
        "sender_full_name": "James Mart",
        "timestamp": 1745600690
    },
    {
        "content": "<p>Well, I definitely didn't want to hear that, but that certainly narrows it down!</p>",
        "id": 514425238,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745600740
    },
    {
        "content": "<p>Haha sorry, thank you very much for your support</p>",
        "id": 514425271,
        "sender_full_name": "James Mart",
        "timestamp": 1745600756
    },
    {
        "content": "<p>Thanks for doing this exploratory work -- it looks like there's a bug in the toolchain somewhere, this is worth surfacing to wasmtime etc. </p>\n<p>I'll try to do a little more digging (maybe try and bisect this back) and put up an issue to <code>wasmtime</code>. Clearly the transpilation machinery here isn't the deciding factor, possibly this is a failure of the code generated by <code>wit-bidngen-rt</code>.</p>",
        "id": 514425714,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745600887
    },
    {
        "content": "<p>confirmed: <br>\nI did the opposite of James: dropped his target/wasm32-wasip1/release/wasm.wasm in my release folder and transpiled, ran, did <em>not</em> see the error</p>",
        "id": 514425722,
        "sender_full_name": "Mike M",
        "timestamp": 1745600889
    },
    {
        "content": "<p>If you want to downgrade <code>wit-bindgen-rt</code> to <code>0.40.0</code> (I assume things were working 2 months ago), you could try that... but the current version of wit-bindgen-rt has been in place for a while.</p>",
        "id": 514426054,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745601003
    },
    {
        "content": "<p>I hesitate to think it's code that snuck into the rust toolchain underneath itself, but that's basically going to be what I try next</p>",
        "id": 514426142,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745601046
    },
    {
        "content": "<p>I think it's not wit-bindgen-rt, because in the other project where this surfaced, it's happening in an app where the wit-bindgen-rt version hasn't changed. And it's also 0.39</p>",
        "id": 514426244,
        "sender_full_name": "James Mart",
        "timestamp": 1745601087
    },
    {
        "content": "<p>Ah thanks!</p>",
        "id": 514426280,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745601102
    },
    {
        "content": "<p>OK, what about versions of Rust?</p>",
        "id": 514426297,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745601110
    },
    {
        "content": "<p>Is the other project similarly behind on Rust version?</p>",
        "id": 514426305,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745601115
    },
    {
        "content": "<p>wouldn't surprised if the other project has an up to date toolchain but just older <code>wit-bindgen-rt</code> dep</p>",
        "id": 514426418,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745601155
    },
    {
        "content": "<p>Mike and I are both on the same version of rust:</p>\n<p>$ rustc --version<br>\nrustc 1.85.1</p>\n<p>But... I think it is true to say that that was recently updated. I can't say for certain at the moment if that corresponded with when the error started. But this is something we can check</p>",
        "id": 514427070,
        "sender_full_name": "James Mart",
        "timestamp": 1745601387
    },
    {
        "content": "<blockquote>\n<p>wouldn't surprised if the other project has an up to date toolchain but just older <code>wit-bindgen-rt</code> dep</p>\n</blockquote>\n<p>Is this a problem? We have a monorepo with lots of apps, each with essentially their own versions of <code>wit-bindgen-rt</code>, and we update the rust toolchain independently (and rarely)</p>",
        "id": 514427264,
        "sender_full_name": "James Mart",
        "timestamp": 1745601460
    },
    {
        "content": "<p>I just tested one of our apps and got the error in both cases<br>\n(both) rustc 1.85.1<br>\nfirst wit-bindgen-rt v0.34.0<br>\nsecond wit-bindgen-rt v0.41.0<br>\nSo wide range of versions there that don't seem relevant</p>",
        "id": 514429776,
        "sender_full_name": "Mike M",
        "timestamp": 1745602265
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598440\">@Victor Adossi</span> </p>\n<p>We use containerized development to ensure our environments are the same. Recently, our environment image changed, and it included two changs that are potentially relevant:</p>\n<ul>\n<li>Rustc went from 1.84.1 =&gt; 1.85.1</li>\n<li>cargo-component went from  0.15.0 =&gt; 0.21.1 </li>\n</ul>\n<p>I was going to try to manually downgrade versions of <code>cargo-component</code>, but it seems that a default <code>cargo-component</code> --lib project at any version prior to <code>0.21.0 --locked</code> cannot build when the rust toolchain is at <code>1.85.1</code>.</p>\n<p>So, in the <code>minimal-transpile</code> project, we just dropped the rustc version explicitly to 1.84.1, because that allows us to test prior versions of <code>cargo-component</code>. </p>\n<p>Sure enough, with rust toolchain at <code>1.84.1</code> and cargo-component at <code>0.15.0</code>, mike was <strong>unable</strong> to reproduce the error on his aarch64 machine.</p>\n<p>Mike is now going to binary search through cargo-component versions until we isolate the one that breaks.</p>",
        "id": 514444277,
        "sender_full_name": "James Mart",
        "timestamp": 1745607678
    },
    {
        "content": "<p>cargo-component v0.20.0 --&gt; v0.21.0 trips the error</p>",
        "id": 514446831,
        "sender_full_name": "Mike M",
        "timestamp": 1745608722
    },
    {
        "content": "<p>Thanks for getting to the bottom of this <span class=\"user-mention\" data-user-id=\"901567\">@Mike M</span>  and <span class=\"user-mention\" data-user-id=\"648387\">@James Mart</span> , guess that's where the issue needs to be filed!</p>",
        "id": 514477716,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745624687
    },
    {
        "content": "<p>This is excellent, very glad it wasn't the Rust project itself but was instead something else... cargo-component was not the expected problem but definitely a welcome surprise</p>",
        "id": 514477789,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745624734
    },
    {
        "content": "<p>Would you like us to do that Victor? Or do you have a process you want to follow to close and reopen issues and whatnot?</p>",
        "id": 514478522,
        "sender_full_name": "Mike M",
        "timestamp": 1745625359
    },
    {
        "content": "<p>Oh please go ahead if you'd like! Ya'll did all the work and actually tracked it down</p>",
        "id": 514478973,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745625674
    },
    {
        "content": "<p>At this point you have everything to make a stellar reproduction case for the issue, and what I can do is close out the jco issue in favor of the cargo-component one <em>after</em> you have it, just to ensure it doesn't fall through the cracks</p>",
        "id": 514479018,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745625707
    },
    {
        "content": "<p>Sounds good. I'm wrapping up some work now while waiting for a delayed flight. should be able to get that done tonight.</p>",
        "id": 514479119,
        "sender_full_name": "Mike M",
        "timestamp": 1745625744
    },
    {
        "content": "<p>No worries, it is friday before the weekend!</p>",
        "id": 514479344,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745625924
    },
    {
        "content": "<p>Ok, new issue is here: <a href=\"https://github.com/bytecodealliance/cargo-component/issues/398\">https://github.com/bytecodealliance/cargo-component/issues/398</a><br>\nI've referenced this discussion thread and the jco issue in it.<br>\nand closed the jco issue with a link to the new issue.<br>\nFinally, I'll start a zulip thread for cargo-component to raise the proper attention.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/cargo-component/issues/398\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/884f5b2fd16dd9f814eff98c1f9e95b1654bc61e/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f326165393434653937343763343365616665306532343235383232346438656631353566646364623238616433326433313133303933356264353435306262612f62797465636f6465616c6c69616e63652f636172676f2d636f6d706f6e656e742f6973737565732f333938&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/cargo-component/issues/398\" title=\"Upgrading cargo-component fro v0.20.0 to v0.21.0 leads to adapter/unreachable errors in browser · Issue #398 · bytecodealliance/cargo-component\">Upgrading cargo-component fro v0.20.0 to v0.21.0 leads to adapter/unreachable errors in browser · Issue #398 · bytecodealliance/cargo-component</a></div><div class=\"message_embed_description\">Impact It seems this error means that anyone running Apple silicon (M1+ laptops) is currently unable to build/transpile a wasm component and run it in the browser. Brief v0.21.0 introduces issues b...</div></div></div>",
        "id": 514485979,
        "sender_full_name": "Mike M",
        "timestamp": 1745631213
    },
    {
        "content": "<p>Thanks again! <span aria-label=\"bow\" class=\"emoji emoji-1f647\" role=\"img\" title=\"bow\">:bow:</span> I'll maybe add some people</p>",
        "id": 514486903,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1745631914
    }
]