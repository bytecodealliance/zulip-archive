[
    {
        "content": "<p>Above error is gone since abandoning aforementioned React tooling. To avoid clutter, I will recycle this thread.</p>",
        "id": 497032287,
        "sender_full_name": "Leon Thomm",
        "timestamp": 1738337471
    },
    {
        "content": "<p>The TypeScript interface files generated by jco's transpiler include things like:</p>\n<div class=\"codehilite\" data-code-language=\"TypeScript\"><pre><span></span><code><span class=\"k\">export</span><span class=\"w\"> </span><span class=\"nx\">namespace</span><span class=\"w\"> </span><span class=\"nx\">MyNamespaceStuffMyComponent</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"k\">export</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nx\">MyResourceType</span><span class=\"w\"> </span><span class=\"p\">};</span>\n<span class=\"p\">}</span>\n<span class=\"k\">export</span><span class=\"w\"> </span><span class=\"kd\">class</span><span class=\"w\"> </span><span class=\"nx\">MyResourceType</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"p\">...</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>When I import this file, I see errors. E.g., with Parcel</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">@</span><span class=\"n\">parcel</span><span class=\"o\">/</span><span class=\"n\">transformer</span><span class=\"o\">-</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">ESM</span><span class=\"o\">-</span><span class=\"n\">style</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">declarations</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">permitted</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">namespace</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>A quick search suggests the above TypeScript code is indeed invalid. Have I missed anything?</p>",
        "id": 497032403,
        "sender_full_name": "Leon Thomm",
        "timestamp": 1738337505
    },
    {
        "content": "<p>Hey Leon -- glad you were able to solve some issues with the webpack setup!</p>",
        "id": 497053061,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1738344035
    },
    {
        "content": "<p>I think it's worth filing a bug for that on the jco with an example WIT interface and how you were planning on using it. </p>\n<p>As far as building components, rollup has been used successfully before to put stuff together</p>",
        "id": 497053258,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1738344111
    },
    {
        "content": "<p>There's also the new <code>jco guest-types</code> command, that will <em>specifically</em> not generate a namespace but rather a <code>declare module</code> statement</p>",
        "id": 497053384,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1738344152
    },
    {
        "content": "<blockquote>\n<p>I think it's worth filing a bug for that on the jco with an example WIT interface and how you were planning on using it. </p>\n</blockquote>\n<p>will do, although I still think I'm missing something since this makes it impossible for me to transpile any non-trivial components and I think this issue should have come up long before</p>\n<blockquote>\n<p>As far as building components, rollup has been used successfully before to put stuff together</p>\n</blockquote>\n<p>Interesting. I also tried bundling using Vite, which runs into a Rollup error for presumably the same reason.</p>",
        "id": 497061659,
        "sender_full_name": "Leon Thomm",
        "timestamp": 1738347102
    },
    {
        "content": "<p>Interesting -- here's an example that <em>hopefully</em> should help:</p>\n<p><a href=\"https://github.com/wasmCloud/typescript/tree/main/examples/components/http-password-checker\">https://github.com/wasmCloud/typescript/tree/main/examples/components/http-password-checker</a></p>\n<p>Full disclosure I work for Cosmonic which develops CNCF wasmCloud, but I made that repo as an example of how components <em>should</em> work with node based resolution, TS, and bundling</p>\n<p>It doesn't have the nice new <code>jco guest-types</code> usage yet, so it's actually still using namespaces (awkwardly), but hopefully it's a reasonable starting point.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/wasmCloud/typescript/tree/main/examples/components/http-password-checker\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/addeaba489659443e2f2b941e4a10882cbf7caab/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f636235653136333262623534323137383761633533626436346234363131613061383063393336396363363662323032363930383466353461313464326132632f7761736d436c6f75642f74797065736372697074&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/wasmCloud/typescript/tree/main/examples/components/http-password-checker\" title=\"typescript/examples/components/http-password-checker at main · wasmCloud/typescript\">typescript/examples/components/http-password-checker at main · wasmCloud/typescript</a></div><div class=\"message_embed_description\">Contribute to wasmCloud/typescript development by creating an account on GitHub.</div></div></div>",
        "id": 497072986,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1738351297
    },
    {
        "content": "<p>Looks like a good example, thanks! I will have a closer look hopefully soon.</p>",
        "id": 497077424,
        "sender_full_name": "Leon Thomm",
        "timestamp": 1738353132
    }
]