[
    {
        "content": "<p>I'm trying to see if I can get a simple script using <a href=\"https://www.npmjs.com/package/@react-pdf/renderer\">@react-pdf/renderer</a> compiled using jco. I've got a <a href=\"https://github.com/brettkolodny/react-pdf-wasm\">repo</a> with my setup but I'm hitting the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Exception<span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span>evaluating<span class=\"w\"> </span>top-level<span class=\"w\"> </span>script\nuncaught<span class=\"w\"> </span>exception:<span class=\"w\"> </span>undefined\nAdditionally,<span class=\"w\"> </span>some<span class=\"w\"> </span>promises<span class=\"w\"> </span>were<span class=\"w\"> </span>rejected,<span class=\"w\"> </span>but<span class=\"w\"> </span>the<span class=\"w\"> </span>rejection<span class=\"w\"> </span>never<span class=\"w\"> </span>handled:\nPromise<span class=\"w\"> </span>rejected<span class=\"w\"> </span>but<span class=\"w\"> </span>never<span class=\"w\"> </span>handled:<span class=\"w\"> </span><span class=\"o\">(</span>void<span class=\"w\"> </span><span class=\"m\">0</span><span class=\"o\">)</span>\nStack:\n\nError:<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"sb\">`</span>componentize.wizer<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>trapped\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">    </span><span class=\"m\">0</span>:<span class=\"w\"> </span>error<span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span>executing<span class=\"w\"> </span>at<span class=\"w\"> </span>wasm<span class=\"w\"> </span>backtrace:\n<span class=\"w\">           </span><span class=\"m\">0</span>:<span class=\"w\"> </span>0x7fab79<span class=\"w\"> </span>-<span class=\"w\"> </span>&lt;unknown&gt;!&lt;wasm<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"m\">13385</span>&gt;\n<span class=\"w\">           </span><span class=\"m\">1</span>:<span class=\"w\"> </span>0x7fb4fb<span class=\"w\"> </span>-<span class=\"w\"> </span>&lt;unknown&gt;!&lt;wasm<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"m\">13403</span>&gt;\n<span class=\"w\">           </span><span class=\"m\">2</span>:<span class=\"w\"> </span>0x21316<span class=\"w\"> </span>-<span class=\"w\"> </span>&lt;unknown&gt;!&lt;wasm<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"m\">112</span>&gt;\n<span class=\"w\">           </span><span class=\"m\">3</span>:<span class=\"w\"> </span>0x20637<span class=\"w\"> </span>-<span class=\"w\"> </span>&lt;unknown&gt;!&lt;wasm<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"m\">110</span>&gt;\n<span class=\"w\">           </span><span class=\"m\">4</span>:<span class=\"w\"> </span>0xb289<span class=\"w\"> </span>-<span class=\"w\"> </span>&lt;unknown&gt;!&lt;wasm<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"m\">91</span>&gt;\n<span class=\"w\">           </span><span class=\"m\">5</span>:<span class=\"w\"> </span>0x23fbb5<span class=\"w\"> </span>-<span class=\"w\"> </span>&lt;unknown&gt;!&lt;wasm<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"m\">5192</span>&gt;\n<span class=\"w\">    </span><span class=\"m\">1</span>:<span class=\"w\"> </span>Exited<span class=\"w\"> </span>with<span class=\"w\"> </span>i32<span class=\"w\"> </span><span class=\"nb\">exit</span><span class=\"w\"> </span>status<span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"o\">(</span>jco<span class=\"w\"> </span>componentize<span class=\"o\">)</span><span class=\"w\"> </span>Error:<span class=\"w\"> </span>Failed<span class=\"w\"> </span>to<span class=\"w\"> </span>initialize<span class=\"w\"> </span>the<span class=\"w\"> </span>compiled<span class=\"w\"> </span>Wasm<span class=\"w\"> </span>binary<span class=\"w\"> </span>with<span class=\"w\"> </span>Wizer:\nWizering<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"nb\">complete</span>\n</code></pre></div>\n<p>I don't think my code is trying to use any node-builtin that can't be polyfilled, so I wanted to see if anyone had any ideas on whether or not this is possible, and what a potential fix could be</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://www.npmjs.com/package/@react-pdf/renderer\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/1f95ebb8bfed4d27a76408b23d90d6ad57189dbd/68747470733a2f2f7374617469632d70726f64756374696f6e2e6e706d6a732e636f6d2f33333865343930356132363834636139366530386337373830666336383431322e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://www.npmjs.com/package/@react-pdf/renderer\" title=\"@react-pdf/renderer\">@react-pdf/renderer</a></div><div class=\"message_embed_description\">Create PDF files on the browser and server. Latest version: 4.3.0, last published: 4 months ago. Start using @react-pdf/renderer in your project by running `npm i @react-pdf/renderer`. There are 409 other projects in the npm registry using @react-pdf/renderer.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/brettkolodny/react-pdf-wasm\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/475a348bdbf0d4d4353697b12b1f544d55f57fed/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313632656662313366376366376434366635393263316633323664353665363530633365353035626138393937313634363234326437323131313231363239642f62726574746b6f6c6f646e792f72656163742d7064662d7761736d&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/brettkolodny/react-pdf-wasm\" title=\"GitHub - brettkolodny/react-pdf-wasm\">GitHub - brettkolodny/react-pdf-wasm</a></div><div class=\"message_embed_description\">Contribute to brettkolodny/react-pdf-wasm development by creating an account on GitHub.</div></div></div>",
        "id": 526109591,
        "sender_full_name": "Brett",
        "timestamp": 1751038523
    },
    {
        "content": "<p>Hey! Could you try to pass <code>--debug-starlingmonkey-build</code> to <code>jco componentize</code> command so that we can see the symbol names in the trace?</p>",
        "id": 526418570,
        "sender_full_name": "Tomasz Andrzejak",
        "timestamp": 1751294317
    },
    {
        "content": "<p>Yup here you go:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">           </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x8e6cde</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__wasi_proc_exit</span>\n<span class=\"w\">           </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x8e69d5</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">_Exit</span>\n<span class=\"w\">           </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x8e7e60</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">exit</span>\n<span class=\"w\">           </span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xe994</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">api</span><span class=\"p\">::</span><span class=\"n\">Engine</span><span class=\"p\">::</span><span class=\"n\">abort</span><span class=\"p\">(</span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"o\">*</span><span class=\"p\">)</span>\n<span class=\"w\">           </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xe714</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">api</span><span class=\"p\">::</span><span class=\"n\">Engine</span><span class=\"p\">::</span><span class=\"n\">Engine</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">__2</span><span class=\"p\">::</span><span class=\"n\">unique_ptr</span><span class=\"o\">&lt;</span><span class=\"n\">api</span><span class=\"p\">::</span><span class=\"n\">EngineConfig</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">__2</span><span class=\"p\">::</span><span class=\"n\">default_delete</span><span class=\"o\">&lt;</span><span class=\"n\">api</span><span class=\"p\">::</span><span class=\"n\">EngineConfig</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">)</span>\n<span class=\"w\">           </span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xc935</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">wizen</span><span class=\"p\">()</span>\n<span class=\"w\">           </span><span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xcb0d</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__wizer_initialize</span><span class=\"p\">()</span>\n<span class=\"w\">           </span><span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x25045a</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">componentize_initialize</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Exited</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">status</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"p\">(</span><span class=\"n\">jco</span><span class=\"w\"> </span><span class=\"n\">componentize</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">initialize</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">compiled</span><span class=\"w\"> </span><span class=\"n\">Wasm</span><span class=\"w\"> </span><span class=\"n\">binary</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">Wizer</span><span class=\"p\">:</span>\n</code></pre></div>",
        "id": 526425894,
        "sender_full_name": "Brett",
        "timestamp": 1751296425
    },
    {
        "content": "<p>Hey Brett thanks for providing the information so far! Would you mind making an issue on the componentize-js repo? </p>\n<p><a href=\"https://github.com/bytecodealliance/componentize-js\">https://github.com/bytecodealliance/componentize-js</a></p>\n<p>Jco uses componentize under the covers, and so this would probably go best there!</p>\n<p>That said, to your actual problem -- can you try a project that uses <code>pdfkit</code> directly <a href=\"https://github.com/foliojs/pdfkit\">https://github.com/foliojs/pdfkit</a> ?</p>\n<p>It looks like react-pdf/renderer is a wrapper around that, and I wonder if some React setup that may expect some builtins (ex. browser builtins) is being triggered.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-js\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/db1780597f52fabaa55b4c2a943bd57313f4607a/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633533326534363937656438316361313362353832623739343337663039333939363936316237623038303762353639336438396563633735623334636461612f62797465636f6465616c6c69616e63652f436f6d706f6e656e74697a654a53&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-js\" title=\"GitHub - bytecodealliance/ComponentizeJS: JS -&gt; WebAssembly Component\">GitHub - bytecodealliance/ComponentizeJS: JS -&gt; WebAssembly Component</a></div><div class=\"message_embed_description\">JS -&gt; WebAssembly Component. Contribute to bytecodealliance/ComponentizeJS development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/foliojs/pdfkit\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/9a670138d7604020c4de3d533158a704b63c702e/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f653636373931656365306563663635646434383834646333313332333430343036636163336465303361386635306435396237363638653734313036336437322f666f6c696f6a732f7064666b6974&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/foliojs/pdfkit\" title=\"GitHub - foliojs/pdfkit: A JavaScript PDF generation library for Node and the browser\">GitHub - foliojs/pdfkit: A JavaScript PDF generation library for Node and the browser</a></div><div class=\"message_embed_description\">A JavaScript PDF generation library for Node and the browser - foliojs/pdfkit</div></div></div>",
        "id": 526466829,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1751309693
    },
    {
        "content": "<p>Sure thing, will add an issue in a moment.</p>\n<p>In terms of using pdfkit directly, I gave that a go and ran into seemingly the exact same error. I've updated <a href=\"https://github.com/brettkolodny/react-pdf-wasm\">this repo</a> to include the pdfkit example</p>\n<p>UPDATE: Actually looking closer it does seem like my current setup is hitting a browser API issue on the pdfkit specific example, going to try and fix that before creating the issue</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/brettkolodny/react-pdf-wasm\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/d245d4ada51d5d436c2677b52ad0786858c5326d/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f326365373533306438343562633339666530656265663363303038653739393536653232316336626465306439633166373330643762636132623932383565632f62726574746b6f6c6f646e792f72656163742d7064662d7761736d&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/brettkolodny/react-pdf-wasm\" title=\"GitHub - brettkolodny/react-pdf-wasm\">GitHub - brettkolodny/react-pdf-wasm</a></div><div class=\"message_embed_description\">Contribute to brettkolodny/react-pdf-wasm development by creating an account on GitHub.</div></div></div>",
        "id": 526613440,
        "sender_full_name": "Brett",
        "timestamp": 1751377785
    },
    {
        "content": "<p>Okay so it's looking like the initial problem is with browser APIs because attempting to build the <code>pdf-kit</code> example I get:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Exception</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">evaluating</span><span class=\"w\"> </span><span class=\"n\">top</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"n\">script</span>\n<span class=\"n\">pdfkit</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">1975</span><span class=\"p\">:</span><span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"n\">ReferenceError</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">navigator</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">defined</span>\n<span class=\"n\">Additionally</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">some</span><span class=\"w\"> </span><span class=\"n\">promises</span><span class=\"w\"> </span><span class=\"n\">were</span><span class=\"w\"> </span><span class=\"n\">rejected</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">rejection</span><span class=\"w\"> </span><span class=\"n\">never</span><span class=\"w\"> </span><span class=\"n\">handled</span><span class=\"p\">:</span>\n<span class=\"nc\">Promise</span><span class=\"w\"> </span><span class=\"n\">rejected</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">never</span><span class=\"w\"> </span><span class=\"n\">handled</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">navigator</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">defined</span>\n</code></pre></div>\n<p>So I've tried stubbing navigator with an empty object like so:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">globalThis</span><span class=\"p\">.</span><span class=\"n\">navigator</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{};</span>\n</code></pre></div>\n<p>Which then leads to a new error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Exception</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">evaluating</span><span class=\"w\"> </span><span class=\"n\">top</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"n\">script</span>\n<span class=\"n\">pdfkit</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">36455</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">TypeError</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">can</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">access</span><span class=\"w\"> </span><span class=\"n\">property</span><span class=\"w\"> </span><span class=\"s\">\"AbortSignal\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">exports</span><span class=\"cp\">$o</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">undefined</span>\n<span class=\"n\">Additionally</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">some</span><span class=\"w\"> </span><span class=\"n\">promises</span><span class=\"w\"> </span><span class=\"n\">were</span><span class=\"w\"> </span><span class=\"n\">rejected</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">rejection</span><span class=\"w\"> </span><span class=\"n\">never</span><span class=\"w\"> </span><span class=\"n\">handled</span><span class=\"p\">:</span>\n<span class=\"nc\">Promise</span><span class=\"w\"> </span><span class=\"n\">rejected</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">never</span><span class=\"w\"> </span><span class=\"n\">handled</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">can</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">access</span><span class=\"w\"> </span><span class=\"n\">property</span><span class=\"w\"> </span><span class=\"s\">\"AbortSignal\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">exports</span><span class=\"cp\">$o</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">undefined</span>\n<span class=\"n\">Stack</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nc\">dew</span><span class=\"cp\">$n</span><span class=\"o\">@</span><span class=\"n\">pdfkit</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">36455</span><span class=\"p\">:</span><span class=\"mi\">3</span>\n<span class=\"w\">  </span><span class=\"n\">dew</span><span class=\"cp\">$m</span><span class=\"o\">@</span><span class=\"n\">pdfkit</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">36469</span><span class=\"p\">:</span><span class=\"mi\">49</span>\n<span class=\"w\">  </span><span class=\"n\">dew</span><span class=\"cp\">$</span><span class=\"mi\">15</span><span class=\"o\">@</span><span class=\"n\">pdfkit</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">41733</span><span class=\"p\">:</span><span class=\"mi\">7</span>\n<span class=\"w\">  </span><span class=\"n\">dew7</span><span class=\"o\">@</span><span class=\"n\">pdfkit</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">41862</span><span class=\"p\">:</span><span class=\"mi\">24</span>\n<span class=\"w\">  </span><span class=\"o\">@</span><span class=\"n\">pdfkit</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">41893</span><span class=\"p\">:</span><span class=\"mi\">16</span>\n\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">componentize</span><span class=\"p\">.</span><span class=\"n\">wizer</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">trapped</span>\n</code></pre></div>\n<p>Which is coming from the following generated code:</p>\n<div class=\"codehilite\" data-code-language=\"JavaScript\"><pre><span></span><code><span class=\"w\">  </span><span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nx\">AbortController</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nx\">AbortSignal</span>\n<span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"ow\">typeof</span><span class=\"w\"> </span><span class=\"nx\">self</span><span class=\"w\"> </span><span class=\"o\">!==</span><span class=\"w\"> </span><span class=\"s2\">\"undefined\"</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"nx\">self</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"ow\">typeof</span><span class=\"w\"> </span><span class=\"nb\">window</span><span class=\"w\"> </span><span class=\"o\">!==</span><span class=\"w\"> </span><span class=\"s2\">\"undefined\"</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"nb\">window</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"cm\">/* otherwise */</span>\n<span class=\"w\">    </span><span class=\"ow\">void</span><span class=\"w\"> </span><span class=\"mf\">0</span>\n<span class=\"w\">  </span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"nx\">exports$o</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">AbortController</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"nx\">exports$o</span><span class=\"p\">.</span><span class=\"nx\">AbortSignal</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">AbortSignal</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"nx\">exports$o</span><span class=\"p\">.</span><span class=\"k\">default</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">AbortController</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nx\">exports$o</span><span class=\"p\">;</span>\n</code></pre></div>\n<p>Which seems like it's <a href=\"https://github.com/bytecodealliance/StarlingMonkey/pull/240\">not yet implemented in StarlingMoney</a>. So mystery solved I think, but unfortunately doesn't seem like its currently possible</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/StarlingMonkey/pull/240\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/822b0dc033106827e4257494d535c034d49d28cf/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f306564393938393634636235353838373433633936646338333463393164356330663565346430616436636366326366666137353930623336303838356361322f62797465636f6465616c6c69616e63652f537461726c696e674d6f6e6b65792f70756c6c2f323430&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/StarlingMonkey/pull/240\" title=\"Implement AbortConrtoller and AbortSignal by andreiltd · Pull Request #240 · bytecodealliance/StarlingMonkey\">Implement AbortConrtoller and AbortSignal by andreiltd · Pull Request #240 · bytecodealliance/StarlingMonkey</a></div><div class=\"message_embed_description\">This patch implements AbortController and AbortSignal as specified in the DOM spec.\nAbortSignal is connected to fetch requests and can be used to cancel them. For example, the following code will n...</div></div></div>",
        "id": 526624288,
        "sender_full_name": "Brett",
        "timestamp": 1751380840
    },
    {
        "content": "<p>Still experimenting in a library I'm playing with (<a href=\"https://github.com/zen-fs/core\">zenfs</a>) but using <a href=\"https://www.npmjs.com/package/abortcontroller-polyfill\">abortcontroller-polyfill</a> gave me the globals (don't know for sure  if the polyfill;s will actually behave well when run):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">abortcontroller</span><span class=\"o\">-</span><span class=\"n\">polyfill</span><span class=\"o\">/</span><span class=\"n\">dist</span><span class=\"o\">/</span><span class=\"n\">polyfill</span><span class=\"o\">-</span><span class=\"n\">patch</span><span class=\"o\">-</span><span class=\"n\">fetch</span><span class=\"o\">'</span><span class=\"p\">;</span>\n</code></pre></div>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/zen-fs/core\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/88f7d3d49162398662abda82effefd111fb72798/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f316265656361393935343031663038363863373737643537623331383664356161303539633636363032333339333437626538623565333536303462346331342f7a656e2d66732f636f7265&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/zen-fs/core\" title=\"GitHub - zen-fs/core: A filesystem, anywhere.\">GitHub - zen-fs/core: A filesystem, anywhere.</a></div><div class=\"message_embed_description\">A filesystem, anywhere. Contribute to zen-fs/core development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://www.npmjs.com/package/abortcontroller-polyfill\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/1f95ebb8bfed4d27a76408b23d90d6ad57189dbd/68747470733a2f2f7374617469632d70726f64756374696f6e2e6e706d6a732e636f6d2f33333865343930356132363834636139366530386337373830666336383431322e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://www.npmjs.com/package/abortcontroller-polyfill\" title=\"abortcontroller-polyfill\">abortcontroller-polyfill</a></div><div class=\"message_embed_description\">Polyfill/ponyfill for the AbortController DOM API + optional patching of fetch (stub that calls catch, doesn't actually abort request).. Latest version: 1.7.8, last published: 7 months ago. Start using abortcontroller-polyfill in your project by running `npm i abortcontroller-polyfill`. There are 346 other projects in the npm registry using abortcontroller-polyfill.</div></div></div>",
        "id": 526678316,
        "sender_full_name": "Milan (rajsite)",
        "timestamp": 1751401656
    },
    {
        "content": "<p>Glad you were able to do some more debug <span class=\"user-mention\" data-user-id=\"932954\">@Brett</span> ! <span class=\"user-mention\" data-user-id=\"417958\">@Milan (rajsite)</span> 's right here, finding a way to polyfill the required stuff is probably the best way to move forward. </p>\n<p>Given how enmeshed libraries can be with the platforms (NodeJS/Browser) it can be hard to find one that is easy to compile straight to WebAssembly without special platform support. Thankfully StarlingMonkey supports many builtins so this is <em>usually</em> easy, but as you're finding sometimes it doesn't quite work out easily.</p>\n<p>Concretely, a way to work through this is to change the script that you run to be a sort of \"shim\" that adds the missing globals (and hopefully does something reasonable, via polyfill or custom code) to ensure that the core functionality works. It's a bit of a game of whack-a-mole but this at least makes it a bit more iterative/straight-forward to work through.</p>",
        "id": 526707113,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1751421394
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"932954\">@Brett</span> were you able to get past this? Wondering if we should turn this into an issue or close it out</p>",
        "id": 527515219,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1751905391
    },
    {
        "content": "<p>Sorry, meant to report back on this last week! Unfortunately I hit the following bug:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Exception</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">evaluating</span><span class=\"w\"> </span><span class=\"n\">top</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"n\">script</span>\n<span class=\"n\">pdfkit</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"p\">:</span><span class=\"mi\">29390</span><span class=\"p\">:</span><span class=\"mi\">26</span><span class=\"w\"> </span><span class=\"n\">TypeError</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">setTimeout</span><span class=\"w\"> </span><span class=\"n\">can</span><span class=\"w\"> </span><span class=\"n\">only</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">used</span><span class=\"w\"> </span><span class=\"n\">during</span><span class=\"w\"> </span><span class=\"n\">request</span><span class=\"w\"> </span><span class=\"n\">handling</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">during</span><span class=\"w\"> </span><span class=\"n\">initialization</span>\n</code></pre></div>\n<p>Which doesn't seem it can really be shimmed. So this library may just not be a good match for jco</p>",
        "id": 527536052,
        "sender_full_name": "Brett",
        "timestamp": 1751913013
    },
    {
        "content": "<p>Thanks for reporting this -- would you mind making an issue on <code>componentize-js</code>? I <em>think</em> that would be the right place for it, because what I'm assuming here is that <code>pdfkit.js</code> is trying to run <code>setTimeout</code> just... as part of it's initialization? </p>\n<p>I wonder if it's possible to delay that code from firing somehow, but this is a case that's worth exploring since I know pdfkit is pretty popular. Worth getting a solution (even if it's a work around)/examining this case</p>",
        "id": 527695382,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1751982626
    },
    {
        "content": "<p>Done, <a href=\"https://github.com/bytecodealliance/ComponentizeJS/issues/246\">created the issue</a>! Thank you all for your help!</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/ComponentizeJS/issues/246\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/964e9d360cbf9dd496a048708859d00cde5c713f/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633831383762623461396139366463666138363538653761656465633265336166646461643566303339643261313865343732626431653636613563313364652f62797465636f6465616c6c69616e63652f436f6d706f6e656e74697a654a532f6973737565732f323436&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/ComponentizeJS/issues/246\" title=\"Calls to setTimeout during initialization cause build to fail · Issue #246 · bytecodealliance/ComponentizeJS\">Calls to setTimeout during initialization cause build to fail · Issue #246 · bytecodealliance/ComponentizeJS</a></div><div class=\"message_embed_description\">I'm attempting to build some code using the pdfkit library and after replacing any APIs that are not currently supported I'm met with the following error: Exception while evaluating top-level scrip...</div></div></div>",
        "id": 527897469,
        "sender_full_name": "Brett",
        "timestamp": 1752070082
    },
    {
        "content": "<p>Thank you for surfacing this! Thanks for using the toolchain and I appreciate the contribution :)</p>",
        "id": 527905159,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1752072345
    }
]